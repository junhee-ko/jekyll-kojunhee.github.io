{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/tranquilpeak/source/assets/css/all.css","path":"assets/css/all.css","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox.css","path":"assets/css/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/thumbs.css","path":"assets/css/thumbs.css","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/thumbs.js","path":"assets/js/thumbs.js","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/tranquilpeak.js","path":"assets/js/tranquilpeak.js","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.eot","path":"assets/fonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.woff2","path":"assets/fonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.ttf","path":"assets/fonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.woff2","path":"assets/fonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.woff","path":"assets/fonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.woff2","path":"assets/fonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.ttf","path":"assets/fonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.woff","path":"assets/fonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.eot","path":"assets/fonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.woff","path":"assets/fonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/tranquilpeak.css","path":"assets/css/tranquilpeak.css","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/style-du2xmrqdqrl2ollgeiw050kpl6l4nbyz7bumjuurjgsxyopifvukebxc9lqe.min.css","path":"assets/css/style-du2xmrqdqrl2ollgeiw050kpl6l4nbyz7bumjuurjgsxyopifvukebxc9lqe.min.css","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/script-vufjrm3fmbuttogo1hxuu0w9w0sesk5iyysjuguc2hdhufot9szxg8twijry.min.js","path":"assets/js/script-vufjrm3fmbuttogo1hxuu0w9w0sesk5iyysjuguc2hdhufot9szxg8twijry.min.js","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox.js","path":"assets/js/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/style.css","path":"assets/css/style.css","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.eot","path":"assets/fonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.svg","path":"assets/fonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.ttf","path":"assets/fonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/images/cover.jpg","path":"assets/images/cover.jpg","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/jquery.js","path":"assets/js/jquery.js","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/images/cover-v1.2.0.jpg","path":"assets/images/cover-v1.2.0.jpg","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/script.js","path":"assets/js/script.js","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.svg","path":"assets/fonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.svg","path":"assets/fonts/fa-solid-900.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/tranquilpeak/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1543659950368},{"_id":"themes/tranquilpeak/README.md","hash":"05c1388635e2442e22578dbd9c618469e0a24d16","modified":1532936494000},{"_id":"themes/tranquilpeak/Gruntfile.js","hash":"b2b078651cf8c5dcde2e847169ce242ad3319ca3","modified":1532936491000},{"_id":"themes/tranquilpeak/_config.yml","hash":"bb742a2d75cca7ec2c50aa071965875f614a9ce1","modified":1543732629697},{"_id":"themes/tranquilpeak/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1543726351716},{"_id":"themes/tranquilpeak/package.json","hash":"f5e0c640ea922638d1b416ae8d1abc03bbfe1553","modified":1532936494000},{"_id":"themes/tranquilpeak/DOCUMENTATION.md","hash":"af0d04f6d24fe9decb4ebf618ea37e3c5fd8d72e","modified":1532936494000},{"_id":"themes/tranquilpeak/LICENSE","hash":"7a3b30ddb56760b35a6b7cd210aeb271cd292b60","modified":1532936491000},{"_id":"source/all-archives/index.md","hash":"16451dc58245e819d58f07dc3cad0957898a811c","modified":1543731750883},{"_id":"source/all-categories/index.md","hash":"b62bc6bec0296f1436e8570bff1d9334c5136bc8","modified":1543731427443},{"_id":"source/all-tags/index.md","hash":"3e45193f1628e2a59cb834464b50806610edcc7b","modified":1543731757185},{"_id":"source/_posts/2017-09-05-boj-editor.md","hash":"4c45923c3bb2257e48153f175849cc72ffd459f2","modified":1523851293317},{"_id":"source/_posts/2017-09-05-boj-parentheses.markdown","hash":"3771ed13b1b22cb46b687978397c428595c65b37","modified":1523851298922},{"_id":"source/_posts/2017-09-05-boj-pole.md","hash":"a27cef5e96e46f1719295f5f9d44974ad71381ca","modified":1525410912379},{"_id":"source/_posts/2017-09-05-leve3-다음큰숫자.md","hash":"3d9b7900d2359c43018998310274556993e17bbc","modified":1523851308124},{"_id":"source/_posts/2017-09-06-leve3-멀리뛰기.md","hash":"a82c2287c8dec510c66358a5a3a685e081fc2b85","modified":1523851312805},{"_id":"source/_posts/2017-09-09-leve3-시저암호.md","hash":"57e456315f8cb58e5dec6d512ec82441559a8635","modified":1523851333987},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1543730820751},{"_id":"source/_posts/2017-09-07-leve3-n개의최소공배수.md","hash":"0567bf3a163955b5d7c4b0102d2430f62e5a67a5","modified":1523851318762},{"_id":"source/_posts/2017-09-08-Dynamic Programming.md","hash":"b546cf34d7bba21d47621cb74a3445d0e5d61867","modified":1523851323698},{"_id":"source/_posts/2017-09-08-leve3-야근지수.md","hash":"a34f2c1ebf8a4f153b850abe832e1cbe1b2e8af0","modified":1523851329508},{"_id":"source/_posts/2017-09-11-DFS와BFS문제.md","hash":"1c306cf5f10ecc2f9a9b74398c54755154d06d34","modified":1523851343527},{"_id":"source/_posts/2017-09-17-Greedy Algorithm.md","hash":"607b9a960287618e74fc31fc7e36ec69d54f0770","modified":1523851352099},{"_id":"source/_posts/2017-09-09-큐.md","hash":"53c7cc0905cac6a6a9585318b1e3c37ba1d28ffb","modified":1523851338867},{"_id":"source/_posts/2017-09-12-모의테스트01-각자릿수의합.md","hash":"4858502f10a1ac29be3727ab9eb9799a2b8fe16f","modified":1523851347796},{"_id":"source/_posts/2017-09-18-1로만들기.md","hash":"b64ddf645683c900adc72132e73c545c5588dd85","modified":1523851356762},{"_id":"source/_posts/2017-09-19-2xn타일링.md","hash":"73af71175e1fe538f2b3993443c9cc4a3138dbb2","modified":1523851361546},{"_id":"source/_posts/2017-09-22-붕어빵판매하기.md","hash":"0f01ea618ff67a769022852f9b34039fe9371b9b","modified":1523851374897},{"_id":"source/_posts/2017-09-23-쉬운계단수.md","hash":"efa7eb5ad11ecf8f09f79155971c6d0d2aab74c7","modified":1523851379427},{"_id":"source/_posts/2017-09-25-오르막수.md","hash":"83ca849cbff47e6fa6e23430101351fd5aba9717","modified":1523851384110},{"_id":"source/_posts/2017-09-27-[express] passort.md","hash":"3fca0798d87172e749c28d86782cdd520bf608da","modified":1523851392170},{"_id":"source/_posts/2017-09-20-2xn타일링2.md","hash":"a59decfc0f6b5a4890769c6b6c9aab9c743a0b83","modified":1523851366592},{"_id":"source/_posts/2017-09-26-이친수.md","hash":"ee656bf5c469de38f799a86f93c4a1ef76af666f","modified":1523851387831},{"_id":"source/_posts/2017-09-21-123더하기.md","hash":"5f59614befaa20c9dbd8d203ba4661e0781d7b50","modified":1523851370949},{"_id":"source/_posts/2017-09-29-가장긴증가부분수열 2.md","hash":"117b9e9474b5dd1f9abf527caa510f9a144770fe","modified":1523851406786},{"_id":"source/_posts/2017-09-28-포도주시식.md","hash":"553472b1f2758ec558b5cea28b39c6e93d3b571f","modified":1523851401263},{"_id":"source/_posts/2017-10-02-가장긴감소하는부분수열.md","hash":"073798d049a947b5119d22c2465798a77ebb6a85","modified":1523851416333},{"_id":"source/_posts/2017-09-27-스티커.md","hash":"29cc15753a2b927f14a4341ef19db9eefeb35da3","modified":1523851396916},{"_id":"source/_posts/2017-09-30-가장큰증가부분수열.md","hash":"c15ff0c82c31984400321fd7bb8ca6455c5364cb","modified":1523851411775},{"_id":"source/_posts/2017-10-05-최소공배수.md","hash":"a4305891f4d2e4feef5a30793d153b433df49346","modified":1523851427954},{"_id":"source/_posts/2017-10-06-GCD합.md","hash":"e31a8092d8da46989d18e67f27e54411744a6f18","modified":1523851431734},{"_id":"source/_posts/2017-10-07-진법변환2.md","hash":"3ea2fc8cf90db522db0868131108ccf75eb31b30","modified":1523851436151},{"_id":"source/_posts/2017-10-03-나머지.md","hash":"2df0c534a511ec0ea6e7b572d8093861a42707a7","modified":1523851420150},{"_id":"source/_posts/2017-10-04-최대공약수와 최소공배수.md","hash":"3e710028c76c2a5fdca3332d3016bd81dba6ef44","modified":1523851424176},{"_id":"source/_posts/2017-10-10-login-token authentication.md","hash":"faf853a179a9ed01c59725d894d7caf00bea03fb","modified":1523851448366},{"_id":"source/_posts/2017-10-08-진법변환.md","hash":"c87f61a6bdffa23844a207311db7b75019d6e429","modified":1523851442635},{"_id":"source/_posts/2017-10-11-bcrypt-password 암호화.md","hash":"eb40737dd7e4c4d7477ebeb25f5a7f9ff4b3ff76","modified":1523851452652},{"_id":"source/_posts/2017-10-11-이진수.md","hash":"b098c091fb8f0717f5f61c30b07b9cd3fe003700","modified":1523851457016},{"_id":"source/_posts/2017-10-12-baseconversion.md","hash":"b02800c654fc5cc6c467af115ae188cac2440f3c","modified":1523851461984},{"_id":"source/_posts/2017-10-16-가장긴바이토닉부분수열.md","hash":"ab22eae5d29bfe8780f96f5f5e49c22b507b62d5","modified":1523851470803},{"_id":"source/_posts/2017-10-17-연속합.md","hash":"0172a2b4d311595abce47767afa10ad04690cc6c","modified":1523851475422},{"_id":"source/_posts/2017-10-13-network.md","hash":"eb6b8a7197e836408e223840658da28cd8ec90fd","modified":1523851466970},{"_id":"source/_posts/2017-10-20-제곱수의합.md","hash":"c225ca6bfb7c417cad9d8b8a8ff14be50d7f65c5","modified":1523851483724},{"_id":"source/_posts/2017-11-01-background-server.md","hash":"4c4625150afb1c9c949ffe661bcb21b21d75d49f","modified":1523851488419},{"_id":"source/_posts/2017-11-02-암호코드.md","hash":"9c1f3dc82f38a71b3def29c0cfe76a01d30d5df4","modified":1523851497541},{"_id":"source/_posts/2017-11-01-타일채우기.md","hash":"6f4203e5c2ab1bec4c487555b3a00e7f4948b54c","modified":1523851492673},{"_id":"source/_posts/2017-10-18-계단오르기.md","hash":"7aac5a642298c426232578f16cd0507e7f84747d","modified":1523851479532},{"_id":"source/_posts/2017-11-03-웹사이트배포방법.md","hash":"5a4cf60d9508ec00b8b9c155f629bc4352d13cf2","modified":1523851501772},{"_id":"source/_posts/2017-11-04-합분해.md","hash":"506eae2f8fad7353347ff10812d0ebe418af8e86","modified":1523851511303},{"_id":"source/_posts/2017-11-03-파도반수열.md","hash":"4c3ad2f5316bda693508a827aec14603d99284bd","modified":1523851506784},{"_id":"source/_posts/2017-11-06-연결요소의개수.md","hash":"2a04f763b08de40ec2be8592f56e5791db14c8e0","modified":1523851515285},{"_id":"source/_posts/2017-11-07-이분그래프.md","hash":"f2225f8a74035c4fa75f5cb6fcd0a7d5ee23995b","modified":1523851519918},{"_id":"source/_posts/2017-11-09-Request JSON.md","hash":"1d907f113c0222f96b431ed9472ab705026fedd2","modified":1523851528135},{"_id":"source/_posts/2017-11-08-순열사이클.md","hash":"e8912e2ddc331b8b78080e9fb641a190c4bde6f3","modified":1523851524068},{"_id":"source/_posts/2017-11-09-반복수열.md","hash":"f3cab00478468c1d91019efbcc1b3e0554a6c395","modified":1523851532300},{"_id":"source/_posts/2017-11-10-splice method.md","hash":"db80281cfe560235222eb0632a5c4a3cb092d552","modified":1523851536484},{"_id":"source/_posts/2017-11-11-단지번호붙이기.md","hash":"54301e24982c3bdbb75cb9844d424affca602627","modified":1523851545161},{"_id":"source/_posts/2017-11-14-ROT13.md","hash":"c9cff89b91d19ff8fa282e282b27809a2d2822f8","modified":1523851554146},{"_id":"source/_posts/2017-11-15-미로탐색.md","hash":"936e5c7c7c81c8da4961d742484d0bb11a4f34a9","modified":1523851592499},{"_id":"source/_posts/2017-11-16-방번호.md","hash":"2aed09a4d176ff99abf2d4713ee19f96088cc443","modified":1523851596689},{"_id":"source/_posts/2017-11-10-term프로젝트.md","hash":"ee07aba7c2d0b4ab9099a2eddcdd6d94ae6d26c1","modified":1523851540966},{"_id":"source/_posts/2017-11-13-섬의개수.md","hash":"162437ac511a74525caceacbd1572ffe0cc3735a","modified":1523851549584},{"_id":"source/_posts/2017-11-17-토마토.md","hash":"0b974acdd1f67be4037e2ae019bcd7f5a01c8715","modified":1523851600439},{"_id":"source/_posts/2017-11-20-팩토리얼0의개수.md","hash":"91546fa6d365b10d8037cdd5acb93f8f13da3530","modified":1523851604142},{"_id":"source/_posts/2017-11-21-swagger parameter 길이문제.md","hash":"00cdc4c86a434dea9acd586053be1e9011282fed","modified":1523851608002},{"_id":"source/_posts/2017-11-21-다리만들기.md","hash":"16ce140566c671aafd3cda68881244462200eb2c","modified":1523851611766},{"_id":"source/_posts/2017-11-22-접미사배열.md","hash":"5f6d4916c886ecdc61b0d9faccab8a43cb3d89f0","modified":1523851617490},{"_id":"source/_posts/2017-11-22-환경변수설정.md","hash":"192d9a735241a0e8130c8082f38d0781a8860b16","modified":1523851621628},{"_id":"source/_posts/2017-11-25-문자열 분석.md","hash":"571d9f807ac36beb29a41ef8eea33af1c4afde25","modified":1523851625698},{"_id":"source/_posts/2017-11-26-원격저장소 만들기.md","hash":"8f90575f28e8d90b5832cdcb8aa6864ddf493212","modified":1523851637305},{"_id":"source/_posts/2017-11-26-원격저장소와 지역저장소의 동기화 .md","hash":"4971caa8c2220be6e60f7b78b22c6ff23dc16614","modified":1523851640967},{"_id":"source/_posts/2017-11-27-조합0의개수.md","hash":"4ec2a2a846467eec63ae2128b4b957480d848f78","modified":1523851647506},{"_id":"source/_posts/2017-11-26-git 핵심 명령어.md","hash":"9f3f2d8c9570244870bc3473827fc1c2f9cb68c8","modified":1523851629526},{"_id":"source/_posts/2017-11-26-how to merge.md","hash":"7afc2c9ac97ec93144731818c34dfc8af1679c5c","modified":1523851633314},{"_id":"source/_posts/2017-11-28-swagger object array.md","hash":"e56df76654b2f80ee548767268be10148d2e18ef","modified":1523851651604},{"_id":"source/_posts/2017-11-28-트리순회.md","hash":"587c2fde0d426d4e315e92fe780edf3847456e29","modified":1523851655305},{"_id":"source/_posts/2017-11-29-트리의 부모 찾기.md","hash":"bd027a7b23196066698c183c1a12f98267fd4288","modified":1523851660228},{"_id":"source/_posts/2017-11-30-국영수.md","hash":"43963d0aed3df9b94206b66b50c24a38141860a2","modified":1523851664122},{"_id":"source/_posts/2017-12-02-트리의 지름02.md","hash":"06c955fd173a5e973a0104ee1e818725dccb9218","modified":1523851671845},{"_id":"source/_posts/2017-12-01-트리의 지름.md","hash":"4ab18b54dd7c9154414e90a21c0f57d3d80fd9d4","modified":1523851667977},{"_id":"source/_posts/2017-12-04-내리막길.md","hash":"4277dc1dd5e823cd52f4d5322e95af9855ac59dc","modified":1523851676108},{"_id":"source/_posts/2017-12-05-네수.md","hash":"7bb2acc632860f1ffae8155a5e7a1fe1483969d2","modified":1523851680289},{"_id":"source/_posts/2017-12-07-2차원 배열의 합.md","hash":"ee6977b2ee401a0be6cce1b71553db95d95d23a3","modified":1523851688453},{"_id":"source/_posts/2017-12-08-이동하기.md","hash":"881d3a8a5569d53e25ccf86a2760bf8154b4fa00","modified":1523851692229},{"_id":"source/_posts/2017-12-09-Generations of Tribbles.md","hash":"a878c51272144fcfebac866e9823241ecdf1ec16","modified":1523851696102},{"_id":"source/_posts/2017-12-06-RGB거리.md","hash":"7ed6dac1def8904ae993a42d179359514e4aabbe","modified":1523851684604},{"_id":"source/_posts/2017-12-13-에이한수.md","hash":"b4b7426097328a5d7f70e2d15141bff89030885c","modified":1523851709717},{"_id":"source/_posts/2017-12-11-상자넣기.md","hash":"16409fe3b362e96aa9fde9f39a5ed144f4656e77","modified":1523851700021},{"_id":"source/_posts/2017-12-14-동전 1.md","hash":"ebc97cd67d62d39461c708cb44e32fdce1012571","modified":1523851716738},{"_id":"source/_posts/2017-12-12-토너먼트.md","hash":"3a99de97f03d2da2f49ad0585983843d6d9c5b6a","modified":1523851705829},{"_id":"source/_posts/2017-12-15-동물원.md","hash":"77018ef1a01972d188d7b7785728a0f66db16189","modified":1523851723839},{"_id":"source/_posts/2017-12-19-유기농배추.md","hash":"7282ae0c3a0854ee17572b6cc89e66f23cc39e23","modified":1523851739198},{"_id":"source/_posts/2017-12-18-줄세우기.md","hash":"d0f72258fea3507616cc779d700919cde782c7c5","modified":1523851734620},{"_id":"source/_posts/2017-12-16-나누기.md","hash":"60cdb2694e5e21ea851c48b6425261a01532256c","modified":1523851729462},{"_id":"source/_posts/2017-12-20-보물.md","hash":"5c62152f367384e0c3b5744fcbf792003b87b321","modified":1523851744991},{"_id":"source/_posts/2017-12-22-수열정렬.md","hash":"b23e65b4ff0e44d3bdf6f5e327bb791ba121814d","modified":1523851756085},{"_id":"source/_posts/2017-12-21-인접한 비트의 개수.md","hash":"043b3531b492c4bf31e5b324f23d6ecc961e7f7d","modified":1523851750232},{"_id":"source/_posts/2017-12-23-유전자.md","hash":"7230a840744eecca90c1389ea849954eb7b5103b","modified":1523851814351},{"_id":"source/_posts/2017-12-25-선물전달.md","hash":"225dc22107725aed93aab481344aac265fd496c5","modified":1523851820400},{"_id":"source/_posts/2017-12-26-직사각형에서 탈출.md","hash":"12f692310e9db78a77c6e746dcd800d3b75b3659","modified":1523851825898},{"_id":"source/_posts/2017-12-28-도미노.md","hash":"c62657de4fb29cff8cbf758604753065bcaa57fe","modified":1523851841927},{"_id":"source/_posts/2017-12-27-만취한 상범.md","hash":"380e6422ac50f10597d85ecbc73c1e5862b1240f","modified":1523851830922},{"_id":"source/_posts/2017-12-29-동전.md","hash":"08c3e76f404e2ca219971fcccae73e5f8f613c52","modified":1523851881614},{"_id":"source/_posts/2017-12-30-팰린드롬 분할.md","hash":"3c43140c37f664338574d09492b165b27b701b94","modified":1523851886752},{"_id":"source/_posts/2018-01-03-좋은단어.md","hash":"fbdeaf6a2c0f8f8b2300959bf7dde60f6774c50c","modified":1523851896941},{"_id":"source/_posts/2018-01-01-설탕배달.md","hash":"139020ff885a006882284b53b453e92966c8af55","modified":1523851891990},{"_id":"source/_posts/2018-01-04- 수들의합.md","hash":"2f3d9e8c77c601994b66e1da4d3aa857354ec15a","modified":1523851901470},{"_id":"source/_posts/2018-01-04-exports.md","hash":"4ff35253a30337d2ad4b71bc6036f3d45fbd5922","modified":1523851906459},{"_id":"source/_posts/2018-01-04-if else VS switch.md","hash":"a2a4e55797f324ad5cf15707fe1a1584b5a9997e","modified":1523851911387},{"_id":"source/_posts/2018-01-04-pm2.md","hash":"2f6c35f90067050bff2806dbbe8fb0234267b588","modified":1523851915934},{"_id":"source/_posts/2018-01-05-파일합치기.md","hash":"43189cc394333c53823eb2a5754e3a756f662c6b","modified":1523851921042},{"_id":"source/_posts/2018-01-06-functional programming.md","hash":"c5be380d91e635861ed96be05855ca3f7a274eef","modified":1523851942036},{"_id":"source/_posts/2018-01-07-RecyclerView.md","hash":"f93b0c887c17d93ecf40f53e61415c7a1e360f8b","modified":1523851969764},{"_id":"source/_posts/2018-01-07-ViewPager.md","hash":"c42de6031bf8ce4256ef7555fbdcbe38362c5269","modified":1523851979038},{"_id":"source/_posts/2018-01-06-개근상.md","hash":"2fe7cac1b4ecd630f38f92327775fdaf35d9a250","modified":1523851925704},{"_id":"source/_posts/2018-01-07-retrofit.md","hash":"f11f0d333b9d791a6ce008b79ba5717594cf8454","modified":1523851974685},{"_id":"source/_posts/2018-01-07-activity life cycle.md","hash":"395ba6ac28f968cfc8717dc5b48d4fbf8708193e","modified":1523851965396},{"_id":"source/_posts/2018-01-10-TV크기.md","hash":"8ef65675e6ae2bae6cc37c0114752928c8437ce7","modified":1523851992073},{"_id":"source/_posts/2018-01-08-조짜기.md","hash":"b8d5ad4df73a0d41ac548af35d046d9734ebb4fa","modified":1523851982977},{"_id":"source/_posts/2018-01-12-택시 기하학.md","hash":"b501bf19a6a7f569c0329aa5fc449b625ea5ee59","modified":1523852004765},{"_id":"source/_posts/2018-01-09-컵홀더.md","hash":"990d35290467c700aab08e807f9fd74d3e2de756","modified":1523851986937},{"_id":"source/_posts/2018-01-11-소음.md","hash":"59586eb80cf6eedba3d359d19e575fc38d8d1c0d","modified":1523852000492},{"_id":"source/_posts/2018-01-13-듣보잡.md","hash":"3dc4f33c63c85fe6479bfe2c0ec6661cd36568cd","modified":1523852008884},{"_id":"source/_posts/2018-01-15-2007년.md","hash":"94741e5fa982d95acca4630d177bf2425206b133","modified":1523852014126},{"_id":"source/_posts/2018-01-16-줄어들지않아.md","hash":"7f32d032e925a0b66ad92a55e38dddc2a04cf228","modified":1523852020887},{"_id":"source/_posts/2018-01-17-01타일.md","hash":"a26e4ce20eaae4a84402d11d39a7915f78bdc79b","modified":1523852026509},{"_id":"source/_posts/2018-01-18-올림픽.md","hash":"0a0b5af58e0ecfc4703fc6b08d6f919703188dcd","modified":1523852031167},{"_id":"source/_posts/2018-01-20-슈퍼마리오.md","hash":"0db79df26e59a39fc60d27825e25a0278287ae1f","modified":1523852039669},{"_id":"source/_posts/2018-01-24-타일.md","hash":"da03eaa279db7a7dae0da258c98098ff288ef758","modified":1523852045105},{"_id":"source/_posts/2018-01-19-벽장문의 이동.md","hash":"f84c5fb1c680a9944c41083f651706d7b4733812","modified":1523852035477},{"_id":"source/_posts/2018-01-26-수이어쓰기.md","hash":"b460cd0f749f27cfaf71040ad918c5599b79a772","modified":1523852049107},{"_id":"source/_posts/2018-01-29-swift 처음 시작하기.md","hash":"7010e4a58751122ebcc8d602bbfc1e475ee7048c","modified":1523852057649},{"_id":"source/_posts/2018-01-29-Centralized Workflow .md","hash":"676430e3c5e5b9b96a6f8a7210f4abe5b194e894","modified":1523852052907},{"_id":"source/_posts/2018-01-29-swift.md","hash":"a7610826fd88ec4d6810d756dcee9cf08aec0d90","modified":1523852061719},{"_id":"source/_posts/2018-01-29-데이터 타입 기본.md","hash":"ece172a327acf9c5a1b62ce74d546f9ddcbecfb5","modified":1523852069348},{"_id":"source/_posts/2018-01-30-연산자.md","hash":"793dc28795dfce1ff80b1a7e28dd03a7e8527722","modified":1523852073665},{"_id":"source/_posts/2018-01-29-데이터 타입 고급.md","hash":"72dc758387a3554d4302cb3de500503886579891","modified":1523852065674},{"_id":"source/_posts/2018-01-30-흐름제어.md","hash":"5b4af19ab2c116763eea2fb83c96cbfb1dc5f631","modified":1523852082530},{"_id":"source/_posts/2018-01-30-함수.md","hash":"0c3307d58fed533492867ed5757b12ea552f3107","modified":1523852078388},{"_id":"source/_posts/2018-02-03-단어수학.md","hash":"86686d6e0b9157bb938ff30c475957de3113e70b","modified":1523852090177},{"_id":"source/_posts/2018-02-02-책페이지.md","hash":"2bee2998114372cc1632af1d378319c98ec72605","modified":1523852086729},{"_id":"source/_posts/2018-02-06-옵셔널.md","hash":"ed66abfb20debb29994934537d3e6d0ebfd0dfaf","modified":1523851276699},{"_id":"source/_posts/2018-02-06-인스턴스 생성 및 소멸.md","hash":"832d4ef3e492d5dde095aa0975cf4d257a61c47a","modified":1523851273336},{"_id":"source/_posts/2018-02-06-구조체,클래스.md","hash":"32ee0f243bb7d42259c47334e32e03dcce046594","modified":1540633560162},{"_id":"source/_posts/2018-02-06-프로퍼티와 메서드.md","hash":"fb01c8909d95e4ab48693e6ec4eeceaff1f91248","modified":1523851263306},{"_id":"source/_posts/2018-02-06-접근제어.md","hash":"3313c28004ac03da10c5944762747a9818911cd6","modified":1523851268453},{"_id":"source/_posts/2018-02-09-class,struct.md","hash":"84bac382959d385e640d0ae6b553147d2538e2b2","modified":1540633916164},{"_id":"source/_posts/2018-02-16-축구.md","hash":"7b80a0fc12a87b2202b4accdf4a4a32a730de778","modified":1523851251294},{"_id":"source/_posts/2018-02-15-민균이의 계략.md","hash":"22bf9b838039b45c945e32fb8acbbd6e614f8f00","modified":1523851255198},{"_id":"source/_posts/2018-02-20-라그랑주의 네 제곱수 정리.md","hash":"be40a37e85973eab9a9490ef65e7635fbe6a40d4","modified":1523851246987},{"_id":"source/_posts/2018-02-27-find in studio3T.md","hash":"0ba34b1ca10b6aeb103cc7a4d4c7ec42bc1671ff","modified":1523851238435},{"_id":"source/_posts/2018-02-27-Node Architecture.md","hash":"de413705162c677296c42660fa28a5317cbda12d","modified":1523851234443},{"_id":"source/_posts/2018-02-26-coins.md","hash":"70e4b4a23505a6ab876378903bd927d09c67657a","modified":1523851243426},{"_id":"source/_posts/2018-02-27-저작권.md","hash":"4254c731d9bb8ecfbb44a271194ebcc9364d2b60","modified":1523851227058},{"_id":"source/_posts/2018-02-27-구슬게임.md","hash":"5472467f32ec50228f067c73daf41bf9a84460c9","modified":1523851230799},{"_id":"source/_posts/2018-03-05-프로세서 연결하기.md","hash":"71661a7f5592b2e0a4d34e55630a3014edfc371f","modified":1523851223837},{"_id":"source/_posts/2018-03-09-최빈수 구하기.md","hash":"68b2e6d14489c268bf88b48c7aeea4d056a9b5e0","modified":1523851220168},{"_id":"source/_posts/2018-03-10-그래프.md","hash":"61c7d630c32425cf472cea78278746b7f3cb8cc5","modified":1523851216633},{"_id":"source/_posts/2018-03-12-최대상금.md","hash":"b40f27a73ba4e86b262ffc25d75ccd40945fd5fc","modified":1523851212963},{"_id":"source/_posts/2018-04-02-경로찾기.md","hash":"ced2984b8af2364c7d45d6404f8e3fee1b919d3d","modified":1533100566887},{"_id":"source/_posts/2018-04-03-영역 구하기.md","hash":"ba9018a4e0312e6994fbc122b97cb3b426c17d8c","modified":1523851204036},{"_id":"source/_posts/2018-04-06-Adapter Pattern01.md","hash":"3db9c680d6e1330c71005e71e75705fef5d411f6","modified":1540446038658},{"_id":"source/_posts/2018-04-09-Bridge Pattern.md","hash":"25bbbe45b41161e9abd1948be97c15329255d145","modified":1540446045986},{"_id":"source/_posts/2018-04-09-DIP.md","hash":"3651f819abd95a336525a8d8e35aef255e088afb","modified":1540446476423},{"_id":"source/_posts/2018-04-09-Composite Pattern.md","hash":"c80075bf25adf4be4abfe524a9c72ced9bd66d0c","modified":1540446052692},{"_id":"source/_posts/2018-04-08-로또.md","hash":"7d0d519b1bebb12423e38a04b28f11e8d5925f0d","modified":1523851196132},{"_id":"source/_posts/2018-04-09-ISP.md","hash":"fdc8f1a1e28f14abd2e5b7f4dd3d5533c7804847","modified":1540446483168},{"_id":"source/_posts/2018-04-09-OCP.md","hash":"6dfdd360524ee60b447ab1bd7b8cd235354e3cdf","modified":1540446497649},{"_id":"source/_posts/2018-04-09-LSP.md","hash":"62dfc892f293fdd9b10dc3f2d878d3bf3dfff7ed","modified":1540446490617},{"_id":"source/_posts/2018-04-09-SRP.md","hash":"5026d8e59c528c3bd1f199857dd12cfc1e603e6e","modified":1542085076242},{"_id":"source/_posts/2018-04-09-적록색약.md","hash":"a15210e80fa786879acd3d99fee5cc651fa270a5","modified":1523851161974},{"_id":"source/_posts/2018-04-10-Facade Pattern.md","hash":"098377243a94468bcf15a3e75ca489e4fdbd46e3","modified":1540446060484},{"_id":"source/_posts/2018-04-13-Singleton Pattern.md","hash":"6f567a03f5bfccd5c4059d58a0fc2d96becd9040","modified":1540446092214},{"_id":"source/_posts/2018-04-13-Observer Pattern.md","hash":"8570f77693e83506035c6a610738629bb4542bec","modified":1540446069373},{"_id":"source/_posts/2018-04-13-양치기 꿍.md","hash":"0a26fcf8076702cf9fe3a6a43aa57ea2ba787c44","modified":1523851137764},{"_id":"source/_posts/2018-04-15-상근이의 여행.md","hash":"84a3d4115283c21c01e682e872b9fe5d77921e67","modified":1523851081759},{"_id":"source/_posts/2018-04-14-소수경로.md","hash":"3dff6bbe4f1dfa8533977774a765b0630f792b0b","modified":1523851112013},{"_id":"source/_posts/2018-04-16-바이러스.md","hash":"129028b5f04f93b26a43a13f2d8be2cbeadb9fe1","modified":1523851002399},{"_id":"source/_posts/2018-04-15-Mediator Pattern.md","hash":"c675efeb2a714ba3bba3e397eaf9a28542fcc7a5","modified":1540446099454},{"_id":"source/_posts/2018-04-17-추상클래스 VS 인터페이스.md","hash":"3eda77f64530b9e8e730017577c6c148cee4bdf0","modified":1540446141949},{"_id":"source/_posts/2018-04-18-Adapter Pattern02.md","hash":"4110d15313ee8b9a223f2fdd3b544de943f03569","modified":1540446109327},{"_id":"source/_posts/2018-04-20-다형성.md","hash":"bbb6ff5a23a5ad1a75f98f10632affbf0a99678d","modified":1540446153024},{"_id":"source/_posts/2018-04-20-상속VS위임.md","hash":"800a0a980b9e588b90bf4616530e124541c5fa82","modified":1540446160213},{"_id":"source/_posts/2018-04-22-Observer Pattern02.md","hash":"d5e08e70d71a057d3d3ab22d8c437d91e33707a0","modified":1540446177749},{"_id":"source/_posts/2018-04-21-정적메소드.md","hash":"8ea518b8422fcb7963fd72c4e48feffa47013779","modified":1540446166423},{"_id":"source/_posts/2018-04-22-Observer Pattern03.md","hash":"ab76d2c1251df40eae5df51d6d5e3f5f17fdf8bf","modified":1540446183868},{"_id":"source/_posts/2018-04-22-Singleton Pattern02.md","hash":"bde675147f13f7d7a62287599024642ec1730ceb","modified":1540446190807},{"_id":"source/_posts/2018-04-22-adapter VS facade.md","hash":"3d6c933f86f24f9433bd75e790ec48ac6618e4da","modified":1540446124496},{"_id":"source/_posts/2018-04-23-Adapter Pattern03.md","hash":"a54c4afc5dd5878a02955c4447fc02625156d679","modified":1540446197409},{"_id":"source/_posts/2018-04-29-연구소.md","hash":"e24865c84fe89044f15d652e90bba229cce44b48","modified":1525186990068},{"_id":"source/_posts/2018-04-24-Composite Pattern02.md","hash":"34afc728bb622ba5a90b99d2292118fb7c0dbcd3","modified":1540446210885},{"_id":"source/_posts/2018-04-23-OCP02.md","hash":"cdc462e895e48e8a80acd442f07eebee256c1e2e","modified":1540446204417},{"_id":"source/_posts/2018-05-03-Proxy Pattern02.md","hash":"44f67a40c97ae2cd70abbb7a1f033dc7ea36fdba","modified":1540445674850},{"_id":"source/_posts/2018-05-03-Proxy Pattern01.md","hash":"544c8c3201684a833f11f55275cd43491351ba1b","modified":1540445944663},{"_id":"source/_posts/2018-05-04-browser 동작.md","hash":"94e72a4af60bc95097721bf001547a4a2bf13a95","modified":1525532608135},{"_id":"source/_posts/2018-05-01-케빈 베이컨의 6단계 법칙 .md","hash":"a538b4041b3b4ccd349948e3ad3233d4c3438004","modified":1525244458595},{"_id":"source/_posts/2018-05-04-web 동작.md","hash":"8e105493477dded1931a50f3fb65a681c1f76245","modified":1525532618006},{"_id":"source/_posts/2018-05-04-프론트엔드, 백엔드.md","hash":"9afaff348370298ba0de86fec90cb975a3061bcc","modified":1525532624766},{"_id":"source/_posts/2018-05-05- browser에서의 웹 개발.md","hash":"9ba81407515ea5786ee3c820dc662b227e75b8b6","modified":1525532639655},{"_id":"source/_posts/2018-05-05-was.md","hash":"4b48e469fe7ad61935d3a2445ac01bcef5d6c9ab","modified":1525532593574},{"_id":"source/_posts/2018-05-04-프린터 큐.md","hash":"c99fd69e7ce3f0c94037d190f40d64b658a24bac","modified":1525597508156},{"_id":"source/_posts/2018-05-06-CSS.md","hash":"25018144cf7d418e662869733eb7038cf8d3d3ee","modified":1525611321079},{"_id":"source/_posts/2018-05-05- 웹 서버.md","hash":"97ae0d67e00c7912e465b998d4236000701c6c0e","modified":1525680131255},{"_id":"source/_posts/2018-05-06-HTML.md","hash":"1f4b5483df96ec72e90606600d3afc97ca3259a0","modified":1525537714599},{"_id":"source/_posts/2018-05-06-Spring IoC:DI 컨테이너.md","hash":"8a888ccfd84ac7f4c46b3d59176e1aa88dd1af73","modified":1525614164231},{"_id":"source/_posts/2018-05-07-HttpServletRequest, HttpServletResponse .md","hash":"3f0e977c182228a1c77e2a41104852c29bbf22e6","modified":1525680424836},{"_id":"source/_posts/2018-05-07-Servlet.md","hash":"48e709b89140d7355f0d10544de595fd8e634583","modified":1525680432640},{"_id":"source/_posts/2018-05-06-물통.md","hash":"7dea2e719f2a9bae117e6c0c20faeed7bdf3af76","modified":1525610098530},{"_id":"source/_posts/2018-05-08-Database.md","hash":"44ec546a18f39103aaaf21e8eaad6a8453db20c2","modified":1525750697332},{"_id":"source/_posts/2018-05-08-DTO, DAO.md","hash":"89eed0511b0e597e56070fe804d1e48cf875d27a","modified":1525738522778},{"_id":"source/_posts/2018-05-08-JDBC.md","hash":"a44523d456cc48c588022b090b8da71edc37fb0d","modified":1525741657152},{"_id":"source/_posts/2018-05-08-Spring MVC.md","hash":"4d5f0c28e799c3b2fd66fb72b6af66fb5a9e6f92","modified":1525774869889},{"_id":"source/_posts/2018-05-08-Spring MVC 구성요소.md","hash":"3850b50a309829d6cdfeef86c17c24f3facb2c55","modified":1525775859991},{"_id":"source/_posts/2018-05-08-SQL.md","hash":"613f6429b5ef9e3cada34877f22fa3a647c0b903","modified":1525767276564},{"_id":"source/_posts/2018-05-09-Chain of Responsibility Pattern01.md","hash":"a3ea03f83b6c56aa7bebcb38ace6a72fd3d948d9","modified":1540445960841},{"_id":"source/_posts/2018-05-10-Chain of Responsibility Pattern02.md","hash":"37d4d0dbe14c2b4eae0be94cbfe4f4a8d3f58fb6","modified":1540445967769},{"_id":"source/_posts/2018-05-08-돌다리.md","hash":"950df79f0384de80057ea40730d19925486197b1","modified":1525781312789},{"_id":"source/_posts/2018-05-10-Chain of Responsibility Pattern03.md","hash":"bf3628ebf0a2175a68a59b240f5e11203951340a","modified":1540445760965},{"_id":"source/_posts/2018-05-13-Abstract Factory Pattern02.md","hash":"e5e6552eff900c9d4d628a8e4f4aac9ef1b620a2","modified":1540445770806},{"_id":"source/_posts/2018-05-10-팀배분.md","hash":"96c8afa6676a5f47fd6deb73859cc5bac91104bb","modified":1525941530202},{"_id":"source/_posts/2018-05-13-Abstract Factory Pattern01.md","hash":"6e0f5476ac1a9ad3109f4b0617b618032b753df6","modified":1540445974647},{"_id":"source/_posts/2018-05-13-Factory Method Pattern02.md","hash":"cb01ac3d65d166fe383bc2ce1be1c6b24804fea4","modified":1540445780375},{"_id":"source/_posts/2018-05-13-Simple Factory.md","hash":"9e8a0a33487eca9ec61da15b3165e83d6d093b57","modified":1540445992399},{"_id":"source/_posts/2018-05-13-Factory Method Pattern01.md","hash":"732e4544993f5411a453bd3a41856bcd92502acf","modified":1540445983975},{"_id":"source/_posts/2018-04-27-로봇청소기.md","hash":"2dac36a0ccf87ae14e472286f3d82741d89a9307","modified":1535621470512},{"_id":"source/_posts/2018-05-13-숨바꼭질.md","hash":"0f97b65f140b6571af5598bd4e2ed134f8d230a1","modified":1526197096655},{"_id":"source/_posts/2018-05-15-Sampling, Quantization.md","hash":"37bcebb3407a1964a43cae6e52f5e048cd00fcf4","modified":1526908301608},{"_id":"source/_posts/2018-05-21-Brightness and Contrast.md","hash":"5390fa41df51f6a57f698e3a4da69ab37520df95","modified":1526908276517},{"_id":"source/_posts/2018-05-21-Bits Per Pixel.md","hash":"20a0ffab4c3377d46c5a423b42855ce5bf1b4717","modified":1526908283490},{"_id":"source/_posts/2018-05-21-Convolution.md","hash":"9717e69ed00dd3614723c5c807710f6c3e2b576e","modified":1526910336958},{"_id":"source/_posts/2018-05-15-안전영역.md","hash":"ae91a947efda6605c63a39228b94d7e473b5e525","modified":1532666880136},{"_id":"source/_posts/2018-05-21-Histogram Equalization.md","hash":"1094e8fcf798c5e3d6cf50de845bd6ba02eb266c","modified":1526908677606},{"_id":"source/_posts/2018-05-21-Histogram Sliding.md","hash":"a47d62805080f987b2911008c7175ddd9f84b33d","modified":1526908261908},{"_id":"source/_posts/2018-05-21-Histogram Stretching.md","hash":"b46c2ff4481d360c708e51171dd68d6499ce899e","modified":1526908253584},{"_id":"source/_posts/2018-05-21-Histograms Introduction.md","hash":"0c6a8a9ab20c6388d3200cdb7e00c75f1dc5d172","modified":1526908245954},{"_id":"source/_posts/2018-05-21-Mask.md","hash":"1318160b2cfcdbb93e6ba8057258bd0067de1c20","modified":1526911140952},{"_id":"source/_posts/2018-05-21-PMF, CDF.md","hash":"6e77c64708589c4d3b57a254890bbd9806c94b84","modified":1526908239129},{"_id":"source/_posts/2018-05-15-Pixel.md","hash":"c74117d96e63bac0d24cf6ee6470e465d39bca65","modified":1526908293068},{"_id":"source/_posts/2018-05-22-Edge Detection.md","hash":"28a0ebb524cab9476b56e3785ff7ec6aed959872","modified":1526972666209},{"_id":"source/_posts/2018-05-21-Types of Images.md","hash":"d8520d79009520deca24810225939cbc3cfd7407","modified":1526908224664},{"_id":"source/_posts/2018-05-22-Blurring.md","hash":"a805820c09734c31cdaea028bf9ca01ab952b6ec","modified":1526971349653},{"_id":"source/_posts/2018-05-22-Krisch Compass Mask.md","hash":"47d16a7688c8b97d1ba20f2c5adb5db12cd0ea31","modified":1526981642773},{"_id":"source/_posts/2018-05-22-Frequency domain.md","hash":"a2765501c20ca4f60338a2129d447a0c6c9a5e4f","modified":1526994709754},{"_id":"source/_posts/2018-05-22-Prewitt Operator.md","hash":"1acf4933ed2de92998535f8742f3be9d7eb40391","modified":1526973862376},{"_id":"source/_posts/2018-05-22-Robinson Compass Mask.md","hash":"ddf233f150aab9639b045d2107edb7392e9041f5","modified":1526975724860},{"_id":"source/_posts/2018-05-22-High Pass, Low Pass Filters.md","hash":"72623011e8c9fb97d9147b0a8e41828f75ead2f6","modified":1527001132384},{"_id":"source/_posts/2018-05-22-Sobel Operator.md","hash":"f3d956a3fd8e87ecba3f8805b9328a9ade71c307","modified":1526974525150},{"_id":"source/_posts/2018-05-22-Laplacian Operator.md","hash":"2244fbcf5ee7c8a4be39e8906cac6e09e312c528","modified":1526976470828},{"_id":"source/_posts/2018-05-28-Memento Pattern01.md","hash":"727ea7fc62ab7bf1246f3498a32c0e909f21fa2c","modified":1540446438528},{"_id":"source/_posts/2018-05-28-Prototype Pattern01.md","hash":"31434c6b5938495cb7b03b15f8662be2164cf405","modified":1540446453743},{"_id":"source/_posts/2018-05-28-Prototype Pattern02.md","hash":"2db80e708314219b5f965e6ef14678020b5ef638","modified":1540445796269},{"_id":"source/_posts/2018-05-27-나이트의 이동.md","hash":"96061da4a063c9fdcb48476bb5ae099a863de3a9","modified":1527435774433},{"_id":"source/_posts/2018-05-31-State Pattern01.md","hash":"f197daaa21b92d31ea73adcbc1ca9367d8428924","modified":1540446013757},{"_id":"source/_posts/2018-05-31-State Pattern02.md","hash":"f584abf693acc047879545c0bb691a57ccef6cb7","modified":1540445804865},{"_id":"source/_posts/2018-05-28-촌수 계산.md","hash":"a097c94641380deafda5b535a3e14ced8b9e6bf0","modified":1527496002840},{"_id":"source/_posts/2018-05-28-Memento Pattern02.md","hash":"d8525b00429fe0c193fbaa2274bd735d22730e94","modified":1540445787992},{"_id":"source/_posts/2018-05-31-Template Method Pattern01.md","hash":"a492e06505a53e9016df448c3bf8bf75261444f7","modified":1540446021970},{"_id":"source/_posts/2018-05-31-Template Method Pattern02.md","hash":"b06248a5fd5ce922a705c08ce4cea346794aebc4","modified":1540446028895},{"_id":"source/_posts/2018-05-31-Template Method Pattern03.md","hash":"1b240c8c2a2cc6eb5841f1e01edde19801f6ee31","modified":1540445812797},{"_id":"source/_posts/2018-05-31-Template Method Pattern04.md","hash":"a33528c190535e56aba6f8b97bec1feee4c7651c","modified":1540445821020},{"_id":"source/_posts/2018-06-06-Strategy Pattern01.md","hash":"b57ed8a582e00037469d0f3707ac55450b742990","modified":1540445830185},{"_id":"source/_posts/2018-06-04-탈출.md","hash":"debcae476a8e259aec1e2f746c9ce23f6ca58dc9","modified":1528368754103},{"_id":"source/_posts/2018-06-06-Strategy Pattern03.md","hash":"0a6c07f016e86e08278f38e189e65eb62db9c2ee","modified":1540445846617},{"_id":"source/_posts/2018-06-06-Strategy Pattern02.md","hash":"3c8d1c5f110c09fe5639d0152b5e79e7067b97fb","modified":1540445837361},{"_id":"source/_posts/2018-06-08-Builder Pattern01.md","hash":"2eb750e04c639ebe71fcf439de49a423e333c45c","modified":1540445853826},{"_id":"source/_posts/2018-06-08-Builder Pattern02.md","hash":"7e00c2d4c2dda78bda39970503274a78b7e939a9","modified":1540445861568},{"_id":"source/_posts/2018-06-08-Builder Pattern03.md","hash":"cd0dd6b635b77e489a547fc4edbb98c5a2567207","modified":1540445872053},{"_id":"source/_posts/2018-06-08-Flyweight Pattern01.md","hash":"2f43c418449814fb6ee0dcb7431a75d43dbea91e","modified":1540445879489},{"_id":"source/_posts/2018-06-08-Flyweight Pattern02.md","hash":"e03d5aa89b453a5f52ad7a946671db7554a1b7c3","modified":1540445886247},{"_id":"source/_posts/2018-06-08-Flyweight Pattern03.md","hash":"02d88b6f0ca848361d3566ff070bfceef265c45f","modified":1540445892135},{"_id":"source/_posts/2018-06-11-Command Pattern01.md","hash":"388bd2b5b2e29336fb0d07d70b15207c85e3f6c9","modified":1540445898129},{"_id":"source/_posts/2018-06-11-Command Pattern02.md","hash":"dc2314a78fd69d5019d4c18d69bf9d1292d0b805","modified":1540445904510},{"_id":"source/_posts/2018-06-11-Command Pattern03.md","hash":"2525e2f18d4bb907187d67d7efc1e1a20b265e3c","modified":1540445920201},{"_id":"source/_posts/2018-06-11-Decorator Pattern01.md","hash":"20daf4ff179998a60ab15fe0240710e9c98c73f1","modified":1540445911946},{"_id":"source/_posts/2018-06-11-Decorator Pattern02.md","hash":"007b3f7b57c7126ed838f656c56766d798564016","modified":1540445928530},{"_id":"source/_posts/2018-06-17-Iterator Pattern.md","hash":"e2e67d4b53cf9528287c0a8c160a145a94a8032d","modified":1540445936790},{"_id":"source/_posts/2018-06-01-스타트링크.md","hash":"c24089a84f9e0b5c0afeaf630d1b530b0eeffade","modified":1527843328962},{"_id":"source/_posts/2018-07-05-HTML.md","hash":"8f8ec9d7542e9a9cc65393255ae2d9f9f219f8a9","modified":1530937572475},{"_id":"source/_posts/2018-07-06-CSS.md","hash":"1c8d17ffb7b98ca48542f0625d62646599140aeb","modified":1530940714622},{"_id":"source/_posts/2018-07-18-마지막 생존자.md","hash":"2dce02cfd05da41a1d3f697aa492b66a25b47458","modified":1531979288352},{"_id":"source/_posts/2018-07-18-쉬어가는 페이지.md","hash":"36644535c6f97dddbd87f88a633ca78a90c8c903","modified":1531974726395},{"_id":"source/_posts/2018-07-19-순환 공간.md","hash":"852647d0f26732af7a64996abf9b0da114b81ff0","modified":1535540509782},{"_id":"source/_posts/2018-08-30-드래곤커브.md","hash":"73f74f9338b28b28c4d9049f9c4bc00f7d2480d3","modified":1535621663621},{"_id":"source/_posts/2018-09-01-경사로.md","hash":"b6a7cc5e9267cb9f0b446f729c76c68e7bbef6c4","modified":1535879297189},{"_id":"source/_posts/2018-08-31-스타트와링크.md","hash":"44b1dd61eff997b2b07789337cc81f83d8792a8e","modified":1535718582631},{"_id":"source/_posts/2018-09-04-톱니바퀴.md","hash":"6eaa1ea68c185d6065d1ac1ecadbf07d725e6596","modified":1536048743142},{"_id":"source/_posts/2018-09-05-연산자 끼워넣기.md","hash":"a2e58384c834de76f0173c4c5ba3f5cfe8575d10","modified":1536229692120},{"_id":"source/_posts/2018-08-01-치킨배달.md","hash":"20d5f8d3aaaa76472e7c4ca714076583c6c54c17","modified":1538382374535},{"_id":"source/_posts/2018-09-10-백만 장자 프로젝트 .md","hash":"d826d5d63be50103610dbcdb95c25e45746743aa","modified":1536564640041},{"_id":"source/_posts/2018-09-09-View.md","hash":"533eb6ba3f34559df19a9af7bc832371bad19667","modified":1536566302461},{"_id":"source/_posts/2018-09-08-퇴사.md","hash":"da48185b1c9abdd58aff2790c73c5ddb4c45cba9","modified":1536385467748},{"_id":"source/_posts/2018-09-13-로봇청소기.md","hash":"0b1ad11e12ac799fed4d6ea8b76fd20c7e63735e","modified":1536801898543},{"_id":"source/_posts/2018-09-12-감시.md","hash":"e3d9c819f2449347f747c5698a96de888fac8ac1","modified":1536739980087},{"_id":"source/_posts/2018-09-11-콩 많이 심기.md","hash":"9eab8aadb0275df921d84620c4fb4ab7c90590f9","modified":1536648068134},{"_id":"source/_posts/2018-09-18-테트로미노.md","hash":"65ee2b222cb30390f4b995c627778e36295089a5","modified":1537265455554},{"_id":"source/_posts/2018-09-20-사다리 조작.md","hash":"f95c7039c251fe97e4774d2552bad5959e0b68d1","modified":1538315529438},{"_id":"source/_posts/2018-09-19-주사위 굴리기.md","hash":"855b8959ee79a5e674d4c6abfa07c7471a7afd9e","modified":1537369128876},{"_id":"source/_posts/2018-09-24-2048.md","hash":"e3bb5cc554fa9b11aabc28a2316fb1e94e792da7","modified":1537799747831},{"_id":"source/_posts/2018-09-24-뱀.md","hash":"f38d40d95a7bcf8c93e748126087fde08093855b","modified":1537778162701},{"_id":"source/_posts/2018-09-24-시험감독.md","hash":"195c3fa20b9829e7f620b3040ffda4d4adf774a1","modified":1537759594200},{"_id":"source/_posts/2018-09-26-구슬탈출2.md","hash":"fc5ee954dd18bb201d71724af067532f4ff81847","modified":1537950501523},{"_id":"source/_posts/2018-09-30-실패율.md","hash":"2a11b692fa36b75c7187e17c254b3c101fc2a0a5","modified":1538314423290},{"_id":"source/_posts/2018-10-01-Introduction.md","hash":"b9961006154dc1dd671bfc526d8b127f5c2aec4a","modified":1538397000302},{"_id":"source/_posts/2018-10-01-System Structure, Program Execution.md","hash":"994a44586f234d2a16c9a86c4b93cf2355ccdd42","modified":1538397384083},{"_id":"source/_posts/2018-09-30-오픈채팅방.md","hash":"b90cc2c5b536dba72e659c12c11155199e089f0c","modified":1538294734412},{"_id":"source/_posts/2018-10-04-벽돌깨기.md","hash":"647a7abefdce005f4857341638b9737f49e6632a","modified":1538628706338},{"_id":"source/_posts/2018-10-04-Process Managemnet.md","hash":"e60957adf68bd506f06b0295144bba4aa03ee272","modified":1538632939461},{"_id":"source/_posts/2018-10-03-Process.md","hash":"bb99d7b1eac7390c41bb120c3867567a3ad12217","modified":1538521867970},{"_id":"source/_posts/2018-10-06-CPU Scheduling.md","hash":"dc2259b03f8c2d5a3e5f62aaf8af673703ebc059","modified":1538837528733},{"_id":"source/_posts/2018-10-07-줄기세포배양.md","hash":"a34613b57318830ea29a6c3566c2757ce39128a8","modified":1538839072219},{"_id":"source/_posts/2018-10-04-보물상자 비밀번호.md","hash":"56c703fc77cd095c5079649edc6eea8a0d2f3e32","modified":1538663254927},{"_id":"source/_posts/2018-10-07-특이한 자석.md","hash":"27ed16bd73b40da0c90da96cf3bdc2b2b6d1df63","modified":1538888975267},{"_id":"source/_posts/2018-10-09-Deadlock.md","hash":"01ca46f6b3554497b515e3657ff44ebe00ab82c3","modified":1539163575556},{"_id":"source/_posts/2018-10-06-Process Synchronization.md","hash":"25af430482187bc72aeddc903f2a85dc4be6e601","modified":1538878271225},{"_id":"source/_posts/2018-10-09-탐주범 검거.md","hash":"aaf50022e4129f04f6eaafc8b29d0658ac47fdfa","modified":1539098374587},{"_id":"source/_posts/2018-10-09-활주로 건설.md","hash":"c0e994fe69a7ef5161cd718c2113f2f31deb34fb","modified":1539072948527},{"_id":"source/_posts/2018-10-09-Memory Management.md","hash":"2058edc084cbac8bd7b61fff797d636624a50359","modified":1539163597197},{"_id":"source/_posts/2018-10-12-File System.md","hash":"8df32837fed03d31a3f8edacdbab7ce0b907c5d6","modified":1539665718840},{"_id":"source/_posts/2018-10-11-디저트 카페.md","hash":"ca35159bca610ba0b6f510c8ad01c493e02b9c6b","modified":1539241682275},{"_id":"source/_posts/2018-10-11-Virtual Memory.md","hash":"f34ff20bf300b6835c75683118d0abad1ab59e56","modified":1539226055546},{"_id":"source/_posts/2018-10-12-무선 충전.md","hash":"6b7af76d515d5b4a14b62d3a6b87ad780ece757a","modified":1539304899207},{"_id":"source/_posts/2018-10-19-홈 방범 서비스.md","hash":"6f71f048b554a1b91d311e3041a2a298abb8eaa8","modified":1539955935974},{"_id":"source/_posts/2018-10-23-2018 하반기 삼성 코테 리뷰.md","hash":"5f4ea28656197ab6ec927d59b6e4801a19de105b","modified":1540280715610},{"_id":"source/_posts/2018-10-16-미생물 격리.md","hash":"00dd171c5f7d46a9cc808b45a89b451bfee39896","modified":1539650676170},{"_id":"source/_posts/2018-10-24-개복치.md","hash":"24ccf8606fc7de47fc573dc8da5c1c9da9231711","modified":1540378887059},{"_id":"source/_posts/2018-10-25-Java Sort.md","hash":"5b39520a5d2f044958881da06f0aa818b5b27c2d","modified":1540452294450},{"_id":"source/_posts/2018-10-25-Type Casting.md","hash":"ed2a9ca65f476d1a15b26345613724cd9a7d0b94","modified":1540457968653},{"_id":"source/_posts/2018-10-29-인구이동.md","hash":"7539b41edc8b81dbf5dd60e8863424b3bf41116e","modified":1540795707289},{"_id":"source/_posts/2018-10-26-가장 많은 글자.md","hash":"9b310f6bd65957098eeebb28ff00f9bd541da61d","modified":1540524211527},{"_id":"source/_posts/2018-10-25-방번호.md","hash":"1d8cf80093afd241ad1573fd0c17df10d53b2fb7","modified":1540518143693},{"_id":"source/_posts/2018-11-01-이진탐색트리.md","hash":"e2e198635739483ee2a00fb49d28c57e68615a70","modified":1542280576320},{"_id":"source/_posts/2018-11-05-러시아 국기 같은 깃발.md","hash":"5136083caa0e734815197e8a6f246dafcf404f96","modified":1541398320070},{"_id":"source/_posts/2018-11-05-node.js.md","hash":"4652fe6702d80ebc7b595c4c1e854a41db11ee12","modified":1541389784531},{"_id":"source/_posts/2018-11-08-숫자 고르기.md","hash":"5ada54b5f4e9f01f80a997bfdbba8406b014a87b","modified":1541650576230},{"_id":"source/_posts/2018-11-06-초보자를 위한 점프대 배치하기.md","hash":"07c72413ab81826f67952e820186ade838252b01","modified":1541491899812},{"_id":"source/_posts/2018-11-11-Heap.md","hash":"959c51ae21c42ddf884fb741912649158c4129c7","modified":1542028915456},{"_id":"source/_posts/2018-11-08-TCP:IP.md","hash":"36f48605b708b37718494672d1839bcf5d7f5249","modified":1541897421451},{"_id":"source/_posts/2018-11-11-MongoDB.md","hash":"64da678abea70ed6506593bc92df4c5e16fa4892","modified":1541897871403},{"_id":"source/_posts/2018-11-11-버블정렬.md","hash":"5ff37e8ea02d70647b4b8977d0d59d51ceff34d5","modified":1542028911676},{"_id":"source/_posts/2018-11-11-선택정렬.md","hash":"2daf334be9e629156c531ee1de8ead157ef1d58f","modified":1542028907867},{"_id":"source/_posts/2018-11-11-삽입정렬.md","hash":"6284c357670249eb6b4032ce99c4aa5aa2731273","modified":1542028922504},{"_id":"source/_posts/2018-11-11-점근 표기법.md","hash":"da7a2466cd08651f68029cac4260dbf77d5553ae","modified":1542028928800},{"_id":"source/_posts/2018-11-12-Linked List, Array.md","hash":"a188d45f493aff175f20421f1d0a90f17d3affcf","modified":1542032863900},{"_id":"source/_posts/2018-11-12-Transaction.md","hash":"1e83d87b4f38a508ccfca36e1fab2917ba35680d","modified":1542031849351},{"_id":"source/_posts/2018-11-12-REST.md","hash":"895c9837bf02eac6ff14c1bf2d1c852d114bce0b","modified":1542017572883},{"_id":"source/_posts/2018-11-12-워터폴,에자일.md","hash":"38d655fed5d766477f42e2ecb0f1699574155675","modified":1542030352823},{"_id":"source/_posts/2018-11-12-퀵정렬.md","hash":"cb1ca0dff755e86ed2e18349d3d6e958fd7ba740","modified":1542028936919},{"_id":"source/_posts/2018-11-13-Hash Table.md","hash":"24593e9f8fe3fba8dec93449027b74972f0df12c","modified":1542065591768},{"_id":"source/_posts/2018-11-13-SOLID.md","hash":"45ff442cbb259f250e858a496616e070434e7e41","modified":1542085144161},{"_id":"source/_posts/2018-11-13-View Life Cycle.md","hash":"ab14cea8a442ea80d18c45206f66ecdf28d66da0","modified":1542079163900},{"_id":"source/_posts/2018-11-21-flow, congestion control.md","hash":"07f6c89dfbc78f170340cc9b6a78040a9ed20423","modified":1542793930820},{"_id":"source/_posts/2018-11-21-flow control.md","hash":"0899140bfdd32e9888771517bbcae3fbb851f0e7","modified":1542797942336},{"_id":"source/_posts/2018-11-21-길찾기.md","hash":"db5cd9bedd9c7be34dc085ce734a7664ac0077e5","modified":1542786358304},{"_id":"themes/tranquilpeak/languages/en.yml","hash":"fd83558201c695b43e2f14ce1592d6125432b685","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/de-DE.yml","hash":"6054dd34bf3ccc00cd0ef88abd63a8ab5d65d19c","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/es.yml","hash":"b4e0558f2dd9656a6a6089eef462d211ed039a6c","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/fa.yml","hash":"d1013afe247b2a240f5d03d25e2c870994af6d3d","modified":1532936494000},{"_id":"source/_posts/2018-11-22-Components.md","hash":"1befc39f8ae3e65aa5762876f1572e8112144a5d","modified":1542887012927},{"_id":"themes/tranquilpeak/languages/fr-FR.yml","hash":"f3aa504b13a84e7e0bc75466abcea8e7e90838be","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/ja.yml","hash":"8c46dcbdfa981e614cf019b9b03c2d56b464a059","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/it-IT.yml","hash":"2511c1dd63ac6c6c2c4da4e4aeaaf81eb5efb20d","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/ru.yml","hash":"b7f4d4df152d6e4a791958b7682c04fcd146c35e","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/pt-br.yml","hash":"e800caa9b58c5c07b0d7cf26abf74514121cb9eb","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/zh-cn.yml","hash":"20fb1f9e04dbe708e36d56336099c2ca69ece7c1","modified":1532936494000},{"_id":"themes/tranquilpeak/languages/zh-tw.yml","hash":"b1918a8911418d8a98e782dee8f303d1cb8b89f9","modified":1532936494000},{"_id":"themes/tranquilpeak/layout/all-archives.ejs","hash":"28a4e97d1cfe4730dbcc8fde27b079320b5eec35","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/all-categories.ejs","hash":"fa6f71b9543644df38cc1f33f8ed8223f91cc7a6","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/archive.ejs","hash":"0df1edf4ed40b316715ef1949b09aa9c98d22359","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/category.ejs","hash":"67902c418e299399133fe2a7ebc39cadd17de861","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/all-tags.ejs","hash":"aabb765f51a8d7582a5bafdbc8876b46ff1e6ea1","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/layout.ejs","hash":"29c1291c7ca3f5da7bee6385b7f716d179199933","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/index.ejs","hash":"36e89b37f520533bef85fb32b714214257fad1d0","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/post.ejs","hash":"ae761feddc98f4d3260e7591ed9fc91d9a49d0ab","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/tag.ejs","hash":"72bff1ae241fbe2ddca0537e8ed77c791a7d1766","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/page.ejs","hash":"ae761feddc98f4d3260e7591ed9fc91d9a49d0ab","modified":1532936491000},{"_id":"themes/tranquilpeak/scripts/.eslintrc.json","hash":"4cd7451f0bc15440bc8147912c63a11acd0e280f","modified":1532936494000},{"_id":"themes/tranquilpeak/package-lock.json","hash":"9a1f3ef2edffe669d1954f9ad8c28c82b95ee298","modified":1532936494000},{"_id":"themes/tranquilpeak/tasks/pipeline.js","hash":"75b65cbd6d6ae471739ba80c9f792f602a0769d4","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/.gitmodules","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1416529720000},{"_id":"themes/tranquilpeak/layout/_partial/baidu-analytics.ejs","hash":"736eca2ecf6fdeea032d47c02c51688f006cafb4","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/about.ejs","hash":"c92588fcb4435e19b8c7e10fe24484aa6639060e","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/cover.ejs","hash":"18b9a620fca9b648fd59467a66b3f4fdbba42613","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/footer.ejs","hash":"67962257d9e3cb6a4d56e3f0263f192ba9a413dd","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/archive.ejs","hash":"bdd73d1f70bd91533863943f940f8193d44e0fdd","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/archive-post.ejs","hash":"e19455749c5c1bf773214d965f173613dd8f30f6","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/google-analytics.ejs","hash":"0d0bc2c67d2cfab5fbf3d5d21c209d799f5de528","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/index.ejs","hash":"e5d658bff9a942d6dee027fea96e49c7a3668f57","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/pagination.ejs","hash":"207dd207e01eacda76b89e88a2ce95d898eadfca","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/header.ejs","hash":"6b2fd599a482d1833998495f6846433b505f0d1e","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post.ejs","hash":"a05df5b3c970e5a1a93bd2d49344d6983183fc94","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/script.ejs","hash":"7d8856f453cd7be35191d54cdbd318d365e2c360","modified":1532936491000},{"_id":"themes/tranquilpeak/scripts/filters/excerpt.js","hash":"5e0e473d46f8c7aac988ebf0b25ab2eab0af73bb","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/filters/thumbnail_image_url.js","hash":"0ad2d9304c991e2989708bdbfa6a59030ee691d3","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/helpers/absolute_url.js","hash":"0d520a946b6f0abbac60529017ed3133265aac60","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/helpers/generate_sharing_link.js","hash":"89069677e8acddef5fba0d3093f5f73fde4fa485","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/helpers/is_remote_url.js","hash":"471237ea295bcc9a392a5bb6738ef4c6ab673afb","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/helpers/json_ld.js","hash":"875f3a04b789ebb392169aca9f53c5e6cd4f8c35","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/helpers/resolve_asset_url.js","hash":"c813e9daaed374b386b91876923f10c0cf1d624c","modified":1532936494000},{"_id":"themes/tranquilpeak/layout/_partial/sidebar.ejs","hash":"1fe8c4e7450dd074da11423dbbe592e26ea796e9","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/search.ejs","hash":"d6de52e292eb21278f47b157f9a633b791d6edbf","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/head.ejs","hash":"8e53f8c6b5d792c88505f73e22a70a3ac6121456","modified":1532936491000},{"_id":"themes/tranquilpeak/scripts/tags/alert.js","hash":"5b86358dd53c9b0d44c385ec12cf9e76383e229a","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/tags/fancybox.js","hash":"55ce02f9ef084f43932eb9b0f10db1d5e9c3a250","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/tags/highlight_text.js","hash":"8e093f21e9a4b10c19be6f300dc90bcc39685ec9","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/tags/image.js","hash":"ab6b04db8fe2ad21ec52dac5e1c3ee76400c6a79","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/tags/tabbed_codeblock.js","hash":"7dccd36bdd85c96eb7af125b30d634f44125700c","modified":1532936494000},{"_id":"themes/tranquilpeak/scripts/tags/wide_image.js","hash":"d3596c62694548a3a684e8dfeb5372038ef6f450","modified":1532936494000},{"_id":"themes/tranquilpeak/node_modules/.bin/escodegen","hash":"ea70dd92f7321b01fd3aea944059dfc7ab7ff82e","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/esgenerate","hash":"00b8be70a2983d1dffae6c1395a70ea39f0f3a53","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/esparse","hash":"3d6b8fda44ca6d8f347c35d442c6dd838646f8f1","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/esvalidate","hash":"368bdfb162d02492c660e74657608f0ce4865eaf","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/acorn","hash":"385d05081580db6a79c543e00f9b934da7a209e0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/sshpk-sign","hash":"75271a4b0392b5549555f50085b991e8d9a3bd0c","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/sshpk-verify","hash":"bed5d9cc90700090b09d785d84f985b7815e55f8","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/which","hash":"5b6b3e1838316fb3f1b3b4194cdf49db0674eb17","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/sshpk-conv","hash":"ef58cd3dce531e6a04e6557610f52be2688b8568","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/.bin/uuid","hash":"c5b3ec4d8a8f620420aa52a8f3a7cfdff1197667","modified":1532936500000},{"_id":"themes/tranquilpeak/source/_css/tranquilpeak.scss","hash":"e69c62b19ece4ab35d992e163b47f2a8374d7611","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/about.js","hash":"47ecaf9e4532f4e36cf505de49a6a4357be030b2","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/archives-filter.js","hash":"8b8998b0e67c745a20450001c0739f6977b63309","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/.eslintrc.json","hash":"27d4e7223eee3eca7eb717bea2d28d35714eccbc","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/fancybox.js","hash":"659aaad375ecff9748a5d3b0ff1378a549236513","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/categories-filter.js","hash":"a5f3c4b9bbef1c8ec881eb39551060ca95bfbb33","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/image-gallery.js","hash":"90efc47246af69b7e17fab6e0bd1578043fcc2b0","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/header.js","hash":"58ca619f851ebff35724c07dca7f1ed25e9cd5f2","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/post-bottom-bar.js","hash":"64f78c44d29d3559d5e14e436b8cfe1d24b8c965","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/codeblock-resizer.js","hash":"391c2c9135579ea50c2060e0612e7105e06a8ff7","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/search-modal.js","hash":"7ea9ab668bc3118c28e6212516f366ef764d3550","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/share-options.js","hash":"c2046697540786721ff7c4754774f94fcaf32696","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/tabbed-codeblocks.js","hash":"465a7a60c609a3b2ac182ac164feea2fea00e0ec","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/smartresize.js","hash":"7342a21f94d7bb0525ccbd917d43a6824d7ae63e","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/tags-filter.js","hash":"d33625df51d7b9788eeea338626f04387c96f053","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_js/sidebar.js","hash":"18dc623dd237c519bb79ce93283a5446cc11a487","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/abab/index.js","hash":"3e14bbc1d5a0d7f5d81b65ee4e368027c63ba8ad","modified":1505957314000},{"_id":"themes/tranquilpeak/node_modules/abab/CHANGELOG.md","hash":"357bc45fe1d94c48b926ee4c8bdd1a089d099f84","modified":1505957314000},{"_id":"themes/tranquilpeak/node_modules/abab/LICENSE.md","hash":"2ef4a0a4b2756fc60cf4c6fb4b9bb231054126bc","modified":1505957314000},{"_id":"themes/tranquilpeak/node_modules/abab/package.json","hash":"d42cfc2d88b9dab1296d0e446f380503a790e3d4","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/acorn/AUTHORS","hash":"cabceca6a5eb265b4c37ed4d35c57aa1f25b13a0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/CHANGELOG.md","hash":"f67ddd6595399a45307967db5ffb84bd1b4fb062","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/LICENSE","hash":"c68e9597fe0b6ee46f64adb92942b38f82ddbf1d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/README.md","hash":"387d374252ee1af433fae4bb4e3fd6d7888b9d54","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/abab/README.md","hash":"3dd81380844ea60d27d89589d648df685f411f4e","modified":1505957314000},{"_id":"themes/tranquilpeak/node_modules/acorn/package.json","hash":"fcb191cbc12b081ee097bddd9f3dcd005e3e12cc","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/acorn-globals/LICENSE","hash":"c10025d9f88d74d08d60f8e092ac3e038ce180c4","modified":1427570062000},{"_id":"themes/tranquilpeak/node_modules/acorn-globals/README.md","hash":"db9e6a11b0a15a15244286a11cf99d0e71747030","modified":1498216735000},{"_id":"themes/tranquilpeak/node_modules/acorn-globals/index.js","hash":"a5adc5e17aaf337a83c8b0a41bf9ba8446483532","modified":1508886306000},{"_id":"themes/tranquilpeak/node_modules/acorn-globals/package.json","hash":"f8ef9858cc46c557b9dd59168d0465f2f11b9fd8","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/ajv/LICENSE","hash":"62f08d093123f54dbadafa64fde0392ae22a7846","modified":1513455711000},{"_id":"themes/tranquilpeak/node_modules/ajv/.tonic_example.js","hash":"4234fa9e49ee50602f9877e95bf46cdfaf4f618f","modified":1493406434000},{"_id":"themes/tranquilpeak/node_modules/ajv/package.json","hash":"af2b174a2dad83f6dad6c4461dd260bc1cc9535f","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/array-equal/.npmignore","hash":"72f049ce24b9ea4d151bab8d777c8e6cb35e4a25","modified":1398762919000},{"_id":"themes/tranquilpeak/node_modules/array-equal/LICENSE","hash":"b559c45c8d07f2679620d9771e68696ee3d5964b","modified":1398762928000},{"_id":"themes/tranquilpeak/node_modules/array-equal/README.md","hash":"a0dc601039e6014ad76404c61de273592a013705","modified":1398763016000},{"_id":"themes/tranquilpeak/node_modules/array-equal/index.js","hash":"8ff8d3fe9c77d8ddac6d2b6f6380bf38585515bb","modified":1398762902000},{"_id":"themes/tranquilpeak/node_modules/array-equal/component.json","hash":"8550fcbb9ff1c9dab0c0851f2e1385154c706078","modified":1398762967000},{"_id":"themes/tranquilpeak/node_modules/array-equal/package.json","hash":"5a04cbdb7355382664eac74d02f47991856dc64b","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/asn1/.npmignore","hash":"e4d8961c077c0e5648b0dcf3e885a607190674c2","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/asn1/.travis.yml","hash":"ccb3d08679457eddf37ce946ffab66f6440f70da","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/asn1/LICENSE","hash":"724e48cfc739674999ff82b4e49d76d5376818e9","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/asn1/README.md","hash":"71e6a47944ebaefe5d5357a7b6f46df9c389316f","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/asn1/package.json","hash":"a563f0397a5edc26d027c0b18c91d74ff0d7ffde","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/AUTHORS","hash":"d1d14de8fc8c21f9f86c2231df2531381f6a9194","modified":1453918488000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/CHANGES.md","hash":"b27cef2253f8ff8a83584bf1a55cec9d4dfbf517","modified":1453920717000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/README.md","hash":"d6771de291034391f0ec79175fff3428ed6d82b8","modified":1453920717000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/assert.js","hash":"8103ced007b61b3e45a420607de576faf7e1e0e4","modified":1453920717000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/package.json","hash":"c62cf63a31f6ec1edc154d37c116b7b3be2fe68c","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/.travis.yml","hash":"4119aeca7589bde9656cbec8fff0fc06c3ef3400","modified":1505148098000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/LICENSE","hash":"1673c3c0b15c89245a6330bd44d0673371334d15","modified":1505145562000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/index.js","hash":"807aa8e19c376fef94638cd849713c7baefd70dd","modified":1505141104000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/package.json","hash":"49d1e61ce9bbc5b7f1cbc99d5aab52f61291b8d3","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/readme.md","hash":"e331c5f64148cbf776af71b7644856103c8a2908","modified":1505148098000},{"_id":"themes/tranquilpeak/node_modules/asynckit/LICENSE","hash":"9171131798797e013e6c922921540694b1e3542d","modified":1463552412000},{"_id":"themes/tranquilpeak/node_modules/asynckit/README.md","hash":"030a12b4b2a9151538e9491d3a4f23dfe9848f32","modified":1465928899000},{"_id":"themes/tranquilpeak/node_modules/asynckit/bench.js","hash":"8dacd95640ad3d0ae47aebf5bd1ba4d83f6a1f1d","modified":1463686174000},{"_id":"themes/tranquilpeak/node_modules/asynckit/index.js","hash":"9201eacd2650642ff12a8af5fd1dbf7dc7848bee","modified":1463795005000},{"_id":"themes/tranquilpeak/node_modules/asynckit/package.json","hash":"93535a81a9eab1aa48faec647191dfa7d5d04167","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/asynckit/parallel.js","hash":"ecead062825e6790ce70c1879c745808c8ce7528","modified":1465665593000},{"_id":"themes/tranquilpeak/node_modules/asynckit/serial.js","hash":"9af5e746a0a9f8ba24926bc2fbb9786cf13f081b","modified":1465665583000},{"_id":"themes/tranquilpeak/node_modules/asynckit/serialOrdered.js","hash":"26f4cadf2685ee07af06e82803171847f74b9fb3","modified":1465665610000},{"_id":"themes/tranquilpeak/node_modules/asynckit/stream.js","hash":"c8bde32c80d2f3ecb33462a0aed86851c4c7e9e6","modified":1465859636000},{"_id":"themes/tranquilpeak/node_modules/aws-sign2/LICENSE","hash":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1492024121000},{"_id":"themes/tranquilpeak/node_modules/aws-sign2/README.md","hash":"5e8e0e7c811b1f319c0e94ff08f38ecf4896e3c9","modified":1492024121000},{"_id":"themes/tranquilpeak/node_modules/aws-sign2/index.js","hash":"fb21f9e87275ef41a4901fa4bf0680d1bf0f0605","modified":1492024121000},{"_id":"themes/tranquilpeak/node_modules/aws-sign2/package.json","hash":"e76fa5cefd955035943a1cc0e23963255264d0f3","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/aws4/.travis.yml","hash":"73c40717fe695caf839f2bc871320837b3c2abae","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/aws4/LICENSE","hash":"9ba903f14c37d0ab0250a8e6920e7269bdc5b294","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/aws4/aws4.js","hash":"de5ce97ce8de1bd7587291df47c2ef31d0d5b0a5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/aws4/README.md","hash":"8c7e5705921c53e38919481a09ad2d545422648c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/aws4/lru.js","hash":"015965230b90e69906f66fca1792c4557336336f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/bcrypt-pbkdf/CONTRIBUTING.md","hash":"24ea74be3d4501f6e46a96dd11fed6c1c36d6c56","modified":1530232429000},{"_id":"themes/tranquilpeak/node_modules/aws4/package.json","hash":"b0ee18f965b8828fe9211154b405d164602cd0ff","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/bcrypt-pbkdf/LICENSE","hash":"fce141a52014eee7adc6585514d55c6330db0307","modified":1530232429000},{"_id":"themes/tranquilpeak/node_modules/bcrypt-pbkdf/package.json","hash":"a3ec73fb86203ca13ad7947790cb0ead28428bda","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/bluebird/LICENSE","hash":"59002342e7a5468c5b5b9ae6fb4eb41bbc7f33ae","modified":1488577289000},{"_id":"themes/tranquilpeak/node_modules/bcrypt-pbkdf/README.md","hash":"1c4e671f5ead73535ed536bb37f81a70d43bef58","modified":1530232429000},{"_id":"themes/tranquilpeak/node_modules/bluebird/changelog.md","hash":"bc6df7caea3b83fa361fa0a96c9b34c09465a93a","modified":1472620968000},{"_id":"themes/tranquilpeak/node_modules/bluebird/package.json","hash":"3f8bdcdb4466cfbe07f6595d4e1220a104673218","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/browser-process-hrtime/README.md","hash":"2cce6cc05bf2a57be0791fd82beb99c4297a7d60","modified":1438731271000},{"_id":"themes/tranquilpeak/node_modules/browser-process-hrtime/index.js","hash":"71c850ab1e53a10d05445d59f5816831463e5d61","modified":1438733861000},{"_id":"themes/tranquilpeak/node_modules/browser-process-hrtime/.npmignore","hash":"1f1020cd1355a5a633d0e14ac0f1a87c3632f107","modified":1438731271000},{"_id":"themes/tranquilpeak/node_modules/browser-process-hrtime/package.json","hash":"d43a0e5b3ace7ca8871a274a918998a21f98f837","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/camel-case/camel-case.d.ts","hash":"30e10eb66736cbb97c906af8b2ceb7b4755e6259","modified":1465681882000},{"_id":"themes/tranquilpeak/node_modules/camel-case/LICENSE","hash":"3a7f886b632d2197676a40020d354e84b7860604","modified":1465681882000},{"_id":"themes/tranquilpeak/node_modules/camel-case/package.json","hash":"bfc7c8f31e2125a9d464023875130c64d7d3df3e","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/camel-case/camel-case.js","hash":"6828b41a59ec548d513d5a7f1c91f7e683f926ce","modified":1465692324000},{"_id":"themes/tranquilpeak/node_modules/caseless/LICENSE","hash":"48f9e0a4c07f36c07d47962212fe022d0417c90f","modified":1435268329000},{"_id":"themes/tranquilpeak/node_modules/caseless/README.md","hash":"5770b9496fb480f7c403b6c38759a27d6170e882","modified":1414608769000},{"_id":"themes/tranquilpeak/node_modules/caseless/index.js","hash":"49a6a654b1bdc4e119895edc96a1ee4bb519a38c","modified":1485466642000},{"_id":"themes/tranquilpeak/node_modules/caseless/package.json","hash":"08fbe33ba87419dae4a1518d5da8ffa1ca8b12f7","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/caseless/test.js","hash":"9cbbc1b43bd3b86518885b2c82f0d8c302e68ed9","modified":1485466642000},{"_id":"themes/tranquilpeak/node_modules/co/History.md","hash":"96b4f024ec3a3b94fa0ba3b71e2218e755b9713e","modified":1436480979000},{"_id":"themes/tranquilpeak/node_modules/co/LICENSE","hash":"286d14ca126cee1bc2678589c3d5b21b88dbddf2","modified":1436480846000},{"_id":"themes/tranquilpeak/node_modules/co/index.js","hash":"1f5838a875ef7d84f39ce4563028ce1033a04c0d","modified":1436480946000},{"_id":"themes/tranquilpeak/node_modules/co/package.json","hash":"2a46a0075e17eb2c77d83e031512babd80dd31f9","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/co/Readme.md","hash":"c0bb1b2618735c6191d24763bed0ee1c8415ec23","modified":1436480846000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/License","hash":"04e7b761eee5270ea8914303516852faf990394b","modified":1518224813000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/package.json","hash":"c74961f1b34207b44e7428fec9d6169edcebbf6f","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/Readme.md","hash":"0e4384a6edea7b3a580ffa5b32236b7f8b251834","modified":1518224813000},{"_id":"themes/tranquilpeak/node_modules/content-type-parser/LICENSE.txt","hash":"75a7010f177dd65249a42042aa44e893faa9dc07","modified":1508716730000},{"_id":"themes/tranquilpeak/node_modules/content-type-parser/package.json","hash":"2591648e170c29432b724c377cf9f9f369961fe9","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/content-type-parser/README.md","hash":"0ba4728c1fcf2cd596378f85a2f2586e84fa415f","modified":1476566611000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/LICENSE","hash":"a95471326a84657b0e164f84e1285685f63011e0","modified":1447979068000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/README.md","hash":"d4987293f1078d937454a14a5ca6f386d227679d","modified":1447978999000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/package.json","hash":"4208b848b09a398c3b695fccc71cb03c64a6ef86","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/float.patch","hash":"d7f073ceb05c6f6dd1bb852fc00f5379a3e41301","modified":1447978999000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/test.js","hash":"2837ee1d57f385943ba5ccc7fd0ec4ed1cb8cfdd","modified":1447979358000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/LICENSE","hash":"45c1476739d0c028c845b2c90c401c3a4435de04","modified":1474803762000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/index.js","hash":"db81cb7b0c65f5b0dfe1b81f2217a6277bc4822a","modified":1474803762000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/package.json","hash":"24679bf67bf81cc5a698e0451e6badb36b05d01f","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/README.md","hash":"179da75e34197ceca8bc1b79ce95c9ab7f13c43c","modified":1474803762000},{"_id":"themes/tranquilpeak/node_modules/cssom/LICENSE.txt","hash":"efc03835c50d60940a3c8cdc0f2f3e3ea1215905","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/README.mdown","hash":"710822e0b75faf3387ebc35b9de7ea69cd75cefb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/package.json","hash":"31f6a7755c1e60bf22fc69903f9eb44653b0951a","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/.npmignore","hash":"8e7fecc234961702a6a7b86f92385b0721e51af0","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/MIT-LICENSE.txt","hash":"b55f34bb984c002888a386201ed49df4b3514750","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/package.json","hash":"ed1b7ac7d9bc4a934c9e53cba0335ccf9a31174f","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/README.md","hash":"5c4db2fa72c331ca976db638c9e7351eeaf7badf","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/dashdash/CHANGES.md","hash":"d4c1434f92782308105f24a11c0bdb076127be5e","modified":1479854012000},{"_id":"themes/tranquilpeak/node_modules/dashdash/LICENSE.txt","hash":"427497f949741f3f7e72ea1e62749908e9c4f5b9","modified":1451581401000},{"_id":"themes/tranquilpeak/node_modules/dashdash/package.json","hash":"4dbecb650bd5e78908181de54f29b6f8dd0a33c0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/deep-is/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1408910480000},{"_id":"themes/tranquilpeak/node_modules/deep-is/.travis.yml","hash":"40a8dc83132dd64dbfe1294f6355f9a88edd52ef","modified":1408910480000},{"_id":"themes/tranquilpeak/node_modules/deep-is/LICENSE","hash":"4c5d1ca79ad3d544442c39f03be407dfa4788fd7","modified":1408910573000},{"_id":"themes/tranquilpeak/node_modules/deep-is/README.markdown","hash":"d534a29d57b10d8ab4f60aa900de96fa94f7e4d0","modified":1408910573000},{"_id":"themes/tranquilpeak/node_modules/deep-is/index.js","hash":"51b4b7a1952ea939b7ac8cd5fd6ce6b62fa52f7a","modified":1408910480000},{"_id":"themes/tranquilpeak/node_modules/deep-is/package.json","hash":"72fd925aebd9a0d46a3c5ff0459bd4554052a0fa","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/.npmignore","hash":"4e1243bd22c66e76c2ba9eddc1f91394e57f9f83","modified":1430430799000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/License","hash":"04e7b761eee5270ea8914303516852faf990394b","modified":1430160212000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/Makefile","hash":"1d88cf18c0fef56e91425a086590e31271a7c4d5","modified":1430160212000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/Readme.md","hash":"21db9b7ec97b7028a031a18867aab00575b09850","modified":1430160212000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/package.json","hash":"9e85396d8567edb633f5b619e4ae6381f1cef26d","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/domexception/LICENSE.txt","hash":"448c397e2b36e3868c7085b6765b5336dd0b3ae0","modified":1502679486000},{"_id":"themes/tranquilpeak/node_modules/domexception/README.md","hash":"14c3c12cb46133330f7ff81854dae782c3acd533","modified":1502680048000},{"_id":"themes/tranquilpeak/node_modules/domexception/package.json","hash":"a18935a5a2ab7f14e656f42f506d55f7c7be75ab","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/.npmignore","hash":"4eb6d3215a6bbe8de1dd28113d86860c61a5531e","modified":1393978405000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/LICENSE","hash":"d9dddd103d636dbaa178cd222de612fd923f62da","modified":1393978405000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/index.js","hash":"13c052ad0b0507a4203d5d1274fdfa049a6c1339","modified":1448288282000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/package.json","hash":"826498bb391942d597c3d7408a46e385508a1eca","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/README.md","hash":"97cb1bdec48ebb5e46e64fc5441c79d3d38a3c82","modified":1408853444000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/test.js","hash":"9709f584f556ceb8acaa0fd746029dcb58390eb4","modified":1408853485000},{"_id":"themes/tranquilpeak/node_modules/escodegen/LICENSE.BSD","hash":"e74ff75ee8a455b69f308ecaeef9804e6c9c8fd8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/escodegen/README.md","hash":"9e1a4d32be20da5764956042ea921e6365c0efcd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/dashdash/README.md","hash":"e40739349732594d5d96438bd27aa444915d3f79","modified":1453144686000},{"_id":"themes/tranquilpeak/node_modules/bcrypt-pbkdf/index.js","hash":"4be9d75ea7a7a9c91fe8436f52ebd113fdc674f3","modified":1530232429000},{"_id":"themes/tranquilpeak/node_modules/bluebird/README.md","hash":"4e1269bd88d06bc10978da978e28e4b2276a2450","modified":1493061424000},{"_id":"themes/tranquilpeak/node_modules/esprima/ChangeLog","hash":"1267c969559f329291049abe0e65be1454093bb9","modified":1482462906000},{"_id":"themes/tranquilpeak/node_modules/escodegen/package.json","hash":"6d9065a7c40eea51eef9c6bc2cdffc540fc12c4e","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/esprima/LICENSE.BSD","hash":"26dd70b52c7c7111ca8913fc0bc240dc28ca15c0","modified":1481604347000},{"_id":"themes/tranquilpeak/node_modules/estraverse/.babelrc","hash":"a743adcbd00acf0782a92921d872e9d93052df82","modified":1457386039000},{"_id":"themes/tranquilpeak/node_modules/esprima/package.json","hash":"9e611b7c7d5b0147100237b9d6517b151b6710b1","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/estraverse/.jshintrc","hash":"fa79fa14ae122f25b9af0bc7295c50bda9d31950","modified":1457386039000},{"_id":"themes/tranquilpeak/node_modules/estraverse/LICENSE.BSD","hash":"e74ff75ee8a455b69f308ecaeef9804e6c9c8fd8","modified":1457386039000},{"_id":"themes/tranquilpeak/node_modules/estraverse/gulpfile.js","hash":"1b430ab8fe6438e61ac5f3585a9243b2db260748","modified":1457386039000},{"_id":"themes/tranquilpeak/node_modules/estraverse/package.json","hash":"6fd7f3ab46ec7ec57f2ac72ff1cd93da5d7043e6","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/esutils/LICENSE.BSD","hash":"e74ff75ee8a455b69f308ecaeef9804e6c9c8fd8","modified":1403624915000},{"_id":"themes/tranquilpeak/node_modules/esutils/README.md","hash":"969462acf211c83f3f10b9ae323b330f796959e3","modified":1426086716000},{"_id":"themes/tranquilpeak/node_modules/esutils/package.json","hash":"048e22b782b4bb841dbbead9b1474f74ea83a737","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/extend/.eslintrc","hash":"c952dbfd41704936c0d02e3d130710c6addf8ed8","modified":1493352097000},{"_id":"themes/tranquilpeak/node_modules/extend/.jscs.json","hash":"0298367603c396b3e1509cebc137fe3878468815","modified":1493352100000},{"_id":"themes/tranquilpeak/node_modules/extend/.npmignore","hash":"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3","modified":1435780828000},{"_id":"themes/tranquilpeak/node_modules/extend/.travis.yml","hash":"bd5e57098ba697b7e9266f333498b013a57dc04b","modified":1493352185000},{"_id":"themes/tranquilpeak/node_modules/extend/CHANGELOG.md","hash":"f2282029a70955bb79b3c3a9c92d6bafaeb100fd","modified":1493352287000},{"_id":"themes/tranquilpeak/node_modules/extend/LICENSE","hash":"bed93ae1abcd71e5d1c9c363595dd24bb1b9016c","modified":1435780828000},{"_id":"themes/tranquilpeak/node_modules/extend/component.json","hash":"07af5d609ee23647ce3238a0e1322c35b385fc45","modified":1435783532000},{"_id":"themes/tranquilpeak/node_modules/extend/README.md","hash":"25aa925ed3ef4f533976a45cece2cc8159993783","modified":1453840681000},{"_id":"themes/tranquilpeak/node_modules/extend/index.js","hash":"20ee480421ab46f05aa6b92b2111cecc53d273a7","modified":1493093625000},{"_id":"themes/tranquilpeak/node_modules/extend/package.json","hash":"5dd37e2ba07baded44f786091b83de448fc3e820","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/.npmignore","hash":"f6f25c76813204f78147a50d49d3b6a9a4282201","modified":1416529581000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/LICENSE","hash":"772b18147b3bf826978f984f8e01562a9e3cc254","modified":1416529581000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/Makefile.targ","hash":"f66e38899fc918aac830c478ae402c66d8793bc7","modified":1416529581000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/Makefile","hash":"49da84d8f9e1db5727d0a881ef0382e45f26492d","modified":1425686217000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/README.md","hash":"4226a704e2766b5069bb6636555517ed866be6f1","modified":1425686198000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/jsl.node.conf","hash":"7197578b829d6c93d8356bf114c7f3d26722ec0b","modified":1416529581000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/package.json","hash":"0d9e5fada63dc3e5263f0594aa43229b2f456d8d","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/fast-deep-equal/LICENSE","hash":"44bdc0699c385cdf423dbadea7355ff72e5adc36","modified":1519590513000},{"_id":"themes/tranquilpeak/node_modules/fast-deep-equal/README.md","hash":"e69e5e582b327e7a080ae52872ea4cdd6b5b36ad","modified":1519590513000},{"_id":"themes/tranquilpeak/node_modules/fast-deep-equal/index.js","hash":"d5291144137272dee9afcb913050f343746d91c0","modified":1519590680000},{"_id":"themes/tranquilpeak/node_modules/fast-deep-equal/package.json","hash":"5560ec34aad4ea8972ba8524b9ef4361a3b91875","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/.eslintrc.yml","hash":"e557873fb13e67775c12f025f7254f12547784bc","modified":1508841234000},{"_id":"themes/tranquilpeak/node_modules/fast-deep-equal/index.d.ts","hash":"c2f05139dccaac36615727a10d7b0b31082a0e98","modified":1519591012000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/.travis.yml","hash":"4c08200f6602d0fb52c7d3659131401a78f4e34a","modified":1508840229000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/.npmignore","hash":"079203ff3bee95cc2b071f1e8b15fec2111f1930","modified":1508866028000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1508836326000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/README.md","hash":"994000bfa12b63fed32d4c13e91f158097d7f888","modified":1508866787000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/index.js","hash":"81aef05bcfffb0f8804dc9684dd6283f0024bd2d","modified":1508865839000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/package.json","hash":"fe53b1c5e88a4fc944f4ef588fdd1cdcbaf73e42","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/fast-levenshtein/LICENSE.md","hash":"f4d345fe51b02cb9554b5abf0456a9d3dd3c33b4","modified":1417834589000},{"_id":"themes/tranquilpeak/node_modules/fast-levenshtein/README.md","hash":"6de838e59675b67da149927d714a3861b9d90210","modified":1473223877000},{"_id":"themes/tranquilpeak/node_modules/fast-levenshtein/package.json","hash":"98912d943a8990a1a80fd4f0920c278847a50a9d","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/fast-levenshtein/levenshtein.js","hash":"bb60393cef66503d477e1f5e4a4ce3fa86924757","modified":1482873174000},{"_id":"themes/tranquilpeak/node_modules/forever-agent/index.js","hash":"a96917d5912eef5a8ed12a4b1f3a41400eac80d1","modified":1428426146000},{"_id":"themes/tranquilpeak/node_modules/forever-agent/README.md","hash":"fd2b1d08b55284aa2abc72d199e3c487744a0c31","modified":1426938522000},{"_id":"themes/tranquilpeak/node_modules/forever-agent/LICENSE","hash":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1426938522000},{"_id":"themes/tranquilpeak/node_modules/forever-agent/package.json","hash":"0fba54cd6654d2aa7a40503bb5f15fae11b2163e","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/form-data/License","hash":"1d11381521bdc7e7df9bb1d7bf85341ffca266d9","modified":1354688992000},{"_id":"themes/tranquilpeak/node_modules/form-data/README.md","hash":"b4949ff4469d4325a83d16ba687fdc8c11cfd305","modified":1518568341000},{"_id":"themes/tranquilpeak/node_modules/form-data/package.json","hash":"30c59381f8a26fbbfca14fd4de229d1e182b2f31","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/form-data/README.md.bak","hash":"91dbdbd25f0e985599bc346b478eacc1a4f05c51","modified":1518546191000},{"_id":"themes/tranquilpeak/node_modules/getpass/.npmignore","hash":"013de6e5745b61fd07777e2bff18d3d44c11c0a1","modified":1461270348000},{"_id":"themes/tranquilpeak/node_modules/getpass/LICENSE","hash":"10b8ac49ffb8f7cc8bdca9303209a1b3b2f3587d","modified":1493163595000},{"_id":"themes/tranquilpeak/node_modules/getpass/.travis.yml","hash":"4f7f46c996ede594c41fefbe08df3248206d895d","modified":1461270363000},{"_id":"themes/tranquilpeak/node_modules/getpass/README.md","hash":"72706fc471e2713656e5dbc049a4c1a2c418b2e7","modified":1461275519000},{"_id":"themes/tranquilpeak/node_modules/getpass/package.json","hash":"f998677e690785dea13e6401c31f622c93ec491e","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/har-schema/LICENSE","hash":"57fc502455231f1d10c4d2e67c261f0fc56bb17d","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/README.md","hash":"ade485d13a06d1d75c93216ed9276c86a9b4ace0","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/package.json","hash":"7030a7e6abbb5bbaf7caf2e867b91a7a9f6d3a85","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/har-validator/README.md","hash":"39ed1b1294fbb5a8fddb7c934804a4d7a1fa4bb7","modified":1494776680000},{"_id":"themes/tranquilpeak/node_modules/har-validator/LICENSE","hash":"57fc502455231f1d10c4d2e67c261f0fc56bb17d","modified":1494776680000},{"_id":"themes/tranquilpeak/node_modules/har-validator/package.json","hash":"9cac1d02322fb6a34e5e02e8c685f38c62e164e3","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/.eslintrc","hash":"2c4a55a386408308d637f658a4b2f5e82f4e58db","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/.eslintignore","hash":"0abf1c392f32bdf193fe824ead96926f550a85ae","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/.jscsrc","hash":"5f410f9c9caedfdd1eabb1571de1f8f9014eefb6","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/.npmignore","hash":"8e028ac8e9925655e0f8f3df33ed78df98334074","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/CHANGELOG.md","hash":"aa50cb035f402b4e58e4053ef5c541601153fc3f","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/LICENSE","hash":"fecd013bdadc9ead2732027f06bf8fc19761efcb","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/highlight_alias.json","hash":"1b97a5e9c73b876d73375cf36106e74b89dea155","modified":1513837686000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/README.md","hash":"65707c36c6bd911b9e4a7b07cb5603954faf5afd","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/package.json","hash":"23ccffa90ee387bcacf8013d604c7cd947acb73f","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/LICENSE","hash":"cd25196630fe891662ad77810f0f6dee5bc85ddc","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/esprima/README.md","hash":"53a9b2c2206e6660146b160eb6f56454178c62c2","modified":1482462891000},{"_id":"themes/tranquilpeak/node_modules/estraverse/estraverse.js","hash":"7d1e064e097dd4f1921f0e65acf515a570585556","modified":1457646267000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/yarn.lock","hash":"f7ffba7f02541ecdb34c63ba45e43754e0504d10","modified":1513819544000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/package.json","hash":"0f5b38252b530567d7047c6e18ce4602996a1e91","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/html-encoding-sniffer/package.json","hash":"f73e351c01727544eee1df550048e3005afe61c8","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/html-entities/LICENSE","hash":"f10f3a5e9b16a526fbf6abc4be406e6f07ecad93","modified":1408403203000},{"_id":"themes/tranquilpeak/node_modules/html-encoding-sniffer/README.md","hash":"7898e6a8634c538af0d21edc9f2cb5d4f6a632b1","modified":1476587149000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/README.md","hash":"087887d419ba2c138058e6fac56c24d838bb4114","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/html-entities/index.js","hash":"eb15b4fed782c7736a02ad14c97901080ab85f44","modified":1421057245000},{"_id":"themes/tranquilpeak/node_modules/html-entities/package.json","hash":"7a75e7d0d778d5602488f20d84597f3f0f001fe0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/http-signature/.npmignore","hash":"8992dfba5fdf2ba23c1da7e57021d6b1274f2456","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/html-entities/README.md","hash":"15dea62352c313d8eee8b0069a5b0a8a9294e5c6","modified":1493034265000},{"_id":"themes/tranquilpeak/node_modules/http-signature/.dir-locals.el","hash":"bda1c75ba87348876340908be6799d6ac3a4b807","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/http-signature/README.md","hash":"5847fa2ec86a2ca744776acd5528fdfd6c3377fc","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/http-signature/CHANGES.md","hash":"59a2ab5cc1ac7f7691560038beb2349e628eeacc","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/http-signature/LICENSE","hash":"10b8ac49ffb8f7cc8bdca9303209a1b3b2f3587d","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/http-signature/package.json","hash":"3f40eb81ccecd1ccca43cb4c4cd17a6e243043de","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/.travis.yml","hash":"1c523d707b2938ebadfba5abe992ba63cdbe4b27","modified":1497366543000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/.npmignore","hash":"5cfbed04fc2a98e6586bb158d9a735881f04e40d","modified":1411054178000},{"_id":"themes/tranquilpeak/node_modules/http-signature/http_signing.md","hash":"945eb22661d1c43e547371ac8d354a4b761eab09","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/Changelog.md","hash":"f3ed6c854f72907cecdaf0ee30df3a1c74cbae44","modified":1505013341000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/LICENSE","hash":"4f3ca49a793f6bb8465a3731fd965a128757b8ce","modified":1320857905000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/package.json","hash":"aeac173e80913bb0075bd2991435b4fac30d1eee","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/README.md","hash":"ef8bf42dd8c3230521dce8a7ea32bddf7ff87902","modified":1492765319000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/LICENSE.md","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1401649683000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/package.json","hash":"23d7e866af530b804d8d28d2e3b1a90ce74c3d3d","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/index.js","hash":"b7ff45ac41fdcb4bb75dd771d6cb9bfbd129e56d","modified":1431824601000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/README.md","hash":"8f33b0dd445cfa2ab6712dee34df082f480a5a76","modified":1401649785000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/test.js","hash":"c3aa563061f8d086aaf066b389b0e811444e3913","modified":1401649839000},{"_id":"themes/tranquilpeak/node_modules/isexe/index.js","hash":"9348ece80fd6208f0b8740d43cd652db4a5f06e6","modified":1490229856000},{"_id":"themes/tranquilpeak/node_modules/isexe/.npmignore","hash":"5c82cb364ccc42139031fc6519c138ef81f2df26","modified":1453008305000},{"_id":"themes/tranquilpeak/node_modules/isexe/mode.js","hash":"5f33b53cc6b89f9ebe2ebd1dcfeb434cd96a3192","modified":1490230193000},{"_id":"themes/tranquilpeak/node_modules/isexe/package.json","hash":"91747285e9028c9fd5970e518b5d8a739be7e5f0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/isexe/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1454992766000},{"_id":"themes/tranquilpeak/node_modules/isexe/README.md","hash":"5245f0db9a9f95b37f4cac50e75dc66e2ea8e1a5","modified":1490230327000},{"_id":"themes/tranquilpeak/node_modules/isexe/windows.js","hash":"1a6d0c635f67223d5e3890068f32f2da46e45151","modified":1490229931000},{"_id":"themes/tranquilpeak/node_modules/isstream/.jshintrc","hash":"61590c8e7282c327fe7f2987a3c5a7514446561d","modified":1396828238000},{"_id":"themes/tranquilpeak/node_modules/isstream/.npmignore","hash":"ecb39380a39d86a6861344abf98891016990e2c5","modified":1396757852000},{"_id":"themes/tranquilpeak/node_modules/isstream/isstream.js","hash":"db3d8708d100bdb66fd33e1eeb6d2b232016934b","modified":1396827239000},{"_id":"themes/tranquilpeak/node_modules/isstream/.travis.yml","hash":"890d1669abc18b7c0541df1483b9f27c60063712","modified":1396829306000},{"_id":"themes/tranquilpeak/node_modules/isstream/LICENSE.md","hash":"3fc5bd6825a9d8fd53c0cd8de0bd16d1c1a7f37a","modified":1425687271000},{"_id":"themes/tranquilpeak/node_modules/isstream/package.json","hash":"18ac60e10ea1b8f6fb1e3564d2f1b95871193772","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/isstream/README.md","hash":"0563c8dd8178c335de8d882a14c0408ba179789b","modified":1425687291000},{"_id":"themes/tranquilpeak/node_modules/isstream/test.js","hash":"3c3c171729a3738bd73b12d311265c7fcfb2a9fa","modified":1396831146000},{"_id":"themes/tranquilpeak/node_modules/jquery/README.md","hash":"6dcb1f8f5ec099574814b37adea7e64952d18790","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/LICENSE.txt","hash":"06aa223caa312d21c3e406cc25a763621c859255","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/package.json","hash":"a9e3f53bd0c61967ca3ab08dd937e059eee0a54d","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/jsbn/.npmignore","hash":"58caf761f07e5df9cdc21f7f19f0670fde41089b","modified":1457730283000},{"_id":"themes/tranquilpeak/node_modules/jquery/bower.json","hash":"000530ba7ab5ff636b103baf460e5fb7035ee5d0","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsbn/LICENSE","hash":"d9b1b910dfea689402ffdb75f5467ec263f8480d","modified":1486885358000},{"_id":"themes/tranquilpeak/node_modules/jsbn/README.md","hash":"6db673c03e15b4e75f95e25ba87177799511ad0c","modified":1486885358000},{"_id":"themes/tranquilpeak/node_modules/jsbn/example.html","hash":"ec1f94b093e0f1457642f8647294be35d4af033f","modified":1486885358000},{"_id":"themes/tranquilpeak/node_modules/jquery/AUTHORS.txt","hash":"b63aa163b6fb81b3fc5f3a3a1a01cab80a004227","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsbn/example.js","hash":"ba7f33b1196eca41a007177372fe237ac7a85c1b","modified":1486885358000},{"_id":"themes/tranquilpeak/node_modules/jsbn/package.json","hash":"b62e9a0a270e40173fa7034a08eea65c5f07ccd0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/jsdom/LICENSE.txt","hash":"0e478f455cef14d7d2ff25d4d620a4a9233f3bcf","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/html-encoding-sniffer/LICENSE.txt","hash":"75a7010f177dd65249a42042aa44e893faa9dc07","modified":1508717716000},{"_id":"themes/tranquilpeak/node_modules/jsdom/package.json","hash":"938027b20656d9a872d2af84098ba5d673f1b245","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/jsbn/index.js","hash":"0a4334c7b70f87e13dbd14b0938106ac0d6beebb","modified":1486886477000},{"_id":"themes/tranquilpeak/node_modules/jsdom/README.md","hash":"279c213f05a56c174ff44317366c267aa1a9ecbf","modified":1511132198000},{"_id":"themes/tranquilpeak/node_modules/json-schema/README.md","hash":"9065e9ab354ce910706716a42584222674fe1470","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/package.json","hash":"f809f801ff6582a5c07c6d2bb5dcb6c34028bf7f","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/.eslintrc.yml","hash":"b80233178c09213e16f8daace837fb9581ec401b","modified":1496692552000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-zyp-json-schema-03.xml","hash":"da15453583b019a448fae4b857fe29a583bc1a38","modified":1307480092000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/.travis.yml","hash":"4c08200f6602d0fb52c7d3659131401a78f4e34a","modified":1496691900000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/LICENSE","hash":"44bdc0699c385cdf423dbadea7355ff72e5adc36","modified":1496601632000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/index.js","hash":"924bc6421973702598d91d20be93b1710089bd67","modified":1497479051000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/README.md","hash":"b68c4c3a40fee8a5913e0ea1087f0ddec6b036c2","modified":1497557677000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/package.json","hash":"927138da89fbd784c2886f41e99aae7851e70676","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/.npmignore","hash":"454bf1af6e2932c514862b67b108ef4ad00d7c1a","modified":1431999690000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/CHANGELOG.md","hash":"d9b3407ce2eef8d2dadc6b2839a8b16b783eef47","modified":1431999690000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1431999719000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/Makefile","hash":"589819e00a30573f50fa4a11ddb22fb45b372a65","modified":1431999690000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/package.json","hash":"79b57d29883540dd06071a9ac77fc8545409f75a","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/stringify.js","hash":"b36a3a8d0f794fae13dc8e1c93bd4a8cae311bf2","modified":1431999708000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/README.md","hash":"a2972dd72d8ec7c8b1f229f7732f911ed721dbca","modified":1431999690000},{"_id":"themes/tranquilpeak/node_modules/jsprim/CHANGES.md","hash":"671e4e43c6ee6fc2d711052a7933ebd3cd29a46e","modified":1501690556000},{"_id":"themes/tranquilpeak/node_modules/jsprim/CONTRIBUTING.md","hash":"9147b55a7f13fa4e1db7fe3f83d4415be389ab8a","modified":1501690329000},{"_id":"themes/tranquilpeak/node_modules/jsprim/LICENSE","hash":"772b18147b3bf826978f984f8e01562a9e3cc254","modified":1416249172000},{"_id":"themes/tranquilpeak/node_modules/jsprim/package.json","hash":"1bb84f03e97f92e7d1fbf3d6c42215306adf360f","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/left-pad/.travis.yml","hash":"3fb09bd2b978facd0b47758aafec148eaadcce97","modified":1462094057000},{"_id":"themes/tranquilpeak/node_modules/jsprim/README.md","hash":"9274fef622af8e283f2f1d023a5b17fa2f7623c4","modified":1501690357000},{"_id":"themes/tranquilpeak/node_modules/left-pad/COPYING","hash":"636a16f50d5a5de0a831bdb880352e746866564f","modified":1474764498000},{"_id":"themes/tranquilpeak/node_modules/left-pad/README.md","hash":"ed34c5dc3cff5274c84f28d1c223a030ee01ee91","modified":1523236181000},{"_id":"themes/tranquilpeak/node_modules/left-pad/index.js","hash":"46f07b2a72595f36fd96e58d5f5d5501daaeadc9","modified":1523236181000},{"_id":"themes/tranquilpeak/node_modules/left-pad/package.json","hash":"9882f4ea0d8fbb0b662335de1925e6d6b7c17f2c","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/left-pad/index.d.ts","hash":"e00fd965fdf859d2f463f184425e61c532c69b06","modified":1523236181000},{"_id":"themes/tranquilpeak/node_modules/left-pad/test.js","hash":"d02287b78b0efcf360b91d416eccf3e5c3732e60","modified":1523236181000},{"_id":"themes/tranquilpeak/node_modules/levn/LICENSE","hash":"7bc795bf398cfa51e99e85dc51931c3b0d1b5a79","modified":1428793638000},{"_id":"themes/tranquilpeak/node_modules/levn/package.json","hash":"7bf13a51648e76fa5e7333567924fee97f988e41","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/levn/README.md","hash":"2cf8339d3d22e4da8301490886198be36bc5df7f","modified":1451368360000},{"_id":"themes/tranquilpeak/node_modules/lodash.sortby/LICENSE","hash":"fc4de79d3e95696f11dbec64b0f99d421deadd30","modified":1471109624000},{"_id":"themes/tranquilpeak/node_modules/lodash.sortby/README.md","hash":"76100469e7c80ccc65b7ef61e7535202859c6fed","modified":1471109685000},{"_id":"themes/tranquilpeak/node_modules/lodash.sortby/package.json","hash":"a8f664d796733b575a3882f1d52aa41515f5794b","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/lower-case/LICENSE","hash":"3a7f886b632d2197676a40020d354e84b7860604","modified":1487963775000},{"_id":"themes/tranquilpeak/node_modules/lower-case/README.md","hash":"69ed872fccaa2ae235890bf01958115a178ca713","modified":1487963775000},{"_id":"themes/tranquilpeak/node_modules/lower-case/lower-case.js","hash":"6c8e4acdd39af940362a63b3fdd40d98bce5b073","modified":1487963775000},{"_id":"themes/tranquilpeak/node_modules/lower-case/package.json","hash":"3ada7b1015176f8631325f280ddd41fa1000c768","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/lower-case/lower-case.d.ts","hash":"f6cc8841b3395a746a5984327edb3c6411302b11","modified":1487963775000},{"_id":"themes/tranquilpeak/node_modules/lru-cache/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1431999527000},{"_id":"themes/tranquilpeak/node_modules/lru-cache/index.js","hash":"5d1ecc9cd71a0e10af4e592bec02f943e1cda3b6","modified":1525734908000},{"_id":"themes/tranquilpeak/node_modules/lru-cache/package.json","hash":"bba27a82d4e80971e904872a9d8a02d42a205aea","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/lru-cache/README.md","hash":"23e985d22bf54841a67846263f0da11cf315e615","modified":1520531848000},{"_id":"themes/tranquilpeak/node_modules/mime-db/HISTORY.md","hash":"9fa66e4169dd8767d43495555db0fe11f88e2fdd","modified":1518757257000},{"_id":"themes/tranquilpeak/node_modules/mime-db/LICENSE","hash":"b559c45c8d07f2679620d9771e68696ee3d5964b","modified":1502153377000},{"_id":"themes/tranquilpeak/node_modules/mime-db/index.js","hash":"31180f8d0ae079b1bee7ee03e77ea5323583eb06","modified":1502153377000},{"_id":"themes/tranquilpeak/node_modules/mime-db/package.json","hash":"16110834a427a9dad92b170ab7449d44bb9932de","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/mime-db/README.md","hash":"7a1b162a44f0fdb98b186e4ade693b4668bd39e3","modified":1511971573000},{"_id":"themes/tranquilpeak/node_modules/mime-types/HISTORY.md","hash":"cde432c1ca703b4d0782e98491fc6249d6a6554d","modified":1518801331000},{"_id":"themes/tranquilpeak/node_modules/mime-types/index.js","hash":"8d1f07ae6192c4dd6bc08a9247a91af4a0a51eca","modified":1518797976000},{"_id":"themes/tranquilpeak/node_modules/mime-types/LICENSE","hash":"f027af3e61af3880fd7f7b8ba9452a85dd215738","modified":1502805458000},{"_id":"themes/tranquilpeak/node_modules/mime-types/README.md","hash":"3f25621607960c6e73fc4f9b8bf97327e210a9f2","modified":1518797976000},{"_id":"themes/tranquilpeak/node_modules/mime-types/package.json","hash":"66fb4b9e1e2d41f872fdb48e0d70b5b861e00019","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/no-case/LICENSE","hash":"3a7f886b632d2197676a40020d354e84b7860604","modified":1465675303000},{"_id":"themes/tranquilpeak/node_modules/no-case/README.md","hash":"c45012f78b5fb4f4423a5e087603003ab34d43b4","modified":1504890971000},{"_id":"themes/tranquilpeak/node_modules/no-case/no-case.js","hash":"9c9bed3c4f4bd9cd9c74b8384e17170677e7cdc3","modified":1483587492000},{"_id":"themes/tranquilpeak/node_modules/no-case/package.json","hash":"f38c1d674cffe2246d46759caac4b3e922d9ab7b","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/no-case/no-case.d.ts","hash":"fd30ef64614965e6d611b05aaa579e1abb2bfa70","modified":1465680417000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/LICENSE","hash":"98869c580f9a8dc617c9fdf0597bc3603a1e6424","modified":1520285925000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/README.md","hash":"a8b6323bd0cfa96bd0731e9e86e7c854aa542bd9","modified":1507750895000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/package.json","hash":"e63800abbfcbd4ed6533f3843596d5f16b6cbef2","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/oauth-sign/index.js","hash":"fb3d1f2193e77b18089fad077d3133143811f554","modified":1462396251000},{"_id":"themes/tranquilpeak/node_modules/oauth-sign/LICENSE","hash":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1462396251000},{"_id":"themes/tranquilpeak/node_modules/oauth-sign/package.json","hash":"21740298ee4ad7f48e53a5e68002fd7b3987c3dd","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/optionator/CHANGELOG.md","hash":"b6a6e7e0fe3c69d30a6fe9f1bdbf50d384aafa55","modified":1474486945000},{"_id":"themes/tranquilpeak/node_modules/optionator/LICENSE","hash":"7bc795bf398cfa51e99e85dc51931c3b0d1b5a79","modified":1412127403000},{"_id":"themes/tranquilpeak/node_modules/oauth-sign/README.md","hash":"9f943ef5e4c1e530314bee287c8fd5b8addbc808","modified":1462396251000},{"_id":"themes/tranquilpeak/node_modules/optionator/README.md","hash":"46da3fe21be7078363c40d29daa7c01233be67a4","modified":1474486969000},{"_id":"themes/tranquilpeak/node_modules/optionator/package.json","hash":"dcebda60baefbb1c4bb23e3e29300029a72d79a4","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/parse5/LICENSE","hash":"fd7d460a4017bae630e249e3aef46c111a991ede","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/package.json","hash":"d1e59dd769a9410e0040b4751ee4e078afcc5e86","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/parse5/README.md","hash":"07776ad5fd5633838c0356d2c47c7976c644b6e1","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/performance-now/.npmignore","hash":"eaa3d84cb77d92a21b111fd1e37f53edc1ff9de0","modified":1483443554000},{"_id":"themes/tranquilpeak/node_modules/performance-now/.tm_properties","hash":"5c5e5a43a6bb68e67a644fc5726f90cfbe1218cc","modified":1483443554000},{"_id":"themes/tranquilpeak/node_modules/performance-now/.travis.yml","hash":"73c068ae853eb29403f51762ea2ba273e4f3ae0c","modified":1487513562000},{"_id":"themes/tranquilpeak/node_modules/performance-now/license.txt","hash":"7dabcaa93e54d0a7328e689b637f990f1ec73d8f","modified":1483718998000},{"_id":"themes/tranquilpeak/node_modules/performance-now/README.md","hash":"1d0d3237cc6e91952e690fdad3beef7ffebb94db","modified":1483850811000},{"_id":"themes/tranquilpeak/node_modules/performance-now/package.json","hash":"eff5da4f06c3b9d0804a4b807d78f13909b28631","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/pn/_promise.js","hash":"c2950fdd42269ea677040abbd66110cac74e0a63","modified":1445977477000},{"_id":"themes/tranquilpeak/node_modules/pn/.travis.yml","hash":"88850ed730b8a575930f5837e8e54ec57b13564b","modified":1515008892000},{"_id":"themes/tranquilpeak/node_modules/pn/_promisify.js","hash":"9e9fecb52f8c64226f0da8a18ce0a4cb44ad6486","modified":1515010679000},{"_id":"themes/tranquilpeak/node_modules/pn/README.md","hash":"2c199447f460987754ab64ccc2dde787b6af3c4b","modified":1514969150000},{"_id":"themes/tranquilpeak/node_modules/pn/async_hooks.js","hash":"cc8a65bf11d1e7d29d5f5ad8320744bff33d7be8","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/assert.js","hash":"228197c61a63b034f5b23e3a828c5b441a851ed2","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/buffer.js","hash":"8bf146430282acae59382ec12cf0329f032c6c6b","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/child_process.js","hash":"78196b7e978e4332cf1d40c85647a9a2a57ee069","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/console.js","hash":"3141e9855767a05eb8324aecdfff74d6805662ff","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/cluster.js","hash":"b560d3db571a969d9fc418cae9b4ed9a110217c3","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/crypto.js","hash":"7778b9a4d74a87202479f2d2dcf72cc2e306ae32","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/dgram.js","hash":"a3fd69643001e2b1e37eb0faeab11285d909858a","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/dns.js","hash":"85e6274a893158bc8281139194dbe0873ed5526c","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/domain.js","hash":"4e72de34e43f7328cd988ca4b5b0192a13587fd8","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/fs.js","hash":"de089b87205019cd95bc5fc7fa87d2d8cb705746","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/http.js","hash":"ed8686d23d8320d02c6e31133747b4f74b60eb2f","modified":1515010292000},{"_id":"themes/tranquilpeak/node_modules/pn/events.js","hash":"5f7098d7c66def67d5cc26cc05481897905e29e1","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/http2.js","hash":"435ae3db055fae3d815f38641808a86792f0ffc0","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/https.js","hash":"389320b2aa3d2226be8ecb713e4a07203d0e9e22","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/net.js","hash":"941d29432b299db51953966b6a915bd708589503","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/inspector.js","hash":"e0f2c6f39470f22681ef381764c2ad5c7098b22f","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/os.js","hash":"3bf810acfb755da059819d45910f485ecc1d8ff1","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/package.json","hash":"41b0b21d8da1f78ad1031cd387d89cb0efcfd5df","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/pn/perf_hooks.js","hash":"da996013ce97b10cea5b81e93bd38e3a2ed68e25","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/path.js","hash":"dfc7b0153a904bf9821f5a2d930fe858e82aa181","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/punycode.js","hash":"a1f2da02c947b074a51ee399f5124883be18b525","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/process.js","hash":"7dcff11d95aa10a3593159504d9d2d708dcaca58","modified":1515010892000},{"_id":"themes/tranquilpeak/node_modules/pn/querystring.js","hash":"fadf1cf517fc5478fe6a2ba7d40b6bc3b190a1b0","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/repl.js","hash":"09422f86a6495eeb9c10fe0164a59f4a03d18029","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/readline.js","hash":"c2e411a01269539849d583198a7c26a5356f5795","modified":1515010293000},{"_id":"themes/tranquilpeak/node_modules/pn/stream.js","hash":"a24f16de260be122d16880f6c2adc4f4a981d6e1","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/string_decoder.js","hash":"8ec7d6073f8d0f41e0ed659c5ff685664f3bd171","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/timers.js","hash":"cdd93f11907a81cc86598359534c0b71b4617460","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/tty.js","hash":"9d113bbc4005671383e3a9ea13874ffc8c1bd638","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/tls.js","hash":"49e26c2f0ee3af72779daf70e6d036f0a4301c25","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/util.js","hash":"73acdc9bb25ab21f9823b9fed9680927e1567387","modified":1515010926000},{"_id":"themes/tranquilpeak/node_modules/pn/url.js","hash":"960b18e0648a34b41f5bcb91e03409567f728423","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/v8.js","hash":"1162191048ce9cefbf0a8f5ff4f5de01ef4e4fcb","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/vm.js","hash":"b1d6c2725476ecbff5269400dc357e187beb9f23","modified":1515010282000},{"_id":"themes/tranquilpeak/node_modules/pn/zlib.js","hash":"6625b8548f3ca885a2cdad6a437a56b7a276564d","modified":1515010308000},{"_id":"themes/tranquilpeak/node_modules/lodash/_DataView.js","hash":"f5780de8f4171ced0e5f4c52aba30e58660070e4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/README.md","hash":"ad60d9a57fc39c69ac19922403e41f913913f9c9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_Hash.js","hash":"572ffd33bbac9360f2d2591f7b44f72077d52297","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/LICENSE","hash":"4aa67fb8f8b16d40701f21a8089a410a7d178ede","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_ListCache.js","hash":"6df951af4fe1c2e428720e3fea6f7be3e6c64edc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_LodashWrapper.js","hash":"d1b595bd38e7764539f2cf99d2374f5c5aa72d70","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_Map.js","hash":"d58862090ce31a3295cb1dae73e44dcdba9b70bc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_LazyWrapper.js","hash":"9fc0cec80e680d4fe00cf4e33672e7f06d4b9b79","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_MapCache.js","hash":"afed02775f092be6e7328f19b6991a419baac9c7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_Symbol.js","hash":"1d38c59f19e1b038981b4f0093d5b504d647c694","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_Promise.js","hash":"7c7b81e303018a3045ca269b1be551224b607790","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_SetCache.js","hash":"20a1a687b681a839dec78ee9b1c07e0fcee4cdda","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_Uint8Array.js","hash":"9aca80cbc7c3b25813dbeb9561324d3d6ff7700a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_WeakMap.js","hash":"f384e74a27955f5ab92345281a5fcb7d95111b58","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_apply.js","hash":"cf8c13531bb2ebaaa912ed42cd51d35749780b49","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayEach.js","hash":"904f07de69303a57591f6f012ae390d37af3f595","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayEachRight.js","hash":"d9c9880639a791b9b7a50fa4b9d95987a9adb530","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_Stack.js","hash":"581507149d88de85ca4bed49ea0c22467d4e65e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayEvery.js","hash":"1c52b5548127fec0d8e876e6612bc7579b64c88b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayFilter.js","hash":"de05ba1636ccd6f97f5527aaaa7bcd355ef96a3b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayIncludesWith.js","hash":"ae055079baa36a646be539921afb899598b99ade","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayAggregator.js","hash":"4c46ec909fd72aca86fbba95f8042b39875a2fc2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayMap.js","hash":"50a635afd8bfba130f5ec9cc693c06eb0ed57690","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_Set.js","hash":"d55df157d59851d181aae5086ac2b703f41e422d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayPush.js","hash":"8b9d6d4bcd8f6661ee23634aecda75d5395db2cc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayReduceRight.js","hash":"59ee39e14d1be368c9de8d06b8a62ba7a57f9c18","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arraySample.js","hash":"8b9ade97c8c183d58e1bcfbdcdf4b77b44c38245","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arraySampleSize.js","hash":"cfe8e3d04b52e678f1475ed3df969bc5eedea859","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayReduce.js","hash":"87b47db2e2ffbf2d671e1a974eec644d16424412","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayLikeKeys.js","hash":"3e0338e1cbbfb9c9f1b00adf873e176478b985c2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arraySome.js","hash":"b3e385ef53a7d44b49f705315ae30efc4b81d5b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_asciiToArray.js","hash":"4331bba9d396c601f9ac9e676283bc3ac25ccf8d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayIncludes.js","hash":"c1211511564c2074c24cd0a45e2fc63b94017d42","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_asciiWords.js","hash":"164db22da4ac8a77d75ff57a1d63d0c4b9e48388","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_assignMergeValue.js","hash":"7fd48396b2393692858a13cd1d9fee4f9f56c034","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_assignValue.js","hash":"8889cd8e010ef1ab8259b9401f1ace23164a676a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseAggregator.js","hash":"a0f27fd540785f2f3d54913950fcd555ca789b4f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseAssign.js","hash":"b12b76d29619f0fadf5c75c2b1f4d9c5a140af4d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_arrayShuffle.js","hash":"7023c88e8b1fd408755327bf70fe8d58c9496607","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseAssignIn.js","hash":"1e9e2424746865f1ea7c278592329917a2d2ddd8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseAt.js","hash":"93dcc3d90a67de6c407d3f6ccda164d3fac140b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseAssignValue.js","hash":"c09bc3ff6aa7082144eef5b7583f795f7d16ac19","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseClone.js","hash":"f294126ff721d47b196d14eed6c662f605144809","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_asciiSize.js","hash":"befe650097f784878651dd1881da7efb3c0d0e73","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_assocIndexOf.js","hash":"b557d0550d466f2e0a20697d953061c8198bc3f2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseClamp.js","hash":"ce109abcb1e12c30e97c79917e51520aa544db9a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseCreate.js","hash":"202aced68f2ce65d35a3d9e7ee56e373de463233","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseConformsTo.js","hash":"f2f1431ffc02fb8ab64d86abecdcfe2685d2eb4b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseConforms.js","hash":"f518eceb5bf9e6dc4c9cf811e07c3ff8469c902b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseDelay.js","hash":"2a9133e727e4b0a6a9ec776addec9c791c812a4f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseEach.js","hash":"8df288083999c6711cdddc83d3f62ee092e0bd35","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseEachRight.js","hash":"f8f31ce8197c50e01ffe073be5e329bb95c5dd7f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseEvery.js","hash":"6e445241a2ceb58e400c619247c7f1d5a9ad76da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseExtremum.js","hash":"931adb7b69f0e4683324797c8522f4f6c9ad6321","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseFill.js","hash":"474427d0d470b473ac37456e9ba151a966b2ade7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseFilter.js","hash":"aa90047b0a1231f770807422c67a36a4c3524365","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseFindKey.js","hash":"dc99c1f56a9a4559ae3fc9f3dbd7f8cfac677949","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseFlatten.js","hash":"045ce95760998450c806995fd49db7ce8fd96982","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseDifference.js","hash":"b3dc957d88a325a9c4e11645134bc92eb807dec8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseForOwn.js","hash":"8977ba022a8d144093f35c729822e6161d5fd291","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseFor.js","hash":"6d4e2744c99f75df073ca2e005317feea00533f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseForOwnRight.js","hash":"29a6ce1c8ff0893a7a5021a5b54d3303dc7e9ef5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseGet.js","hash":"2c7bfaa44754b5302e3bd2137d95b4e045bc4c85","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseForRight.js","hash":"2d3155596f8e8420da54564a69dadfadbd84cd67","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseGetTag.js","hash":"b66f083cb3c9fac408a18fa8e104a20e64355d45","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseFunctions.js","hash":"17d2e75a62a380223a943a07c0726c2d101c59ff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseGetAllKeys.js","hash":"f7c042fc3a0e1f89ee6f0ab2765615983796b303","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseHas.js","hash":"0643a432e7d64d10615b4cd7092f2483c317cda7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseGt.js","hash":"7368ca132e9b25b5f2ae74cfc01d619f284e84d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseInRange.js","hash":"5186220a6519de4a9b0882ccbe565b74caea68cf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseHasIn.js","hash":"e11103f369bb4fef0cbd193622c7126c70e0fc8c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIndexOf.js","hash":"554c47e0383ef62d126d9d66aeb416e8e75ebf3b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseFindIndex.js","hash":"a6811f11035fd20ebedd10b014566614f1fee155","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIndexOfWith.js","hash":"bf10b85520bfc5add8a38c341e95a985e1ab3626","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseInverter.js","hash":"84de1267be8b3b1973a696826a66247ff88e7c25","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIntersection.js","hash":"deed35c6297d406b8f5e0672a4cc99cbc95fd0b1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsArguments.js","hash":"6c428b2e543a752140ee6b1223a659f45025a71c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseInvoke.js","hash":"b287bbe200beaf0e4825bc7bccb7ff702e0eff74","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsArrayBuffer.js","hash":"f154818234664296ec6c8496be8cbe77c6909c8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsEqual.js","hash":"7f9ae050c867190bf8379e97f1fd9d01cc2c96f3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsDate.js","hash":"c21fd699a4d3d38d28770746f33992778c3e2e94","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsEqualDeep.js","hash":"becc7c47d3ad5aaf2a6e5df7038595f21ff92bb3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsMap.js","hash":"b28a7248f4a44300ecc8080ad259944d4bb9a356","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsNaN.js","hash":"01512b16931316dc87e670d11c3b3d7c354366a9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsMatch.js","hash":"68d520389a8b2d00f0b649787df02734bc00ad9f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsNative.js","hash":"1f36b939f5e5b0dc5f28ba7c47206d717b966c7e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsRegExp.js","hash":"663e2101fd6aa3086bddedb08f0d2e7bbc30c0f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsSet.js","hash":"52795ae38cc0426dca2468342cf28dc2f78775f2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIteratee.js","hash":"032e8e56ae36205075f11cef6a7e91890a8425bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseIsTypedArray.js","hash":"291f63ba52ab97764a33305efd699a2e394b2517","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseKeys.js","hash":"29d99b03db5dad4affa41a388470c89595e44991","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseKeysIn.js","hash":"eb88d9e4d4f429c250f3ee2f22312b885ce7a75d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseLodash.js","hash":"dfebf25a399f77aa4b416e1a92ba11ca59c2a8e9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseLt.js","hash":"92e621a7798bec567f79b006e1608a434b18d22c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseMap.js","hash":"e4d4a4031106e999c0f44a81dd62afc0f84f3fe0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseMatches.js","hash":"bb2332567191ebdf1e2414efb7279d989fa223ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseMatchesProperty.js","hash":"0a4a914477d3d5a170f0c5bc7c5b2abd106bbfbf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseMean.js","hash":"0e536b0da31875ca4a97989a76d851b5589cc867","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseMerge.js","hash":"66a8b1af03443b624349e9251cc9570e44b5820a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseMergeDeep.js","hash":"c4bec83e7ade0c434e15a312701bdb5cc160e452","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseNth.js","hash":"7afabca34c7963943eab1dc70a433231283cc8c5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseOrderBy.js","hash":"c76b0438a27df64a71220d2e819d9baa79d9641f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_basePick.js","hash":"1eb8ddfe3a55363b22404e9cfe3723a56c9715cf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_basePickBy.js","hash":"2749eb539f38c35b694e6b8f74d20f5cdc37ca15","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseProperty.js","hash":"31d8d961f7383f581a360947b0b752e95d35cd14","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_basePropertyDeep.js","hash":"b9329f5af409f1578f2fb9fd34ccbdf8cbe54070","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_basePullAll.js","hash":"a140d4775d1ee69b9d6d434d5729f82b7e55bc8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_basePropertyOf.js","hash":"33b60f71f3cbf5f26607a2b7356070f8f6953223","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseRandom.js","hash":"86fe0bbec2bf3b242a8d861abd894f9281c2408a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_basePullAt.js","hash":"7b291db76db38fc2850529f7e519f5a273dd1f5b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseRange.js","hash":"8816c954f5f5c9c100a51ae5be416a4661e418ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseReduce.js","hash":"96e87d251b7bbf30707b39b529243e5d3a7f5c2f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseRepeat.js","hash":"e5acd9c33e9026b8848de16db87d9ee1dfe293db","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSampleSize.js","hash":"b05eb913d80f60e274e00632d5499319bd0204f2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSample.js","hash":"bf50189b8b304ff4bafec174b108a7fe25a6a003","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSet.js","hash":"0d99172a2005d7c0dfa71114b0cb0aca9cafd47a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSetToString.js","hash":"4fa840e62be63264b265b19fff3dbad4540a376b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSetData.js","hash":"fa3ddde4d03be0d225fb7e96d1b5f86f0e321453","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseShuffle.js","hash":"62b58e90df1ca7ee5d44cd923fd531f1964f37a7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseRest.js","hash":"e31a38bffa598aef97317e7b1970a212a4d44d00","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSome.js","hash":"4be43bfa949a8292f8f780eeeb83bb5da00f58b7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSlice.js","hash":"959756556fea236343ff752adb6b869bcac82e4b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSortedIndex.js","hash":"6a353c6feb19a86665f9ea37ae0ff7f5ff5a1d9b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSortedIndexBy.js","hash":"23b9368bcfe7afb35249a3a2bf880a170cc72ccb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSortBy.js","hash":"77483347d5381f336bed3174c5b301f40dfc7a24","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSortedUniq.js","hash":"c2ad97df99636c7977b6374e44cb61dedd64aece","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseSum.js","hash":"e96a801668916a3027558a8795a4957e11c791f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseToNumber.js","hash":"1d6f1a52fdbddf557ef5d870c3ad6fecb7089af9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseTimes.js","hash":"7f3edc2bfd65d843b592ff123759c9d616ce3a64","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseToPairs.js","hash":"d6ad1c204c16fee82d17a5b4febca922a78cda47","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseToString.js","hash":"f2a75bd83872d649b56a1c0fe7b785ee13ac3cf5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseUnary.js","hash":"5dbba7edab4fb0d361906358fa2d49dc35c1e603","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseUniq.js","hash":"ae7942f5facf5430171081eb0d2ee341f69c9fd2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseUnset.js","hash":"d9a16888d3995c743789eb2003d8d5c438f00ca5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseUpdate.js","hash":"12682de8a3a7f8d6e89f4872bbc2bf1c2b66f8b0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseWhile.js","hash":"4fb4c4f09282c0e560a1bb289caaac7d58d64a10","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseValues.js","hash":"a8cfeda4f95c958cb46ac71f77a631e57617c1f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseWrapperValue.js","hash":"1b1d0a42b03e95693fc88d6a24e4a3473d15392c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseXor.js","hash":"0077b838e654fac3f5ebcc99ab1dafbd158e4e71","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_baseZipObject.js","hash":"7995093c8f43666bf1f2dc15cc1d752dacc55e35","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_cacheHas.js","hash":"d676b44402e7e4ff04011e54a086f7efe819ef81","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_castArrayLikeObject.js","hash":"0a049ad2b5e466bb2173738787645d6aa97b9e03","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_castFunction.js","hash":"af88042305fb1cc58dde3bca997c206dd0359bf7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_castPath.js","hash":"a7a03888171be1aa22a92d12b9a02b8c8798375c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_castRest.js","hash":"82020a1342ba8656765ac9141410d1af2b7730f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_castSlice.js","hash":"9b963fc73a75bdb6cde5c38b2ab1fac07835a800","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_charsEndIndex.js","hash":"4164a27a922efe0dfb1dc15496d199152fd96599","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_charsStartIndex.js","hash":"c4db2a95b12b0a442f73d3ad3d27c0048193b216","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_cloneArrayBuffer.js","hash":"ffbada38bb191bc5290fc3ae51f6c01c3f8f6d7f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_cloneDataView.js","hash":"c8e9d1cd47aab00655a7ad7d3103cdddf2fd92a6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_cloneBuffer.js","hash":"f0b54438e44d83118f342434cabe99dc438d19c3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_cloneSymbol.js","hash":"8b27dca2415595e97e38d9fa7fb3f854c4051048","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_cloneRegExp.js","hash":"d0318f8d44ff0e8720cf498982e3183e23579919","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_cloneTypedArray.js","hash":"b50a151594d841fdb56e8cf04619529fed4891f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_compareAscending.js","hash":"456fc00f7549c8ea36a3d2f3b818b50bfcf016e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_composeArgs.js","hash":"18e0c7dbd15ff30fb10ccaa4ef651751eea88ff7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_compareMultiple.js","hash":"798b323506b11fa866904e39771daf98df260bca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_composeArgsRight.js","hash":"b826dac099cb5bdc350361b3fb6df6a3c743b49d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_copyArray.js","hash":"cec6a29544aa38261f7cfc1bf123f3289d22c377","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_copySymbols.js","hash":"871986e31fddf247cd65b93aa92b69392b9bde8d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_copyObject.js","hash":"3bfeeec32b43433683d931621a2bf53dbc3db3d0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_copySymbolsIn.js","hash":"92a72efc51ad106ed6bc2e4dc03d0f23751523fd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_coreJsData.js","hash":"15e60e7a6363ae6df943c85e4b9e1078457b06e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_countHolders.js","hash":"9ff8f78133806ffbcc60d281c0152897aa7640bf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createAggregator.js","hash":"261d83069fe95d76ef0dcf16aecf4d21af132baf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createAssigner.js","hash":"0125f6e53a2b16619993e408f3511862079717e5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createBaseEach.js","hash":"ade31f23b8e144e8588af940219fc4c8bda2ce53","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createBaseFor.js","hash":"77c64903d26461aaff6bb22d3e2739a5ac9a5e0e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createBind.js","hash":"56e3d29a4d8774c9709ba42dd15e204a693a8a42","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createCaseFirst.js","hash":"4eda4cc9710593950268262489e79a507679356f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createCtor.js","hash":"12be272e2dcd00624119d859d78459c9dae1baa0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createCompounder.js","hash":"195c16455366a158b8b855547fafdc602f0be9e9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createCurry.js","hash":"30c237eecdcbbf00b48be6b716264799e0f32c1e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/.npmignore","hash":"20985760b40bfe6b534deb2881224b44b71ac389","modified":1496691791000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createFind.js","hash":"3eb3975cd88173810656e3ab17de9c210773a1f4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-zyp-json-schema-04.xml","hash":"02845f4b0406bffb06ff5cb01eca43f492db6901","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createFlow.js","hash":"c9408be96649f6431781578ada26509a567005a8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createHybrid.js","hash":"15282c26201bfcfdc26829ced58fa9785f1db1fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createOver.js","hash":"ba8f63fcb4755dc9023793118e5f8180e86c4c64","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createMathOperation.js","hash":"d02710cbdbf76e2b2001750b355238b9a0e951c9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createPadding.js","hash":"0597ae4997016438b3d7629560c03d260f2b51a0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createPartial.js","hash":"2dc87c9d5a3fa04f144a85d4d90cfd55a4e4b208","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createRecurry.js","hash":"fa869537d2d2bb656d1a7876435dc4c79f57575e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createRange.js","hash":"1c65b8adbfe1a38fb5827f584a454bc8218050ac","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createRelationalOperation.js","hash":"428d4535498e0c63f8a998bca3403d36ddbf8004","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createRound.js","hash":"f6d9e30f03e0b5af47f9be48bea3399d9c684191","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createSet.js","hash":"c213de450f86338c23b81de1c99f8136a7538ba3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createToPairs.js","hash":"b16382972bd68fefa26ec9672c3935cfc1af1b7c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_customDefaultsAssignIn.js","hash":"3cfaa6d8045c1f0217366218ad4340b50de5ceef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createWrap.js","hash":"3cf0222feec115f3d4b71c1adbfe4aca7555ebe6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_customDefaultsMerge.js","hash":"9378ba434e10108ffac43ded9d6d28e32fac527e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_deburrLetter.js","hash":"65de6e749f5e37659ce5798a558a9aa1b50bec5c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_defineProperty.js","hash":"308f9b9c0f8822351b71d5801be25a8326bc5584","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_customOmitClone.js","hash":"2bf571311b6785fd53ae57ec710ed05ebad80ab7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_equalArrays.js","hash":"dd3a74350ab4d89beb889ba94510b3e5723b6209","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_equalByTag.js","hash":"bd57ba1568c522e436bd1af7ec860bcb1e274b85","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_createInverter.js","hash":"3b149fffb0fb7fe82cf00dbd794973ddc33f33e4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_freeGlobal.js","hash":"df0709e144040efc52114c69b7977ab04f3a799d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_escapeHtmlChar.js","hash":"d1da9dd2828cdd0071b82ffea56eab694bafbe37","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_escapeStringChar.js","hash":"d011ca793a93e44d7e6928cced2055ea47f6c39e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_equalObjects.js","hash":"6e408bc1b739bd195adea727a0f9dfdfb778a214","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_flatRest.js","hash":"1a96086a9a21bff7890036498a1e161fe7955194","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getAllKeys.js","hash":"9fcb354c326cd308df841e6846d506165842f9a3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getAllKeysIn.js","hash":"4c08d556179109df462c2ffdecef2d6486315062","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getFuncName.js","hash":"dd42afbc814c94e5bdd2fbef652efb7801403f6e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getHolder.js","hash":"86951aac23219e1a51267bf5fd7a38da110c877b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getMapData.js","hash":"f8986a4db2b55203a3237e5472a4620816306331","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getMatchData.js","hash":"221908980050132b19c79c53c1b7d78ef5b93d59","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getRawTag.js","hash":"08573f8b464cf110d0873d475890f499a9620d80","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getPrototype.js","hash":"150397078aa95ac1ace14e9547b7c28eba508353","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getNative.js","hash":"a3c1a7f525a79c6216c2bd72810ccb1d8afefd9a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getSymbols.js","hash":"1c87ed98ef573b41c8a015c15857a0991603eaa6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getTag.js","hash":"e74c13874eca982f0fd30b1e35dd05e0664c6af3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getSymbolsIn.js","hash":"0bae489598ad76c4f2faaf33bcc1b3bf34e4772b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getValue.js","hash":"aaeaa4d7600367187650a1ef2d6949e2f788cf76","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getView.js","hash":"3a642a1adfccdac302261e31fadd3918e623d6f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getWrapDetails.js","hash":"ab6c90ec5be32187a6cfe2c9e798e7d298263dd4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_hasPath.js","hash":"f300ab1b5c17494a458e38d10eb815f5c1c95b76","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_hasUnicode.js","hash":"2ead86c95243b0dac220736e198e0a14e68c2982","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_hashClear.js","hash":"7a6f43944d3ff13552dcbe9ceb972ae5a83e8b1b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_hasUnicodeWord.js","hash":"254386bb9e3c37c9f53d068c485b3f41348dd56b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_hashGet.js","hash":"5645b9091466891d4c892c6b3bd220ebbd3a3d00","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_hashDelete.js","hash":"5b552f18bab9b54a3192e193d44188e1656556d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_hashHas.js","hash":"aec7a8cd442a620d0073260ab7dc03960f6c85c5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_initCloneArray.js","hash":"7385f50c6d9fd89db402b725dfcd5b0d6b314c55","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_hashSet.js","hash":"13d89d46c86111ca9941d0c35c29a84b2fb97a87","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_initCloneObject.js","hash":"f2ee8035eaa7751ff081de5681c6603da177f8f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_insertWrapDetails.js","hash":"07c0c750900d12cf01ff9d99e429c6be76790f4b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isFlattenable.js","hash":"f2cfab82055d2ca693f33a874c57d8250467fc04","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_initCloneByTag.js","hash":"a38217b57e875466ed7d07578884c51a4e318560","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isIndex.js","hash":"f08242d01da4236214f75e0221fe25c270f46dbf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isIterateeCall.js","hash":"8116de0f8e735fb8c0a9d263a369be4b74f5f09c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isKey.js","hash":"e68a3f3cc1d7942c51ce0e8d927c0eb1896bc46e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isKeyable.js","hash":"89389f3a2f157c03608bcce01baf751018f25fa8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isLaziable.js","hash":"857a630edb35c21d76e6e2fd6daed3f3b51ea6a9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isMasked.js","hash":"c001b1b4f9d3f7ece2e7263350f081da707804a5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isPrototype.js","hash":"6ebbd7e2661dbf8b6e35f36d680b7117fcc6b2c0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isMaskable.js","hash":"54963a24b696b2c57b2e8d2a873ed7db9abe6b11","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_isStrictComparable.js","hash":"1db231f38b860e0a94e052c232829f8e8d31eb74","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_iteratorToArray.js","hash":"0512af6634544643fd2dacfb328aa8fca1770d72","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_lazyValue.js","hash":"8e87e755c6f452304a814a29998fe145065aac74","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_lazyClone.js","hash":"528f2c4e0ddaadd246d07757608fafc02842508b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_lazyReverse.js","hash":"a16d79ce7d467ebd00332162dafae250f726fe17","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_listCacheClear.js","hash":"cab24e3a5aa064726b71f761bac42e765a21517b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_listCacheDelete.js","hash":"1421610bad35fbee226a1a6bf8e7edb8958a4d6e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_listCacheGet.js","hash":"266ac036effbb03c4a20397401900068f25ee510","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_listCacheHas.js","hash":"2070fe4515274fd0445b01ccbdad8acbc6b7c9a3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_mapCacheClear.js","hash":"0eff5c92ebddbff48603ec60a32720c48fcdfd2a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_listCacheSet.js","hash":"cf902d42ba5e57849d08b0c03d2003c56bbc0dde","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_mapCacheGet.js","hash":"2f580dedb6aa86e87c9931a6bb2275df8fe8608a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_mapCacheHas.js","hash":"a0104808ea49ff57061f2b4a6ec4ef5f28e20601","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_mapCacheSet.js","hash":"745d2c8aab1a63cd28192eea4ac7bd86d5050b02","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_mapToArray.js","hash":"ba760ad87c596f8a038240cdb8eb21c8f441a288","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_matchesStrictComparable.js","hash":"886455dc09cdf350cadc57a4bb14cf8d700db358","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_mapCacheDelete.js","hash":"830ab65244dcd7c5a00fec9be355e9f713e6ea3f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_mergeData.js","hash":"88ffb153b2cf2792dd67b70ef0f7ba1715c991fa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_metaMap.js","hash":"6fe08e4a7c81c515eb34e464db1fe31d20bc8ff6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_nativeCreate.js","hash":"d77d487728a34b77fe91c07ed4a2ca41a7265b43","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_nativeKeys.js","hash":"9cddc8c7f8efeffa319763be371897c861027d65","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_objectToString.js","hash":"c489ccc8b47254177546b747476ca6b4a339437c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_nativeKeysIn.js","hash":"d11eee972281d8eb8c93724d6a9088faf33e9679","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_memoizeCapped.js","hash":"6e577b3ba7b897f8a8e6277cee2a9c0d296608d9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_nodeUtil.js","hash":"23c321c5b794557e944b47a10ccac8eb6a132f0c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_parent.js","hash":"a509f65490a88db6e1469ba7d8eacf86f11e7578","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_overArg.js","hash":"1fd1876980219dfd22c7ad86a49994f6ad1ffb0d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_overRest.js","hash":"7020d98e117801d3a38b53367295588fe9574282","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_reEscape.js","hash":"1956c226d87ffb9bfb9d0b443e5e7c6665e222a9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_reEvaluate.js","hash":"01062fe9dad608255c7e341c6d3e145c9ae6912b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_reInterpolate.js","hash":"1f30c7932ca224ade79f3b50991da604fdc93c0f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_realNames.js","hash":"1d70870e01638a3ba3e742bf871a5618ba866480","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_root.js","hash":"da38a7e1c62b9dec425d3354b1ae5b2f1473ed41","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_reorder.js","hash":"f9ebaaf8bddda0f54270363ed88d8eeb4b0acf95","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_safeGet.js","hash":"801e94f91005b995403d05ca61b52790e8ebb52f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_replaceHolders.js","hash":"c24095b10ee93a2b1c4eabe187a37eb54a74b47c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_setCacheHas.js","hash":"6b635d8cd68ddaf51b359bd7e89532dbbd5d259d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_setCacheAdd.js","hash":"3e8d192f136058af7953acb255f3452e25f9dbd5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_setData.js","hash":"27ba08bcf3045df1eb5bc20514f6532d51049445","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_setToArray.js","hash":"8aa29aac79d989a3642638ba90120860d6e7cfd0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_setToPairs.js","hash":"8f144b728d7afc8059364769d27708f6f30f1bc9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_setWrapToString.js","hash":"e1129dc30bd9fe222dc11cf9d319f2d16cf02f82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_setToString.js","hash":"525d4e7a92d2f5de834b7199c926bf05e5863e02","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_stackClear.js","hash":"f10a4d85636bf0a0495cb7222575c139c2963466","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_shortOut.js","hash":"2b821fd23499f0583817e801c9ec1aa7fabac0b5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_shuffleSelf.js","hash":"d384018a208bad370c0fa749fe1a7abdcf7d1550","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_stackDelete.js","hash":"0035fcf868dd14e85188c010466ead0b44caddc4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_stackGet.js","hash":"edd10aa8b1688c112def671585164abd168f7dc7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_stackHas.js","hash":"2c66efa2be2222610dae4edfe711b8b0d9a55a60","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_strictLastIndexOf.js","hash":"541978faa200571da921f5cee0c141cca0436237","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_stackSet.js","hash":"54d1b0f6e92c9327efb7142d082bea43f49521a4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_strictIndexOf.js","hash":"4d373aae516f6097b486413f2e0815c73aa37bdb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_stringSize.js","hash":"2c19f863e40752a52b8d3347e8b05c8afb61a4d6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_stringToArray.js","hash":"051613c1b18c5156a676b197586fb0e2c1acd0ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_toKey.js","hash":"e24143e8602a9acd35301e6462b03c6ef0d94bc9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_stringToPath.js","hash":"90f48337b274bc8475116e992fa8cad995a4029e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_toSource.js","hash":"12282cc7f18c3c7446129f547741c3998b6caf18","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_unescapeHtmlChar.js","hash":"345300e6aa36d8b10133adfc3672efc630f77822","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_unicodeToArray.js","hash":"a9378af7302c381a5f82467c32de3111ca597877","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_unicodeSize.js","hash":"4ef1b8b07c56ba22c273f20ce1f43c99d9e646af","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_unicodeWords.js","hash":"70d7dad3b79c471cce28fb00f4d9491c6d14de30","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_wrapperClone.js","hash":"c54b050119a2a1ad75146508a03ed4a78ab9b5fb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_updateWrapDetails.js","hash":"2ef2e983cdda0be8c850d7e59d570862ce6b64d7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/add.js","hash":"69ccfa17792261411f27bd7166a6760e3e6e653d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/after.js","hash":"4d65d6ae8537ba01400d74e3540b52b463dc86eb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/array.js","hash":"ac9338e3493fec2bb6d7a1dcef45ef9819b20649","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/ary.js","hash":"6db228f04677c2724e6b8438681c4c0fff0c998c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/assignInWith.js","hash":"7e951bb44bd108e1024ea5c691d9bf9449c112fc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/assign.js","hash":"c80789cd7fd35c7190290526e466eed28caafa80","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/assignWith.js","hash":"98f683f41fd043bead258cfc6e61bd6765eea779","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/assignIn.js","hash":"166da8ae436b3ede129a5842457d68d6fdc9616a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/at.js","hash":"cf037c2d8d960fa96854f59381675ee196cf4069","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/attempt.js","hash":"6b981c1f3ff53c572ebd08babf8799c8f118f6f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/before.js","hash":"bc0b86f3e03b7056b39193a03c5d39ee4fef4023","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/bind.js","hash":"6b960133235c585a9b461e19df07cdd6edff118c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/bindKey.js","hash":"b54c9311a7c9550ffceda021af5c995eee09f693","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/bindAll.js","hash":"cfd017286d7a7497547755272e1a55d39dc4beef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/camelCase.js","hash":"1db1aa1a3c7a3a703a33c660526ef141c0bd3b94","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/castArray.js","hash":"8dd901032216d00cf43986adaf961ad7422a64bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/ceil.js","hash":"13eff7a830076aeea2ffabd36b8d0d3254849953","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/capitalize.js","hash":"cf956ec612dfed45fdab26ab30cac6f46d738119","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/chain.js","hash":"e51b12d085b20c8676bf3297d9d0a8acb3871e4f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/chunk.js","hash":"8e0f7e51303031640b539758ed6fa3e48e761783","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/clamp.js","hash":"0c356936d91c87fe7938faa3e1bb61b8334e7f0b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/clone.js","hash":"1268809f4924a5640d425e56eb4cb71df51ccb72","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/cloneDeep.js","hash":"fcbe65493c8f2c4fb574dbdafaab5ec22ad3ac42","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/collection.js","hash":"235db0c51d2fbba77c1c0ab2f25617e3c02d9e5d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/cloneDeepWith.js","hash":"2be99cb83b8e6ac3f488963b433a8dd1829d3599","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/cloneWith.js","hash":"e9108f222791a26a83106488509053910d8460b5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/commit.js","hash":"f2962f416c4427b7d5fd2fe8f752c41a8e6ee53f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/concat.js","hash":"16777de6eeb0cb2828722e48c32e900256c21bd0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/compact.js","hash":"f747cf703e5627de69652da7ef01299274cf48e7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/conforms.js","hash":"e226b49b5c96a85b5a1796b7a708c3e3fdd9fd9c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/cond.js","hash":"3df6aa9c3966438f382511f0b5ab7647ef5da87c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/conformsTo.js","hash":"db8ff09750867c73d76ad1275a5cd8c2bc93b873","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/constant.js","hash":"0227ab051a5a8ca5e0fc7934bcea54ec25f90292","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/countBy.js","hash":"048867f03021430a606b699403133e2e234777a4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/core.min.js","hash":"574f2b78aa0923320d3de2a7edc4e7ef14a3862e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/create.js","hash":"41e8f34b4e9429b4b7ab26264bc570214164a5b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/date.js","hash":"6466f5749384af915c2b6a449e74e14e320f4e11","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/curry.js","hash":"cd66258e0cf4fc625293d358d15a7bda051bfa67","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/debounce.js","hash":"9c880591c7ba76d446abd004232d5bfec35234a0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/curryRight.js","hash":"61586b4ac19da0224a3262027f2d280f25bd70e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/deburr.js","hash":"460705fd44df7613129dc58981966abcc45f9488","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/defaultTo.js","hash":"07e0f352f98a791be53a0a6eb43dedd756acbfbf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/defaultsDeep.js","hash":"bf8d24913d8a34b40f1190a2d4fd01cadde49263","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/defaults.js","hash":"1f12f29efd3d103440d5c2cf8895119205ec67eb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/defer.js","hash":"471017a76ca3f3f71a111ccf7b487f89a50327db","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/delay.js","hash":"d7b8c52b90e17f9e42413ac7ea16d39a8e96bd4d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/difference.js","hash":"7a2a5465430dd730ff198a6ffcd5a3de8660c7b3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/differenceBy.js","hash":"ff88a7541ee0b628ea3bbd923077facde3dbab36","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/differenceWith.js","hash":"0f2a92e973c183bdcff6395d840f683f318c3424","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/drop.js","hash":"6e25554b3f395b8e55d6b291451e7cac2149c7af","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/divide.js","hash":"b21dc4cea11b1da27812a545fa75aa0d6b9a834c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/dropRight.js","hash":"e77c7613539baf9a222fcc57142d5a808263688e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/dropRightWhile.js","hash":"f9ccd85e2dc3364b0fdfbc824632e9f792b5a11d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/dropWhile.js","hash":"f710aa52d7e2a9b128e647ec58b24e3c37660790","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/each.js","hash":"dbfc772ff0330e9d0bb2ee704242e67b0435929a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/eachRight.js","hash":"c7a90b0a7bec56aea41c7569a652ebf17c20fde1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/endsWith.js","hash":"0d8fd73985ee8c845b0c851704c8700f1055863d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/entries.js","hash":"8788b9edcf643acf20e434e5894d09fb18742112","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/eq.js","hash":"bc3769b5b5cb8262834ac0a28cc4cbe71257ce94","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/entriesIn.js","hash":"995c6287a9c5f6641931c966de331b5521f63d3e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/escapeRegExp.js","hash":"91892447637ec6b53595e90a9817241b536f5fbe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/escape.js","hash":"60bec78e2fd63cbd52dc8f4f5f5b242bfc9449a5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/extend.js","hash":"79bb5928a674d6122686fc0df5a28f00b22d4d0e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/every.js","hash":"6da415b41c0bae9c96fd40df253df2de7d965f4c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/extendWith.js","hash":"fe394cac415eb0a6518371d1b95e08144a682526","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/filter.js","hash":"5e630c86a2bd2a83a887241037b6d714401502d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fill.js","hash":"bb9b5af63b9b43626fc4db976072b045976ea77a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/findIndex.js","hash":"2fc5db1562e58221e0aafbbd317240704eb29985","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/find.js","hash":"bb6c19af408438f6a0e19998a230880354afd814","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/findLast.js","hash":"1f3be6d3e3eb97733c9a648872b4b3366d590257","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/findKey.js","hash":"eecde37bba06739228e5f93eac97aeaab4a91d4f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/findLastIndex.js","hash":"05743b963c7370d830ce76ddc5da4d85ba687935","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/findLastKey.js","hash":"9ba6afda847da380659ae98f0cb575566a0dc85c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/first.js","hash":"a2eac20812e95b557a5bc11dab060163fe1133d0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flatMap.js","hash":"78f9ce2566f143366b0998ef02dd8dc89e004133","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flatMapDeep.js","hash":"76d3ae49d148850472922956935d294957f6f04f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flatMapDepth.js","hash":"fb4c4fc58c11b646dfdac83443e7495829da8f45","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flatten.js","hash":"72364918453483de6a71137a9a8003973c141fad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flattenDeep.js","hash":"422f037a6379f0db6258b9337261c1a9cc719faa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flattenDepth.js","hash":"537a4e7196561ecae367985622872417cb19eabf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flip.js","hash":"67207c1ba95e6881968ff8fd5542f29e259aa3d7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/floor.js","hash":"dcc9365721002de964aa2439793b7a10419d3dad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flow.js","hash":"7d9e4b712b68551d5b932bd4ed88d15b4aa1722f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/flowRight.js","hash":"3e028361a9b090f8e4166d89fba374d65d52711f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/forEach.js","hash":"0f3074268fefe6db115334ca5dd1b89eb56a8a3d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/forEachRight.js","hash":"654c60d4bb9737aa9fa3a7ac55e889f3dc2b50e3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/forIn.js","hash":"61f83e8b63f97c099842046983acd61ac1b31ff2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/forInRight.js","hash":"6a060f1b26a6be2a99c48eb56d104c4684b9bb30","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/forOwn.js","hash":"3e351a24c7fdf0593c116f361f59739cfb447950","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/forOwnRight.js","hash":"91e99b73af52bd6155bef7a259aa2e763aa4b885","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp.js","hash":"15a13940a645e776e00a229a7bec48f6af716505","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fromPairs.js","hash":"9a5f37cb42d2839c2637ca1792fcc1cd4333c56d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/function.js","hash":"23850ac10d90d3b9eee8723beaa3af727330323e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/functions.js","hash":"0ef50ad30d371a2b7ecf4363fd7862b5417130af","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/functionsIn.js","hash":"29e78c6d69d36b48c62e4374c6cd1c02da73da40","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/get.js","hash":"fd2860fd39bfc6e8c44bae101e133effe6373734","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/groupBy.js","hash":"18d1063f6af8b9cb6901c5ad3257db49027ab77b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/gte.js","hash":"ec5d91c1d30601111dd6a41af35d55c2c27498ce","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/gt.js","hash":"8446ef3704d57dd44214e6513a6889f4d9db658a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/has.js","hash":"c3c35131b701a60eb1f6bf9e530c78d123268cf9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/hasIn.js","hash":"8a4bf01f81a8d508b322441659f9c74f38998c3b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/identity.js","hash":"af8a8f8af76663a408cf9f29e5723d05f79eb236","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/head.js","hash":"374b879fa821ee60e31efa35f0b847ac5ba770af","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/inRange.js","hash":"38cdcc3285d54fcce6a7b362642c8c93305782f4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/includes.js","hash":"b5d81439dbbb9b6558c9148e37bf5db918a42d1e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/index.js","hash":"14d8b25e9e35c7f1b551d732fb814c982fc5301e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/indexOf.js","hash":"eec5a54dc7285759af46028f7a7c1ec3479993f4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/initial.js","hash":"c366df8c3c272bbc5fded392830b438d30d8c4a0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/intersection.js","hash":"b51e7675e09c00ab99a632cdf1fac769f1a874ff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/intersectionWith.js","hash":"1e1c0b6cf9c37aa60ea316a1540245bbff6f7a8a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/intersectionBy.js","hash":"969e82efd3befe0749085336f9568eb81f55d7b5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/invert.js","hash":"c9547b3840dfef6cb81c6507f35a5109798f1a7c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/invertBy.js","hash":"1d85aa7dd69490d38441a0206246460fd4c0f95d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/invoke.js","hash":"5bdfcbcf073fddbf4f00903e4a8db0f1b868c8e8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isArray.js","hash":"c6d5635dc764c9acf7395abde2230c43121641a0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/invokeMap.js","hash":"bfbac7243fe9a57276626d7090d473d9a3b2d796","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isArrayBuffer.js","hash":"b682ff167ce2b34539afe73df93f2abe81b8aac5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isArguments.js","hash":"b9214a907e11a8e2321e6adf907ecde99b9920d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isArrayLikeObject.js","hash":"300effec49e91a13bfaf9b6a9dda4ea2c4d45d92","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isArrayLike.js","hash":"88d7cd3fc8a6075777cef6c16e1cc4931734159a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isBoolean.js","hash":"ace779f61262f820f5f4ed39695bddaa7ebd08a3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isBuffer.js","hash":"246d03a17c274bdcf3acb909f2337c695c9aea45","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isDate.js","hash":"3a7813e7ff48c9ac6ce3bbbc8584b1ce22c4ea1c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isElement.js","hash":"652c3967fe6b11419aaa8652a8d8d6e35f15a76e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isEqual.js","hash":"370af44d612ddc96cdc52779fcc844fdf4ae00ae","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isEmpty.js","hash":"935d1e74c2b8a3deb928af20d4440894368ccacb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isEqualWith.js","hash":"3e9d8f6214fbb2f859254ea9c4b8f9da58ac15a0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isFunction.js","hash":"6cb0b30f9e48fc93016a3f34d124224af7901908","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isError.js","hash":"b184db78799044db3af29c3f6224d8e2213c9985","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isInteger.js","hash":"ac93647df1dbe92f6358a992b1d5e7039cf85514","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isFinite.js","hash":"388faf4e73347a1c0d77c98a3ac92be8902c5f36","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isMap.js","hash":"d19970b50ffa3f5e8345e84c635dc7b553bca992","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isLength.js","hash":"45606d651b8071d8ef73beb03d31d6073ade0df4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isMatch.js","hash":"29b9682a150068960adbf9ffa6b1da7f2a45477b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isMatchWith.js","hash":"60bf9f292afffa501f83381428457dc7567ee4cf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isNaN.js","hash":"711cb119497d074148b07dda40eef0fa7519de8d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isNative.js","hash":"58dd206b6a97ede6c6c786ae029a36739c5efe7d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isNil.js","hash":"5780b6ca6e7dee6c2599a9ac77eb302812a373ca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isObject.js","hash":"38f00e3e4772d23d56550ef75959d10f92448e3f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isNull.js","hash":"bd68451baaba662307893e3216b99ed20cf8a0d2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isObjectLike.js","hash":"7213913d764526ff2189c115d354bb940470bfde","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isNumber.js","hash":"75152f3218ff6f88b1ad22a258b16c85ebbf9408","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isRegExp.js","hash":"af11b03682761c1292525e290f0312da974c02c9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isPlainObject.js","hash":"104adb7c6dc9854cb91ac5995b17969c44614262","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isSet.js","hash":"8753a0c0f5a73feb22942035f87351120db0f402","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isString.js","hash":"7eb7706298dea12e813be37db6cdc8ea92177630","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isSafeInteger.js","hash":"18473b31325225abe68ccaa69aa84635ab02b651","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isUndefined.js","hash":"4e087abc1b0997f71bbf33e2065b40d438511e2e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isSymbol.js","hash":"aaa0f4e5003e5d33ed7d67b8a274a9a14c3cd64f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/_getData.js","hash":"2fea3c244fa4625b978cea63124835c16aefe660","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isWeakMap.js","hash":"d88fd7f6dab0bc1a14c8b7b9f5adabf3d5430ef6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/join.js","hash":"236f8abe4dfa446351d07525089fabee2e2d3f0b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/iteratee.js","hash":"5e22aa3f442a49c5061a7328b39c7ef197b9a249","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isTypedArray.js","hash":"d92eaa92fa13419d2df184ff11f270c266590f66","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/isWeakSet.js","hash":"2582214ba7a25b23bebf2ef4ad8a799248a5e5f8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/keys.js","hash":"84fe8dcc57c7b368d5fbd3ccf0c194cde0c78515","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/kebabCase.js","hash":"ed770da5a2e3ada160f9dcd625a94d16ffa8fef0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/keyBy.js","hash":"96e32f75404ee87c0fe8bf2d8b7a2c69cee308a7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/lang.js","hash":"2e1998c6fa6bd4a5c691edd1eb1fffaea2a35b85","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/last.js","hash":"dcdc5c04379818603815dfc64e96bd5e2626fd29","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/lastIndexOf.js","hash":"64b8f7981a889c14b785738da32da89ea7b06519","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/lowerCase.js","hash":"6280f901a37fb21a9acc5df8678661c1dd47d425","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/lowerFirst.js","hash":"6b7a190cd8d1f01254d0556b7725ed8ad3ee9cb3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/lt.js","hash":"244011c8209227a5d714f5843106b13de0f5fc15","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/lte.js","hash":"02b0d1b5d68ff6e8cabda05c1e5a4c9675b10479","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/map.js","hash":"484de2e64aa6e9cadbac92703bf79be5dbd53942","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/mapKeys.js","hash":"6c2885c6249ff8dbd5c18910338240ddcd441e48","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/mapValues.js","hash":"7d273ea92cb971d298e84137f49b89c5d7249336","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/matches.js","hash":"b760524ca6b6ba617641aa4353e7598c0cebe50a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/matchesProperty.js","hash":"993988bbf9037d03aa3ec66e3d6ba3db185a58e9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/math.js","hash":"09b7cdb94b0829a362572cd9eb490c6b86471f35","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/max.js","hash":"2c5910535b9bc06c066c57f71b5b02965b894cfe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/maxBy.js","hash":"85f841238f0c60a3496eecb25a3bf7aec5fc36fc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/mean.js","hash":"17efb674e29e2456f3b1e595210a9929480e14a3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/meanBy.js","hash":"5a9d6be568a698c6ef430a07f3431c11bbba3dcb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/memoize.js","hash":"507cd3e0ae52967b105d0452fd0f93fbbc69bfc9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/merge.js","hash":"20f06dc73414778002395627c8d4316699ff947b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/mergeWith.js","hash":"18a5592394d4cf1a0772e6ff38bacb9b547105f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/method.js","hash":"6dedac7c45efb248890558a8d42a2656623ce0a5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/methodOf.js","hash":"6af752f45f4152f036fb378075d72f6ab82573ea","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/min.js","hash":"0ca11cbe1894931dd09246e001badc22eb734887","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/minBy.js","hash":"8fa3de3c1efcc246ee906a281757f905cb13507e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/mixin.js","hash":"813b628b7fe94024fa308fbc6d06d1883dee9325","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/multiply.js","hash":"47e4d5d6014da46305a0be1082d66d2f41928e82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/negate.js","hash":"a01d8c228ce6992ec79ee4146677e52dcc487254","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/next.js","hash":"8504ac753cf6e3e19d811038503ee000b7829e8a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/noop.js","hash":"35300b7ebb741e7a54fe528a8a718b26c35bf698","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/now.js","hash":"ddba13c834824d9467e379769e67f414a6179d15","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/nth.js","hash":"4c0c437715ed4fb0942b8dee7273b9d0dc5f62e0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/nthArg.js","hash":"47191997e9ebf3b2b8dd667ee362e48d381217fb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/number.js","hash":"8c2564ca466fcb7f4f0decd5eb79f803f39983f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/object.js","hash":"4b9c99e1cb054bfcb6777077f59a2a53a4759490","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/omit.js","hash":"874d0d4204aa0cd72c79d7b3a4c80a577f46b564","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/omitBy.js","hash":"4216fc454388cdba0292cc5199b2d28d7484ac7b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/once.js","hash":"5bb536b8c7f08f94ccc9019a51601cc97d9b24d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/orderBy.js","hash":"7665eee9891d204d48cdd799992dbd6a9678125a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/over.js","hash":"e28a6b283217955bd749ce30edeba3e6b977273f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/overArgs.js","hash":"e60acc78f35d412319457c41a3bcecc898f9653e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/overEvery.js","hash":"03c5153a4c43d913a9162032f5041cc1f982250d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/overSome.js","hash":"153452d7a4349ee32447e45f59e975f929de5c19","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/package.json","hash":"d503993ebc9abcf81bd659bfca94ad9dc5e3d488","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/lodash/pad.js","hash":"b6a0479a2ce0289d29214e8f7ff83a0074406d25","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/padEnd.js","hash":"5973017726462db292d41c2f28b53b8a4a24c507","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/padStart.js","hash":"d6ea6887328ca596d505af7b181edcad862865f4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/parseInt.js","hash":"786b6be24ff93b68962925663708aca1236f2cc8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/partial.js","hash":"5c9f9b1c6719f70ceaa7fa314193f7ed4ed5770e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/partialRight.js","hash":"7c551ed65cc1b160ab8a7abb78b9e37c3b426e5f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/partition.js","hash":"36957b0323cbd50f5ec8e4be3b5cf571241407da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/pick.js","hash":"9c8c0c82b1db06c624523239aea143410c5258be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/pickBy.js","hash":"99eb4eed1acb33f67be3b41f359601f0f6d75ae3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/plant.js","hash":"2b370614388e8fc4a0e12d2eaa644c25622de026","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/property.js","hash":"276a7afddaacbac4fa184f0096a92f32ee517ced","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/propertyOf.js","hash":"d23f88041fae20fcd9b92740fffd39016a6715ff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/pull.js","hash":"e40207e049af5517cc5cfd59ffd23b1c3a1406dc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/pullAll.js","hash":"1bb4ac35a97475e16cfa8a10abfc5d911c58d743","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/pullAllBy.js","hash":"5dc628f7fe0c8e71edf931bebecdaeb0e30d6f2e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/pullAllWith.js","hash":"f205f46a35a1b3d40f86c92dd9488e25c59cf5b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/pullAt.js","hash":"176790538e4f38124826d06462d089f8acfe1b0e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/random.js","hash":"d64df688329131b297c269ce8e10b44cabe52e66","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/range.js","hash":"6bc797b60a5f0b1fe8e93c0c4c41361c7f8f1189","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/rangeRight.js","hash":"6640704aba8af652f6f8d13758946125dc324e08","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/rearg.js","hash":"ef1d75bb13e2f07e1737b028878775f67ed2b50a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/reduce.js","hash":"a6da684222d6a2179aa409e3728758572961152f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/reduceRight.js","hash":"8c8897c831800592470dc2fec9f1f575f844b2fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/reject.js","hash":"6b18138c39a26986320b80d9748bf5385c2b0c71","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/remove.js","hash":"a91465f281fb69fc2cf3a9fa751acfe89c5d95fb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/repeat.js","hash":"8a5c222ac1514d5732374f165d8df9dc0274bd71","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/replace.js","hash":"a35231e4112316c03e6c65162affe9effee35922","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/reverse.js","hash":"09f86bfe19d080bb52606967a9df5f017333e963","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/result.js","hash":"7180962c1b72ea113dd6516d5c28d006080e97f5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/rest.js","hash":"61b930cc021a8f03bb466ac833596d6d37416714","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/round.js","hash":"629b46fafec63f591a3c6b02ee03529ef43a8acf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sample.js","hash":"b861fdd759aa14bb6747b0e333df66b8995300b2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sampleSize.js","hash":"7a14f0d38676fcf8ed64a12ac379c8203eda1e4a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/seq.js","hash":"e8dae0be3b8ece53ea5d6594d0b45d221f643576","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/setWith.js","hash":"012090d3598aeb4e36cadb5fb3ee7ecd9d184211","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/set.js","hash":"bd5aefade6c00bbf37fd21dcd79e0ffd085a6084","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/shuffle.js","hash":"1d035fe3d9776decf38cab2e19e2b2da99aa5dfe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/size.js","hash":"baeb54345201e06c8c096f9a4f62192c8584f982","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/slice.js","hash":"fffe0c44921ec28dd2fc1512493b912411d06628","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/snakeCase.js","hash":"b95290beac2d4eb4436d72bde0b191a8db147970","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/some.js","hash":"b6d44fdefb9894407b8d48ff379c6288fec935ee","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortBy.js","hash":"5f928288640eec63d9ce82e3c16750b4952f5aa1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortedIndex.js","hash":"e31955eb8a9dcf9868e2df8f112a8ef873709970","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortedIndexBy.js","hash":"785066b03fae1e7fa508b7380f95727d02284d7f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortedIndexOf.js","hash":"21e71189ed17c2769fcd2c91625af1a65b84591b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortedLastIndex.js","hash":"b886560112d50f2aef5f1acdcc5cd9296ff6f8b7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortedLastIndexBy.js","hash":"4bf9117b8f1d0161a8369f127220b897819cd6a9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortedUniqBy.js","hash":"e9ee6345a66fbef43ac161edd568feb2f197a2ce","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortedLastIndexOf.js","hash":"f4a56782a4a913c330d832d80000e0340093e020","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/split.js","hash":"f33b9e68923d6bd511a37658a794104452f1bacd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/spread.js","hash":"b5e45484e55917c836dfc464d1c1dfb5e016a53b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/startCase.js","hash":"5cae4afa2846579e8173a62ae27253a75fb57119","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/startsWith.js","hash":"10e9857ce37a805453b6e1c5e0caac454d08ba89","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/string.js","hash":"9da506e6420a685f56f77ccdcdd4dfe0ffe552b0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sortedUniq.js","hash":"612a221cb2088447b6510930f35f7140ecf41d1f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/stubFalse.js","hash":"e5b35ac8e1872e9c87f126c972891005c94e7d19","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/stubObject.js","hash":"dc710610031cb2255019c0bd8465df0d6db0111e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/stubString.js","hash":"053b1bf13c37041494b3afed57eea26d24b46c59","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/subtract.js","hash":"6927a0ddb3037e644d7d49f7aadd99f45ac2226d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sum.js","hash":"b468caad43dbd33443e584c510697155ec12a71c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/sumBy.js","hash":"9a28d421380fb4347c651dd4935461c69a465251","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/stubTrue.js","hash":"35d765e8ae55e010a1b5eda7aa6596a14a052ef6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/tail.js","hash":"9f994bae44d6e96a75142cfdbfb362f1f8190d8b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/stubArray.js","hash":"bdc0e5ed494f2924ffd64e91620fbcd8161f7223","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/take.js","hash":"07615e176130761c61262b882598a6aab8bbbd48","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/takeRightWhile.js","hash":"b4562aaf5ce999f9c4b68b1bb5296da5799e4e37","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/takeRight.js","hash":"aecb30e9e3d49c9194b57e4c7988a11b4e911170","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/takeWhile.js","hash":"7ab5baee95d7a1aa64183a266176725180d74c8d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/template.js","hash":"a0d4d446da57415c4afbb6e3da20d6a6b5efc518","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/throttle.js","hash":"dc6c20077c14d5b184f3471924032e242c9ec3b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/tap.js","hash":"a1f5e1966c3620b69def36154a27a8d9893d87f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/thru.js","hash":"d006fad2ab19f7bc90e0ec69eb5037f081d99bee","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/times.js","hash":"ee9fd905cf9b189471102ac6b4a75b745085ce48","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toArray.js","hash":"5cde4e05caa391716f89e179755c861677498c0c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toFinite.js","hash":"44b15d3279c2f94ac2098503c427e1e0eb34c3f4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toInteger.js","hash":"06e857ac41a5b7056f7b522db601b4679f04f5ee","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toLower.js","hash":"3cf1e67f3e193b9f982b8814fec29cdf99b6b038","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toNumber.js","hash":"2b6f75e579b5ec0e84426be3ce1fd0d3a1abec18","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toPairs.js","hash":"48dbccab7f479c713471fa2378d5ffa402745f77","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toPairsIn.js","hash":"ddc2a974ba685da424c9de9e2f7949b662844273","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toPath.js","hash":"973bea7fc9852f05f88b1e11a768b7b7ab786990","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toPlainObject.js","hash":"4e96ce3252e389b1633a2c73fc9d68031a12df29","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toSafeInteger.js","hash":"c49cb9237787895a00956b20b569bd384c684269","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toString.js","hash":"6c4365360e107172a439c756d9be5db5470b1142","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toUpper.js","hash":"5e6fa81c32735a5c142884a1da0b1d88b780d05d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toIterator.js","hash":"f8fc807ff29125bb2dab968633ad964ec94194b0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/transform.js","hash":"2cb75bbd3d23239daa2681abefea716e5f7e0bfe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/trim.js","hash":"de870b0426ce1ef6506652312b8298aa7caa16fc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/trimEnd.js","hash":"c18ce828f8e810a17d423d75705261ff77b34462","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/trimStart.js","hash":"fdf32db72208d65d988d3a7672d2d22a2bce89b3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/truncate.js","hash":"24f4a9506442f2cafc20a024b9d79fb6e5df3326","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/unary.js","hash":"079326455dbdd90b20704f1a3abf73cfab59d088","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/unescape.js","hash":"89bc8a104147bab3b23f5e6f1f1c3819c6168293","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/unionBy.js","hash":"0d110e48caa5b130f45e00bb7d65dcebe66e275c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/union.js","hash":"2cd89b9ad0a574cfddd5daa4c5c95ad71db6b4ee","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/unionWith.js","hash":"16881474335022100f41832178f2109f7525061d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/uniq.js","hash":"2b735c46c626dba6b45907c8c70f17475366016f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/uniqBy.js","hash":"5591128502a52624cfadfc2d4c7b20db4011267b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/uniqWith.js","hash":"0a37f6a99454364d2683df713e678bc9669d6684","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/uniqueId.js","hash":"0809eace58255a033eb37e73ce581e2cc6fe26d1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toLength.js","hash":"9a0a62cbf4f795ff3efba1fd3b1a84cd5ec94ee1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/unset.js","hash":"5f2a9664870f21d2b7dcf0255f50ad9b37a6c850","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/toJSON.js","hash":"dcaa02fb24d8915128f62a50e2782e30d7d4fe8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/templateSettings.js","hash":"fa92b30409e71f025035d7a47921a061b46f70df","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/unzip.js","hash":"9adc3e8903f6134c27951f3a558286a7667656d9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/unzipWith.js","hash":"13255720f48e23ba96205aa49fe5bb538b3c640c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/update.js","hash":"abae1fa2fd4b937bb1cf1f4a0fb4a73eb9d4aaab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/updateWith.js","hash":"dd63e7b716f897c2bc9f7d39884e0282ba81bccf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/upperCase.js","hash":"4ce59b5839e848688ed76fc99d62f35168f9f46c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/upperFirst.js","hash":"091005e45cf8b9ce4f51e1b2ff2da30558b40714","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/value.js","hash":"dcaa02fb24d8915128f62a50e2782e30d7d4fe8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/util.js","hash":"9e3bd39fa03689fa7d9897be9c2387e19646662f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/valueOf.js","hash":"dcaa02fb24d8915128f62a50e2782e30d7d4fe8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/values.js","hash":"6304ca5a2c8a30cb1eef8cfb80aed716e29d3495","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/valuesIn.js","hash":"5d6cd8fa3358eafef39b236579720c3d6c4450c0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/without.js","hash":"979bbb5dc3e1e17ea311c4d85a47b5b8b5c9c58a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/words.js","hash":"74ebd3c81508567ca14f57f717488d4cf337101f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/wrap.js","hash":"956d1896e8a55677cef08f879674d4de21d45184","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/wrapperAt.js","hash":"4974d8fad13c6913d78fe90db2de8cd83a811f47","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/wrapperChain.js","hash":"0b6afa60d6fedd5ae935c2127562ba2a590b5b14","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/wrapperLodash.js","hash":"b20f7aa45935b9d38b954bc7fc07b0a15298df77","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/wrapperReverse.js","hash":"2318334d83fc88acd2b7fa81c1a709b957719f4a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/wrapperValue.js","hash":"dcf31c73fbacb8ab409179125d9ffe51e1ec8696","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/xorBy.js","hash":"5e7d74900860098de29d83658deb9eccc1f7b840","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/xorWith.js","hash":"ceb3b359ce93812b82f622e0c117585ba83b2996","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/zip.js","hash":"2df2c5d391c0c7fb710357e33d6a9f16425d66fa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/zipObject.js","hash":"fa1c2ef419f663fe0b552effed4b64428cb52f15","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/zipObjectDeep.js","hash":"a4cd8a063e87152a2229d1493af4fdd0419d3ff0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/zipWith.js","hash":"8cb8637b0b2b1174922ef35138408a777911267a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/CHANGELOG.md","hash":"7ae87fdbd050fa1fa16729c490de36f7c6f9489c","modified":1431657567000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/LICENSE","hash":"7bc795bf398cfa51e99e85dc51931c3b0d1b5a79","modified":1412127778000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/package.json","hash":"629af9e39b163764986e6dda63ecbe0ae57eaf3b","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/README.md","hash":"dcc23563003f5a244fa3d10243f50a46d8313f11","modified":1412127778000},{"_id":"themes/tranquilpeak/node_modules/lodash/keysIn.js","hash":"e444c4b265f9f39968467a82c09935bfa1be501a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/xor.js","hash":"77e7c70d299ec7430efd31d411e46bac4dd0450d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1448659987000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/map.js","hash":"f0d63208dec47fe1d9c69ab74fdf54298406dce4","modified":1451963009000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/package.json","hash":"f4c038dcf01b9128c42a91bbaf959ede3953a540","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/pseudomap.js","hash":"34cddc0bc6daaf6c7092d2659612969b8700d8fa","modified":1451963009000},{"_id":"themes/tranquilpeak/node_modules/psl/.eslintrc","hash":"0efbfeb1ac2f04077b1b704c8c30b0f213402bcf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/psl/.eslintignore","hash":"7034922a65cdf513621de2751fe1d2a5919456b1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/psl/.travis.yml","hash":"873eab54c36ab3c2cae5097fd68dae2d2aad1f04","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/psl/index.js","hash":"9e7fd00d5e988f4034720c6831e47a0f258261f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/psl/package.json","hash":"e28ce56b8eb79de5f19be2f81c493821a659173d","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/psl/README.md","hash":"d4e5b3d92d8f5a628c926aeb02dd7ee971aae4f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/punycode/LICENSE-MIT.txt","hash":"d7384cd3ed0c9614f87dde0f86568017f369814c","modified":1408532732000},{"_id":"themes/tranquilpeak/node_modules/psl/karma.conf.js","hash":"eff61ddf45a72571673455ff42a746405c98ced4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/punycode/package.json","hash":"e8002f15148a93470f7b88fa69ada45284d6eb3b","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/punycode/README.md","hash":"c332a96ebde88c232159d794e4d417a6d834e1e1","modified":1424815497000},{"_id":"themes/tranquilpeak/node_modules/punycode/punycode.js","hash":"cc7535a3f0235f4b3ad0030b16f418eb2abf454c","modified":1458437195000},{"_id":"themes/tranquilpeak/node_modules/qs/.editorconfig","hash":"482f35688b4e4f8b77ee64b804fca396e2a23022","modified":1501090018000},{"_id":"themes/tranquilpeak/node_modules/qs/.eslintignore","hash":"7b8fdc232fc9b1a8050da3c419dea3d23b5da9c5","modified":1450856430000},{"_id":"themes/tranquilpeak/node_modules/qs/.eslintrc","hash":"af86f256e00e4a0ebe26c0ef8a926e191d81033f","modified":1525237041000},{"_id":"themes/tranquilpeak/node_modules/qs/CHANGELOG.md","hash":"5374e64b21af4db41ef1b529b7d0d0d8ab8f3bcb","modified":1525377002000},{"_id":"themes/tranquilpeak/node_modules/qs/LICENSE","hash":"ddf13f1b7345d730677237125bc2e46fbbfbbf32","modified":1450856430000},{"_id":"themes/tranquilpeak/node_modules/qs/package.json","hash":"fe06299df51186ba1dce15a12d87327d5d63a93b","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/qs/README.md","hash":"ac4ad81116c9e9e06c46433b58220bc94660ac9e","modified":1497472480000},{"_id":"themes/tranquilpeak/node_modules/request/LICENSE","hash":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/README.md","hash":"93ca8dd88b562f1cd856143e500bdb679419e088","modified":1448749520000},{"_id":"themes/tranquilpeak/node_modules/request/index.js","hash":"c62c4d3004ac33bfd8e85d9545814592701ed0f8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/README.md","hash":"213bccfab96042fa0e3090d23920c63ff03636b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/package.json","hash":"408328647daad91bb9603cd073c8c7192055b9e8","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/request/request.js","hash":"62d8a3a5b6be528c6b466fde90d90e8bb148fcb0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/LICENSE","hash":"51b90ec5dffcc96a67ad05482c10105c3825fed5","modified":1467933494000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/package.json","hash":"b4d1ea474d0ab3d75fd74fc1b1ce0bb24225211e","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/.npmignore","hash":"bf345c06675f9c3d7ab0c25777cda673ec6483be","modified":1468199112000},{"_id":"themes/tranquilpeak/node_modules/request-promise-native/LICENSE","hash":"0759cd9539c8d4a9f631cebd91c31741dc8939f2","modified":1494207818000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/errors.js","hash":"9731a5073ab89b07f5c0ec37b3e7603af4159664","modified":1465070200000},{"_id":"themes/tranquilpeak/node_modules/request-promise-native/README.md","hash":"49ab82e70646685ad7535d97d413d9b2a57b1151","modified":1506098858000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/README.md","hash":"9d6f8c06a6d995b3ec9af8eb28a3b57ebd38c18c","modified":1470652546000},{"_id":"themes/tranquilpeak/node_modules/request-promise-native/package.json","hash":"d8be9eef387534f2adae64c342c0dedb2306b8f0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/request-promise-native/errors.js","hash":"6eb5aa243f1f1c3ebca593ab9c8914a3f30de7e9","modified":1470655112000},{"_id":"themes/tranquilpeak/node_modules/safe-buffer/LICENSE","hash":"07d9563f6153658de124707787ff43f0458ab24a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request-promise-native/.npmignore","hash":"bf345c06675f9c3d7ab0c25777cda673ec6483be","modified":1468199107000},{"_id":"themes/tranquilpeak/node_modules/safe-buffer/index.js","hash":"f67b8decb99eed068f28c9ae56df08c21bf4c33d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/safe-buffer/package.json","hash":"0cfa8e811191d5d5283b28bd77eed3fd164863a9","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/safer-buffer/LICENSE","hash":"cfcb19ab237382e4ce1253c5f0e28ad153a3c77a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/safe-buffer/README.md","hash":"75916065970faa645bca603327ecbaea09afe12e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/safer-buffer/package.json","hash":"6d1541173849cec3b82034cf85bd5745a4f97788","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/safe-buffer/index.d.ts","hash":"0b5844a33b757b9db574541363116917fcbc6d90","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/safer-buffer/safer.js","hash":"ad919cad501061f663026f382334cc6ce5a8b381","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/safer-buffer/Readme.md","hash":"133890ecc4218d9c67890f0e5884e754e824c859","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/sax/LICENSE","hash":"fe4ff75272675c27279ddf101a2d6d7cd1e9ad64","modified":1471034108000},{"_id":"themes/tranquilpeak/node_modules/safer-buffer/dangerous.js","hash":"f5d11729706b0de3ed7d6f35060eb73680cce42f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/sax/package.json","hash":"5e5ea1c4f90087b887a605b43b0f5f505788f28c","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/safer-buffer/tests.js","hash":"dc7fd8ad11f6c0a7de689697afc870f58f7a2844","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/source-map/LICENSE","hash":"914d42b13ad394be4aa75b4d93fde94b1e79cbbd","modified":1492467890000},{"_id":"themes/tranquilpeak/node_modules/sax/README.md","hash":"c199b68fe859344fef10880cfbe52793ffbb0d1a","modified":1458356601000},{"_id":"themes/tranquilpeak/node_modules/source-map/README.md","hash":"2ba19c8a33cf6196178891f454f98068f202ab6e","modified":1506355788000},{"_id":"themes/tranquilpeak/node_modules/source-map/CHANGELOG.md","hash":"30497f61c3317cab69ac398e6a1bbb3ced8165f2","modified":1492467890000},{"_id":"themes/tranquilpeak/node_modules/sshpk/.npmignore","hash":"695019f4a886543f630c962200d822a468757eb0","modified":1455085581000},{"_id":"themes/tranquilpeak/node_modules/source-map/source-map.d.ts","hash":"5bbd72110452608820b81dc1323c208f13c0047a","modified":1492467891000},{"_id":"themes/tranquilpeak/node_modules/sshpk/.travis.yml","hash":"1cc0c8e1f34a6f75f2cd25a733c765ac6ea793d3","modified":1461556498000},{"_id":"themes/tranquilpeak/node_modules/source-map/package.json","hash":"be7d662c842c3cf47cc3b263284df9f8a2ed49f4","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/source-map/source-map.js","hash":"54dd50c132e3a298bcad252861389300ac0ce265","modified":1506367807000},{"_id":"themes/tranquilpeak/node_modules/sshpk/package.json","hash":"0dccd6a40de0cb38f252746b55a880e210425301","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/stealthy-require/LICENSE","hash":"0759cd9539c8d4a9f631cebd91c31741dc8939f2","modified":1493067079000},{"_id":"themes/tranquilpeak/node_modules/stealthy-require/README.md","hash":"4a52831cbca9bb3cfb329d63ab6d30bd6e62d3d3","modified":1494301514000},{"_id":"themes/tranquilpeak/node_modules/stealthy-require/package.json","hash":"2de4e9ef2867d6a1cb8e23786db60cfe79f727d4","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/index.js","hash":"f09dc95c800739d2d0367c367428f9d93f81aa5a","modified":1461295088000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/package.json","hash":"21b5f93b5aaf9e7c729ab4cc93b27cad3a9b30b8","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/readme.md","hash":"7155400ace3c601db99559f4095cf596df56bc08","modified":1461295001000},{"_id":"themes/tranquilpeak/node_modules/striptags/.npmignore","hash":"631c0bbafc06a9acdf32b5f1d0a32b425d5327a9","modified":1484106258000},{"_id":"themes/tranquilpeak/node_modules/striptags/.travis.yml","hash":"d9c5d47c7c006d737ad01c2a1f10d42206189a33","modified":1484743147000},{"_id":"themes/tranquilpeak/node_modules/striptags/LICENSE","hash":"88d9c86133613e38d3fcdc5766654e81d0cf0205","modified":1484716669000},{"_id":"themes/tranquilpeak/node_modules/striptags/README.md","hash":"312dad4632c3d8c145980983451c551bfcf1c352","modified":1484743376000},{"_id":"themes/tranquilpeak/node_modules/striptags/bower.json","hash":"721bd625f002394f7422251062ee4cd8e409388c","modified":1484106258000},{"_id":"themes/tranquilpeak/node_modules/striptags/package.json","hash":"ce30d67ed8e1cbf1fce932c3e7917f7bebbb0050","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/striptags/striptags.js","hash":"b76eaea01c6f86d3a6f187ca1e4b30e7f059ab07","modified":1484743003000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/LICENSE","hash":"4a83221ab3d6c912541e94c598d9e6823479641b","modified":1436902550000},{"_id":"themes/tranquilpeak/node_modules/stealthy-require/.npmignore","hash":"bf345c06675f9c3d7ab0c25777cda673ec6483be","modified":1468865013000},{"_id":"themes/tranquilpeak/node_modules/sshpk/README.md","hash":"1716cf8d873c6600648814b6b08c5ef3f838d697","modified":1489167517000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/package.json","hash":"32195c34681139b0791a06911c58afa211fe67dd","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/sshpk/LICENSE","hash":"10b8ac49ffb8f7cc8bdca9303209a1b3b2f3587d","modified":1455083271000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/README.md","hash":"a0e56c5c667e54f8c5296aec6008824bbce398db","modified":1486846682000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/package.json","hash":"65e274d6f30971355fc6558d5bc58ec52449873a","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/LICENSE","hash":"27b1c1365696caf2b2be9a9fa391fa93b0152cb6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/tr46/index.js","hash":"d6dc779dbb32df32f917a8fa29fa29d93c619b54","modified":1504404479000},{"_id":"themes/tranquilpeak/node_modules/tr46/package.json","hash":"8c4820f6059cbb2289a9c5f53ee0c17cb3fb02e0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/tr46/README.md","hash":"466645e1fca683d449f24042e901bab27e232f19","modified":1504404475000},{"_id":"themes/tranquilpeak/node_modules/tr46/LICENSE.md","hash":"9a4bb15fac72b22140d8f816f5458f78d6b6552d","modified":1495888608000},{"_id":"themes/tranquilpeak/node_modules/tunnel-agent/index.js","hash":"61c5cadcb5f04336e11d95cb55f86f18cb986f9f","modified":1488673752000},{"_id":"themes/tranquilpeak/node_modules/tunnel-agent/package.json","hash":"1fb6b1414088de98fa538bb80100bf289e1f3960","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/tunnel-agent/LICENSE","hash":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1366607489000},{"_id":"themes/tranquilpeak/node_modules/tunnel-agent/README.md","hash":"fab5bff0eba532373f36d827d9775105d64ff719","modified":1366607489000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/AUTHORS.md","hash":"f075e705a5f8e8ff0e7842de6a26ebf53e08f745","modified":1481623354000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/CHANGELOG.md","hash":"06dec0b7fb3130df4b0fdd1f8122bf2cd196e900","modified":1481626689000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/LICENSE","hash":"24944bf7920108f5a4790e6071c32e9102760c37","modified":1481623354000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/PULL_REQUEST_TEMPLATE.md","hash":"e88e8e670a11b57fc18bb19a15c1c0df04517a09","modified":1481623354000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/README.md","hash":"cf98261b2d1bc21a11ab1f28ee70cc2597205802","modified":1481627238000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl-fast.min.js","hash":"08db9a8b57304c3c117c2a5ba117e25a0d816b34","modified":1481623484000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/README.md","hash":"d64afec360a861d6748989cf4303678159b4e277","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/.npmignore","hash":"11c8e36af35ec98e1a2d7eddf45646dcb6653169","modified":1460742445000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl.min.js","hash":"ab05565ba3e2cf29401962ddcd94912e54d916f3","modified":1481623482000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl-fast.js","hash":"b8caf62487ca1fcba5ed9e47571bdff0806b8fc1","modified":1460742445000},{"_id":"themes/tranquilpeak/node_modules/type-check/LICENSE","hash":"7bc795bf398cfa51e99e85dc51931c3b0d1b5a79","modified":1428793762000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl.d.ts","hash":"074079a1aca6756d5a4fec3f3fd4a9f6e9c00f66","modified":1481623733000},{"_id":"themes/tranquilpeak/node_modules/type-check/README.md","hash":"b24649e95ad0b070fbb84aae7a3b25147cad305a","modified":1451367634000},{"_id":"themes/tranquilpeak/node_modules/safer-buffer/Porting-Buffer.md","hash":"1f23a158dc57c02812baef3334ef96ba1c940e5c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/type-check/package.json","hash":"ab2debc27e657c4c391a670a7b01166ff2e5c7f5","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/upper-case/package.json","hash":"774a8cc21bda04ccd63132256809a9ca9c583c2d","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/upper-case/LICENSE","hash":"3a7f886b632d2197676a40020d354e84b7860604","modified":1450225475000},{"_id":"themes/tranquilpeak/node_modules/upper-case/README.md","hash":"2eeec02b0cf6dfdd2881c754a3ef3340f7cbc348","modified":1450225513000},{"_id":"themes/tranquilpeak/node_modules/upper-case/upper-case.js","hash":"cc2dbbcf88c099a8c8a4db4c424e663ce9826a5b","modified":1450225475000},{"_id":"themes/tranquilpeak/node_modules/upper-case/upper-case.d.ts","hash":"a5610dcff5a1a1f54b45b84e2f82b8393aeaa682","modified":1450225534000},{"_id":"themes/tranquilpeak/node_modules/uuid/.eslintrc.json","hash":"cb4d88ea242b9938ab64c0445baa41f9ef366a02","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/AUTHORS","hash":"55ad68da17b6319a39a82d7c7f7a3ea1e951dee8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/CHANGELOG.md","hash":"f81c4e89670fe5d8573f553a8d99fa5d4458d00a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/LICENSE.md","hash":"65e6555c3308c1d9538808d6c67e75924b8ad912","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/README.md","hash":"49b1c8547e5d44bd9199c15ad35d4237fb18fec0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/index.js","hash":"8e8abb1384d04d1ec5745c9824eee400f77536c0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/README_js.md","hash":"58e2418907131ae07fa5135ecf1985576dfd7fcc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/package.json","hash":"1e5ab7626018eedc7dfb1218afb276567cac867b","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/uuid/v1.js","hash":"02e4c5e78eb8183c890753bb6ce6f1aa7479bf38","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/v4.js","hash":"af1ab906dd54d3df6319d096b3d5f10686aa7331","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/v3.js","hash":"8815de1e54c316b5fc537712462a07a45e229fec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/v5.js","hash":"5666846c28ee13c09c22763866145dffe92762bf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/verror/.npmignore","hash":"e9062d79bd70146c728778571cbdec1dfa54bcd0","modified":1475636976000},{"_id":"themes/tranquilpeak/node_modules/verror/CHANGES.md","hash":"557736d3be5363b84f160d480fd2143bbe324c36","modified":1493743176000},{"_id":"themes/tranquilpeak/node_modules/verror/CONTRIBUTING.md","hash":"9147b55a7f13fa4e1db7fe3f83d4415be389ab8a","modified":1475636976000},{"_id":"themes/tranquilpeak/node_modules/verror/LICENSE","hash":"ca9d7f4229b385ade88c365257829b4005e85b9e","modified":1475636976000},{"_id":"themes/tranquilpeak/node_modules/verror/package.json","hash":"3b41b83ec0f74321f00ffa0f965e3d951c976ef5","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/CHANGELOG.md","hash":"2dc8e5e372b3b1286185c68df547d8d515e2da5c","modified":1514946796000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/README.md","hash":"e61643ec10f2046daf30332d2c8fd55c1cb147c2","modified":1514945956000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/index.js","hash":"3be166488a6ae06c43efb2532226d916f7ea0b3d","modified":1514857170000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/package.json","hash":"7658e5ffdde28cee33aadd34e956683221d1690c","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/webidl-conversions/LICENSE.md","hash":"60314089ff0e607f8aaf708db9791993dc91ce21","modified":1486836785000},{"_id":"themes/tranquilpeak/node_modules/webidl-conversions/README.md","hash":"252e8c1ecf6fd2f02c38798bdfef6c16a51c2daa","modified":1487625478000},{"_id":"themes/tranquilpeak/node_modules/webidl-conversions/package.json","hash":"de23ccd01db63529077c4378d521b357696f458d","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/whatwg-encoding/LICENSE.txt","hash":"75a7010f177dd65249a42042aa44e893faa9dc07","modified":1508717590000},{"_id":"themes/tranquilpeak/node_modules/whatwg-encoding/README.md","hash":"808b7a6cb33500319acaf30582facf6f69c49007","modified":1476582230000},{"_id":"themes/tranquilpeak/node_modules/whatwg-encoding/package.json","hash":"8a2dbf567b7c8ffd7196080aa9a7f0c129293590","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/LICENSE.txt","hash":"5cd9badc23e4c735ca1cbb6d65110c93c843b9b0","modified":1460756393000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/README.md","hash":"1b0d8b3419e8a2a9d0d259d445d0a544394233de","modified":1528490183000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/package.json","hash":"3aa0419c44ea721748c70eaf5b06f1149ac87337","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/which/CHANGELOG.md","hash":"182c7a32e7b74f4c6097c893031a88dd8897ecc6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/which/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/which/README.md","hash":"880b21360637c36418d55dd08211f1017c881df1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/which/package.json","hash":"1e08570fad0fc528ac8482fc98d3c7360e5edcaa","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/which/which.js","hash":"f39455d215c8d397782f1efbc6e52254d0f9a4ab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1431018471000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/README.markdown","hash":"2c6150a823511e8ae14eaa7bc26334a1b8fc49f3","modified":1431018454000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/index.js","hash":"756e8b536a238426b7eb92e4eb6d2e5ef938eccf","modified":1431018454000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/package.json","hash":"79b43a3407bf6fa10ba0919eefb8395450e9cb7c","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/ws/LICENSE","hash":"5267b8c02607adefda571a85283fcd110ae081ba","modified":1515071231000},{"_id":"themes/tranquilpeak/node_modules/ws/README.md","hash":"29fa3c5f213e299aded7a4c3db40f4a6caf915ae","modified":1519285790000},{"_id":"themes/tranquilpeak/node_modules/ws/index.js","hash":"9498ad1513c805bf0d295a1b7b85cec951a03a35","modified":1517814396000},{"_id":"themes/tranquilpeak/node_modules/ws/package.json","hash":"7aad2ddbb7b55a223dbdf7a938c5ad003a9a897f","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/LICENSE.txt","hash":"a6a5418b4d67d9f3a33cbf184b25ac7f9fa87d33","modified":1485727000000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/README.md","hash":"1bc8e7409c9f0eb0d0d2d56887389881845c16f5","modified":1424801291000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/package.json","hash":"b2c6083ebc15f81f123b121da970d38e20a0e6cc","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/yallist/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1450425977000},{"_id":"themes/tranquilpeak/node_modules/yallist/README.md","hash":"930460a06c3414c2dceeeca378fbe0057779fab5","modified":1450554690000},{"_id":"themes/tranquilpeak/node_modules/yallist/iterator.js","hash":"baf1ff1052a38543b84d4bba85a62dc78b1ab107","modified":1489370602000},{"_id":"themes/tranquilpeak/node_modules/yallist/package.json","hash":"79f8f6ac0fc8db7eb5d0b2715eb6f377c2aa9c22","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/yallist/yallist.js","hash":"c042dba0e8d1672a56531936a03533f5aaaca9de","modified":1489443354000},{"_id":"themes/tranquilpeak/tasks/config/clean.js","hash":"ea70743eb4ed0d9ead68d6fc8b65b9f936229a00","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/concat.js","hash":"0c2c4dbbfac52f20a3035a2f8cd1c24f1759b17e","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/copy.js","hash":"cccb98740ef95c0fc7c8f8cbfb8248d7b198ee1d","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/cssmin.js","hash":"352185864437728c9c19169f4fec6fc3308e8b6d","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/replace.js","hash":"5b937c46e52018fb10d571532e11e2b5414fe4bb","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/sails-linker.js","hash":"c1103119ec7d1f04cfbb1cda83b40d11e8f2d218","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/sass.js","hash":"79d65bad62ca0c2a8a155a76faa2be3b0c361bf0","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/sync.js","hash":"fbc09d0ed201993bc1918223b8f8ad5b68f50490","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/uglify.js","hash":"57c7341a004b61539f5b3f02bd772f40494b8306","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/config/watch.js","hash":"933eecd8a2506c627dbb9a1137305a16dd2d9f9a","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/register/buildProd.js","hash":"450ff77a1bf631d1799206d218c6468592a59862","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/register/build.js","hash":"f64c77127a2d4bfdbb9866fcf368913334f44603","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/register/compileAssets.js","hash":"a65122ba0d1a1b6044e3b635a644882577b628ba","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/register/default.js","hash":"80174db9b8a729980770e639e70999ce5a816b78","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/register/eslint.js","hash":"718cd8a80d060e2587b84e0e20ceaa39c2cc9411","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/register/linkAssets.js","hash":"079cd274cb29f9984eb7150d88f61819d2ef6235","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/register/linkAssetsProd.js","hash":"37f2fab80f25757be3e34b40bc5a26a82f088491","modified":1532936491000},{"_id":"themes/tranquilpeak/tasks/register/syncAssets.js","hash":"0813093c3e252a58371db53e914183a97e3186a1","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/verror/README.md","hash":"4464bdc3da677f07d0f22e1b14f81a81cdee75f0","modified":1493743176000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/package.json","hash":"a4b6030e1e181da71b691d63c06d255f6631b1cb","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl.js","hash":"523fe36259524a0f35d056416a18de5ae96027a3","modified":1460742445000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/.keep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/ajv/README.md","hash":"6ebc96729e4448008cb6dbf74129077aea5720c0","modified":1513455711000},{"_id":"themes/tranquilpeak/node_modules/escodegen/escodegen.js","hash":"19483d9ef6976eb20ff34896444f2b683239fcc7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash.sortby/index.js","hash":"0048908d1fed5fb2aa127e7c1e42c75daed1f08f","modified":1471109685000},{"_id":"themes/tranquilpeak/node_modules/jsdom/Changelog.md","hash":"9bd31f8e7ff1a4a40f6694653276ef3445c3f53b","modified":1517279423000},{"_id":"themes/tranquilpeak/node_modules/lodash/core.js","hash":"c185403e5596a2dfd75532b34b506f7933b78617","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/lodash.min.js","hash":"dd8b9afe5f897730a8ac47fcaea7c4964273b544","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/CHANGELOG.md","hash":"c19e990e25828536705fd6d8c6db4410380201b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/psl/yarn.lock","hash":"8e540f3e2e22fbf43b8ca6cb802a83d210aef743","modified":499162500000},{"_id":"themes/tranquilpeak/layout/_partial/post/category.ejs","hash":"d4b26aa8c66aa8dbfae7a4aafed874745efb2f8e","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/actions.ejs","hash":"a331d9eb11d63225b6f42b538d14093f98cfc0d7","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/duoshuo.ejs","hash":"992368f8863f34d1dccf90c0cabc33d5dcdbe92a","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/disqus.ejs","hash":"9e0d238ed918e3138d5a9bb23a90408669e19169","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/gitment.ejs","hash":"1dcfdca4d20bab5a43bda44cf37df506ab3a0fb7","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/header-cover.ejs","hash":"4d3a73d0c6f26769f778d02a559e5055ef1ee0ca","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/gallery.ejs","hash":"09cd44fb300031266d04e7b2a4292f1a3ad5b574","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/header.ejs","hash":"3c7d8aaf9ab28a3afb435b567f892729778adf08","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/meta.ejs","hash":"f13cb5089b0d5898c9606519d1c872725a63a5f9","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/tag.ejs","hash":"2a52f38fa359f8ec8ae776e44e92c48795e31272","modified":1532936491000},{"_id":"themes/tranquilpeak/layout/_partial/post/share-options.ejs","hash":"4d1947bb0a99374b61ca1f8ece54f83160d9f76b","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/css/all.css","hash":"4206f610954dd350d05e129ef672efbca9e2147c","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox.css","hash":"a5913612c237bb7443c6006a386edd775201d423","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/css/thumbs.css","hash":"d805bc578c883345f0c2e533db2d2548281132c4","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/js/thumbs.js","hash":"9bd2831e83f5d851db6ceb4a3d354b59367a999b","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/js/tranquilpeak.js","hash":"1cbba91c61927cb52093df77a198f62ded33466b","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.eot","hash":"b46728e18106256d291e452e3e39e68536d8f910","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.woff2","hash":"0a885a5dbd97bd9f4fb1821eb82f2135471faff9","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.ttf","hash":"0a43b6f9d5b4ffa33cfd47fa59e705031cca81b3","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.woff2","hash":"8aba5b59c5aa7f548a1fa663f02f3cdd3757bb52","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/base/_base.scss","hash":"f0a46b090a0a4dd21edfd89095761895c5278ecb","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.woff","hash":"3799764c40e3f87674d06b9f1e7a3e2128c6cdb0","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/pages/_search.scss","hash":"5f7cde0b68156ea802c3caf6cd673cab948b09d9","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/themes/_hljs-custom.scss","hash":"a0ffab53db35bbd4881aeb077400cba55551f3bd","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.woff2","hash":"285cf9d32fae400ca979a369d299973307aa3416","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/themes/_hljs-tranquilpeak.scss","hash":"3c1e0d8b6e2f37820d00572878d060080c5a6fe7","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_archive.scss","hash":"cfdf53475d228643d5c5e62689b3c6a593e4ccce","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_alert.scss","hash":"1e6bf40de34a341dd0228357e288153b9292977c","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_box.scss","hash":"eebaacf55234fdaa156edb7dc4d9a4f382eaf4d4","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_fancybox.scss","hash":"e162e2ecafc2be70238a9885fd57a9a7ad642757","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_button.scss","hash":"ea9bd41800fe04860f7e892c17010588b2563a06","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_code.scss","hash":"0a14fe197c221a4d4d91ee9d41541ce7969043ca","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_caption.scss","hash":"dad2683f5f3235b335eebcbda3db59a1cfbb2283","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_figure.scss","hash":"01152043de4e23f6595835941732563f09a033f3","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_hide.scss","hash":"c2f5ed51086b9ea5d94ff548bdc4653ea5cd7912","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_highlight-text.scss","hash":"7a7a8a78f75d6c43a46fd020e2d44546e716751b","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_image-gallery.scss","hash":"f683e80d69a0d5ac4e832d236ff5576cc749858a","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_form.scss","hash":"368187e0c5f1a57d8c423f2ec23e897ee94a1a27","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_icon.scss","hash":"60dc972bcd81b4f95ab2c067ca910a5bf324d907","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_main-content.scss","hash":"90c46c87289a8b3cf7c14d36900f5ced9db36c25","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_link.scss","hash":"7460155ebf7ce0d3e9acd090b6b99673127fd0be","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_modal.scss","hash":"bc56f823cd67b2ed65b5cf2c3e1851fa3e82f0f9","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_media.scss","hash":"84aa03c01b741bbeb31c6b48122930f30ad40de3","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_pagination.scss","hash":"809b9330a0e2d79c9285c1a452d61648248c8b70","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_markdown.scss","hash":"ba6d7e8f84b3b6dfef339f28b5c6ae372ead674f","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_post-actions.scss","hash":"6ecd72369cf03f59cfe749eab2712c5201cadd72","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_pullquote.scss","hash":"86bc35ba358d1340debc459a344f5f6d34acaa42","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_post-header-cover.scss","hash":"c4bf950602ccb3fbdad54938979651a7b488236e","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_post.scss","hash":"0457c281b7893f8fde8a0590e4c1ff2ffb4bc1a6","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_postShorten.scss","hash":"4b545d89a2c4ce9857c2d83c942b3d78c09d8296","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_text.scss","hash":"7b38858248da2f73cf64c5949fd475a8e0a246ae","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_share-options-bar.scss","hash":"d680e68c9fc1a2a1f31a5dff2938c2f7c29bd526","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_tag.scss","hash":"ddd1c2ce17f0116655bdacda598e7f1d6fd18262","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_tooltip.scss","hash":"f33ad3e677761af1ceb42d337691b8b354ff70bd","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/components/_video.scss","hash":"f9727fd300d73e8844abf0e2575c45e6c7769333","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/layouts/_about.scss","hash":"52bdadfccaf3bc2082412348cd419c9da5793530","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/layouts/_blog.scss","hash":"2450e07594a5e5186170fb5b5b157cc340808a9a","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/layouts/_footer.scss","hash":"645161942c66e6afbd666b4755337a6a6261e5e0","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/layouts/_header.scss","hash":"d840a4be850cb258167ee1081e1b288dc64b3d2c","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/layouts/_bottom-bar.scss","hash":"c7816c7ebc253d46466355860ead6669a3707ac6","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/layouts/_cover.scss","hash":"03a951c9b35dd4e35456caa36950e6d6bef77ac3","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/layouts/_main.scss","hash":"ee4648502b355db51fc6cb7b05375003331f2f6e","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/layouts/_sidebar.scss","hash":"facaff0ca816a4ace67c7689e4286e88eb1010c2","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/_fonts.scss","hash":"46f2edf56fb049f6d7289abfd5ad238a2c0c10dd","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/README.md","hash":"93372703e5c10b8563012ebdf265226dde2505a4","modified":1496937320000},{"_id":"themes/tranquilpeak/source/_css/utils/_variables.scss","hash":"f85f996b36a56a07d927e58ebcfffd9e21beaf6c","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/bower.json","hash":"8adb28494ef699ad1fe1accbd55fe77c6c3ddedb","modified":1490384385000},{"_id":"themes/tranquilpeak/node_modules/abab/lib/atob.js","hash":"109fab4513b54f8893a6f22e843c12791ce98968","modified":1505957314000},{"_id":"themes/tranquilpeak/node_modules/abab/lib/btoa.js","hash":"11acd3ce99cd56feddba76e097165608168e6b2d","modified":1505957314000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/package.json","hash":"90efdf0bd5f1f0ed3b9b384a758b256ffdaacaa0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/acorn/bin/acorn","hash":"385d05081580db6a79c543e00f9b934da7a209e0","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/gulpfile.js","hash":"11c31d66def6ee7d8f00abccc47a2c90ff147f40","modified":1489094010000},{"_id":"themes/tranquilpeak/node_modules/acorn/bin/_acorn.js","hash":"d5b7f5c2dfbd706ac5ed054678480c93c8170b1c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/bin/run_test262.js","hash":"91a6e3ff324d22cb580908dcc55190c05d834903","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/bin/test262.whitelist","hash":"7f0a0fe3a3bb1e64f60134727f0e870584886dd3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/acorn_loose.es.js","hash":"7370e179fe3b63309221d59481ef8627636c5254","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/walk.js","hash":"0f87159cf7e4260ccf890f365b5a2b0749daeca5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/walk.es.js","hash":"64b63f9cbc2085ec8f791506889ab2b7ade432d0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/acorn_loose.js","hash":"eab506b9bc3317774f18a5ee2e793ed6ee415210","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/LICENSE.txt","hash":"c48a7d100730cfd1b71d3830179dbf40fdd9c3c2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/package.json","hash":"8f867f3339b7a408c090f5e445b1631b58191409","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/$data.js","hash":"5f17432e27da3807ae81e22675f57e3ebb8b7c0e","modified":1513455711000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/ajv.d.ts","hash":"dfe87dc9ac17bb3522c0f963b7ca9d9a250b49b9","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/ajv.js","hash":"c8816bfe886c18246ca2835cb8dc97d626544380","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/cache.js","hash":"ca2c2b8d327699c615a231ce5b3d2ea2207ca558","modified":1482868041000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/keyword.js","hash":"126487f787ba5ecce7e2d6453bf758702b6e2d34","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/patternGroups.js","hash":"f84d362d56b013e28659f14fe59c55ab92199f17","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/scripts/bundle.js","hash":"11eba606302f969b6d27975408a41b622a81f1e2","modified":1495201015000},{"_id":"themes/tranquilpeak/node_modules/ajv/scripts/compile-dots.js","hash":"4d065f52ccb7866d81ebb7fb707348505a9c93f2","modified":1509199092000},{"_id":"themes/tranquilpeak/node_modules/ajv/scripts/.eslintrc.yml","hash":"a9741a141e6a7184474a2cce07fa3b6651edd8d8","modified":1489340100000},{"_id":"themes/tranquilpeak/node_modules/ajv/scripts/info","hash":"a95450a7ad65a96a1c5e6c35cf4b58b765d24753","modified":1478659364000},{"_id":"themes/tranquilpeak/node_modules/ajv/scripts/prepare-tests","hash":"026a06e1e82e631f048ea3e1a92c93f4b21bce8a","modified":1489340100000},{"_id":"themes/tranquilpeak/node_modules/ajv/scripts/travis-gh-pages","hash":"d4319e13aaa6fab37f07912157029797da9ce24e","modified":1492433195000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/index.js","hash":"cbff145d47fb41eb1262f012a7024e7b0e527d6c","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/coverage.json","hash":"b1aa162a9facc96568432ccf22d7a16b5b2ba6a5","modified":1505146634000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/abort.js","hash":"440629b13ff27be58720005cb549f38903d80737","modified":1465585654000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/async.js","hash":"c5d0ae608872e8fcc47a465d51564b6576c49401","modified":1463755306000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov.info","hash":"63a8a1dcf572505ef3227284769d0be5d384b413","modified":1505146634000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/defer.js","hash":"751e8dd7ef7b877d05e66eb8782f95ae78351c4b","modified":1463755276000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/iterate.js","hash":"219e4942b78515ab728825d33473715c246fd081","modified":1465585679000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/readable_asynckit.js","hash":"6a883852b3639a6c4a7e7e4fdefa2bd08c6ecedf","modified":1465752133000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/readable_serial.js","hash":"05bbc69be79b76f58faeb2805697ea9469c60d89","modified":1465715271000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/state.js","hash":"fa825d1971532d33a039d634de8aed494c09c08a","modified":1465664364000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/readable_parallel.js","hash":"55538262a65702eb61a29e2ea3a20637490f96d9","modified":1465716911000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/readable_serial_ordered.js","hash":"bf2240383cb36d9a191d5ed87abb5d8674ddd8d4","modified":1465859663000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/streamify.js","hash":"cad24d3ac61e7d9ad281c5190c5cc4e4ba8e6f3b","modified":1465693502000},{"_id":"themes/tranquilpeak/node_modules/asynckit/lib/terminator.js","hash":"1f8a78f42a386e65c9fb5cf621a90a2792dbb63c","modified":1465665521000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/lib/combined_stream.js","hash":"90d3d9ce7524d0d4ab781e30bac86a79613ec29a","modified":1518452880000},{"_id":"themes/tranquilpeak/node_modules/content-type-parser/lib/content-type-parser.js","hash":"b6b908d4503b4dd50f33ec5f8afcea6caff05b70","modified":1476565909000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/lib/util.js","hash":"7d34435928ee9228995c04eaa7bdcef875c41e65","modified":1447979840000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/lib/defer.js","hash":"751e8dd7ef7b877d05e66eb8782f95ae78351c4b","modified":1518452620000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/lib/enoent.js","hash":"6318a907092ab4ff4ff31305e4a272f5fd877a9e","modified":1474803762000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/lib/hasBrokenSpawn.js","hash":"bb8d6bdbd5251c907d86a4d57cd6623b3ade53c0","modified":1474803762000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/lib/parse.js","hash":"d2fa758fe5a3f564c953b1e9203d4eea138102ab","modified":1474803762000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/lib/resolveCommand.js","hash":"2d7efa07faaa5429bd7ac215ec720fcc3d0657e9","modified":1474803762000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSDocumentRule.js","hash":"0ee1f0b41c721f75eed11c4f7fb1e87f585edc5b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSFontFaceRule.js","hash":"f1e699079b71a477dc9fc46a1f1bb9007017d0ae","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSHostRule.js","hash":"7c7f61ef2195e042bb8a1fb43d60a7b7c41b1915","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSImportRule.js","hash":"1081c7a454a5ec42e04aa8e7f9cba5906b4f6bbb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSKeyframeRule.js","hash":"f5d25f1a629f3a82f9de69af784fa18ee5e58045","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSKeyframesRule.js","hash":"56c4495b14eebac5959c5535b35922382ecf12cd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSMediaRule.js","hash":"8b11323965629b2ba9aedda39e647ea6d08730ff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSRule.js","hash":"483fe6b20de46c2badf3c4f91c5ee34bc5ff4758","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSStyleDeclaration.js","hash":"7b6c91c5d0cc6718b0a7f3c46c3ab58f987fc38b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSStyleRule.js","hash":"3cb2d96d5b34e38eb010c11f91ab4ecc3f347a92","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSStyleSheet.js","hash":"9d17a8969e2b4a1e99d9797faf01f9adda9a0928","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSSupportsRule.js","hash":"71d949d7783546ada29ad54f87a73acc914a9fcf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSOM.js","hash":"de6a578e0b719a26280bed0f83436a57259af7d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSValue.js","hash":"0e3fb84d1cae4ada0688ea12f9f53449214ae05b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/MatcherList.js","hash":"31523605a86e9f7ed2ee1ef5ad8f2afd2104e103","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSValueExpression.js","hash":"3331e6fa0a0e1434772b11fade8cce0dbc9c866c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/StyleSheet.js","hash":"2a58c6d74043ac82e4b92a3ba689441e4205553b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/clone.js","hash":"dcb453a54702b7ad7443ae9a410413e8f250a7c9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/index.js","hash":"27d83ebfc5139a9cd1e3d5a850022add8453141c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/parse.js","hash":"4e01a54514cbcd220f97c8d0cf62e77b605bd87b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/Parser.js","hash":"ec29a22b0fdb15654cec80a37b91c4f2b7aec76c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/snapshot.js","hash":"87095715792357d363969f09660584ce2c723030","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/MediaList.js","hash":"96d0254ca720a8ad15134de3dce2cc1218902ee1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/CSSStyleDeclaration.js","hash":"4d19555e852a9b7b179506002a39bf34ec8be618","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/parsers.js","hash":"3fffc495ed77b6e3671bc239e618662e4ccc0df1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/README.md","hash":"7dc18ac9034ca2637b1d73888fbda9cac6e5084d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/scripts/generate_properties.js","hash":"91344319ed43613651aa4b6acd1b9ff3daef9c77","modified":1471063283000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/scripts/run_tests.sh","hash":"103fcadde5c5652110f44563b7ea096762fc1eea","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/tests/tests.js","hash":"de1d2beb9a9305fdb358aef4f7a3d8caddc73859","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/deep-is/example/cmp.js","hash":"1425f9e4b03be1f7749131d0faa996e4fa9c5fb5","modified":1408910480000},{"_id":"themes/tranquilpeak/node_modules/dashdash/lib/dashdash.js","hash":"bcac2fce732aa9b1084e924d9ea49189d20cf60c","modified":1464847153000},{"_id":"themes/tranquilpeak/node_modules/dashdash/etc/dashdash.bash_completion.in","hash":"749ea2069b183cd2ef4e83f496ca754eef30c3fd","modified":1479854012000},{"_id":"themes/tranquilpeak/node_modules/deep-is/test/NaN.js","hash":"f910aeb95568f18c50e23a8abba0c3501109c730","modified":1408910480000},{"_id":"themes/tranquilpeak/node_modules/deep-is/test/cmp.js","hash":"b90e11d68471e025811f705870bf50b57e158126","modified":1408910480000},{"_id":"themes/tranquilpeak/node_modules/deep-is/test/neg-vs-pos-0.js","hash":"87116cb7972211ca6c25d48045941cae2bc46c54","modified":1408910480000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/lib/delayed_stream.js","hash":"097ab12e3837896d11d3f1d2c7a891d177b493c4","modified":1430160544000},{"_id":"themes/tranquilpeak/node_modules/domexception/lib/DOMException-impl.js","hash":"1ac133b4f8fb20662b0b218161c6baed86bdcaa0","modified":1502680457000},{"_id":"themes/tranquilpeak/node_modules/domexception/lib/DOMException.js","hash":"2f2d3577414424f668c2393a480fe765a30def1d","modified":1516581143000},{"_id":"themes/tranquilpeak/node_modules/domexception/lib/legacy-error-codes.json","hash":"af64c843886906c43c12732f2e86bb9c3a79835d","modified":1502679486000},{"_id":"themes/tranquilpeak/node_modules/domexception/lib/public-api.js","hash":"55499e302b579a4670efcdf03703c5a037a7c902","modified":1502679486000},{"_id":"themes/tranquilpeak/node_modules/domexception/lib/utils.js","hash":"c9f031b70bd3dea6748a32902aa40bd7f56efcde","modified":1516581143000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/lib/LICENSE-jsbn","hash":"4f94910918b5e57f3e55c7387f43b0d6293a4319","modified":1394075812000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/lib/sec.js","hash":"b1632526290dfddc063f05ac6ed29cc40bd9e221","modified":1448288300000},{"_id":"themes/tranquilpeak/node_modules/escodegen/bin/escodegen.js","hash":"ea70dd92f7321b01fd3aea944059dfc7ab7ff82e","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/escodegen/bin/esgenerate.js","hash":"00b8be70a2983d1dffae6c1395a70ea39f0f3a53","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/lib/ec.js","hash":"d9a60c831fe91bd2c62ff3e3c9675b0379ef504c","modified":1448288163000},{"_id":"themes/tranquilpeak/node_modules/esprima/bin/esparse.js","hash":"3d6b8fda44ca6d8f347c35d442c6dd838646f8f1","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/esutils/lib/code.js","hash":"dafc933c43857065c4f3fb9239efdd5c0d4aebb8","modified":1426352525000},{"_id":"themes/tranquilpeak/node_modules/esutils/lib/keyword.js","hash":"12efd22a7f3c5b9718de1ba4d0e10c432bed524a","modified":1426261746000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/lib/extsprintf.js","hash":"2331ac9de23b7cc92510c3ead98efa1a8a2de8f8","modified":1425687068000},{"_id":"themes/tranquilpeak/node_modules/esutils/lib/ast.js","hash":"646109f8189f1a1b89e7a14354413dcdd7c6a5af","modified":1426086716000},{"_id":"themes/tranquilpeak/node_modules/esutils/lib/utils.js","hash":"e5d06e7c38a9578a0d95375acab763b5b8e0480c","modified":1426086716000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/benchmark/index.js","hash":"17619f7e28ced52a18ff262b4e16d4dad2105deb","modified":1508860414000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/example/nested.js","hash":"1259337a975367c26a59b9d8dfaa91e0f0a612b5","modified":1508836326000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/benchmark/test.json","hash":"9fe75dfdacdf2fa66188890ed112d4da355815f7","modified":1508861235000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/example/key_cmp.js","hash":"9e5797f7e3c351f6bfe5c4c72304b3048d1515c8","modified":1508836326000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/example/value_cmp.js","hash":"71a64ddc23c9ded23dc156a9a2a7baf55846c1ec","modified":1508836326000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/test/nested.js","hash":"1d7b098c0ce2bdc5549c083ab09a2d7470734a90","modified":1508841718000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/example/str.js","hash":"9145496a1e5d513eda1a10298b412b3becf68d71","modified":1508836326000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/test/cmp.js","hash":"deff3391b199444278e9cc781fdf41b9ccf5bc98","modified":1508841742000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/test/to-json.js","hash":"2928abc4469f3b1b8af084795138a4eb82d83375","modified":1508841670000},{"_id":"themes/tranquilpeak/node_modules/fast-json-stable-stringify/test/str.js","hash":"1e4807d200cc96dcddbb34ad2777a0b86060661c","modified":1508866010000},{"_id":"themes/tranquilpeak/node_modules/form-data/lib/form_data.js","hash":"0597bc0beff7f785b19e8be3e7565d183fb642e6","modified":1503584376000},{"_id":"themes/tranquilpeak/node_modules/form-data/lib/populate.js","hash":"1808bbf4f1478a79ea4f00b38bf46983e48c0ff3","modified":1472196493000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/afterRequest.json","hash":"f7f70adc3b0512cc2e04133192ea4f87e0146ab1","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/beforeRequest.json","hash":"0722001e46c933b79fec640cae9cd1ffa39dcca7","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/browser.json","hash":"4db37d46769f3ecf86aa5224c185d04d4c83f56a","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/cache.json","hash":"50bb69d7fdbbb6155f26a04ff72d00551eb36202","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/content.json","hash":"81d4f4003ddd3350eff241826c14c0b9cc6d7444","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/cookie.json","hash":"752404cc8cbd04ce0ac8c1fa32eb2dd8e248826d","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/creator.json","hash":"1b471a27337a94c37d4c5ddc6e15b6ba14b7f422","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/entry.json","hash":"ec3c862d75ce851061e3c9c41dab28e3f7290795","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/har.json","hash":"e91c94dc990dce4a0f4f20f3972fd34d4a40cb76","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/header.json","hash":"751bf4dbbefb43a6f8752ae6c82b1c18be523cee","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/index.js","hash":"1e6ac13e2a43e93530c96896efbf395028e621a1","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/form-data/lib/browser.js","hash":"0ae55bb7ee9e39bd3dda8d9b6e6d6bff3855d121","modified":1478555747000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/log.json","hash":"39e98d99850119a095f065ab923ac951ef2e55ef","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/pageTimings.json","hash":"2646f23aaf7706b16932e2d0e0f407a685483b90","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/page.json","hash":"684677171808e6ca501390734f451eebfc981213","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/query.json","hash":"da4c7add90f000ded1e872114ba3630460ccea61","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/postData.json","hash":"753ec1ce064487fab23fbb0dc8cd3c14fdafc904","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/response.json","hash":"7a5c6856928f38525919c20e71c8cb10664f240f","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/request.json","hash":"799df36973dfea0675ee63e187a05e831ee74361","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-schema/lib/timings.json","hash":"2f02b1a5200eea10b0171913e032cc4d74f015b1","modified":1492544568000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/error.js","hash":"80e4d7c599adb31f6245d6b79bcc190f6ca061f5","modified":1494776680000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/promise.js","hash":"795a6e0ce4e19873a294c0d77171f6ffa116c03a","modified":1494776680000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/cache_stream.js","hash":"9346587fa9871e9a4529592e91a997e5b0a41ae9","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/camel_case_keys.js","hash":"0e506d8ee3dfae6ab57d1a04c7e6e4d82287b1db","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/escape_html.js","hash":"f3c3f1a422cd2e519a805fbdbf5f20b63a10fd9a","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/escape_regexp.js","hash":"c74fc0d14a2930007336aa11e8af4224cefac86c","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/escape_diacritic.js","hash":"9b62a42bde7671daba738e6652baee44ba30d6ba","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/hash.js","hash":"95b9f5fe38c62a76eff26c6e9771a4267a0e284d","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/html_tag.js","hash":"38f1df0d200011332249bf599980f1476f723d9c","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/index.js","hash":"721f908f2c5e561a11cbee61f2f3b753066c1618","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/highlight.js","hash":"8d40d3394f4351a49ba5fc3a4b56d5b32e93d1b5","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/pattern.js","hash":"384485bf36b97513c7b61bff21af43570ca2c8fb","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/getpass/lib/index.js","hash":"3e1d47c5742292c6964267fe3b1ef54a5918f419","modified":1493163595000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/permalink.js","hash":"0ac9bb1eb47dcb79cff07a6631fe2714eac5fe1c","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/esprima/bin/esvalidate.js","hash":"368bdfb162d02492c660e74657608f0ce4865eaf","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/spawn.js","hash":"8f3edb5b5268cf7d3abc1c86989d01da95f8a8f5","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/slugize.js","hash":"662f671305418218da6c22af093dafa90b21c674","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/strip_html.js","hash":"f20be4f49702fd241dcbf65fa73f01ff42028550","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/async.js","hash":"c6ddce14dd933af753159927bd44344fca94f973","modified":1494776680000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/truncate.js","hash":"102d57d757c88853ccc57e81747a843a0acb7eb7","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/word_wrap.js","hash":"68a9e133470558981bf038a75ef9f11c5145955b","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/highlight.js","hash":"b7e74cd3626a38b9fa3e14ea310331e16e1d8df6","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/scripts/build_highlight_alias.js","hash":"8a999b74cd11da29e6092a26469b29a770981436","modified":1513819513000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/index.js","hash":"0d21a2bfc605735e074bd0fd91a69bff56b758fe","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/building-testing.rst","hash":"435f8700ad54ebdc199fea29bd5709cb50c16356","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/api.rst","hash":"7ea61691713b45ca2bba06ccd64d382d05296ccd","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/language-requests.rst","hash":"d5de8f9936fa7450384696c4d2454e28c5102a6f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/line-numbers.rst","hash":"fb2b891ec631ba4e18214d467114bfb026e42c5c","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/language-contribution.rst","hash":"755e23f46a3ff5d2f59ebef2a6c6d7a5317bcc40","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/css-classes-reference.rst","hash":"639242ca0eaa4a055b47fa12740da8287bc7c74d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/index.rst","hash":"64ff5bc891f7cc8bf28d987efe64328d981c6f25","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/style-guide.rst","hash":"6348488507d7deaf05b6c8c43470b033aef090d5","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/reference.rst","hash":"e43d2d965426401ff22c72b60fcfe77a08b745ed","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/html-encoding-sniffer/lib/html-encoding-sniffer.js","hash":"19e5c9eed0c33b3ce951991a2f57754fd65797cc","modified":1476591711000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/release-process.rst","hash":"f33baf124c0d5fc87b00ba4d6a391ee8eff0900e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/language-guide.rst","hash":"5a7cf267ab1661bef71913c7d16167043e3d2657","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-cave-dark.css","hash":"f397d4418ce88b998841fd9135242461ba1a79b5","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/agate.css","hash":"8e122b0f00f5a7ec4e6dc492bf1560441eeef7f0","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/arduino-light.css","hash":"c6e05580b51b755e229e99eb156940ad2cab192b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/androidstudio.css","hash":"958baa24814c06a625612a3b2b478d54bc1bf1b1","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-dune-light.css","hash":"7ba074de897e6a5e27d8b97f7cd06c1746474e72","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/ascetic.css","hash":"6358377b5c25667886aca0d605cbc497cf02405f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-dune-dark.css","hash":"081d73e454db140cd41b2bb595be297cfcab25e0","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-estuary-dark.css","hash":"a0c46a0f955e3864f5e967ea93f5e61519a17be8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-cave-light.css","hash":"2933f0247ac6d84c2954dd4946e359853abbf70a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-forest-dark.css","hash":"d8a4dc060b3fc719aa2f7d7b3f1019a3964b8101","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-estuary-light.css","hash":"91ae4668c15a085ffce15ca21e93da445b5ecf3a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-forest-light.css","hash":"8a78a4eea0f32d094d1f9e316d59e990ba739d97","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-heath-dark.css","hash":"b93c2241ff123e62d4edb3dfc20410e4d1da3e78","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-lakeside-dark.css","hash":"fa707b252d5d5caccc0589374522bed47b7ca100","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-heath-light.css","hash":"172b98f783d213a20211ec6aca9a3840ba524f55","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-lakeside-light.css","hash":"8ba595b9ba6e8be6dc029bf80caab38e85aed686","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-savanna-dark.css","hash":"09d45a218f87b8cb55b5ca7f4e9d76ea89a9404a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-seaside-dark.css","hash":"b2800804a21f729a3d0a16b3aadc17679fd0639c","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-plateau-light.css","hash":"9731db1052f23351c983210701edd3f5ceed343f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-seaside-light.css","hash":"3e6b9e2a3a5de455490b8224401f19702df4cde9","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-plateau-dark.css","hash":"240f79f4e1fd63485c13900875b64c5a0d1bd06d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/arta.css","hash":"17b23b9fa57ef7a05a6aaeea9b5feb5442a8e584","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-sulphurpool-dark.css","hash":"1f006f8bd28e2ffbb73f708769605ba766787fff","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atom-one-light.css","hash":"eda63d8cce440dbf3bb823e10577a134e9941deb","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atom-one-dark.css","hash":"a6d28e1c04cee20cd874fc7ac0903d8e2e4bd54e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/brown-paper.css","hash":"a6817d890e58f80ce79d87620791dae821a70fff","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-sulphurpool-light.css","hash":"0319c3eea893601b79b6c57652ef49b9222cc9de","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/codepen-embed.css","hash":"c4520e45d18259817b8942d17971f27c94f0fb09","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-savanna-light.css","hash":"6bd3a62c32558476d436bd389500e5fbeb693d67","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/default.css","hash":"fba68624d1b34a5543fe0bf4b2af2ac1ddf65e74","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/color-brewer.css","hash":"96332573db854e7b7411caa94ba29b238fede2d3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/darcula.css","hash":"7740224d07375ddc321147dffabbfa83e39f0d8b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/dark.css","hash":"fc77519d4f5d731054c5d4b7e7bbdbb510833271","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/far.css","hash":"67e0658b2376e91e4894636a3522a30c2aec42de","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/docco.css","hash":"1be7be09a1b927c22c7f11451becdb335145bdd2","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/foundation.css","hash":"75b0674dd1ed35d61977bd5c35dc29ca35835a7b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/github.css","hash":"ee593952684a791317ee8b77ad096e729dec649e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/dracula.css","hash":"2633f2e84680e9f381e9ac1df344b542e28f9774","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/darkula.css","hash":"0be948bb84acc05f93a1e5e9b48fe34cf61673a0","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/grayscale.css","hash":"5688658c28fc5799517e8f3c224ae3da3797ba44","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/googlecode.css","hash":"fed3d439d0c305b337dd9c0f68dcbfa51429f445","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/github-gist.css","hash":"77cf684fda415812d6279a52f299c84850244778","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/hopscotch.css","hash":"03e7b9ec74bbd375db8d476836aac3729a6c86e8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/hybrid.css","hash":"1e2d54598b5f948b597059909d4bd158b7df021f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/gruvbox-light.css","hash":"084699ab0aa326fede86e38bf41ebe49edde3a90","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/gruvbox-dark.css","hash":"aaf90d076e34bc44016462d70f83985e0e55c8dc","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/kimbie.dark.css","hash":"58ed061c204fbc09d221ee9135d66bad976e5fc3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/ir-black.css","hash":"95aad65ba77183500ce0f7ad62a7535b647ee20c","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/kimbie.light.css","hash":"b7aa9b1b21a25dfefcac7649a328962f84c47913","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/idea.css","hash":"164649ae1e7c891a0d88cca075521af28656e2a1","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/magula.css","hash":"ebc291f90e456abeeccb16937e7f51735733f4f7","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/mono-blue.css","hash":"fd0f39cd4c93ccb8d0bb2f6a1f359522e15a89cb","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/monokai-sublime.css","hash":"e4f3df87cbfa634c86b489e9cc43acf44d415986","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/ocean.css","hash":"fce6858e1c5eb9d2857cb5b5d24069c5994cfc91","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/paraiso-light.css","hash":"6eb3ab7a3337f9cad3a2e5fa6bf7dd83685228d8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/monokai.css","hash":"f69df92e3ccdce28e6f811ec84f11698f2811198","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/obsidian.css","hash":"6ed475813fe4886a58b236297862ff2f181e66f7","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/paraiso-dark.css","hash":"8f5445327ce3c83b62f6bf4c1a0d87fa6f036341","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/purebasic.css","hash":"f353a2cedf3f261a0676fce7c824bdd2e8197775","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/qtcreator_dark.css","hash":"213a40d203c4986cdbcb1bdf7d0b9013b29041ba","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/pojoaque.css","hash":"4e1e6a431212f5043a550474a1acda63362cdd6f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/railscasts.css","hash":"a6d2043478fae5915926914cbd96fe9b706d98a6","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/rainbow.css","hash":"1b2d98ccdda36aa926d0e6d069b673fdacd2d33e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/qtcreator_light.css","hash":"9a2a19ac2f6e6a7d5edd7fae67b7de4a3957e878","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/routeros.css","hash":"fc5db7c8f18d6b31ad92df21a51e7867d459af19","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/solarized-dark.css","hash":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/sunburst.css","hash":"8309eab2e5b1765dbee81a626baacbdad869b76a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/solarized-light.css","hash":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow-night-blue.css","hash":"cd257d7d6a37cd5a09419b5f5f9d34b6b282423f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow-night-eighties.css","hash":"d82b84bcda0588105dbbc0e8e8ba5e62c208a061","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow-night-bright.css","hash":"04f0af30fdda5e5d6ebdeef5a860b6b7e49cfe89","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow-night.css","hash":"86264dd861d35a8b135f9fcb8ff2675e9fa69c16","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/vs.css","hash":"2ac5e89ceb3d5a0e0fdab1ed6d9a411ec7d221aa","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow.css","hash":"163593ad70770d0296c5e643fa62e58e63f1b340","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/vs2015.css","hash":"3c7fa677de2a785d90fc6c3f7520ac1b11bfd37a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/html-entities/lib/html4-entities.js","hash":"a96528844c399772b52fbbac531b405990b16e5f","modified":1493034265000},{"_id":"themes/tranquilpeak/node_modules/html-entities/lib/html5-entities.js","hash":"e596021d6845ca29a00a19e65bc8134b7a642101","modified":1493034265000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/zenburn.css","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/html-entities/lib/xml-entities.js","hash":"4cbf15e7e85a5d7b7af287f48efc75bf66701e1f","modified":1493034265000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/xcode.css","hash":"65d775a7e11e238c91e0d3c7370547348c92d6b3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/index.js","hash":"996c8efa1d7896034c980e498bec866824662d52","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/parser.js","hash":"993a592d1b1c86a21b77a66f84e8cdeb7b6b780b","modified":1503689277000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/signer.js","hash":"65d73fbe8f2c699e36d290e0784ec926d68b06ae","modified":1503624550000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/utils.js","hash":"dce96d033869c424854178ae71991fe39b7c58b5","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/verify.js","hash":"f0603457d003b72d484d608b266566e771644438","modified":1503623992000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/bom-handling.js","hash":"5c6518ce3acc35c3e1da961bc02c110e08f81db2","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/school-book.css","hash":"60fe3d8063b1acc4d52de02033095adb0a2b35a9","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/index.js","hash":"c1bb64e3c5923c70bce885990f25f186be9a8a38","modified":1505011847000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/xt256.css","hash":"bbe28ec69177699cb6300d777598adf6323f7861","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/streams.js","hash":"3982c3e4c6abe5ec4064a8c5196395067d0c504b","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/extend-node.js","hash":"8e7df0d4fa736d8b3b9c1ea262fbcac929b4d3e8","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/dbcs-data.js","hash":"1cccef8583ac6e070e9d911760633ca8d9f7ca8c","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/index.js","hash":"79e395b6dfafd0ae516e18c81b828ef3de0c76aa","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/dbcs-codec.js","hash":"bd91f4f9da630d02a772218dc5d0f8769543f5b1","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/sbcs-data.js","hash":"c62371ecaf00a91881b8bd38af18940a44a3844c","modified":1505012421000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/internal.js","hash":"a74238a0b21cf96d189f97efa9b9c53bf22cc6fa","modified":1505012421000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/sbcs-codec.js","hash":"e66737b7b86d85e7caf45dc7553f327d0aafea8d","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/utf16.js","hash":"2a3ac83eea5de8423f678e5fec4a013a779d5d84","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/sbcs-data-generated.js","hash":"8ceb7540842b7fb237391ec3c324035a3feb7336","modified":1505014655000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/utf7.js","hash":"bf77c42a6d5a6dd62ee5da66e5291511cf66d247","modified":1492762970000},{"_id":"themes/tranquilpeak/node_modules/isexe/test/basic.js","hash":"5ecbf6a46a596324cb23fdca6df539be08a4f4ee","modified":1490230070000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/core.js","hash":"a6f0c873c2fd0acdda1e73790261ef2363624423","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax.js","hash":"d95ec866b372e569c6024cb92ac0537a0ec92685","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/callbacks.js","hash":"dee69771cee39bbdc468d71c332bc658fca4e56e","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/.eslintrc.json","hash":"7a9992fd01d4efc3e15e91a6ec3e2c25a7e6a491","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes.js","hash":"51b6a2792971b5f6704b643dd24b3a7f8ecbe280","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core.js","hash":"a6f0c873c2fd0acdda1e73790261ef2363624423","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/index.d.ts","hash":"13f473bf92d94868d3d1942fd367370928f4d482","modified":1493615205000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data.js","hash":"99f0831f89d29a8f8ed5135b587cf5065e5e637a","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css.js","hash":"eb7827c78fe8f9a3c41cc921d9c35207040480f2","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/deprecated.js","hash":"1dc08f16edb346a032596274f3323b4ae745aeec","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/deferred.js","hash":"19156bcb8325aceff14543fc721b80f1cc1a07ed","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/jquery.js","hash":"adacb906902cb4649598fd9a5fdc71f66f589eef","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/dimensions.js","hash":"6b363757506d42bf89ef008cb261012fdf457376","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event.js","hash":"3a60c990879730735977259e288b96f07f03bb5e","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/effects.js","hash":"363d91ccf00973615187b4ef0f1e464113c455a6","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/queue.js","hash":"1bfb8e12c5610ed3d4afd501b216234c52270e98","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/selector-native.js","hash":"d40c83574b4de18efa3200ff80a9f2bbcd47e822","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation.js","hash":"71ea4101149ac73b1c05cd26a9ef683f9ca7a8a2","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/offset.js","hash":"d0d3dbb573a66806fdfe28e11f868023e9fe55a2","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing.js","hash":"ca1ea441c24df2b8909e432e4a84ed552134b1e0","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/selector-sizzle.js","hash":"8582f824de84b03dc6eda9c9f81e4d425981fb7a","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/serialize.js","hash":"09ef78b9720e6c645005556a1c8b4c304026ee9a","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/wrap.js","hash":"58b4741817cdc81c0a1f3cacf3acb93e63695968","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/selector.js","hash":"9540e63e778974942fb37eafc63683d9b41f5d06","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/api.js","hash":"0c7b3ed351bbe7ecc859fa06ceb07fc6c951a624","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/old-api.md","hash":"9c2e81f7d2d23e2c108eb9031fbdc2489735036d","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/old-api.js","hash":"6ab347bd888c0d506a79412bdd79bf9b2559e5dd","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-00/hyper-schema","hash":"a5972bcc99abc4936ff350f116a69390f8ac99e8","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-00/json-ref","hash":"b5f7e93c3edc2eb501e913441ddfdeef0c04386a","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-00/links","hash":"490c91fb104a16a76290377797a5411d21379614","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-01/json-ref","hash":"2132a5a9319f8bf190040b49150e005e0916ed22","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-01/schema","hash":"10942d74811e1e16425e6219b0ba808b493321ab","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-01/hyper-schema","hash":"51802f7884c813fe2a002776aa97a440c7442d9a","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-01/links","hash":"09b2131c15d754a61a1baf1158a8e6c73644287f","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-02/hyper-schema","hash":"117eb70efaa120edeb97caa6ca7e53eae8f761e2","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-02/links","hash":"f8a835ea08959ceca9682cf1c30df6d5cf9ff033","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-02/json-ref","hash":"31b76b211e24e56b0ff5ae3ba739835039cd96b8","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-02/schema","hash":"ba84a3e7e9332328db986a1123084f2a6dba57f7","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/hyper-schema","hash":"552aaa9921cbeb19c2c9b485e64965f7a98e22fc","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/schema","hash":"4b500e66b7c4a36bc4d3ff6da089d6228c54f94c","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/json-ref","hash":"9f121cedcda14cbdd55e2fd80a96e289d9a1f2f9","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/links","hash":"5f1601142843a6028beb35cef8b851413a4dfa91","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-04/schema","hash":"7a6839ef21cf49fd6bdc687be7dbfbb92c97ac7c","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-00/schema","hash":"253c4fcfccaf49023c10a1a92d81cc3d21344e8a","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-04/hyper-schema","hash":"362194bf4c6690db17b848c1a796ef747bf7a6c1","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-04/links","hash":"92cd269ccdfe3f3bc673205133cb9940afa465c4","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/lib/validate.js","hash":"c336cd87629b485336a56636cd36144220281161","modified":1472877970000},{"_id":"themes/tranquilpeak/node_modules/json-schema/test/tests.js","hash":"f3f322d2cec777f57df41b071818a05e97d35f2a","modified":1472871200000},{"_id":"themes/tranquilpeak/node_modules/json-schema/lib/links.js","hash":"bc70a0d21a6639c78017ad1ab1254d8e1516bc75","modified":1472878014000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/spec/.eslintrc.yml","hash":"d105e036ac5efe87b86bbe2a32afd751f03d9e14","modified":1497556337000},{"_id":"themes/tranquilpeak/node_modules/jsprim/lib/jsprim.js","hash":"794c578fd13608d65a0469ed74ac30fd3d15ebe3","modified":1494025745000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/test/mocha.opts","hash":"98216b4fbc2e0c1c17ee946b02272a26fcc1f4c1","modified":1431999690000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/test/stringify_test.js","hash":"4760401b04513ae7eb79fff0e1239a9947a8af78","modified":1431999690000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/spec/index.spec.js","hash":"606c62767ff862bf33c8dc6b7ade63f616fb428a","modified":1497557340000},{"_id":"themes/tranquilpeak/node_modules/left-pad/perf/O(n).js","hash":"78d2987b519089375e46725d2c391215e444527b","modified":1467974148000},{"_id":"themes/tranquilpeak/node_modules/left-pad/perf/es6Repeat.js","hash":"ab513e94415d203c6c6f82bce135881bd9ed7cd8","modified":1475308774000},{"_id":"themes/tranquilpeak/node_modules/left-pad/perf/perf.js","hash":"962b231a84ed08ff66191db4b761adeda9802371","modified":1475308774000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/coerce.js","hash":"f1e0c246a58647693045831c4677a4921b55a3ba","modified":1428793638000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/index.js","hash":"615354af2c1537b9c53e28df01f9ec422806b971","modified":1451368289000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/cast.js","hash":"9c71da793fbc3afb65fee1771e43af53fafbf9f5","modified":1451367015000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/parse.js","hash":"417fd1480398bbb329be02a1bbe81afe7284e0aa","modified":1428793638000},{"_id":"themes/tranquilpeak/node_modules/mime-db/db.json","hash":"3ca6d8ba50132fa9c3eed313dba9c83c97bd3b55","modified":1518757209000},{"_id":"themes/tranquilpeak/node_modules/no-case/vendor/non-word-regexp.js","hash":"921f144a87b5cab2d484a2c256889fc2bed08268","modified":1504891248000},{"_id":"themes/tranquilpeak/node_modules/no-case/vendor/camel-case-regexp.js","hash":"2614bb1d67a0994aab917ce1fb9d55ccf33d0945","modified":1504891248000},{"_id":"themes/tranquilpeak/node_modules/no-case/vendor/camel-case-upper-regexp.js","hash":"5bd9812b844c336eb117c1571ac7ff36ba747077","modified":1504891743000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/parse-string.js","hash":"64ccdc140db4bb86d7efe7514a3cacf2ec535b68","modified":1451367016000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/nwmatcher-noqsa.js","hash":"0d48937ef2ac9e7e43f3314bd770e111ba91051f","modified":1520442518000},{"_id":"themes/tranquilpeak/node_modules/optionator/lib/index.js","hash":"a29b20e8d699b1d05283ad14a55b2c58b0138f27","modified":1474486992000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/nwmatcher-base.js","hash":"b2c61b73315a65e2aeb26700dee7df52bcd748a5","modified":1520285767000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/index.d.ts","hash":"ff394a377dc5ca1a7c5052c875c2f8938f9e7622","modified":1515875732000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/index.js","hash":"a477ab369cf920815cb56f8c929dab7fefc8f667","modified":1515875439000},{"_id":"themes/tranquilpeak/node_modules/performance-now/lib/performance-now.js","hash":"441fe91cf077ba520a22bb82487439a292ed7e2d","modified":1487514525000},{"_id":"themes/tranquilpeak/node_modules/optionator/lib/util.js","hash":"d08a1850283d353e1db469adce4cc9e6bfa0a1e7","modified":1474486651000},{"_id":"themes/tranquilpeak/node_modules/performance-now/lib/performance-now.js.map","hash":"50bdd3412d57f86521de00afc24177415ee70f3b","modified":1487514525000},{"_id":"themes/tranquilpeak/node_modules/performance-now/src/index.d.ts","hash":"cab5735ccbd2666329124c3284b12c8aaa4a5881","modified":1487513961000},{"_id":"themes/tranquilpeak/node_modules/optionator/lib/help.js","hash":"c202a5bfc321d29a9e81ce2f5402e4ff72276b4f","modified":1474486657000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/nwmatcher.js","hash":"f84d5f91265d86374cf2b61943bbd625eb1b381c","modified":1520285841000},{"_id":"themes/tranquilpeak/node_modules/performance-now/test/mocha.opts","hash":"bb896e2b4872a971113be6df6cf74bb1ad34cdbf","modified":1483443554000},{"_id":"themes/tranquilpeak/node_modules/performance-now/test/performance-now.coffee","hash":"9a86c23591031408a9e2e5b17a9600bc82556f28","modified":1484002078000},{"_id":"themes/tranquilpeak/node_modules/performance-now/src/performance-now.coffee","hash":"1afaa86418105a30940d34c3f84dcbabced93229","modified":1483849977000},{"_id":"themes/tranquilpeak/node_modules/performance-now/test/scripts.coffee","hash":"ac50e35ea322260600fe12cfb49af3d37678d77a","modified":1484000743000},{"_id":"themes/tranquilpeak/node_modules/pn/test/custom.js","hash":"d79ab100f9096ba3ff06aeb08465917be2116d3c","modified":1445978181000},{"_id":"themes/tranquilpeak/node_modules/pn/test/cp.js","hash":"0ca85918bb38265c15a9219604918421bfdb0311","modified":1418077406000},{"_id":"themes/tranquilpeak/node_modules/pn/test/fs.js","hash":"5905ab4f2b301559a398ffcfc51404f31865aa7a","modified":1418079534000},{"_id":"themes/tranquilpeak/node_modules/pn/scripts/generate.js","hash":"3ffdbe12758babfeb7551386af5e7f1fd9ffb507","modified":1515010269000},{"_id":"themes/tranquilpeak/node_modules/pn/test/load.js","hash":"7bd8a5bc80d001b47a2c422134beef2b0a684338","modified":1418075017000},{"_id":"themes/tranquilpeak/node_modules/pn/test/timers.js","hash":"3c9a22d7030da9d2153cf9278d5422d24e2df9ac","modified":1515011262000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/T.js","hash":"f10191c08571d40fee301d26e97240125511bb31","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/F.js","hash":"18f568c6af0e139bc63d9943f5e798fd09bf01b6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/__.js","hash":"9c805f4d417e7a952726f3cd1d0bfa7c30cfa7b8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/_baseConvert.js","hash":"5e7086f492263fd7d58b38ce5b1392144e1b72d1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/_convertBrowser.js","hash":"b4cceca914f9af59a7c47c384127602dce2abf6a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/_util.js","hash":"5fbff66b69ff1dbdde5f1f64e9965ba5f63ecc94","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/_falseOptions.js","hash":"ad9c0db1f5df98f88d63bd70d729417a7eab2adf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/add.js","hash":"9a7af31a7389d2b2b2ada006440c4cc5c2e42e14","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/_mapping.js","hash":"b96514d67397db8eed6dbf568dc6cca537343f38","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/after.js","hash":"b9b375ce8fc1a7d08495feac490844967e5c6ac0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/all.js","hash":"ca7a311804ca0107de2a6f00602710f36160c765","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/allPass.js","hash":"d6accb07bf9f23b3d0f72ce21b787618d575da04","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/anyPass.js","hash":"4a3f89614864715dcc36c7ee5dbb9850f6ae2f95","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/any.js","hash":"64f468269587c745e361d31e0d8b26cb8f67fb06","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/apply.js","hash":"eb2c8c5f1efdd93f4d55605df4874bea9f831b54","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/always.js","hash":"d3c13a79ddd4488702c96b285bbfe2556ee67e17","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assignAllWith.js","hash":"404f26b37a62ce5a1e9b6fb33672e69913d4efed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assign.js","hash":"52e569f6c7d83714506850d8174be2c3a2992852","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assignIn.js","hash":"71da9458e2fdabef9d716d9b48060a12c0185afe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assignAll.js","hash":"57a1a620f001ae55ba98b560fa7a858cebc13023","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/array.js","hash":"6c3a1a438a1f341a9bfbf059da2d1efd4a582178","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/ary.js","hash":"b811ed8b5b34ff86e65589b38cf22f1d7699ed4d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assignInAllWith.js","hash":"47ae8b9efcba88af49e9a58fa2a5b7c35813cb7f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assignInWith.js","hash":"b3b0adbd4b47e963b9f3ec93335b375deca2a320","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assignWith.js","hash":"d4a0c3092be5c92abca026002a322407a1e12f2d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assignInAll.js","hash":"3d99977ee0df2bc32edca5ceae451a08cb43bf76","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/before.js","hash":"c9fbf0e49c14385711d6335cb1dc0d6e09f3aea4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assocPath.js","hash":"3cd42a8269c6339b7a9eb3bfde6a404ac4a01dde","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/assoc.js","hash":"3cd42a8269c6339b7a9eb3bfde6a404ac4a01dde","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/at.js","hash":"615c43358bc89d4eaed242300b9fd77631f72443","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/bind.js","hash":"5620199ffaf7354deb17332bd96d023ef93a7563","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/attempt.js","hash":"eb059364d0e518867b8fe2d4d9773ca481f80b15","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/bindKey.js","hash":"8884ec3af184de8a5f20829f6eb5fb6ea459582b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/bindAll.js","hash":"2e3944394c315756627aab74b8ce3cebab98662a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/capitalize.js","hash":"101f5c2148a579105036a5cdd25b4193812f64d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/camelCase.js","hash":"8eb598ce4ff5d309c2ab8fb299f41df23c4cd308","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/ceil.js","hash":"0539c156c827c85dd682ece5986b9f7bac19a097","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/chain.js","hash":"c85611a5e7da7d0aaf29a45bd34130b56315199c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/castArray.js","hash":"ab5ea04ba48ee2920164fadb8b78d8a03f1cee6d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/chunk.js","hash":"63359d1585edc86fb70c74388c36e0a96e16b96c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/clone.js","hash":"6cd53703b2949cbee86ce6d708942e248afb8b4d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/cloneDeepWith.js","hash":"365d2b00fa2e722ce8c60b0605bf3af06c6ff454","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/cloneDeep.js","hash":"179860c9bdc495da2f5d8281fec35077b2f2b216","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/clamp.js","hash":"d10d4fb46ea8518851b6578ef67dde23b2a9b013","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/collection.js","hash":"75a23149e229dc1435bbddc870542ac1ff298f91","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/cloneWith.js","hash":"a303da7355a2bcf3314b47558b57c8e3b235094f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/compact.js","hash":"b6603e874a29627153368292851fe987f5462bcf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/commit.js","hash":"2b2f58504601fed318dd5f6ef943a873018195cd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/complement.js","hash":"db8673391fb52d0d4682d80065e5f82809a3292a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/concat.js","hash":"64240c44714fa5369fc4092f00ef58caced12344","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/cond.js","hash":"c5bcad894a249463aeabed85ac3d3e7474455533","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/compose.js","hash":"ea122818ed87e1559af41edff0f2d2fa54319b9a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/conformsTo.js","hash":"fa5e2fa22ac3442d8ad5b09e3a6c0959316431ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/constant.js","hash":"109c49b151baa999c023e7934b4223e0fe3d84c5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/countBy.js","hash":"52e5e9e4b6064c30131e7f678551f23f8120cf0d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/contains.js","hash":"cf59973c08cea72d4b25f223aa3c30e99fde8e55","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/convert.js","hash":"5e125cf746680131339a8ab7f41d917bdccdf356","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/create.js","hash":"7fdb4d9dfc8e2b4876ec6b47b9b32fa37eb1aa2c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/curry.js","hash":"ded1e6452bc77478e51a4b9a7f8f2eb9c07d1b03","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/curryN.js","hash":"13f2d44be73b0df20161c72c0b77b69f8bfdba39","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/curryRightN.js","hash":"919ca15f73c98eb40bfddd2213edff6a8992e2e4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/conforms.js","hash":"03fc81a616faf63ab5d5097dc6ec2580e8a32fe2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/curryRight.js","hash":"333b1a096341c2552aae7af172dfc6b1aa2d68d2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/debounce.js","hash":"c702651f3d6844c12c8e7fb2d2d07ee898f3c78e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/deburr.js","hash":"b4aba68c497e84459d6d9739d71b0f1a3bb7182e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/date.js","hash":"bbf85ffcdfc83df6d5c24c84b03ca937f9796257","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/defaultTo.js","hash":"39bad3a9a0314e20e1fcc52f2c7c1711a796754d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/defaultsAll.js","hash":"2006e77adc3f6e20fc16af80af1a26d166d14c07","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/defaults.js","hash":"0afcaa5650946e068d13f298bdcf3e185f5a1f07","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/defaultsDeep.js","hash":"6eea71a30ff427217403c02e6721e6bdaa0de604","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/delay.js","hash":"1f6a34ed80e76bcfa748c686fbc67488d0164d78","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/defer.js","hash":"49b70a2e28eca9a02a89437582cf42c165dd2d05","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/difference.js","hash":"13ba75b75ad25ad44bcfcc552dd0fe00114c13da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/differenceWith.js","hash":"290648f706217284bb229fc0957d21578b89b0e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/dissoc.js","hash":"4daf52a97c16d6624e3e1abfa4d0b8d8d2362add","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/differenceBy.js","hash":"55c72db5c42636b2f5824b45979834483161d817","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/divide.js","hash":"86636acadd06d91f809acd2c1d31cf780caa8649","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/drop.js","hash":"2cf18a3172602551b9950bf4b21ef23b07f5c8e4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/dropLast.js","hash":"297bd9ff4c5ed9fd6323d3ce10286936be549bfd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/dissocPath.js","hash":"4daf52a97c16d6624e3e1abfa4d0b8d8d2362add","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/dropLastWhile.js","hash":"3901051acf9fea300dfe2961fcc31890adabe4da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/dropRight.js","hash":"e8beb9bca520499fc14e793b6e8f7a428d197bb9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/defaultsDeepAll.js","hash":"ee6d0af3f9942f2314c2b6fc2f283debd885fe36","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/eachRight.js","hash":"c7a90b0a7bec56aea41c7569a652ebf17c20fde1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/dropRightWhile.js","hash":"779915c003cbb1a9643965f284858729bc032b6a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/dropWhile.js","hash":"3d82fced32a443d92d80485508cd79c34b0a0ac2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/entries.js","hash":"8788b9edcf643acf20e434e5894d09fb18742112","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/entriesIn.js","hash":"995c6287a9c5f6641931c966de331b5521f63d3e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/endsWith.js","hash":"1e2c542c82f7aefc5fad986136445a7a4425e145","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/eq.js","hash":"e22365568b08047e550d002e351cef842cddabbd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/equals.js","hash":"735240597ea9393397bbd638934ebfaea4f6b2c8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/each.js","hash":"dbfc772ff0330e9d0bb2ee704242e67b0435929a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/escape.js","hash":"68a5b97faa5723827ef59f065101bbbe2556e6bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/escapeRegExp.js","hash":"2a88b89297d34797244d963f2323e59a7c3d4d31","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/extend.js","hash":"79bb5928a674d6122686fc0df5a28f00b22d4d0e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/every.js","hash":"0499e846512778b49de2da8574e81f21dbd3ca40","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/extendAllWith.js","hash":"1d2dab39cc17f3beec2cbdf117837509ca72309d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/extendAll.js","hash":"33d62f7192821133af2eb6ed064b6dcd173a13aa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/fill.js","hash":"783c4109619e522701ef2956d070ec6f94ebb258","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/find.js","hash":"86e525b8931055cfd1dbed74e13e649b39e8fa6e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/filter.js","hash":"7f77256838b2435ebf7539e186cce009aa54c1a5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/extendWith.js","hash":"fe394cac415eb0a6518371d1b95e08144a682526","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findFrom.js","hash":"7a92981afdd815aa0d39348b752306abd7697559","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findIndex.js","hash":"6dae88bc0ea9a1c2ceb6bed27e6fcc1a993795cd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findLast.js","hash":"a19b3954a423f675b6e556a4838d45a28eca25b1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findIndexFrom.js","hash":"61e3f312582261bc44d36fac85ddbe6f11f26a30","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findLastFrom.js","hash":"72d9c3ee81778f2f3be72594451a11c7ece2e35b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findKey.js","hash":"7a3a8649e4119245549d42a71a20752a7a3258bc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findLastIndexFrom.js","hash":"077ebe8808fe2fe62d216b354af30236aa471903","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findLastIndex.js","hash":"25b3d6da9b75a73e37d908e0bd1c2c071eb81def","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/findLastKey.js","hash":"d71353c58b59d98cc7d909a543f8f49ace63bf10","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/first.js","hash":"a2eac20812e95b557a5bc11dab060163fe1133d0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flatMap.js","hash":"1b0399b113f8f036d69c78626ffb7fdbd531a452","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flatMapDepth.js","hash":"04d4e92f43b87d2f5504ebfd7d095c0421322e6e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flatMapDeep.js","hash":"68eb25628604462da50f41131335e5bdd79dd931","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flatten.js","hash":"93940d34c59306c75e8680b2f54a9535f1eb56fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flattenDepth.js","hash":"c606dc88f1ff4ae80ccb61d0e293d46f53e687ba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flattenDeep.js","hash":"3d4a37408b913e82d947aa842b984fca60b9dd0d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flip.js","hash":"e13e97806d2757e3661b52657b0a81077bddddcf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/floor.js","hash":"a7a4526f7ffcc6fd12b5805cc687f5e31fb41152","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flow.js","hash":"b1fa8a6738958fb2b0f61f55670e80e72b37f3f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/flowRight.js","hash":"ba997b9952e847801199c2767ee07ffd64c4810a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/forEachRight.js","hash":"fd98cd06ffb50506eacfab8999a3cc06d2c646b6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/forEach.js","hash":"fe364b04d37562751d1e68482ddf6a7808156916","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/forInRight.js","hash":"3f48c8bb263b1eb71cbaf4ad9d2606b3656f8a83","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/forIn.js","hash":"83e5d965ee8ff794867c6c8a2e01ca56fe76a15b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/forOwnRight.js","hash":"5e5befea43de625a990a571cabcf5545f7ce1ad2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/forOwn.js","hash":"60ef3e46e036d39572320f2c6f7601881ca41955","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/fromPairs.js","hash":"1e7734eac86bf368e7d1bf63ca1657952b20f13f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/functions.js","hash":"82f6797b95c815f8082611ca84cffad654ed7ee0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/get.js","hash":"27edd6c7c585dcd0222c1cea97765e5eb1c52925","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/function.js","hash":"c7d47f84639e315320f598f32c3a8f8dc8b0a724","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/functionsIn.js","hash":"8b79a911c832b5683868fa56bc7c6cdaeb4d5e88","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/getOr.js","hash":"423682307e027ac900a0cc83948ad83b19c2fca1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/groupBy.js","hash":"28032f75b908231d97cfacc99fc04ff0a3f22e65","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/gte.js","hash":"d6e1cf7bd2d03d198791afb3eedae8323b06c262","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/has.js","hash":"20fd58ff42e0550eb9f94e183225458d52436836","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/gt.js","hash":"36dfa14d07d98b751b8d37ba1ee1e64c64971161","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/hasIn.js","hash":"c9e75e41b1638417c4d1f9101c43469032522afd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/head.js","hash":"886dc89b060616ea92340f7d68bc946f058e8c2c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/identical.js","hash":"40efa57b258af781819e8bd050c32583837184b5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/identity.js","hash":"59c993b05e7ec2f4653e4bc55b3025dcd5ca2f13","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/includesFrom.js","hash":"13cb72c249c72145915615e75617f529d36ad4d6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/includes.js","hash":"c5b5262c60578989e7569a4ec24c14c22af9d4be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/inRange.js","hash":"57145747d9c73137b76796e00ed79263c9049c14","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/indexBy.js","hash":"c4137629ebf66269744e84038e8a5c02084d931c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/indexOf.js","hash":"f296c1ad76022ce01e1f733136933820a2744cfa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/indexOfFrom.js","hash":"a9af522fbc2eb5a6727c604d91e8ffc21198f5d4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/init.js","hash":"22ffae77010a1ac713f0326fa468621c3ab83a2c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/initial.js","hash":"345cc5bbcd2fcb19a0d5e3ba7c44dc8d4bb85be9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/intersection.js","hash":"1391dbb03a7ea4de5e8c8a937667c5b2f58d3b28","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/intersectionBy.js","hash":"c5f67ae844b3c57014cf4ca6878fd805e7a0c7d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/intersectionWith.js","hash":"f264dacabb5c65b41cdb9301fd281252ceefcd45","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/invert.js","hash":"fd7502e8c46743d84540d1f6e83e3e70e4190812","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/invertBy.js","hash":"f23b5d7017a48c8757e9e02f8e9198de8af6f181","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/invoke.js","hash":"af082b901fb05e5ca0b8c366f2d91c1a80a02fd1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/invertObj.js","hash":"f2acc5a6d3985a3d717e180810fc8da4b70eda6c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/invokeArgsMap.js","hash":"9cb53649858eb1e33827cc8513c16d9e7363d9da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/invokeMap.js","hash":"e53c69c9c4a6be115fea0a3574c4d1255bfe5428","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isArguments.js","hash":"675c9c3ee2f01b2ecbbcaa9637bbccd65f89d943","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isArrayBuffer.js","hash":"6d6c14aae84e1662f0fbac87ff49d1dc0c568444","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isArray.js","hash":"45376d39c70fb04bc0cea0bdda3b1998d0c76b3a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isArrayLike.js","hash":"f6ef38c98c8344533e90a2212650cf936ce808c1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isArrayLikeObject.js","hash":"4d053b5fbd0477fe770249346cbc0bcfb37a6219","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isBuffer.js","hash":"192efd2ec17cbeeadc1e68b893e504b8b14afcaa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isBoolean.js","hash":"b91a773b54bd4822f9c23bb88b139b67f4f1eafb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isDate.js","hash":"ccd1b64eeefbb7d146ab6294c52aeec2ad1a93a5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isElement.js","hash":"41b8187c0a4dfb59cdc5c939f1b3a68d674e7048","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isEmpty.js","hash":"517aca0c6b7b51087db094f4ff1ac06bc50c765c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isEqualWith.js","hash":"685a3ecf2190a5656547f3a62fd8fc0c4fefcad4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isEqual.js","hash":"e143e5a19f1ceadc7a6d93d5bc95a4e62b6be530","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isError.js","hash":"03dabdbd0e30796a8bdc2a341394d329a461a9d2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isFunction.js","hash":"a5644120eabb397e67c38922ffb9b87d22aab5b7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isInteger.js","hash":"b30a8a902259cad6f2300f7b06d3f2bc3975f34e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isFinite.js","hash":"79c3ad8c8702d1aab54ae80ea400d5f73ae49dc1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/invokeArgs.js","hash":"fae0d54f2a10c1da45de1894b3a854b2f42f88a7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isLength.js","hash":"6aabade08bfdd6e8bb07e28225629c419b5e8c97","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isMatch.js","hash":"ea5bb01a981706a79b547149e5aadb39369967ea","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isMap.js","hash":"c2421f5389375dd9697de826b777b3d99c8e833b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isNative.js","hash":"4dc770dd04ad9f97aad0b764d876375aad3c8a9e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isMatchWith.js","hash":"0afec1beb71c2424691fd4b4dcb9100820374c26","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isNaN.js","hash":"c607c72d2d7f67fd2da46ca370acf5e12a024e44","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isNil.js","hash":"00960af435b0e8ad04bb1fea65d6a30ae8a61d06","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isNull.js","hash":"dc555ce657002d169ecd3f2af155b6ddd64fc6f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isNumber.js","hash":"6caecaae0ff0b438dbe62b2a814b14db80c6afd1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isObject.js","hash":"ffe7fe0c07a623545dedbd0c45ec219e3745cc99","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isObjectLike.js","hash":"49d650f710d56de004f9adb20ad8cf1b61f26554","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isRegExp.js","hash":"fc73a7faaf1e7ed7821d0600676678cd495326f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isSafeInteger.js","hash":"e570e129d68bd49f8ba775f6b85ed596c4a96fbd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isPlainObject.js","hash":"14b52f86eae7bcbe9d5f0400377d9315a588bfef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isSet.js","hash":"7c2c1be0d45c657157fe1ba88986a6b105c0318f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isSymbol.js","hash":"d374ee1761cd7c88e18c0d89797249ad5848ddc1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isString.js","hash":"512ad2c4610306d11bb3bb3491f53abd029e5ea2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isUndefined.js","hash":"0022a9050a33a2d65905711d005042506bc9abad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isTypedArray.js","hash":"370900f84ff88e22af1153a209583c2bf6fc9415","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isWeakMap.js","hash":"2d9fb05f212d14e0ace898c6bab8563582d707cb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/iteratee.js","hash":"5a57ada3203e3a1b57b61923cda5737bc5bdf7ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/isWeakSet.js","hash":"00837472f9eff86d2ffecbc9b54ed3605b3c72da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/kebabCase.js","hash":"8c4c6c334759ea0ecf4b1529287aae9fb187e47d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/join.js","hash":"3ef2d8c47d359b75da09f77c3fe2266508d4f021","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/keyBy.js","hash":"623811ac634d2ea4518def1661ebcf95b0201530","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/juxt.js","hash":"19b5b68440238c0945975ba74e5a43d633a4cb25","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/keys.js","hash":"5e7f14bc64715f1731977c278b871574eb7796dd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/lang.js","hash":"62dc2db0a784f758cb9347da261f8089d1df95b7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/last.js","hash":"482343e9c2122718717131d20ff454537bc3452f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/lastIndexOf.js","hash":"34238beb4a520fcdcd9c46854d6dc7bfbcc1b5f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/lowerCase.js","hash":"10a1cbec9a77d960a0c2b470450877fe4596bd02","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/lastIndexOfFrom.js","hash":"2206dc50977fb1f15fb7ddbce38cd8adcefdc0fa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/lowerFirst.js","hash":"e496119d716f19967b0070c7ec9c03d28b919122","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/keysIn.js","hash":"8e6ccf89f46ff56b75f2b23f820112e0982845ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/lt.js","hash":"ebbdda9e5136aca682159edb9a951257370bc6f4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/map.js","hash":"b353305d3741738e30ccc46b96421df43380d99a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/mapValues.js","hash":"15803c364129828e85167dca814187bd2ac879c1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/lte.js","hash":"4926168ae6c4fe1a9493b20ddceb81f5ffef82a9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/mapKeys.js","hash":"ecdd3cd7edca30157bbb0bc2a3cd91058dc75199","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/matches.js","hash":"95d70e584abab7e886e137823be0c719bb67ca2e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/matchesProperty.js","hash":"73c7321e05c3a79d869afe876a64ae009d8d3da0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/max.js","hash":"72e93ed6cc51a6bb7ba5131cffbc4ed64b0d5148","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/mean.js","hash":"73e71b6ebd607cc99741a6bd8a504f4b2d753cb3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/maxBy.js","hash":"9a5c1f5cbbb6375b8f314d5c3508854a76541613","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/meanBy.js","hash":"062613f280d0bed68bb11a9999721c0c90730c6a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/math.js","hash":"dd031d6043c326be2e5c3a8b3a4bd728bc74650f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/merge.js","hash":"087b5cb62cf464d2154b378d4a79fceb5987966f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/memoize.js","hash":"d6bd34e0088a0f017e8c36785c6cb79450b2e0f3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/mergeAll.js","hash":"e9d2d85cbcc2a728e6baf932d05f053901f0a7e7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/mergeWith.js","hash":"061bbc4f62c653eb99021e78accc7ae915c3d8a0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/mergeAllWith.js","hash":"7ed92253b45294795a4bf5e6fe8d5f716ad27b99","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/methodOf.js","hash":"d7ca6c11064364211c6b7f7fa8465377f2a07342","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/method.js","hash":"9c12a91f85dc26106523d5662166b6ee0056dd14","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/min.js","hash":"e0a8670ec5ee7da49ea872f9eff2d5ec5bb5c1e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/minBy.js","hash":"7c81c5d5a852cb0ece8e3026820c1000d6ad10f5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/multiply.js","hash":"373b10cb68541026463c91d41901e052f3587044","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/nAry.js","hash":"bc98ebd544e4def682ac61ff204c16aba3b5a227","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/next.js","hash":"ff0900b4e5fdd889ec980c50e5e52d05d469b9f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/mixin.js","hash":"bff01db6635beb3588b48b53aa0b83d92430f62d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/negate.js","hash":"1503b32cfd9bc78f575f865ac3984bbb3dec2695","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/noop.js","hash":"dd608cb4eb01d202042edb374958ea37494d0ffc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/now.js","hash":"e455b0b859454a7852eeef13a2a7e2a26ba00502","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/nth.js","hash":"3cea03c8cc79b44fe085d53b73c2160ccd302029","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/omitAll.js","hash":"5c3a9227c6f9ddc785688becab205f8e912a9668","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/nthArg.js","hash":"14cf05b970cf3ce3f5878e4396db31f286dc1653","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/omit.js","hash":"b9a90a8700d55718cb1a3d68b15223d0b9d7de61","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/object.js","hash":"1f4e289be4a66881114caa5198b881b1f16fd4de","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/once.js","hash":"b6d33d5a9c4379ef7e1c46b09f9c865ecb8603bf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/orderBy.js","hash":"7a17f923611248c0ea7086507bf568a043b98129","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/padChars.js","hash":"4c63a99952765c19e7858c17f18da7c6612c35a7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/overEvery.js","hash":"3442bc9336ab31d30983323ab9e88f628085a1b1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pad.js","hash":"383ad74a3c1d0de2b6ca0304eb1d1faa4bc5bd0a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/over.js","hash":"51db6346f35cb56c4ceff448ce83bb4b0529dd47","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/padCharsEnd.js","hash":"07914fc0fb8ecc33d9611986519b7c6607fe455a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/number.js","hash":"56db9afc452bfa9338b206bf092497b8652f61f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/padEnd.js","hash":"4aebe4522188368f563e7e72b2549083b542331b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/padCharsStart.js","hash":"5c7255195a70d48bba88ed00ac177d59c02e88e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/padStart.js","hash":"a312c6f78be12857bd315385eebcc8eabc67c1e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/parseInt.js","hash":"9f69cbcb1ac43f1e3e7d6cc58efd7685fe4a00aa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/omitBy.js","hash":"1ae512e4ff2af4984900b15292137fcc10161589","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/overSome.js","hash":"7de036f2f58dc0faecaf54be9adea63226aad560","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/partial.js","hash":"f2acb8a2cc54f7e90ae1cbca437be0f9c8bc4d68","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/overArgs.js","hash":"adcf40dad62a1c856764978731537f30889b1c74","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/path.js","hash":"563c5eb1769785a3350bfd1cb2b4e090a650c994","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/partition.js","hash":"205607a8169b9faeb2b51b0974805fb3cef84b89","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/paths.js","hash":"6dc80a19f4b7e95104d76ad38cab58672e823c41","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pathEq.js","hash":"2449e34c17552d94cd719c23e1ffaee752b19a49","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pathOr.js","hash":"8453669dae1bef8fb6e22746d8c5b09e21705dab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pick.js","hash":"7818ee7a56a4493a25f0262b42226a99b5ea4e74","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pickAll.js","hash":"a24ed77399bda55b6c76f52a7b2d0318e15e9d53","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pipe.js","hash":"9a9cf735bad407cdf098744f528e907de4b8f8bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/partialRight.js","hash":"bcf63208bf8072ae6e7ff226467ec45fe20b7ace","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/placeholder.js","hash":"d211b85c131bc2d7c0230fc611c2f88d1aa1ae62","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/prop.js","hash":"563c5eb1769785a3350bfd1cb2b4e090a650c994","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pluck.js","hash":"56c45930b2236d7778657a85d48fb7c709e3010d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/plant.js","hash":"909ca1575840a93993b0cac28834173e1474eb9f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/propOr.js","hash":"8453669dae1bef8fb6e22746d8c5b09e21705dab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/propertyOf.js","hash":"a0309506e91e32300edd07989a6765ba76469785","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/property.js","hash":"563c5eb1769785a3350bfd1cb2b4e090a650c994","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/props.js","hash":"6dc80a19f4b7e95104d76ad38cab58672e823c41","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pull.js","hash":"e212c433d15f9e4aae0c7b7472df7478dce59826","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pullAllBy.js","hash":"82df6feed00d7586139b8d19babff6a119d12abc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pullAt.js","hash":"e64a22662e4110f3a7598bcbb20c3444ace05733","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pullAll.js","hash":"9d43ec3e85737776d1cba4dd43dfe33dcb691213","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/range.js","hash":"c30a51ad9b00e95df9e8d84359393789adff6f70","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/propEq.js","hash":"2449e34c17552d94cd719c23e1ffaee752b19a49","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/random.js","hash":"c9cacb8c48422049484d1b43f3e10da43f54fcf0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/rangeRight.js","hash":"87d5bc191b63a837147e1a06ff573017932f9956","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pickBy.js","hash":"7e90e85df68c3e5ed8e18b36ef2f1033f9c192eb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/reduce.js","hash":"7607f41b09579aa65dca0224fae135f2a7bd90fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/pullAllWith.js","hash":"a4c03d7ae4b54c96e5050bbc7421bce119aed17e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/rangeStep.js","hash":"8bb13a69dce53d8cb160b155579da0e6167551f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/rangeStepRight.js","hash":"2706912addb4a0f3cde29fdbc07e8e6efbca5022","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/rearg.js","hash":"d5b08395ea2c22d24207c8e80e19a62b8b68d49b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/reduceRight.js","hash":"db8224e00025bde9179b073a6aa8aaef52cbaf6e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/reject.js","hash":"f24c316dcf99cac19664e5f3cba90bcb7928ef1c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/remove.js","hash":"f6c76702ae01ec215d972d87850624d302a45b9f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/repeat.js","hash":"7af31ea1d388664c134aeff68f0d5cb72297004a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/replace.js","hash":"f4cf1769a167cbafbca362598669cee3b2048b03","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/reverse.js","hash":"723596c407da9faeb8a6029ef74e42e97bdc6be9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/result.js","hash":"e805c5972b63deb60f49d1513e570ed116a864b5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/restFrom.js","hash":"7658cbf9d7d17aa68e24ae89e087b1f1f82858ac","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/rest.js","hash":"a860492108f67bef2af79852208f2dfd4f541d7f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sampleSize.js","hash":"fcfe74bb18b06d6da53495935d23a7600f9b24f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/seq.js","hash":"4fd21585867c1b120e02b78852d98320ad8a38b2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sample.js","hash":"2d93d3727f92362eeadcff288c3a8a733d023740","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/round.js","hash":"39a12f5a5a3ec3058dec8aa5118425b16d070281","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/setWith.js","hash":"c5fab5be851b87976674b1459d61b445d0d5be14","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/size.js","hash":"3fb55f18bf4ff0daea2c053a54a53c2674499e45","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/set.js","hash":"35767c3a9b3e46a963c7fcec39391fa87136861a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/slice.js","hash":"ad400dcd46e81370daf0ad7c745ea1ab58df49a1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/snakeCase.js","hash":"d233254a26e81ab2a81fac31c48215d4b0b44adc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/shuffle.js","hash":"2d110e1a05b0780b5ad4159ea18a807f7ea1e505","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/some.js","hash":"0ab071ab57a97cb20b860f9125f2d3f1f131f833","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortedIndex.js","hash":"04be86485281acfc53118491293043d70e3a7f2e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortBy.js","hash":"bbfdf129dc3ce45a017989b1b825542383812b73","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortedLastIndex.js","hash":"d6598c35bd7fb8887fd6fdbdcb8b18befa6632ad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortedIndexOf.js","hash":"70b13a8537667e2fcfeba4993992875bdf8ff864","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortedIndexBy.js","hash":"47138204798bfa0b43928340b12bbdcff317f60d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortedLastIndexOf.js","hash":"94fc33bdee1fdebb80f0b00d195eb4a13bb926f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortedLastIndexBy.js","hash":"e53794520cd5b3ca6df2ffb977e0e6b7a5f9502c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/split.js","hash":"e785df2f7e7764f1bf518b872bc302679b505589","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortedUniqBy.js","hash":"dc651f780172d66beef630e5c50c006d9fba50d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sortedUniq.js","hash":"8e361b43dd485f7aa5971e947939324cda143dd3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/spread.js","hash":"347036d4ea05dea39b09f20275d06e8594b55ccf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/spreadFrom.js","hash":"30b843077c519cbe18ec47e2ba9685f3a37e19e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/startsWith.js","hash":"73df7824ddaf5d8dbcbfb2894234f8e5f4214497","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/stubArray.js","hash":"dd9b5ab21a9e90c5c2d33af270b15bb3a0d5a160","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/startCase.js","hash":"aee3f36ca72d7fa30de64c0541e80b8ce2d729bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/string.js","hash":"3a30865f86edf4dc3baff7567a894bc6f280a654","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/stubObject.js","hash":"3c5521da1935e4b266a480fb8c2240fc2e572ea9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/stubFalse.js","hash":"74f54c09c21a95c6e2168df204016afb1da85c08","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/stubString.js","hash":"493b8cce32dd2d2f0915c335941afd8a2030c59f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sumBy.js","hash":"73e4807968a99437d8168517ac9fd13ceeac5886","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/subtract.js","hash":"f76a659ba3d7724c8e4ff6049dfb6cb17627ae41","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/symmetricDifferenceBy.js","hash":"8cee02add02dca3ecabeeb07632dc8a2a1905e23","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/sum.js","hash":"430189ab2c6a23195cb8ea5111921794b9175ebb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/stubTrue.js","hash":"7d69609e3844f8e596fbdd77e68be6352240ef7d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/symmetricDifference.js","hash":"c1db644f2796082ce8c1445f0788558fbd4a6ce4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/symmetricDifferenceWith.js","hash":"129d57b15724b6e3dbe5a83af781cf7e9a74bffa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/take.js","hash":"f9dd7f687a04982ac7aad57c525d98b1c3ffd1fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/tail.js","hash":"4515c52305fd72e45da2ac90042e05c2215178a2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/takeLast.js","hash":"ac465095bcff9ff29ae8337a6d86a7658bb67196","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/takeRightWhile.js","hash":"b090924faefdfd4a31e25c54931f3b46f61c8203","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/takeRight.js","hash":"eed0e281c0ecf99c20f5668ce9e0dd154e45ca71","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/template.js","hash":"ee7becfdb63a3d9ff3dda057f1a9caef3a814554","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/takeLastWhile.js","hash":"88248a7d663078cb48e2ecfc912a33ac3b097afa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/throttle.js","hash":"93c605d12d488e2ea9c6e6c63dbf42a538c66146","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/tap.js","hash":"26ebee1454a84078cc66c9acb6c4844a5dbb6223","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/thru.js","hash":"e93cff48a14c89ca44d3cf7b14dd7ec275dd53ff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/times.js","hash":"216300e9d1f02445f1af5f8c8427f949133b75a1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/templateSettings.js","hash":"b9a7dd2e08852490ea86ed35b1e7469482c2bb23","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toArray.js","hash":"f47d0cfbc5a869b78087164b18237c5448f21851","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/takeWhile.js","hash":"072405b57aebe0b9a274eb3709ecee82226092b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toFinite.js","hash":"3a63c6c9616bda4574b31fe27ef369c01cafd6c8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toIterator.js","hash":"961722cad23f72206b6f7d83e054c271b6a2add4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toInteger.js","hash":"1a1797465c07599f7abc0f8430e46cff38d50986","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toNumber.js","hash":"3f6ed987b363575f5f35f6189b144ba3d907eb43","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toLower.js","hash":"e0fb8417621f54e54d3df261d1e873438502ed70","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toLength.js","hash":"7d567f44a37d6a32bbd5a3856d011d71a9665f5e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toJSON.js","hash":"7ac9ef07def4a64b062a05e942d3d110e3492ec7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toPath.js","hash":"d5cb075719634a9c336bea31d017ac20389c044d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toPairsIn.js","hash":"407a3784056e15bba952ddd7d835aff27eecc673","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toPlainObject.js","hash":"fa912ce1e006d37f4483a53391271acb71692997","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toPairs.js","hash":"c28dd8a85dfaf032e5db9c1ae75da809d8527223","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toSafeInteger.js","hash":"fa9edb660be230da19a83e120f48052d9ee5400b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toString.js","hash":"70b8676332f4ca060ba84f05a9bf101749fbf3f3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/transform.js","hash":"932c1b9f13d1e4892db0ea9eefd4902f843f74b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/toUpper.js","hash":"4312523e48af3aadf918218214ab329523305334","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/trim.js","hash":"f57135b04ed9e9db794f75b6b47b328440f06922","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/trimCharsStart.js","hash":"8415cb22cbb73b5fd101e360400bf6182f4d488e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/trimChars.js","hash":"28eb05ea233dc6596ed3b17a3684c7225efa82be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/trimCharsEnd.js","hash":"c2d9c19c69c5e695022119baabadaa64ef02414c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/trimEnd.js","hash":"a9f669bd68b6fb04ca71e18d5f2c88805ec7d61a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/trimStart.js","hash":"50c328eddeec91b92f4eb516edcc78faaae87333","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/truncate.js","hash":"af7ab1a8bcac66a7504359d2b2625b0b4bb6445c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unapply.js","hash":"936c484aca78852157be00e7b5cb71da6f747bfd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unescape.js","hash":"e91a70341966dbafb94a8d6fc723f23f3c3a31a7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unary.js","hash":"22e12bb090f8f305fb360a2372d87fcd9467399d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unionWith.js","hash":"c48bcdd3435f2cf4a650d30608cc929712943578","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/union.js","hash":"8e1193fe25429e87a9cd2e4a29dbd279c5decd5f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/uniq.js","hash":"54b58010d1988f7a6ec28dc4a2df2205e83029ae","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/uniqBy.js","hash":"4111e9001db74d691176ba3e02af5527a4a77ed6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unnest.js","hash":"3d20beb0655413d13c2c55fdc3ac06013125edc6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unionBy.js","hash":"139742a9be22d7eb2195e7e7182d87a912936e2f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/uniqueId.js","hash":"414c720c8d11aeeca6b05cccb6deb16a0f27c943","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unzip.js","hash":"29cd397f4baa016f6e6d1c8fc4326219106896e9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/uniqWith.js","hash":"af2818a584a4317e5148e52222afffa0c5fee59b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unzipWith.js","hash":"afc880fef61b32bc409f3a9a7359d755cdddf83b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/unset.js","hash":"401e919462b8e66630dfc74e18796fdfa62ba6a3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/upperFirst.js","hash":"084545106fd93e9acff00c4401918ed9054d55e3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/updateWith.js","hash":"9dd189e80bb45da43b4076a1643a45c69f8cf1a7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/upperCase.js","hash":"612a73d5f39d6d5a6f3c3b80ec89a6377e2e3c4a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/util.js","hash":"0724cd943bdab0b6bac86e7ac14e815e5aa1d9ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/useWith.js","hash":"992d0f455bb3b824323580e322a9c79bd378d0c6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/update.js","hash":"a7d197f6473f8a7a38c00acc709f53481c545474","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/value.js","hash":"e2d89ba1db613274b31d1d0fb1acb503644ad2e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/valuesIn.js","hash":"b7b2dd2b81111cce5adfeeb45254a5372e6c28f5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/valueOf.js","hash":"a2ea35c715e7b3b68051a38cbf6802b29370d975","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/where.js","hash":"03fc81a616faf63ab5d5097dc6ec2580e8a32fe2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/wrapperAt.js","hash":"7d374b517c61846dba2ec2898d75181025fde1be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/words.js","hash":"88c9e852c37f155c0dc429a401d44df09d9ca51c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/whereEq.js","hash":"95d70e584abab7e886e137823be0c719bb67ca2e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/wrap.js","hash":"3631e867dfc78a67db38ffff790ee94022015a52","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/wrapperValue.js","hash":"51e6e912753e7d425a490e90c8205fe83dc435f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/wrapperChain.js","hash":"1e4f82ce87696ad134450678d2fba27bb46cd123","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/wrapperLodash.js","hash":"ee531effe7e5e4472083f98b35497f858be33bb0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/values.js","hash":"97fd629e19d9740fbfc87a26f86a259bbe7ca7f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/without.js","hash":"2599adcc37dbd771a16ea4cc2a0c1d4513f38a9a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/xorBy.js","hash":"476caccbc9387505d0e110f814102335c77bb511","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/xor.js","hash":"bb7e8f6d42f3c73d3358ad081b4e00796d1cc771","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/xorWith.js","hash":"8d0c86364c19f9c2b17feac93b112781ff81b3c2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/wrapperReverse.js","hash":"0e41311c145f305b07da8c06db6e8e7ebe5433ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/zip.js","hash":"3017d4235f2ff6d2658a88eb540246821e9dcf04","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/zipObj.js","hash":"353dfff83f25574ff58209ae8656869ab5516e81","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/zipObjectDeep.js","hash":"e27ad4a21f3e47d1a59b796566d3a4c5ffbe5ebb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/zipObject.js","hash":"8449412e15d18c596810ebfa34c5a0766f22b7e9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/zipAll.js","hash":"e5e2a68f3c74299cb44da02653f7773d7f6ae554","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/lodash/fp/zipWith.js","hash":"641ede21898d379ba0b8b9038913fa0400a271b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/qs/dist/qs.js","hash":"778cc175ebf3c3c9cfda14994726c9c711b2ad71","modified":1525413963000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/index.js","hash":"9039aef43bebb9c999e4711d367211cc97b710d3","modified":1497471592000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/formats.js","hash":"268fd11b0d3295eb9e87943e70ef9f1834d573ac","modified":1496129637000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/parse.js","hash":"bcbbc2323305b1ce595610a585b916c9662821c6","modified":1504939441000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/stringify.js","hash":"f3e93e4a7577328ddcdaed6a4c3fb74d066eea4d","modified":1504939656000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/utils.js","hash":"236fcc5250a635993bf6dac33b6024e737a5137d","modified":1525237041000},{"_id":"themes/tranquilpeak/node_modules/qs/test/parse.js","hash":"c484d2bf4182a9e2271ef85cbb5f9d25b9ca8231","modified":1525237041000},{"_id":"themes/tranquilpeak/node_modules/qs/test/utils.js","hash":"cd07caa5d78b48f035da3d761e19894911561df5","modified":1497471592000},{"_id":"themes/tranquilpeak/node_modules/qs/test/index.js","hash":"597801d7cbacf7a83f59b0615ec53af28dd5ab2c","modified":1496129637000},{"_id":"themes/tranquilpeak/node_modules/qs/test/stringify.js","hash":"a2f01e48a855accf752c08ea59b5ae5a4d9e522e","modified":1525237041000},{"_id":"themes/tranquilpeak/node_modules/request/lib/getProxyFromURI.js","hash":"9ba23efd9897fa29c71684461903bc935bbf43c4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/cookies.js","hash":"f43e796e4f8388308df04ec93dcb9b5f8b1a36c4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/auth.js","hash":"51ae63ac59f47ebe5e14b0c02e57dd2039763b53","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/hawk.js","hash":"36f7cd4dbeadd8252506b629e6c7499353d80d52","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/har.js","hash":"62a20877d776f39a5055e0579ffeb04c791d1c53","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/helpers.js","hash":"dde269662f846192111a95dfac3f5c96c7168615","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/multipart.js","hash":"bdab230a7e88b3e8a594f787c7ebca21b388633c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/oauth.js","hash":"b9d881dbba6cd8bd619d9a3e6cb56394b2e9ba79","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/tunnel.js","hash":"0bd291728498557a1a489179fcee22006ecc934d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/querystring.js","hash":"47b77094b91220564ab53b30f56cc1f96ac7bcaf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/lib/redirect.js","hash":"86ac7634a518331071c240093530acd896a61dd8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/configure/request2.js","hash":"27fc633c95633c3e452b5e63481b5bdefe669329","modified":1469908999000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/lib/errors.js","hash":"5fa6ced92ac49641b3cfe06c911bb1e24948fe69","modified":1464217418000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/lib/plumbing.js","hash":"2c1509ea88ef16c45a07c8ff8886ef33a08da67e","modified":1469904627000},{"_id":"themes/tranquilpeak/node_modules/request-promise-native/lib/rp.js","hash":"1952ca32984899f291d3dc1385f8a1a9506f8a02","modified":1494207688000},{"_id":"themes/tranquilpeak/node_modules/qs/test/.eslintrc","hash":"19532afcfb2ca609b9687da0d7dd20cdb4ccf7e4","modified":1504939656000},{"_id":"themes/tranquilpeak/node_modules/request-promise-core/configure/request-next.js","hash":"1defbaafa5ad9a1550f4eb3cd9b5fe6058466a74","modified":1469909012000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/Str.js","hash":"24856515dc284d9d93512f693d56eebff760e649","modified":1431657519000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/List.js","hash":"b12c13c83cae0d58bcc3c1aba002499a0a001590","modified":1431657518000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/Obj.js","hash":"50a5fd13253ff7571cb49eb580a7c8b80bf00b54","modified":1431657519000},{"_id":"themes/tranquilpeak/node_modules/sax/lib/sax.js","hash":"dcb93c310c07d19e54b2d83ed235b25f3258bdbb","modified":1498153337000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/Func.js","hash":"4c289807a465b74b25084d2fedc089c27b66153e","modified":1431657517000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/index.js","hash":"1967d27b2aaa07151cfab1016a8d20fd850d646d","modified":1431657610000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/Num.js","hash":"acd641a345a8fd7afea30ea99f5351f5bd6d77c4","modified":1431657518000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/base64-vlq.js","hash":"493d3d895198dfaefe88d2b066c272552ea35889","modified":1492467891000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/array-set.js","hash":"ad62f4ee15345ba799a00c59dd226690b4d1d1d2","modified":1496683247000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/base64.js","hash":"269e8e4dcb82db12f6e2a6187e7be46bee604ab0","modified":1492467891000},{"_id":"themes/tranquilpeak/node_modules/source-map/dist/source-map.min.js","hash":"5ef490ae9deea142fb1171323150a652225c57c7","modified":1506695999000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/quick-sort.js","hash":"e4adf67561f701e7563d7db979e5c9ff8d60267b","modified":1492467891000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/mapping-list.js","hash":"68a9ed5c0a48a384f64efaec04444a464952509d","modified":1492467891000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map-generator.js","hash":"38ee40e9489511593f0feb9108700a377021a07b","modified":1506355788000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map-consumer.js","hash":"f7b2363f0ba6bd65fcaa832bd5a1a8b3ad6b3270","modified":1506695946000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-node.js","hash":"380a1badcbfc18aa40dc5b9ea4cee52dc33ab29c","modified":1506522668000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/binary-search.js","hash":"b4333085d02fb4c091361de85d5cb368a3ce7632","modified":1492467891000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/util.js","hash":"75608cb748eb9a01273a60a6fcde464831196b7a","modified":1506458279000},{"_id":"themes/tranquilpeak/node_modules/sshpk/bin/sshpk-conv","hash":"ef58cd3dce531e6a04e6557610f52be2688b8568","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/sshpk/bin/sshpk-sign","hash":"75271a4b0392b5549555f50085b991e8d9a3bd0c","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/algs.js","hash":"456cb47c5dbad4853a16580bf5a119fdcd3961ab","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/certificate.js","hash":"7aae869c182fdebafab8c6e874e58e676f7a1309","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/bin/sshpk-verify","hash":"bed5d9cc90700090b09d785d84f985b7815e55f8","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/ed-compat.js","hash":"9f3438ecdac4db94eadcce851ad37546d0917cf3","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/dhe.js","hash":"7dc084b818b2f34dde05295e5ea8263067edbf7f","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/errors.js","hash":"b1492a5f7867af3b22be7135c44764a6e9176d3c","modified":1477331061000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/fingerprint.js","hash":"e6c785d0c163f3ddce7f184cd05a83e2474ab290","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/index.js","hash":"06ba3986439893c92b576708563bbb4c3391fef9","modified":1489167517000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/identity.js","hash":"f3f67f02b98acb835ec8aafc571cd501e010e007","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/key.js","hash":"ce0e29b8f17873069d3e589870233af7b9d2428f","modified":1528220841000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/private-key.js","hash":"37f3a7846e1e86c782a2c752f56cb774320886bc","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/ssh-buffer.js","hash":"d4f6c446907021e26f507ce40f9f54adf7031d78","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/signature.js","hash":"549617f1491c572a55d31a0f1e57a8ac79af795d","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/utils.js","hash":"f3144db7900828a5b8a24244668d244094bfb593","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/stealthy-require/lib/index.js","hash":"740589a4924b1e9a2c9d694d306a2bf8c456d9ab","modified":1494301028000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/lib/TreeIterator.js","hash":"a12ab4619220fe173ac0cc2150e4e108362cd401","modified":1482004981000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/lib/SymbolTreeNode.js","hash":"66ed1ea45c971ffa630d3fb095bd2c3e422d80dd","modified":1482004981000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/lib/SymbolTree.js","hash":"84a66101ec6616addebcb8f80ddb94d701a8f09d","modified":1482004981000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/lib/TreePosition.js","hash":"6de2ea89aae4ecf6a9c7c95837b68cb6bc132973","modified":1482004981000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/pathMatch.js","hash":"3d403b8aad536db9e97eef4915eb01ef53405323","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/memstore.js","hash":"36e9a243ca6edea4975a77cb4637da999d37dd18","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/permuteDomain.js","hash":"d028d9ac2af6241ebc40810eaa1c1d886d922451","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/cookie.js","hash":"5a589e00d94e808c426464e57c3982468eacd717","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/pubsuffix-psl.js","hash":"e6f44577dc69725e632107a5f710de480e178eac","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/store.js","hash":"bcce2205e56bb588b4e6cfcd48a34610a5eccf82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/striptags/test/striptags-test.js","hash":"126a9fe92edf65aaa18646fb7d0851dac7c9de9a","modified":1484743089000},{"_id":"themes/tranquilpeak/node_modules/tr46/lib/regexes.js","hash":"dfda0e5d3a9972218dbb2f76444a047d80b623c6","modified":1504404532000},{"_id":"themes/tranquilpeak/node_modules/type-check/lib/index.js","hash":"7cd3ef26148711328e58244a4a01657e1fabb6c3","modified":1451367608000},{"_id":"themes/tranquilpeak/node_modules/type-check/lib/parse-type.js","hash":"865b087790b98cc30632918c4d99018a954fecd8","modified":1451367608000},{"_id":"themes/tranquilpeak/node_modules/uuid/bin/uuid","hash":"c5b3ec4d8a8f620420aa52a8f3a7cfdff1197667","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/uuid/lib/bytesToUuid.js","hash":"21f3fe1411c266f0c539291ec70f90fdc50a0151","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/type-check/lib/check.js","hash":"abe3114c8036a60817a94e77cd027d350adb0151","modified":1451367608000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/test/basic.js","hash":"dccd686c9c0f397d56318e99c89fa29fe4db84c2","modified":1448663157000},{"_id":"themes/tranquilpeak/node_modules/uuid/lib/rng.js","hash":"be0888747039b095cfc50d0fb6c82105d78ab40e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/lib/md5-browser.js","hash":"6e2bef8a5892014d27b026e93c00abcba28a173f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/lib/md5.js","hash":"ec146c8bbb3628e50110ce5fb2e8c5c44eeb175c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/lib/rng-browser.js","hash":"7886d07e07d82af17c52b5b5debddac5f38484e7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/lib/sha1-browser.js","hash":"b5419bcb23bc32a79ac898b5e6b11b27d486ccb0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/lib/sha1.js","hash":"4f039ea8cae56dc7ed50a2e4595cbe22d7259438","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/uuid/lib/v35.js","hash":"db09248b7cef34de5673a2ea24f8780e9bda27ca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/verror/lib/verror.js","hash":"ac944c003b5f5bb7bda3bf12b6f2496c573291ab","modified":1493743176000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/lib/calculate-clock-offset.js","hash":"21f2b8d724e46110bceb88099e4b4c8577fee1f8","modified":1514811196000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/lib/global-monotonic-clock.js","hash":"51cdc59940a157cde2d33b7673fae222673ac244","modified":1514809923000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/lib/performance.js","hash":"5eadb4e858234cd4d37df6fb79bfe5455a880fea","modified":1514944784000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/lib/clock-is-accurate.js","hash":"19552d7d9e8810fcefe7901b64f669d96cb056db","modified":1514900890000},{"_id":"themes/tranquilpeak/node_modules/w3c-hr-time/lib/utils.js","hash":"1a919c00ba422ce0721addcee588289b92d19300","modified":1514856128000},{"_id":"themes/tranquilpeak/node_modules/webidl-conversions/lib/index.js","hash":"85120e2709515e5c5b3870f8537fbe8a76f240af","modified":1502681458000},{"_id":"themes/tranquilpeak/node_modules/whatwg-encoding/lib/supported-names.json","hash":"07f05c3b2bb4c7e399f425e1db7afa24ebe8f624","modified":1509241494000},{"_id":"themes/tranquilpeak/node_modules/whatwg-encoding/lib/labels-to-names.json","hash":"1e90cf78e209cc00eb90418c98ed44dbcdc0555c","modified":1509241494000},{"_id":"themes/tranquilpeak/node_modules/whatwg-encoding/lib/whatwg-encoding.js","hash":"3c96b599493a7e03c14e8e3612a6a77b6c5e8fef","modified":1476585232000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/URLSearchParams-impl.js","hash":"7e79a7a52aa656354ab098dce2e4efde4054af81","modified":1506300901000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/URL.js","hash":"98ec365377d24cd1f8617ff798afc350fb279d2b","modified":1528490252000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/infra.js","hash":"49a551419880e4be1b1a412de9882ba700628faa","modified":1498702351000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/public-api.js","hash":"95ecfe4aeef935d943b3d84e7181e34d60a740b9","modified":1498703857000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/URL-impl.js","hash":"e2382582fc7efe3c4659a3f64d6a875c30cb499b","modified":1524424476000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/URLSearchParams.js","hash":"84f59d424f17f6dccc8cebc0045f24296e10d906","modified":1528490252000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/urlencoded.js","hash":"fb9a618afb48718db3484ffbdf10fb29082691d8","modified":1528490251000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/utils.js","hash":"382ef8ed5fde4f142b4c8590fb9224d2e0bcda7e","modified":1528490252000},{"_id":"themes/tranquilpeak/node_modules/which/bin/which","hash":"5b6b3e1838316fb3f1b3b4194cdf49db0674eb17","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/url-state-machine.js","hash":"a0d90bcc6ecf17d2721cabc7a51ddd8b48322901","modified":1528490251000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/example/center.js","hash":"3ed21e5fa4a005f4bedd58d13f0bfd2eee76bc08","modified":1431018454000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/example/meat.js","hash":"5c14cd287ae470af8c093962d1e26be95558c944","modified":1431018454000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/test/idleness.txt","hash":"25e2ef694c74c8b9e7d1f2b1d7497ff8cf25c462","modified":1431018454000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/buffer-util.js","hash":"090774f31c2f131623e6abfcbfa0251b8c769ef0","modified":1517814396000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/test/break.js","hash":"8c33328b4704520e2d91b2f40179891010c6d29b","modified":1431018646000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/constants.js","hash":"5353f843af37d45f7b77a155ffd8a6b2122c391e","modified":1519284600000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/event-target.js","hash":"aeb442571da8cf1ef606f9e9765a56a001918f7f","modified":1515142992000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/extension.js","hash":"2335334e87814078c693d76e718ba543ea03a122","modified":1515142992000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/test/wrap.js","hash":"098d027896cda479c2ca0099797d9dd91093fa78","modified":1431018708000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/.DS_Store","hash":"cb62f9bfe6f856e15a4e5c7e0d698a03423a5877","modified":1515576330000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/validation.js","hash":"5b0255fb850f7c6126c51e7b2436663fb7cd9920","modified":1517814396000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/sender.js","hash":"8662d4d617182bcbbab68081a521c21f1909b55c","modified":1517814396000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/websocket-server.js","hash":"55500a44b29a6b38d64c6ca0cda4ce2d084fce21","modified":1517899960000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/websocket.js","hash":"0f19b6b6e05f0cccb706e88e39da1f071993bf16","modified":1519284600000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/lib/generated-parser.js","hash":"270c7576f2a663d50eb05e829c746c0e830e826a","modified":1508717317000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/permessage-deflate.js","hash":"9c3351fbcac929e869fd7ceb8214d24b972f7a29","modified":1519285378000},{"_id":"themes/tranquilpeak/node_modules/ws/lib/receiver.js","hash":"3b734813d792ce0fdd32ccbce1a223cc71559f1b","modified":1519284600000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/lib/xml-name-validator.js","hash":"bac2981ef70d2f87e4c0a681205199fa264f9a3c","modified":1462673007000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/lib/grammar.pegjs","hash":"72bb56b6759cbf422ec8639722197c43e86bf3d3","modified":1424801291000},{"_id":"themes/tranquilpeak/source/_images/cover.jpg","hash":"df915f5b3eeed6bad93a183f65e5c6f536e551fe","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.ttf","hash":"bdc5cc08af77d0e3d7a7c333f734fbff982a095c","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.woff","hash":"41ba889468ecc0350ef2ac98f00af4068902febb","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.eot","hash":"abbe9c0c113df685f86b23f8e1c79b35e087a7f3","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.woff","hash":"ecb37a1b10ca2c42fb5e8a24ea071afdf788cd39","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/ajv/dist/ajv.min.js","hash":"151ef2020cdc9e1d8f7fc3c0547693b6c5471aa4","modified":1513456489000},{"_id":"themes/tranquilpeak/node_modules/ajv/dist/ajv.min.js.map","hash":"e7f10a5e07b6ef980bc70a745d8ae53c1c88f672","modified":1513456489000},{"_id":"themes/tranquilpeak/source/assets/css/tranquilpeak.css","hash":"848ad183e583d7e2b1ba2bf95146c59000f16c6c","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.slim.min.js","hash":"bc5836992c0b260496ba520fe1336d499bf06eb7","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.slim.min.map","hash":"e98a47011cad45698b353b0fced9bf8aab9782c6","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/psl/data/rules.json","hash":"518a0f728e63bc66bae8e82837f0a75147824083","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/source-map/dist/source-map.js","hash":"243c68411ad8390b7becabaf7f76d06a32c49c3b","modified":1506695999000},{"_id":"themes/tranquilpeak/node_modules/psl/dist/psl.min.js","hash":"4bfdc3c8854a87ee3f79fc0655f31798771bb1af","modified":499162500000},{"_id":"themes/tranquilpeak/source/assets/css/style-du2xmrqdqrl2ollgeiw050kpl6l4nbyz7bumjuurjgsxyopifvukebxc9lqe.min.css","hash":"bb854b382f512f6ec3a5d21763b3545916c30f7e","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/js/script-vufjrm3fmbuttogo1hxuu0w9w0sesk5iyysjuguc2hdhufot9szxg8twijry.min.js","hash":"9648604871725bb36970bd79b830bd50908cd489","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox.js","hash":"227dd641ffb92c1f0d1e6bb1c695fd4a05a13446","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/css/style.css","hash":"23885ea9644676e83a5f93848452d19d9a8b9889","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.eot","hash":"8fe955fff0adb55f95b4765406457b2afa0be32b","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.svg","hash":"27d5417b0df9b0fb4acb0cd00cf9d7bc7da73608","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.ttf","hash":"a16829d04437bccab092e3aaaa31fa8d5399e067","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_category.scss","hash":"8cfc45772365e537949a4cd20cfa2a79e1a75dc8","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_bottom-bar.scss","hash":"ab28b4d66f021e44d7a46a76157c6a2b5fd23496","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_form.scss","hash":"14026f13b54ef9f2cd7109cf1bca43040816e542","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_prefix.scss","hash":"5e04cd54ba375f69c97b62b7d4e535118ec78177","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_button.scss","hash":"70c64560144d7d6015bbedeca0531258f9bafa07","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_opacity.scss","hash":"cfc9905b6df3b5100a30b5c47fd331068f238f97","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_sidebar.scss","hash":"6c3dc034c3d5fdf7f0c4c39a6913f5bae4fc4767","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_post-header-cover.scss","hash":"ecd9078372d8bd1b7f4979bae3251e8efb345a9b","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_share-options-bar.scss","hash":"06f84bceb82df4d3bda64144f6fe4ad8e3e45f89","modified":1532936491000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_tag.scss","hash":"c8a87e586e27f999ffa46f273f78a812f1cf2f0a","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/dist/jquery.fancybox.css","hash":"a5913612c237bb7443c6006a386edd775201d423","modified":1510924836000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/docs/index.html","hash":"f8a398fee5e826b35bed95d11ce6bec736fa3f77","modified":1510924297000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_main.scss","hash":"0ad55a6191d0a533917845006ceae329353c0b90","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/dist/jquery.fancybox.min.css","hash":"84adea69673c392c1d34a5a316e8e5960aa348b5","modified":1510924837000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/acorn.js","hash":"0812e3cb2355ae07f698c83044f62d8f7de4c86d","modified":499162500000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_header.scss","hash":"52de2cb5f49a3b5748557fe2d25791ce52457d62","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/dist/jquery.fancybox.min.js","hash":"b85b75426ff7569d54a1f69689895315e80ed85d","modified":1510924838000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/css/brands.css","hash":"9d44e731cf27fa47da463b30d3be5b08d0338f48","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/css/regular.css","hash":"21c6c052dba9db35b37884b3a5067b2713ced80f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/css/solid.css","hash":"64cad1367a592a57f06ccdd0336d7eb5f6923382","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/css/all.css","hash":"20d2d431065fc6b38c1187eda564639527e2428e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/css/fontawesome.css","hash":"2ebea4fead7ce762286640378117220b981203d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/css/svg-with-js.css","hash":"8811e8375c178193aa3de9e8bfbc01ac9f29a9fd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/acorn.es.js","hash":"9daca1491080dbb06cbe0a2d010da573f213e6ca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/css/v4-shims.min.css","hash":"671972885692574095ebdecb8df944e80386041c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/css/v4-shims.css","hash":"9945879dc31deec4827c45112d6d357066439f0e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_bordered-pulled.scss","hash":"716894bcd7bf0f9b85ef719285ac887856b425d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_animated.scss","hash":"ac656a405b5b83a6dd93a260ed8d6ec1f4101f5a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_fixed-width.scss","hash":"5d7721b08cea4e54647a9b111d06db105646597d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_larger.scss","hash":"34c47c8368059f595a87cb58107a36462fb3c2d1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_core.scss","hash":"8bbd8f2dbf94c892bf9e15b77d1b1bd615e816be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_mixins.scss","hash":"cbcac74ddbee780acbc52e7afe40c17360923f65","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_list.scss","hash":"d51d3f85b2da04dc8524ad53580367a7c300de6f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_stacked.scss","hash":"9e34f7a76ec87860a4202328b7cb13ea1b54483e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_rotated-flipped.scss","hash":"9149c17649869977134184416f41fbfe090afd25","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_screen-reader.scss","hash":"a6dda8d69f67796beb689b158aba347710469933","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_shims.scss","hash":"5269b01fa4094a2a2b5f237f4418a3252fd6aef2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/fa-brands.scss","hash":"716244e7fa15ae537d3cf0857a222829dc07710f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/fa-regular.scss","hash":"d8eab9d186134961b8ab2a73eea83e007bf21bef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/fa-solid.scss","hash":"acd18a966fc4057fcef0760e3da93d74b82479ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/v4-shims.scss","hash":"0ef7f89afd8c96aa67f6e7d1cc92fb88637e79e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_variables.scss","hash":"c333dac58ff87ae4698e7e1a3b43eadf4b333328","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/fontawesome.scss","hash":"775fb371b087f0d9de8f70b5591de28eab8407c2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff2","hash":"0a885a5dbd97bd9f4fb1821eb82f2135471faff9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.ttf","hash":"0a43b6f9d5b4ffa33cfd47fa59e705031cca81b3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.eot","hash":"b46728e18106256d291e452e3e39e68536d8f910","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff","hash":"3799764c40e3f87674d06b9f1e7a3e2128c6cdb0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff2","hash":"285cf9d32fae400ca979a369d299973307aa3416","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff2","hash":"8aba5b59c5aa7f548a1fa663f02f3cdd3757bb52","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/_rules.js","hash":"aa1fd0679fa83a5bc757f2cd6fa74b9dd3854371","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/async.js","hash":"b92fd01f77b6173d30b61f50a1558e4b7a5e8901","modified":1493406434000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/formats.js","hash":"457281cdccf8ab1461c34e6026563d8a4081461c","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/index.js","hash":"90458d9d0ac76d31c183a6aa86be4019e91fdaab","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/error_classes.js","hash":"e5d1be01d1186282d7084b0b1635b25c9de0edd3","modified":1493406434000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/resolve.js","hash":"5acb5034a28835d99707dd6a59855e5ba2c4edeb","modified":1497650535000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/rules.js","hash":"457c4549dc9a0ab07368df0f3bdfac2ba0c73e6f","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/schema_obj.js","hash":"2ab2f6d0a3cf8f771cfda8884b2e674902a91205","modified":1478659364000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/ucs2length.js","hash":"d9c7a635a1729fd3c961c2cc40303b88fdca0f31","modified":1488651577000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/util.js","hash":"89522aa5ec88d49b1adeb1aea99fdbdf16070afe","modified":1499382312000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/_limitItems.jst","hash":"a5f08855d0b2a882c4b3341122bc5aa07cc0d38b","modified":1478659364000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/_limitLength.jst","hash":"15a0514666e349800af264c9f6e9ee8c45b92a62","modified":1478659364000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/_limitProperties.jst","hash":"9dd3a6a07f75c6bc7cdd46feda6a096e0bbf430d","modified":1478659364000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/compile/equal.js","hash":"552b96774b6567eae0ca01aa73a4a3097e556fd5","modified":1497650484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/coerce.def","hash":"f0a517b2dd8e31da0c6b808bcc8d7904cf1648fa","modified":1488651577000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/contains.jst","hash":"36e37f3bd5a76e2f0c73a58885aaa2148adfd0db","modified":1509138552000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/allOf.jst","hash":"49ff68e885014484926de4e250c62086a0902abb","modified":1509138552000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/_limit.jst","hash":"76e8a9cb8f7dcdc3397204831a9d5fdf50ee17f4","modified":1495988420000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/defaults.def","hash":"4b8a659d76328fd1ffa30d1fdf9f7661f1454a80","modified":1478659364000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/custom.jst","hash":"b3b919b02e4c0c2363bc739df0a81fc108b9c4a6","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/dependencies.jst","hash":"22925e478bd2a4dac309963f2723193676d2c91e","modified":1509138552000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/definitions.def","hash":"dbac6273765dfc96bcf84436081fdc99db06c125","modified":1509138552000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/enum.jst","hash":"37e8b49379577599a005a7894ed0c18c5db174eb","modified":1488651577000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/format.jst","hash":"eb4933d5fa37f641a63e44fafc8ee4848768bc02","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/errors.def","hash":"1d64b17028e9d03ed613ccc619e6eca358a53c52","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/anyOf.jst","hash":"29416f6f53c67cc8c8161e6cf822572fa6de929c","modified":1509138552000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/items.jst","hash":"d92f27b253b011a601e2e3e905d3a1102b3cce23","modified":1509138552000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/missing.def","hash":"2b26bb3614903b676ae185b6c21e50b755efacb8","modified":1493406434000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/multipleOf.jst","hash":"f459196cc2232c4b5213281398d98a3045b37584","modified":1478659364000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/const.jst","hash":"65cac846e3a2e69328d396c9dc4ee67d527fbaa2","modified":1493406434000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/not.jst","hash":"d56a4d3eb89d13805d9d034f9f06f738c70db267","modified":1509138552000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/oneOf.jst","hash":"31807297ea5eac06b0b3e735e3cc9b88a6c4f5d0","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/required.jst","hash":"03476ddfca57724405f9a0add4078c5b373a1193","modified":1493406434000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/ref.jst","hash":"ecfb29478f34bb79384250ab78fe5477b1a63c51","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/properties.jst","hash":"c68a3cba8a9ab8e2705d7e99bb2a5d72e82ac03b","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/pattern.jst","hash":"e58b96f12768261e83c1358ca9b32b0fb7c28a31","modified":1478659364000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/propertyNames.jst","hash":"e0625dfdf515b895af9c54bcd18f6dc1ccb6e4f1","modified":1509138552000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/refs/$data.json","hash":"c8536212f482b958bfb69c02dee1f0a420586d7c","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/validate.jst","hash":"edf0b122fc5e11bb1f4e5a39be1bc34596101b51","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/refs/json-schema-draft-06.json","hash":"1096d2305c0f7173cc25027a20e48085b19f3cae","modified":1511556552000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/errors.js","hash":"556bbb1b810ede9292493a70ad9a8644e5c4fb7a","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/index.js","hash":"1ab39535ed24903d0f9e2a4bf74333702842080b","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/reader.js","hash":"3cfcdc9225bb43dd8413dc3f1f05d4fcd32d0b30","modified":1443646115000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/types.js","hash":"8a41886747dc1f7cde7e4e5cb60e1a3b8a4c813c","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/writer.js","hash":"bdad4a0bb12fb5f91b789329fc4e4a45ecf87e64","modified":1443646115000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/refs/json-schema-draft-04.json","hash":"9e8c49d51e4128cfd685841a9185395c33675e85","modified":1458937067000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/refs/json-schema-v5.json","hash":"b6a4b0cff69cd41f6a314ffb27ad72d750e698ff","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov-report/base.css","hash":"61ff1245179fba36e2924b1ab9cdb92222901f0e","modified":1505146456000},{"_id":"themes/tranquilpeak/node_modules/asn1/tst/ber/writer.test.js","hash":"59892680384339812688163b346d12cc05e979fd","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov-report/index.html","hash":"b8ffe19604159e81cb5e46ffcdcd721a146dd2df","modified":1505146456000},{"_id":"themes/tranquilpeak/node_modules/asn1/tst/ber/reader.test.js","hash":"de84b2d7317393c6e6a0cdef04bfbff82ba78237","modified":1401981220000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov-report/sort-arrow-sprite.png","hash":"7d887a09a1d329cb65d85327cc809ced7059b35f","modified":1505146456000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov-report/prettify.css","hash":"c913ae292c2060519657a2ce6d8366a09e71004b","modified":1505146456000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov-report/sorter.js","hash":"22e214a23aa976891fa6bfc1ba7c3ed79c289960","modified":1505146456000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov-report/prettify.js","hash":"43f2560c12ab3c378b4e8ef24ce54df255974b32","modified":1505146456000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/js/fontawesome.js","hash":"06a395f60c1433a9c5a631acee4275a96638f810","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_animated.less","hash":"fbbd3b89ccb9d56a99ce1aa0442273bcd84c8828","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/js/v4-shims.js","hash":"a502ff8d50e35b8cfeb880051c3ba4e56a5b8d85","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_bordered-pulled.less","hash":"68eb7b65ff58f64d79cdc91be80240cd9437f097","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_core.less","hash":"ab16ac52b2414965dfe9409f006bf4e7e1379fca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_fixed-width.less","hash":"73b8a2ac11cb31fa60568f3472d0b8a4c252f943","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_list.less","hash":"841856f7421014f04808ac16d829298f0454906a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_larger.less","hash":"af34a8a1a98069a8b155cd9aa281778a6a8137c3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_mixins.less","hash":"83cb70062cf2eb3c62b60518cf880138596d41be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_rotated-flipped.less","hash":"d6a64a4db03dd5650c3637e5454a43eb051df89c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_shims.less","hash":"1a3c0ececb16ccf779952f8e0325918c81167316","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_stacked.less","hash":"98790128f1dfdfa3e32bc62748de1409c07d3961","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_variables.less","hash":"c43f84a8513c49c7e7b4c65608fb02c4d68c9ae6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/fa-brands.less","hash":"660b03cb58aaf2f089f5b1d4b2e2423ba2e83abb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/fa-regular.less","hash":"36ccac2f6a4b43c5a8b8c19fd4b7122250f7bcbb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/fa-solid.less","hash":"c2242ab3858dece226c25be31ac2ba416d7889de","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_screen-reader.less","hash":"71139132f170ebe7712836210f4d2c4905151899","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/fontawesome.less","hash":"481a8faca4bcfe517ef3c1e22d630e699ebbeb16","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/v4-shims.less","hash":"0ef7f89afd8c96aa67f6e7d1cc92fb88637e79e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/browser/bluebird.core.min.js","hash":"ccb5ca34bfea5d0dcbcaecf9c4c09b79805f9647","modified":1507132264000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/any.js","hash":"424dfe2a1afeaad729ca2be5ccfd443311716c41","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/assert.js","hash":"da909f13035601fbcdc3a28937dd44e3008327ee","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/async.js","hash":"18b0242372dcdf745ae68b6c0f193b6fb2f40b96","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/bind.js","hash":"6ba64f83e985a1cb7dcf945490e4c280460ccb25","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/bluebird.js","hash":"f68f4e491f49be5a5a3c5d04fafcd8abaf02fc2a","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/call_get.js","hash":"b53dcc39da361dbc72a49ced90d5290d94c70b80","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/cancel.js","hash":"1a6c901863d671048f58095fe9b568b2a8407729","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/catch_filter.js","hash":"cbdedec0db19fe2af76d5594ed8bf819000d7c79","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/context.js","hash":"ea7eb1ab2c8231fa6bfa8446cf730736735396e0","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/direct_resolve.js","hash":"470ca4d9a7e387ceceb383bc2640202f5fa6bda2","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/debuggability.js","hash":"039b50edc8f5101cbc1002199805b0bc8e07ef67","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/each.js","hash":"44949d491571dd38f6ffdd777cb44f96aebb5fc8","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/es5.js","hash":"019c4e8b62031ea49aedc86dedd20318c6122698","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/filter.js","hash":"a5f3aee4afbc67d372e5b4fbaeac047d0d9c779b","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/finally.js","hash":"cc388e93ecc2e12145c080cc67b0d8517e481c13","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/generators.js","hash":"6b334d17275b48548e44f74f477b2e8bd49da304","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/map.js","hash":"4d96c67c999d7f8a155934d25bfe8cc4912ad469","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/join.js","hash":"5ab50e4fd76d09506700b47e7672c9d528816d4b","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/errors.js","hash":"98deaaee17f36851937108257e028a7e237b3f5e","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/method.js","hash":"02a5a493c2cf2045fbb20b2751381e4b4e29dbe8","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/nodeback.js","hash":"46fc87ede6ca68434439a5216fe8e6f89d8d8a1f","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/nodeify.js","hash":"ebd75c010fcf1c4f709f4b444e62b80cfcde2a0f","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/promise_array.js","hash":"2b05f82b39c408715260b264dbeb886d080efc59","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/promise.js","hash":"6038f62bb6a4d8d676dfbed9d2b8b36a0ea6b223","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/queue.js","hash":"e6fddd439658a46c57132ec8d07dd04bf1d743e6","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/props.js","hash":"d26e05c3860fd45b7ae9008995493c6d01c2f2e7","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dot/uniqueItems.jst","hash":"481daf3571235956fe78cfde29b85699b884b970","modified":1513455712000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/race.js","hash":"5f5b5403be19793dec5658af27fe996173eb4990","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/reduce.js","hash":"8f0d6b75ed5682d3a7e45254d76618258b45bb2a","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/schedule.js","hash":"bad77d032baf76d04dd40cc5f01c5d4adebd4578","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/settle.js","hash":"36f97c3732ae907af622fd4c859d29da1255fdfa","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/some.js","hash":"b548ddd7eb6b35ae6e97d931e0a8ef6dd512b3b5","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/synchronous_inspection.js","hash":"21be4c93fd5b93b07315c5edc930800e686e4dea","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/thenables.js","hash":"b06e617f4b1e5c9c33c9c4e0baabe709550154b1","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/timers.js","hash":"ad830b808b63bd4b291a3b23210bdaf850f1f818","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/promisify.js","hash":"3831be99120a57a3c07406f7012467f02346e92c","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/using.js","hash":"5b287a7d967647d38091aec63f880abc46caeb4f","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/util.js","hash":"fd5ded260b95d0aa8ec6c2c376167a482f26d8f2","modified":1507132265000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties.js","hash":"9dd9f96480bf3742dc80316a70f963741a0e0ceb","modified":1471063625000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/azimuth.js","hash":"3fb1fbbc937b38ad4425c0f96a78284ca1b6b121","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundClip.js","hash":"4b0392e4a2261eda91c5b8ff3d607d8e79110dcb","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundAttachment.js","hash":"0199568a1af2d059c6dabb3aa0faa5efc0c1a52a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/alignmentBaseline.js","hash":"3667c629a77826ad624ccec259d2473d2d2be503","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundPositionX.js","hash":"d26f2efeccd3cb9fda9a368c3181ec9c7ac9858f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundOrigin.js","hash":"667131085aa8557fc935b0a2e35810ec2ab94e82","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/background.js","hash":"0920ad7e8f695b80fa8520809de0889d84c76d1d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundColor.js","hash":"fd04a1eb43d3d12578ff1dbc3c61b190ec1e11e4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundPosition.js","hash":"8d2cb71708ea0d964052c3ce094a27d2cccbd968","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundImage.js","hash":"91c5f7865809bfb05d4176384da5dcd555445ecc","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundPositionY.js","hash":"35e569b83f36cb8c3eb49649b8b9cccd0feb0c63","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundRepeat.js","hash":"1c88300ad76926e05f901da899e440848ffdaa39","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundSize.js","hash":"6854e493b5264db5c3936dcfd4d438882ed30cf6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/baselineShift.js","hash":"b507cefb3cda6fb75797b084151e9498b18a4a82","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundRepeatY.js","hash":"c923cdc6250004644cfcd80eb92fe1a82c8acf8f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomColor.js","hash":"a1ff4cc10c219e5ce386b0b9f533faf5ae561ba6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundRepeatX.js","hash":"ec5bdf649e51ba966063b468bacac5d2b30400d5","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottom.js","hash":"cecaf24c586b7cc83634cd269bf6241d14fd92af","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/border.js","hash":"a148d708d50bcacf798f281043f268ee7a242d4f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomRightRadius.js","hash":"4516e251fbe124bfa05b4a54ff00ed6da507d6bf","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomLeftRadius.js","hash":"ad34d703a19fba80c6474d7b660c745bc14acc5f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomWidth.js","hash":"b2089fc4c6a4d3973499457b020967bf0997d356","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImage.js","hash":"6f29feb485bbdf8a91bc5dbbfadbe1f202bdf718","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderCollapse.js","hash":"3c4a64be81ddad8519aef7c30f256431dda01b68","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomStyle.js","hash":"2ee4c7b0f67a7f0ab56758412ed591cfeb061cbd","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageOutset.js","hash":"d7274722f694db2cdae4cf3967746bd96ecb547f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageSlice.js","hash":"b53374f1ea2ee31f47078d1541f5e15ac49b0a21","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageRepeat.js","hash":"33360ab3a6a71c1eede3d14ab68156485c322693","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageSource.js","hash":"fae49bcf1561c694211e96ee4b6c2a33020174ff","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageWidth.js","hash":"7b5cf5b02ccfb20d4b75863e6ec562f5c556a3cb","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderLeftColor.js","hash":"4a69b709dd9375e14a1985c2c42be8f61648b406","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderLeftStyle.js","hash":"836d4bcd4abd0ca7a31cc6f7acf957fd1f1c927e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRight.js","hash":"ab4c68940da19e0e6559acc10cd776197ed7f482","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderColor.js","hash":"ab244931c0bc6c4e8c90c53cc5bae0e0e88752f7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRadius.js","hash":"3a283a4f413fc1b1e3b5d895f78e62a4673bf7d4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRightStyle.js","hash":"8a9c6b952d9d9c0ca2927a9a26e8bfdd14b88fc2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRightWidth.js","hash":"32f36e08029500679222385c573803f172dfbee2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderLeftWidth.js","hash":"ec8594dfdcd20af531dfda53937be0b6ba4493b9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderSpacing.js","hash":"ccd5868fc2ff04f57fc177ef03cbeb8968bd389b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRightColor.js","hash":"e3de08cc471fd716a11de1a4a22c9d1f8d483a32","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopColor.js","hash":"40258fcb91f663ac93836c773380d88271797462","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTop.js","hash":"4d34eff53207b1ec4a2f91e42a9449070931c8d5","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderStyle.js","hash":"f13de2e15287bee645879c8e2114ca4e3f061f83","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopLeftRadius.js","hash":"50fab673daa9d55a7fb7e263b1a1dd410a5005a4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderLeft.js","hash":"8e901349577666448d45b7c11112ff2e0bfa89fe","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopRightRadius.js","hash":"27e391ac7b0bdaacf09292ecdbcfa943fa7a017c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopStyle.js","hash":"9bdb995d309ee73621aa9c90d136d31a509bb3bf","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/boxShadow.js","hash":"292df9a478bdd15d17672855baf3e2b6c97bd8e0","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopWidth.js","hash":"8435a1e5ad950dbf3a7d9fb26247767ee4c14a04","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderWidth.js","hash":"70e137b6880934f5f0f43d97f6c989ef63633936","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/bottom.js","hash":"551135c851563c6e9eca973dd09a2aafff486636","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/color.js","hash":"95184e6323e21e4859a89ad9c4f8e8c6d010db95","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/clip.js","hash":"4d6e70f70bfaa2374240c90dead58fa6b2110285","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/colorInterpolation.js","hash":"0d44228fff8db938f4746c84727fb64141e8629f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/captionSide.js","hash":"9e334fb891a224577d7651c30f85833926e0a710","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/colorInterpolationFilters.js","hash":"a8a3289e5b1d132c0df03a8475a67fe4390c8826","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/clear.js","hash":"2e758c9c424afd4ab4e60ace15e4bb2c5148e6ee","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/colorRendering.js","hash":"bf0bd598a714eadd7ce9d4dbbba3dfa63de6d928","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/colorProfile.js","hash":"f877b03985c383e458c16496e508f108aca5c880","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cssFloat.js","hash":"f235e47404f33740a01d0d092c3215867e62f264","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/content.js","hash":"8d6584cef93e2c4d5592084d20f5859a4e887a78","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/counterReset.js","hash":"2252fdf4b4c784d7f2207b2722efc11f469256a6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cue.js","hash":"45db449b66bb6ba867873e89431bbebadd7d1457","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cursor.js","hash":"901c80196c2c1ee11141604e458c85242bbe69f0","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cueBefore.js","hash":"859fcdf975464c92d7da1ec100a3cc741d260669","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/direction.js","hash":"1aa20d76ddff7871bf5fc955032c1589d2c6cd24","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/counterIncrement.js","hash":"6206c2b58d20b5ff2de566826b53aa6ccf3fd918","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cueAfter.js","hash":"2243b024778df0dd2b1d136921acb096d675b7d0","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/enableBackground.js","hash":"035c218703f9da2d62edb76a2443f5f8e5cdcc50","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/dominantBaseline.js","hash":"ce4f3fd8a95ae46c7dc76ba06c6c22f12b439099","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/display.js","hash":"085141c7b264087fd4867a06a1de66be4ceca636","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/boxSizing.js","hash":"3d65f52789e6ff90e7de488d3e7c3d2dffd170b5","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/emptyCells.js","hash":"efe96c7408cda5644171269f9cec3e6384fc7b64","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fill.js","hash":"c4002cbba74f4bcec58f2721e92163896ebfd5ee","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fillRule.js","hash":"8933f22457131d851697e37dc3ae3d61b0f6800d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fillOpacity.js","hash":"ffb077edd6bb1588c8d9859859e991512a500b94","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/filter.js","hash":"451d2bd1ca2177e7b23d855aa136db4c80f4a700","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/floodColor.js","hash":"c2fda7d686405752cef3c9b5139c887efc009f82","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontFamily.js","hash":"19dea64e8853ecf0c0f9fb2a33cdbe2a30de837b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/font.js","hash":"c8fba3bfb369896f5cd2d5409092256cc4a4e0ec","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/floodOpacity.js","hash":"5c7222d64c9f11c5c9a90b412da4863c99c75ed2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontSize.js","hash":"8100b3a02899c01008655e69349095495cb74413","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontStretch.js","hash":"ef73f116950894de7cf7b3ecdb3938419f4b966a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontSizeAdjust.js","hash":"163632d0fbfe69c7bf893c7e4f7362e539e57a2f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontStyle.js","hash":"4b22e186dd27643dbac627e9ebdb7eb34d26daa7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontVariant.js","hash":"b1c491791d9c4c5d7badea93b6a0041a26dc3cfc","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/glyphOrientationHorizontal.js","hash":"02ec7ac759540d65c3436b437052214ff919d2b4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/height.js","hash":"7cf9d1a852bbd3bf1904a5f42b773669df60c778","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/glyphOrientationVertical.js","hash":"bba0fba0b3ed95366719492466198fe0b290ebe2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontWeight.js","hash":"1cb235a39b04bf483b5f4907d3800861373b5335","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/left.js","hash":"a335c4cc29a7107e8f89f3a88485f76be62dcae9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/kerning.js","hash":"f2efb72046f5de515e765b156bb94b01e2b579e6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/letterSpacing.js","hash":"fd24f918aa28da729c011a3cf367936ee045dbdc","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/imageRendering.js","hash":"3b1f83841c202d14780da7973fd921274be16c59","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/lineHeight.js","hash":"471f25140a2c3414e009f3b68d7e0781a691154b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/lightingColor.js","hash":"365a779204051235c792334cc4ccd81790ce7a8f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/listStyle.js","hash":"ca0d02d1c98b756910cfaabf97f9755510062712","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/listStyleImage.js","hash":"c93426025c869a258626f6f3944ecf2bf1807973","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/listStylePosition.js","hash":"683c3ac2b8de29d1105f2a843929c24615855c45","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/listStyleType.js","hash":"6d5223f9159c9240be026257f306515b5d21f9aa","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marginBottom.js","hash":"82183de5478e6c15f948bf54fd95e00f25f7e92c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/margin.js","hash":"58d9d458a91a0ea0335053c42213a88f089674c1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marginLeft.js","hash":"40fa4277edb4d9d2abc601989347c38bd631abf7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marginRight.js","hash":"abdfe19b961af2bbb3fb707764f41d6f46b87e79","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marginTop.js","hash":"6f18c7e3f3c457c1d8a7b2f466f5ab8393f091dc","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marker.js","hash":"72e1c91e2f9f6e1c558901e5fd77c00272cafc84","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/markerMid.js","hash":"c44a5c703efaa1a4f6ae27f7090b9c3c739545da","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/markerStart.js","hash":"f3d3104e06d44257d0d90d2121a2836ec0143292","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/markerEnd.js","hash":"27eee0de8e2497eb991918613d850da514d7303e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/markerOffset.js","hash":"2c0635ca7aba3e367d30be36d43b4890e201c9c2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marks.js","hash":"586ce5f8a56abaddea061fb7e9259c2678612073","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/minHeight.js","hash":"84e4fb3b7e879dd65256676c9f05e06b88d822d2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/mask.js","hash":"7480c08a361f835a73121aea2a8b583a763cf46f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/maxHeight.js","hash":"a4308b20dbafe37a5b36906c409ed18cfa6862ab","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/opacity.js","hash":"4d2e1f6dcdde9be82602b3fbab3c0e1d59d1b432","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/minWidth.js","hash":"14c845736187f328270dc5eb553d44c770bd9601","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outline.js","hash":"18f8026f81d8b1b46fb56596a0ff51c1c7dc0c39","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/orphans.js","hash":"03dcf905535a3c1a8ee350679102bf49c3eb291e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/maxWidth.js","hash":"c99700d7cf2b9a6d6cf94f6d52a77c037a1b30a2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/elevation.js","hash":"0c2423d93d115fdc0ba59fa5bfc33690b2bc5cd4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outlineColor.js","hash":"87c2881a3b8a4a356151467c67e8a4a6fe5cb635","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outlineStyle.js","hash":"9d3fe1e52da2a895a3a3f94068e2b927c8efd3ea","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outlineWidth.js","hash":"450d957676a4433db69d61b401b979626f8f52c2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outlineOffset.js","hash":"5dc00d9351548df36f005c30bc05fb6c60d42ebd","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/overflowY.js","hash":"37745eba7d47e357fdd9009f1b27673d3839f158","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/overflowX.js","hash":"7621be75856c3372200ebec14bf1fc9642282374","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/padding.js","hash":"3c55f479def28041a750e45afcab1e3522232753","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/paddingBottom.js","hash":"8b6e0fea8158ea8bdf15329f6b6b2c1bd5736888","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/paddingRight.js","hash":"4d54a3802e6ca1563ff4389625cf0f97d36f2256","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/paddingLeft.js","hash":"87bcd44d85200c6b22d09ceae7419ce50f88a677","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pageBreakBefore.js","hash":"717315be402186d0e6701dc1bd25147987b5770c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pageBreakAfter.js","hash":"422348b4bd3e2a528c5ca6b5e227a04383f71614","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/page.js","hash":"95d5e887c064ca729cc12ceca2ab5c9b60429cc7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pageBreakInside.js","hash":"c7020c23d1a3558048202fe1e3a3d71f15370a97","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pause.js","hash":"9a319bbbe4d254feb8c4e2bdf5b722fca291791d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/paddingTop.js","hash":"d9fb6be95ed84bfbdab8753b5fdbfd92e711fafd","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pauseAfter.js","hash":"38e1f663a6b141db92afe28b98c50b397f91c503","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pitch.js","hash":"5a86ddcf3540d2b2a1fc0956c21717137e3114b6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pauseBefore.js","hash":"4ed1fac61c4daf285c9d186967a5df1bce9705eb","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pitchRange.js","hash":"17f7772baca02dfa8f3ba51e43f5eaba0db83b62","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/overflow.js","hash":"e35e4994fa3fb7707ad6fade94f9f11e0897bfba","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/position.js","hash":"c3b26e18e3834325b93b06192841bb7e7659c7b1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/quotes.js","hash":"1ab1e303b558a6c667c1907048b5b9e524f7a30a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pointerEvents.js","hash":"7bcb331cb27d3e93b514548c1b813062b3a4bb09","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/richness.js","hash":"ca769f89d425924e8c474757d1b3ce40e9ba5905","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/shapeRendering.js","hash":"54dbdbd8fb55ce4c042397d478396fb2218ca427","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/resize.js","hash":"03e35f68133c450f2e1cca1c324fb61ae1846eeb","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/right.js","hash":"0f0953521a28d040dc2c7ac63301e34aa4115475","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/size.js","hash":"850afb747c59dc8b4c200f7e1979b2371a19e95a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speakNumeral.js","hash":"12f955f17d30a7e518075d096d436257d2062fd4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speakHeader.js","hash":"f91aa3489ea14adafe6d9758c2a98191051c5705","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speak.js","hash":"c440affecec54ccd7b683de77219443e5b77072e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speakPunctuation.js","hash":"95e2f871fce44c92703f14bcd132d5d0f18d6846","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/playDuring.js","hash":"2d430df1eabeff1a3a54bc55de1e7789852fac42","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/src.js","hash":"85f2c55e7856695e67b52e249a7f8b23c599efdf","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/stopOpacity.js","hash":"de4b30bd35f35a2c0a520210b9e5d26fb5a432fe","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/stress.js","hash":"8ed2a03f27227a40fcc9a32a904293211e9d69ee","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/stroke.js","hash":"a4884a3304ae76c07b81c52f4082343dba50fdb1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeDashoffset.js","hash":"04130bce44da796dd021a0e9c442b5c2843979c2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/stopColor.js","hash":"c58fb33ad3edafe54a564856d4d4698cd67ae48e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeDasharray.js","hash":"bfc87d7a5f725aa9cbcf14e302b962fe5e535344","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeLinecap.js","hash":"b4136eee0e7d34c9aa1244e667624932d39b3c02","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeOpacity.js","hash":"93808538b96b4489a772b6908367f1138071920d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeMiterlimit.js","hash":"c33171a7086caab2970b2fc0fc7c071284050860","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeLinejoin.js","hash":"0abf16b1b4e85d9920055453de40e57ba8264543","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeWidth.js","hash":"e6289496bf1b4c940430a76bb19b7bb66e7d8d15","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textIndent.js","hash":"a68b443cef2f1f7973f5c2b66a327d155c27a6a8","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speechRate.js","hash":"74e355d74675849f90bc992c7b2788ab7adf4c0c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textAnchor.js","hash":"4906cd3baffa51d5e0750123516b41ce581cbf16","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/tableLayout.js","hash":"8ae059eb43f73fe895c159afb499ef375e280e23","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textDecoration.js","hash":"83df5b26b64483f8ce62db98dd5a25d75808ff58","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThrough.js","hash":"26fc798b46213c1b2468e06d4dce105311389480","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThroughColor.js","hash":"644107c2a7f6090e216495a9597caae4ad1823c7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textAlign.js","hash":"ea376d3c86f79b05121f8753724ab04eb1d78c82","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThroughMode.js","hash":"dd775e36adb1d648165b149fa3d8e2799c6c26cc","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThroughWidth.js","hash":"f76135f5a86c67c422468323c45a8d6c4712b56d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverline.js","hash":"3a40da4e76b011b5af6a8d46729b8aef59a9c178","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverflow.js","hash":"51339379c121304d94a167a6b54a79a94587682b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverlineColor.js","hash":"c4afb60c243d004a1cfb23adc19ca50975a5e27f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverlineMode.js","hash":"7736538e27daf9489531b7bf7795b4fa16e09d15","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverlineStyle.js","hash":"0f3ca319ba2dcda26a2783ec1794cb9795df2e95","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverlineWidth.js","hash":"403525f477dc4dea04b855a8ccd691c8e51cb914","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textTransform.js","hash":"44e9c5378ef4d081b752a06a4d9f1a528ce9c9e0","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textRendering.js","hash":"c8bf0d6887696a03c1c3b6f6ce85c3cf350f01fc","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderline.js","hash":"b1120ff95c9777199a5f47ee51c79818bf424ee8","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textShadow.js","hash":"9853ecf6aa2c1ecf18e86a6d6c8aa850c2e02037","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderlineColor.js","hash":"c0828a84f34193a6c9b539aefe2789fe5d0f7e17","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderlineStyle.js","hash":"b52011af8e5383d223a92e3d1649f0493bd14ee6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderlineWidth.js","hash":"8cd2d9f66fa8ae77532454efaa05eab10080bad4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderlineMode.js","hash":"6149c009727445cc1d4837c2e543ac8c9c2c07ba","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/unicodeRange.js","hash":"b3831b839f264d0b1cd367802fbab0367fc3a56a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/top.js","hash":"632eb761d0c99ad8d58cde8bac592ceda8ae212f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/unicodeBidi.js","hash":"76b97d3cbf75139c7fce66f682a2d4cef5515e60","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/vectorEffect.js","hash":"0ba136d3b623cfa3eb6b08763df4c0450c26cf16","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/verticalAlign.js","hash":"02fe517d87d630b1d775bc9efac31b03f7862a1a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/visibility.js","hash":"cdd798d2b250e72794cfefdc76c98b3682ce8c50","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/voiceFamily.js","hash":"6f77248a52a97c05ff8d484ccabd7bb61bce40ec","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/volume.js","hash":"361e62a8363ed7d9d5a2f3884e557ce078a085ed","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimation.js","hash":"f5f23b09f4fc8c905a1dfbde0f28a77f3b1a9d6b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationDirection.js","hash":"ceeece00da8dbdaa295b8125a840911e95581c3e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationDelay.js","hash":"1eb7827b9a8befb42c9c01347b591e4b4ba1663d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationDuration.js","hash":"988cda9786304497f58d15cf693335a949a90626","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationPlayState.js","hash":"7ccee340d9a5bea935035690c594aafec2a739e1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationName.js","hash":"c7214886fff87bdaad6dc22cae90e8e74c4b9c8f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationFillMode.js","hash":"90a9a1c1ef4772b55160d793661786068f8d2443","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationTimingFunction.js","hash":"b3610f03bc401d4adb20486b63d6ac176bb37aa2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationIterationCount.js","hash":"56159cb27f3506fa72ff2a97c1417798296b9503","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackgroundClip.js","hash":"473f49088b4e571c294b9a7a7c4c852e1615281a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAspectRatio.js","hash":"fc8fa3f8f8b1d320c0717c57b46d35834ae56fdc","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAppearance.js","hash":"02a7d3cf936b8b8bb3939f2e6f73b7680ee02e97","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackfaceVisibility.js","hash":"475456cd27cd3b32ed98d4139023b74741ea9ecf","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThroughStyle.js","hash":"52c73eedb46e353bc43ffe864ac3391553db4183","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderAfter.js","hash":"c653539660a50c2307dea28c9a216294dce17697","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackgroundSize.js","hash":"97b0c05a0c6db8700707234836bbd0dbb1d87158","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderAfterColor.js","hash":"f97c7000479959aa97f8205ec8175e9de737a04d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderAfterStyle.js","hash":"de7f23d444aabd538af048143107bd5c018ee801","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderAfterWidth.js","hash":"48cfcdf15d94cf0dc4ddd82a47edc2f87345630b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackgroundOrigin.js","hash":"f0aefa510c314998b688f0c59a89d524ba3a1a9f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderBeforeColor.js","hash":"c215a7b044e113a36167ed36a31612dcb7011192","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderBeforeStyle.js","hash":"aa9025717973fb5e1b83d13ea7fb4273e429e6b3","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderEndColor.js","hash":"610f83a255283c152f710289a99dac9a1d191f1f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderBefore.js","hash":"857bb838f98f19d8ea561a01e522082244c83eca","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderBeforeWidth.js","hash":"6ee4f1ba11c2dd06cf7f0392ce23a8597d668de9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderEndStyle.js","hash":"c73959ead0f68f1cf9ddde3c9fc4c004be469d6a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderEnd.js","hash":"676724a23ac599c7ed2966fcf4228266b5943b37","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderFit.js","hash":"bab3013f106a449f4f70f3c4e15e0a898f9c0fc5","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderEndWidth.js","hash":"23b52548966a69071e19bd9e69d105bf7716a884","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderStartColor.js","hash":"3abdd6a8a07f974200efc2a14fca19ec4b3273e1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderRadius.js","hash":"4b47798d24a051384bd9c58ef278f80f6c87705e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackgroundComposite.js","hash":"7e05d46514ab0e8c3214ad5d99ea67dccef3655b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderHorizontalSpacing.js","hash":"e1a467ecfa516c7592054a3bd809c00a3f90da60","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderStartStyle.js","hash":"1e6c13ff5442d38b21bef478897f3de46f82018f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderStartWidth.js","hash":"08ea78d87be09a01915a2f682479192aa92d9629","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderStart.js","hash":"7808ada36b6a88a576829589e63032e667c46114","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderVerticalSpacing.js","hash":"02c36d3b792c05a4194b901eaf926eac44314990","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxDirection.js","hash":"5e0c34d782e592246b7e1f55c1219382d57bf6d4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxAlign.js","hash":"a225dad69b37564c6d02d7b5fe6be8453f9ab903","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxFlex.js","hash":"841d0c2a7a8e5405c57f64480b46ecb39b784bc2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxOrdinalGroup.js","hash":"4a4a2419ce6402c3ab4a53dfd9007124011ce1fb","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxPack.js","hash":"02bf50195bc8d6d43e5baf197a408c937e0a9bce","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxLines.js","hash":"3a65f3f657aeebe1f9bbf94c6a921d9a0cd3628a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxShadow.js","hash":"8e9c45c91d47f598370d77bca15c98e64e6a7094","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxOrient.js","hash":"18675e2a5cb79a09ce0ec0b62bccaeec7615b6df","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderImage.js","hash":"0bb3a09d7d7d61f7cfd92d80798d50c3c2655fb7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColorCorrection.js","hash":"64f047599c5be9e26ecf0c8e710dd6c7878284f2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnAxis.js","hash":"48b48c2cc953d5806ed878b5b8446fd5d1b31e22","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxReflect.js","hash":"c6b47334e0987af105edf9f687d39113b15a92a2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnGap.js","hash":"4d84eaaab0af84132a4339b20d3826f267cbe33a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxFlexGroup.js","hash":"76d5ed8a4b17385b8d23f8c0244d48154ec6b9a4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnRule.js","hash":"de43b8a55f57a61bb57ef14e1c250635db467efd","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnBreakAfter.js","hash":"4355d5c294a7fe8d93e8301671dd68a57082613d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnBreakInside.js","hash":"f98ad16c9b038a3a998b0817b7ac261bf34f7468","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnRuleColor.js","hash":"8bc29b7c9f72b7d47f565a66d99845c1b6266bb3","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnRuleStyle.js","hash":"94ff37cdf687ce63511c5b5f9df929fa20c29b51","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnRuleWidth.js","hash":"e4c08dac0b934a0555f07880f0f67bcb6641f756","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnSpan.js","hash":"723ff16a562b724df00097de0e04c2d796063931","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnWidth.js","hash":"7f86b86d02a71b699414fffd525e731050a647b4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumns.js","hash":"06ce3210a7d3efab6df5aff1d56f2838e784fb5d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexItemAlign.js","hash":"e8cdc435368cea493dd2e8a20fc65f5b6a09fba9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFilter.js","hash":"fc45685c1301425d4bd499171bcc5362732257f1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnCount.js","hash":"ac6e8d87b81afe226605181f175f042474e192dd","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexOrder.js","hash":"c1d4192fe74bb4e3460708c33778ab4ad45dadec","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexAlign.js","hash":"ece0127a3d064d0b76cd1fa71b8c0bef822f0fa2","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexDirection.js","hash":"17e14fbc0fe1865dcad3eeedda5cecc09666cecd","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexLinePack.js","hash":"01ca7589fdb58fd9a172d2c3eb9f7d6e5436a0e5","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlowFrom.js","hash":"3640ee5f9be1b1c186420d48b63362b6e46f0509","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexPack.js","hash":"5561efc9a9f2b3a57fee542904ca410c41c2af39","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexWrap.js","hash":"f61bedf0d8bee5cbc77df5c570ad19a265f74d96","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlowInto.js","hash":"60f5695a6efa9eb0150710b4a4a55af052de429a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontFeatureSettings.js","hash":"59f68db7fab3d44f21653f9142804f6376142b3f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontKerning.js","hash":"c104da9b323667145d7f4a927fad787b24775ae4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontSmoothing.js","hash":"683e08744b9b72fadd37e7447a73f4f021fb8fb9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexFlow.js","hash":"976713849c845662694e07808d48b9a2b63a7e58","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontVariantLigatures.js","hash":"72af0328bf304a461b6f9a91ec0ba345d647920a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphenateCharacter.js","hash":"dc8f8b81ea4b1260cc59c9c8f321a2fb9da8902c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHighlight.js","hash":"47f581096debb18b147488bc8575a253ab7fd3d9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphenateLimitAfter.js","hash":"a4bce1681dcbd0be579ae2780c31fdb19f713d80","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphens.js","hash":"02556eef9f55f09d02468be185b6537532bea2a3","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphenateLimitLines.js","hash":"84ac5cdbeae7fc240218995fe971fdf864a4af98","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineAlign.js","hash":"898974f0ab8e779edbca22bccd9eaf9db338dfda","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineBreak.js","hash":"7edf265a6535224e37908e95538bf0439ef1c08a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphenateLimitBefore.js","hash":"2c6a2768ebf7ac205b717a5a56eadadf7f9a10f7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineBoxContain.js","hash":"4e242b1560e169d8e2981146d6f64465657b9ea3","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineClamp.js","hash":"bd9f490191ec72d9e0a6f7d8d1bd8bd3a84a5a1a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineGrid.js","hash":"7c3e563c3d0de68d3c79d287a6dd6bc63f897dbd","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineSnap.js","hash":"0f710024885490f454ed01c1b4b81b4094af854c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLogicalHeight.js","hash":"9f23e2e2f552925798efbdf17eefd838c5abb948","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLocale.js","hash":"d9616dbbad2cc8e171641c9df52bee3835f87a9c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLogicalWidth.js","hash":"be34de2daa0b3161847ce6f3a125efaf09e2e02e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginBefore.js","hash":"6e0897079bfbf21bfe11f1cdebd8c4372b0d4549","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginAfterCollapse.js","hash":"b16f9761f21a76b592df0dfff951bc6bb4ade7bb","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginAfter.js","hash":"e35da84f2da44b3ba707319c95b45dcff547dde9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginBottomCollapse.js","hash":"a87511e848cb1a7ccd2f0b2791394f1615b7f99a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginBeforeCollapse.js","hash":"7a8f82883f24bb5e19461259776fd55a17f0812d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginCollapse.js","hash":"299e4f7685626ccf00fbc96fbb4b383d96fb9231","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginTopCollapse.js","hash":"e5be1438618eafa952ecd179626bc6619b88c52f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginEnd.js","hash":"fb0760295dff882a62381cecdd196763eb07684f","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarquee.js","hash":"d9ed8ab33127879ea6e0016fe02781aa275707b9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeDirection.js","hash":"36d70f7f66e2a03793c3145e9b8981a3c077f442","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginStart.js","hash":"1d45c47699b7290b4b1420944824c015fb164a11","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeRepetition.js","hash":"22d10644c2baafbd0457b9571ab81de6b14018f4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeSpeed.js","hash":"054382ffd49b01838eddc69bc0b243f116b70ff9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontSizeDelta.js","hash":"4d006b76d4ec81798a849ce966b76b7e5d0f7143","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeStyle.js","hash":"49819a83cbfe38a0e41572541272a202fd90734c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMask.js","hash":"4b7fb52a15910884afb46cc08be9464a10e45f3a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageOutset.js","hash":"3dc0fac40a26d197121896b834bb9d60aafdc366","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskAttachment.js","hash":"c6acd0b3475a6170c1e889c507416c9f813495c9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImage.js","hash":"993e853701db03529be22e74c6f1d1d8e3f7a862","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageWidth.js","hash":"d90d368b59729c8b65e2069f05c3bbc519df9288","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageRepeat.js","hash":"fc4fd887a95b4ecf50e327d590027386396206a1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageSource.js","hash":"a505a20c3e8ff6cc8bb5f779d94ef83fbbabb3f8","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageSlice.js","hash":"c7c978ed4d92cc0ebe001a4cba2227cf8a86b7e7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskImage.js","hash":"e8055ef35bfff64ef3ee4de6bffd838cf5c058da","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskClip.js","hash":"660ed67d251ec9b3f4231d1c27d16a9e57a1c015","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskComposite.js","hash":"5528b32fe0dd3c1080c30b5c97a082c0073a7170","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskPositionX.js","hash":"220e86160b2c8bc8260dfe101731e90be175a1fb","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskRepeat.js","hash":"293155ad49a63642767a9797de22e850a1b9c680","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskPosition.js","hash":"941b437edfb9bd7691afdff0f85eec4ac6579de8","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskPositionY.js","hash":"f7acb23d84d6559fec78dfaee73de692b2e385c1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskOrigin.js","hash":"71ef4ca594d448fb2db105c21643ef76785b1ca3","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskRepeatY.js","hash":"919ad24fc964acdd4dbb02f3e976907d71dd43f5","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskRepeatX.js","hash":"cc47f7175de2ec427f194ed85a0aa61f237193b3","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMatchNearestMailBlockquoteColor.js","hash":"6af7558bcecaff28ce276b2ed4e447a43386ea44","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskSize.js","hash":"48a6d759014f634b8bb8a00be70a13505f57c44a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaxLogicalHeight.js","hash":"4a0229db39e7f4459446487df09fae255df9336b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMinLogicalHeight.js","hash":"1dc7f8415cdedbbe4e320a0b57d51f7172142780","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMinLogicalWidth.js","hash":"bdd8a6e713b67cca5dfd6c95d684c6606df06ec6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaxLogicalWidth.js","hash":"583fcd40f15d24702ac754b5d4a80ed297d315c5","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitOverflowScrolling.js","hash":"02ea1c5176bc5c9b09234b592e3360166787f77d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPaddingBefore.js","hash":"c39d5a403f909f5e9062e4addecf5ece9fbf45da","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitNbspMode.js","hash":"00fd56ef4775f3c5b8989737863d1e3f623e0ba4","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPaddingAfter.js","hash":"e4e27246919a74aa836db91f186822148bb8a908","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPaddingStart.js","hash":"2d799fb2e2724b7ac02789dd9d46205431dc5f77","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPerspectiveOriginX.js","hash":"9f945410cd71ee792b251b5efb69bfa1af12dcad","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPerspectiveOriginY.js","hash":"ae8673175e082a3d99900218fbc917dc7e99c1e7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPerspectiveOrigin.js","hash":"c024b52dfdf8c9107961117e9edd0fb3f9e45943","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPerspective.js","hash":"d285bd0b58334df3747af4bb09d7e1c34079c6ed","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRegionBreakBefore.js","hash":"cba167aa7c0b0a09be80e4a69a1172031cb1e0a7","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRegionBreakAfter.js","hash":"bb48e387eaee86d3f7350fc27c405acc450c1b22","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPaddingEnd.js","hash":"dd582921b95bea4b7dbe204df8ae641c039f7735","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRegionBreakInside.js","hash":"a4d2b75f6514b954e6a4e34fdbe3f5fd8200b577","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRegionOverflow.js","hash":"8e6887422388fefda3763dcf763de59f52db622a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPrintColorAdjust.js","hash":"937e268ee229239ac1be6e72aa13d0bbfadbd9f3","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitSvgShadow.js","hash":"6ab4cd6e794b32be7b046e404a8e11bd3c632a88","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTapHighlightColor.js","hash":"219749cf12488bdf4be689aa50e2e5994abd1c0e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRtlOrdering.js","hash":"692a652c450b7eb610f6e3a78dfbc271ddf22a4b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextCombine.js","hash":"c55f537052b2b953f3406dac4d298b0b11992d03","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextDecorationsInEffect.js","hash":"6ba7df69c2d0f44bfcaee6f582b865074ea0cbd3","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextEmphasisColor.js","hash":"8b8826c530f9e37480de48006403c4d51a7c750d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextEmphasisPosition.js","hash":"1ef660ae1efba0e4d08514776aef0d2506a7d409","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextEmphasisStyle.js","hash":"98fc9acd744fee6adb2eef769d9d27e2cd70c8e1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextEmphasis.js","hash":"2a71753ac9fa303fca2c9b5ed4d27483c9051b11","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextOrientation.js","hash":"eb5336f1752c9a4ca9207c08c34a6654a558ce4d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextSizeAdjust.js","hash":"df9fff309e88cb6c950f1a857cdaf7b9db61b06e","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextSecurity.js","hash":"00a676b398f0bffc899c703717df81a24b732be6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextFillColor.js","hash":"ca8c14f54d01df4b1a22057945c2e9e084178e55","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextStrokeColor.js","hash":"30865a9e8be43ff22898b16a52d5b86bedc48d09","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransform.js","hash":"cc521781975567b9b5cff4775f40b7550dbd2c81","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextStrokeWidth.js","hash":"b44b0a701c7aa8aa951033058c068f3590004a4b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnBreakBefore.js","hash":"bcd8d6cf38da48675dea4f45d9c5ef2c2648da94","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformOriginX.js","hash":"263ce0c02f12238cae7f225af1f5ba5fc7501156","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformOrigin.js","hash":"c97940b559384c32d56e3c85d84e935c9c56f849","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformStyle.js","hash":"6b67f7bc0460b06b6767eedbdbdb359efa90ccae","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformOriginY.js","hash":"e1e53e263d896c685fbdc75f64900e1d07d4955a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformOriginZ.js","hash":"d7baf7c9c9a5948106f90f9300179a7492248e50","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransition.js","hash":"83aed9f07eea7e0d1e7cf31133066c3f17caceb1","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransitionProperty.js","hash":"ec4824a5bcf57edf3b2fc0bb411dce4a1160c616","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransitionDelay.js","hash":"e5ca962a4d4e7d65658029ec5dc2e1bd672e8608","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitUserDrag.js","hash":"f531379ab58dc06ec2e76efa9a8c79383eff568b","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeIncrement.js","hash":"1e720f16b247dd8e84577113304a7162de6dcb79","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransitionDuration.js","hash":"36d53f20c2f9b75ebd9ab3605f3dc750487dda24","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitUserModify.js","hash":"eea1745ff1da161f7460ba621f5ffabf7670cc2a","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextStroke.js","hash":"4d2ba0c327be7814f8def04e3d5a88d8cfbe7276","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrap.js","hash":"6a9211510c88ae4483292254405edade8673872c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapFlow.js","hash":"2dd8e6459aad7316481661ce90ec20223874bd4c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitUserSelect.js","hash":"e167070aeb6518962fc5dcd184b28ffb7e5c3a71","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransitionTimingFunction.js","hash":"13debd6976f4e9914d87abc8189248079abb2421","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapMargin.js","hash":"8eeebbbb84e1c85863b9546bf62e34431f2eb1dd","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapShapeOutside.js","hash":"6ba4f08725802371f4148cea324f23d3231625d0","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapShapeInside.js","hash":"24b3abdca29295074f30ac4be86cfaabcae4a9b6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWritingMode.js","hash":"86669b75c9eb9113ad20f48abf504e18c787ec84","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapPadding.js","hash":"048645ff4d56e2475728784f495ac8f8fc2acdc6","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/widows.js","hash":"b49e084ea3c82263153da21a5ab2a2e3d2caae91","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/wordBreak.js","hash":"d84f4cf6a8c0fa03dfbad16d851aaaa6398cf8cf","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/width.js","hash":"c5cfbf13d8f8bf7717c975dae4cfd07efafa4e76","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/wordWrap.js","hash":"8c074a273924b0167bd68cfc4a8db4da145c3f08","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/wordSpacing.js","hash":"50cb18e42615f4428fcd51cf823daf87b8b489b9","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/whiteSpace.js","hash":"4da9a9ebfa4f2d9ac332e57d44e3a69ebf5fa4a5","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/_limit.js","hash":"699c3a62cc56427b64b047394342c69a07719eec","modified":1513456483000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/writingMode.js","hash":"2270aec8cdbf90daa7ba43efcb2957162f19314d","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/_limitItems.js","hash":"bd64248a5389b8bcb8eb21e93b8102c306942de5","modified":1513456483000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/_limitLength.js","hash":"69e44a19f0a0d98459892cb437e9b4d76d6ce6cb","modified":1513456483000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/_limitProperties.js","hash":"34389e3a7b4182048511b6fcd322ee78d9f0fd06","modified":1513456483000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/allOf.js","hash":"1c7139787ac3cdf172085f3a1338d62da73b7cd0","modified":1513456483000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/anyOf.js","hash":"ec2270bea00a13b457257a0494c72c0206c1db44","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/const.js","hash":"0bb7ef223a64b8ec654c5cb73289c160a5274e3f","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/contains.js","hash":"39203eb764892d0dc9258213cc14d39f099c8020","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/dependencies.js","hash":"c6cb5ea6e89cb604d8f44983e5048eb085c8091a","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/custom.js","hash":"262d02ed4d1d28074b6bc091b3a8b1a6bfb16dfe","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/enum.js","hash":"6e393877127a96585eedd1dde48fcebb8b10c5c9","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/format.js","hash":"0614b63fa13015318165f34ec6793cae3055f6d7","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/multipleOf.js","hash":"e92adc56f09a57dcd7874707bc9216e7e3524aa6","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/zoom.js","hash":"8c5224c5ff3cfee0dc64e2b2f309d73fa2aab75c","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/not.js","hash":"6000dcaebbba141f6e47c03388b811304ea9a059","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/items.js","hash":"79e2915a30cb7bebbc55e031771b13aef47dbea4","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/oneOf.js","hash":"c3ca999d153dc0ef44b122acb0a790e79e6204d8","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/pattern.js","hash":"64bbbb42ffcbb2acf430ae0a06cec60f7e083a04","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/zIndex.js","hash":"082b3987818047fb51fbf8086e99c8706b85d882","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/properties.js","hash":"9fda11df6d682d895cad18d60bb4c3bbb9a9677a","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/ref.js","hash":"9fd4a3cbbe24b8943bd0d80d8e9393f35bc8e595","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/README.md","hash":"0c215e65e288a0fff457173582f2fc5909c4b30b","modified":1458937067000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/required.js","hash":"a0a9e1e2d66fbf3de8657e557bac5a7019f90950","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/uniqueItems.js","hash":"31eaa83ed07cf88f5d0ec03ef94a0df1dbf386ec","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/validate.js","hash":"18a59d765e9b60247a338e54933b497b2c4cdfab","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapThrough.js","hash":"9eb2c939e4c51c79b2cde733d2cb3492e755a5df","modified":1471063185000},{"_id":"themes/tranquilpeak/node_modules/ajv/lib/dotjs/propertyNames.js","hash":"67d5a6dc43ce4e9392e04eed5a57b7b93bb1d849","modified":1513456484000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/abnf.js","hash":"82addec1b6c07619aca7aada359aed3f34c02642","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ada.js","hash":"f03675f08c9750f48c33ea202894cd3b13d8600e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/actionscript.js","hash":"0ea1dbcc03123f7d61ac0d69cfe55bfbc517d2a9","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/apache.js","hash":"c60412ca3c2543b47727c8915286750873a24c09","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/applescript.js","hash":"64c56abbca58a0881b736a5b7519a178a0a1d782","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/1c.js","hash":"de01bab25b86d1e12cd41b2c151d496d09b07ba3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/armasm.js","hash":"d49048f28a92ae394e0c2fdddad8e46a53732513","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/accesslog.js","hash":"348d234c7253b8b308b74376fd92824d7788e745","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/aspectj.js","hash":"53e02075ee7d4923f95bbd47e3697f6b6bf58783","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/asciidoc.js","hash":"b7e01e2d240ff73a8695ed1447a47c4a0be7b62d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/avrasm.js","hash":"474db1f6917d9ee3b1679286ec1583f1bbd19c2c","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/autoit.js","hash":"5a765d8c3d147df67badc2e4135b8e5df56337ce","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/awk.js","hash":"b749eda162b5bfcb684da29e1c2e71712afd2f57","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/axapta.js","hash":"0f0f21ccab8b6874e965d53791465ed89e3aa13b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/bash.js","hash":"8a9d29a349a9f177a72a4fddcbcef294e8e2f736","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/basic.js","hash":"78824065536502064ecceaf75d9571d3380d9642","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/bnf.js","hash":"ef775edcfecec203e6c67fa994ceb6d7d81d90eb","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cal.js","hash":"7d7b9e510ad2ead900b097c38074f755378647e1","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/brainfuck.js","hash":"b6d4f266923cc946678a9060be5ad4a02a358db8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ceylon.js","hash":"586cc177a3c7dee9836e9f474bc3947e93424ab4","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/capnproto.js","hash":"0d947410d260600d3b110c4c427545b2a97f7947","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/clojure-repl.js","hash":"1e9b837580d563935b9e4a2314e1c618c42cf052","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/clean.js","hash":"2f08f6fd4734e0a12c39362b34b6312865f5ea80","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cos.js","hash":"112dc8b9329863653b8e9d648b8eec0f7f0cb45d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/clojure.js","hash":"15ea1584ce3ea6837de6dcf9e04b3c9388b62466","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cmake.js","hash":"72aef704f3645ffc6cbfb8d534fa31c0181e1455","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/coffeescript.js","hash":"149af704b2951ac39ff2be20d99466cbe5fc1629","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/coq.js","hash":"f0d48985501355c966a12d54ce236c2c92982b03","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cpp.js","hash":"fbc740e6517cbeba0d7608bc595f0c04ef5465ca","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/crmsh.js","hash":"c8ad2da6b6603b62172e2865eea4add11fd79800","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/arduino.js","hash":"873698f166f498133260f60b37b8c2fea4bbc55b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/css.js","hash":"e3e285a4fde1eeed5120211054b1e5f0e4cbf92b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/crystal.js","hash":"137b69f99262fdac465331cefc12bb5355332a52","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/d.js","hash":"229d02046adf47a87e6229917998b564a0726ea5","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cs.js","hash":"a8104e1d7f7096087de7138a14c77042966a98a6","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dart.js","hash":"06e74990e6dabb0d55b90bfa1e32786b26ed49b6","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/csp.js","hash":"8a4c03add8f3c7815fbbe8dbc28748e6fd19cb1a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dns.js","hash":"de0553c09bac9edacdb1c492dd05960cc7cf971f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/autohotkey.js","hash":"a7a96ef42b4f4ceb462bbc1e31562898060fb9f0","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/django.js","hash":"f2fdd57b3a4aad786b3cb81aaa1151abbac9de2f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dockerfile.js","hash":"6a16033eb47225bc4bdc3957c3e685874263b8dc","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dos.js","hash":"bed63b430d0245c8b6c3e430d849c64a8e40db4a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dsconfig.js","hash":"e1b080939fb6e23065003841f1b81e84cbd9f411","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dust.js","hash":"2996fd8585906dd1ae8f1dc9e8b8abd7ccd568fc","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/diff.js","hash":"ce359050293199c8667739f88ecb435a4d08111b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ebnf.js","hash":"a2668958d3f99499f250158dd0adc549793c0ec3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/elixir.js","hash":"4d352797253b7fd81a0836ad9d590e515f79d0c6","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dts.js","hash":"23612dd62fc09eb91bff8e7eafd684d469ef3392","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/elm.js","hash":"f6a06178460a203c8c49f889be4b51f40832914e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/erlang-repl.js","hash":"b40072b8f60479a3b2fda37c6ffa5c6065e160bb","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/fix.js","hash":"225c32c97aad884ad5c3d256b13aac89ab7b3569","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/erb.js","hash":"3e67ebd4a54e38f7c4352facbb0114b914df773d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/excel.js","hash":"741ee6d1f9ddbf7614a75d90f30c4afd6278b9e9","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/flix.js","hash":"dcccd8fe672c40b1db80c26ad3389d621f3304be","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/fsharp.js","hash":"51446ecccedbe24c8477af70d4fbf15d5f090ce5","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gauss.js","hash":"c40d2988e593edd4d434336a372ab8a04a975129","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gams.js","hash":"5dc186a0cfd8115c28d82f020d0618566f14e69b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gcode.js","hash":"1c35a95ccd30d0949d1f09f586989e036c97187b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/go.js","hash":"b4b17b3d63424736f00c4b58afdc313e9094dd7b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/glsl.js","hash":"c348157dec60d1f1d723b0f88cfc0a9bcc0d74ca","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gherkin.js","hash":"68eddb4dc9b866bad4fc3b555be92199716489d8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/golo.js","hash":"8d53d68e90a908e33670d075a3727bc3bac48f12","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gradle.js","hash":"3c7ba57616e77ac59b59810515bb6d2bebd6b6f2","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/haml.js","hash":"84491f05df1fc74d1084fb253dc12d2bed0a2fca","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/groovy.js","hash":"cb9e4ed4363a68859e7fd8365b7024835691d669","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/fortran.js","hash":"a9d0aa92cb7a7ee12ae3b89233ef4e3f68a1b5ea","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/handlebars.js","hash":"3586163cb9c029239185209044f91567bc9388a6","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/hsp.js","hash":"ace444817c7832f9947752ae72f51329502c8d53","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/haskell.js","hash":"65d0e2f2dd60d21107438f98bf06b5673a0e395c","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/haxe.js","hash":"a2804355ea896b573c3c4c4d4bbc611f65601dde","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/erlang.js","hash":"eab318990e71134e5ffb248663d141dc418a43f7","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/htmlbars.js","hash":"2b42fc812e7bb39a5e69e2c5a0365a6952689e18","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/delphi.js","hash":"4771dd9abe3394931dc8e9cf717612617f94e22b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/http.js","hash":"202176d2e4fc551d11162a797c1f2ec002412b28","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/irpf90.js","hash":"25b18b62a7eac03d7cd196c12480437ddd957196","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/hy.js","hash":"6456d54268279752bde50e4ced70f8d5a3fa5c30","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ini.js","hash":"ff3f6c019db17271a60c0110d1c0d8bb4b20ecfb","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/javascript.js","hash":"6aca7e933f0e8d404f1e62a88756328b4e9b0b15","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/java.js","hash":"90fa24c718396fe72c34f56c34649d104e31cb2a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/julia.js","hash":"f35a2ccbac0bdfcf3039b5ba04f231f8526237d8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/inform7.js","hash":"f7019518299290c408b65cae8a5d9a2170f260b8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/json.js","hash":"75b75bff84a88d6b0b630442d4b588719e3ccf22","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ldif.js","hash":"2f6f2bf8d3ff343e8f3d661fb7b97333a84615a0","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/lasso.js","hash":"e519685b2d7e0f11dd850041085b97fcacd8fd3e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/kotlin.js","hash":"c8d946ed41119a9801702dc36da57ec52a060e50","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/julia-repl.js","hash":"09b83b2d540e2106024dc7fc67c3b65513318f14","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/less.js","hash":"6c470c8d7a92f1b436536e469b362b92f1b13c67","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/livescript.js","hash":"b3a1310bf1b1c812fc28467c136bbd77610c50e8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/leaf.js","hash":"7a74ea9bf9a65ea1b3b6632a5c7b4725cea86c05","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/livecodeserver.js","hash":"7966dc033093c1555cbf626b58b9cbbd5f889614","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/lisp.js","hash":"b6d09c4efc9f62bd400d3b4e3a830e86433b3650","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/makefile.js","hash":"dd503cb449593fa6bfed24c922023213e62a367d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/lsl.js","hash":"460ee52b1bc77438274d2a4b7dde478e52798c2f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/llvm.js","hash":"14449c574014420aaa9131e36c68550b1b46d996","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/markdown.js","hash":"226a75a5d3bae188408a8d388ddaa8d702a38194","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/lua.js","hash":"0bbe0ee424e83c548d6ce21a12f8885b23419030","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/jboss-cli.js","hash":"11af05d6fe833154c0fc13a8817c325ecafd0c8b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mercury.js","hash":"154f4ac390a395eae2bb4246c93c18b7412b3bd5","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mipsasm.js","hash":"adfac05b0dbabb7a5053abdeb7f25b0a2b8df178","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/matlab.js","hash":"08d33bc43836283c2181a1077c117c77fc8cc8c9","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/maxima.js","hash":"3522fa58e0e93d36c3267dea5172e33fe64cc843","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/monkey.js","hash":"64fc8e856e773939f5f50fb03b3e207e77ae5ea6","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mizar.js","hash":"009acb028481b4f3ad95bec4d0386bb2184e7acf","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/moonscript.js","hash":"485510191b2c8d67c96710cb85dc1a37ebb05af8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/nginx.js","hash":"2d35617087edad25bec36f549a82ae574e6c9a45","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/nimrod.js","hash":"e892415387bd17ed7f62205b11704e5f0751943d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/n1ql.js","hash":"c6ab9f27fd4a711387a0d15d75926aa2087b54a9","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mojolicious.js","hash":"7edb53b8770a591523bbe90601a1097d589a5dc0","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/nsis.js","hash":"859fa05107b664b9ee9180070a3344b7ee5ac18f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/nix.js","hash":"0e799905fad5eb9a7e86b07654d540eb67d74529","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/objectivec.js","hash":"b7b8e950fc63070c2187bba4e00439b492f1af5a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/oxygene.js","hash":"a8e62344bc5a3d7db691bcf28d53fc305f790cef","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ocaml.js","hash":"03e65e7f07732e214a0d32a0b539e76012ed3970","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/openscad.js","hash":"a732c333aa1adaeea2f125e086012305382b674e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/perl.js","hash":"c1872392209d696ab1ec8a34d5a9a2e8ba51ec35","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/parser3.js","hash":"ac15e9d440ec885a71761109fe40ba8a06c7b933","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/php.js","hash":"a4f9f78b7786797c7f8488220525209393d76c11","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/pf.js","hash":"a7b05b0bce721379a7c5245ab2e87f887d64c100","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/pony.js","hash":"ebf4ae15519e16eb80c3ab984c648155109ad52b","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/profile.js","hash":"2199270f25b8e1c6e934f44111d3654d7d1b3c00","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/powershell.js","hash":"c2459c6b38115c02b5edb267042da49c998cf08e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mel.js","hash":"6f19c9f0b7e78725e6391a1e2d3990610cf8c006","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/puppet.js","hash":"2b7644a72813e256632310ec9edef0459727f096","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/prolog.js","hash":"16087064562b8ee336c7373f2f3f377904a7809a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/processing.js","hash":"d13b510492292fb16f8d8a8ca7787b5fdf83f9d3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/protobuf.js","hash":"abbcec351964992b81f75caade03b077850c3949","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/python.js","hash":"624da737f0410e476b81d65e02b95693b8e88860","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/purebasic.js","hash":"684640f179954b84907545c0039460e35da287c6","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/q.js","hash":"7228dbc817b650907d60ee957a8303d53f727f80","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/rib.js","hash":"6ac4095f443d77730802603b2b9161a9bcf72100","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/r.js","hash":"d4e0224fa019df6fbfdf32173aa6667748e9ea11","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/qml.js","hash":"945828adcbf8c801ad38ed551e7213bc97958c1d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/roboconf.js","hash":"f39efee84c9b8c3308746c82176ff6a305da7eea","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/routeros.js","hash":"0aeadff1b7b75dc83356842ac17240695d34d987","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/rsl.js","hash":"ab3dfe5e601148d016c76aab50fb17afb794c435","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ruby.js","hash":"0f92409522686f18e7382800f9f3aba287869ec9","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/rust.js","hash":"efeab19cc69a21478e6c2acc21de4c01a5940275","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/scala.js","hash":"fc8d7c529fd4be604eea90cd0a12358fad5f49b9","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/shell.js","hash":"1bf20ca21d54e843cea24a675a8842fa44ce419f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/smali.js","hash":"9a8ccd28ca3405e5ba86f86d2fcbe82095d81391","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/scheme.js","hash":"7511d70a0bd2aba70315c32a5656ce30571615d5","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ruleslanguage.js","hash":"5600035cd1c59e034c8b710276ec4029e1594da8","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/scss.js","hash":"3e770e661b2c57b9ee3ead36ef1f358f1a87d6e2","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/smalltalk.js","hash":"45d649415c43d5989bc9bb2548885f0820bfa119","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/sml.js","hash":"03e1e7cf2041103f55d57dda1624ff0fba83d47a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/stan.js","hash":"305e8b20c4ac5762dfb13892f87b1127e65ad2cd","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/stata.js","hash":"52b5b3f4bf075e3d31df1b6c432cd48f5af2071a","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/sql.js","hash":"4e039f7ea433c538390fd8b4afdc6240af5a3341","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/subunit.js","hash":"58b09d36e6de77766fee9976fa20676fd97914a2","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/sqf.js","hash":"3a740091b22b725518953d6710865b48cdb0c8ca","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/swift.js","hash":"7bdb6ef3b8bedeb2064366105577cf3b74637e85","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/step21.js","hash":"f9c30d58ef59c96f151a74736dfe48260fa90ebe","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/stylus.js","hash":"a6260a532b4ee8ffcbcace1bbbf502a587f56628","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/taggerscript.js","hash":"7fc8221bb34ff42d867a68a98f93a33e11cac11f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/thrift.js","hash":"47c807c1cc33a57f6f2ecb9e609f56ae74d5ef77","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/tcl.js","hash":"fae3052ea5a3ecb70f4a12d38f2d7fb387cefc94","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/tex.js","hash":"956a6f3ac9e1e2bc40a49191a4f7558f267008eb","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/tap.js","hash":"986dce0e93f335db4c120876daf523904ba84922","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/twig.js","hash":"30b6777246eec12be33ba24fc5dfc95565491edc","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/tp.js","hash":"7690f71ab4b1616b96873b43116e8ae936b1590c","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vbscript-html.js","hash":"af6c349a4ce7cabf9e94168aa75dfa350664a021","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/typescript.js","hash":"ba777d301245055bc7ceffa2ec4a0e3dd5d99433","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vala.js","hash":"8cf4daa0d64e112a0eede09353cfc4c95be37619","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vhdl.js","hash":"3baf1eb9aef43fc2aa1c64a258b639bc4e69219d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vbnet.js","hash":"b95eecf676909dab14be6fbbe03d4a4ffd2cdd8f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/scilab.js","hash":"1ff368f39960bba8051de0706aa97d46ffdeb94d","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vbscript.js","hash":"29df599716e626e26b384e259f052c9a68fd29f0","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vim.js","hash":"a726fda2007d43cd0734e96e1530056f32cd0033","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/verilog.js","hash":"2385a8df75d73b3a1aebc591432a53d2e58c41c3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/yaml.js","hash":"bf63ff94dee5f4680436ecf12daf15d2e6675f25","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/xquery.js","hash":"ee7fee4c24dd6112e16b513dd26ca5937d9d637f","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/x86asm.js","hash":"5eef051aad64bac3c549311cea1f76521f890580","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/zephir.js","hash":"fc7c87476ff8fe68e51d159eddb99d8421505a3e","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/xl.js","hash":"51b7b4ec88350dbaf8bd115e4c9f4a3c3cee32d4","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/xml.js","hash":"9d6ec52a3d002850caff607948da16e7888979d3","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/big5-added.json","hash":"e61b2d77a36bce976f563f659300e06a33c9e6e9","modified":1401283007000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/cp936.json","hash":"22b95ce3e9743dc8df815b8a6b9c13d1a9f7c229","modified":1401283009000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/cp949.json","hash":"a3a6e6f61a78b50e54947f11ce8daebb8756209d","modified":1401283009000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/cp950.json","hash":"33ad3790a0660cd2b7c0c599a7f5d3c147596bec","modified":1401283009000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/gb18030-ranges.json","hash":"bfce88fc92e98c19910fbef1b02b85fb5d2cf2f9","modified":1401283007000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/shiftjis.json","hash":"e02d26e47a7b295222c3ca70015024ca163e7381","modified":1401283007000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/eucjp.json","hash":"9beb6afa39229a044fd6935a92ca5e997f6fac78","modified":1401283008000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/gbk-added.json","hash":"918eecca2f76db2aa3fe0bf8634816584bf31d78","modified":1401283007000},{"_id":"themes/tranquilpeak/node_modules/jquery/external/sizzle/LICENSE.txt","hash":"110c24a955d57b1c1efa2fc3d8ea93319e908b07","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.min.map","hash":"4a0954f42d51f0a5aca0bd5293bc4e27cddb7acb","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/jsonp.js","hash":"7329eae13f77e0cd6c4e1f10f3171904b9c21f67","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/load.js","hash":"de8fa520de6f46aff891339f56636622adaa0c99","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/parseXML.js","hash":"125cae6f45bc0b4ba98a72d6f71f20928ae8e7ed","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/script.js","hash":"ce50f2945ec33541d1ae68276cfeaee4f9a5547c","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/xhr.js","hash":"13ea8bcf4ba2dfb95b05af031e0d63accd117f62","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/attr.js","hash":"1d3f4b76400aac81b573de106ec06a40305eca64","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/classes.js","hash":"9443a6de7d15b5b332e3dda24d26f689700160a2","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/prop.js","hash":"84edff669be6e7f3485dd38dda0b7b2e80c7ce3e","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/support.js","hash":"22d4fcb7d12eedab80771efbaed85b93ee0a20cc","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/val.js","hash":"a00026dfdef7e4e0a61248ddd18d9cca3378a2fe","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/DOMEval.js","hash":"b88b3d05a45f2cfff5b83b1eac8c8bb44f08d14d","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/access.js","hash":"2c5b03cdc4164d8e03e3d63a7a2cc12fde3ddb95","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/camelCase.js","hash":"09c7ff83719a9e0b0f840e2ed190eb6065247e47","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/nodeName.js","hash":"8e0c2361a796b398065f3ae81e0e3547fb5268a8","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/init.js","hash":"c7e3582f954cf609a7d396d6836283d856060283","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/parseHTML.js","hash":"1e40ebfd1efa3d512ef884456ec90ba45f804216","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/ready-no-deferred.js","hash":"3fdf824288de508e27d2ef4ce5e2dff7762daafe","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/ready.js","hash":"d4899c199bdb63319f04b887b738011536c733c2","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/readyException.js","hash":"e7625f17020a463401ff5c7bd81a8aafa64c9398","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/stripAndCollapse.js","hash":"8282a841d20f11cf2928df7fd87829432cbafe6a","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/support.js","hash":"ebd434d0124e5c1a2bf449b7cf64e1b9aebb0d96","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/toType.js","hash":"4bc91dd860d7ae264f58a1c9e309f0064f0a349e","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data/Data.js","hash":"544340cb0d4f0be625efd2cb0f5942812b358e30","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/addGetHookIf.js","hash":"dbec6ebe5e770f7eaf98b1a9fa7f39d7be364f5d","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/adjustCSS.js","hash":"c8b8fe466dadb01fc39bbc022c9273f124b57162","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/support.js","hash":"0ab0bb5d303cca270ed6be22321b5016f2ee47cc","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/showHide.js","hash":"25f54fa05cc9e2ad58fddf94dda3df9590a56960","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/curCSS.js","hash":"5d688a21cb98e4c95f6b14c4b9fbb993a2d2a6c7","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/deferred/exceptionHook.js","hash":"2e58ed9e5a18afe9908249ce73716c8c654e0ca9","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/hiddenVisibleSelectors.js","hash":"94fad3a6b6b74764b2ed05954a24803017bb2f7d","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/effects/Tween.js","hash":"514cae74c7a890abad493e1640c0d95196cb6eea","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/effects/animatedSelector.js","hash":"367caa7fb307d2e8eb5fa78e6e952b78ac444d12","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/focusin.js","hash":"f1d4bb1483c1dc19c7733cd36013b5ef2fe3cfeb","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/alias.js","hash":"f3339a7b93dde7939f1813372d4347312be541f3","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/support.js","hash":"b5e0a11ae994d1d6dd445bc7896c4140723ef79f","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/ajax.js","hash":"e55117f4b00ac9eb0c34f931a2445b83529ad686","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/exports/amd.js","hash":"97b53da41b2bc1bcd74b375f45f2ef5dfe6a6397","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/trigger.js","hash":"12cad88558d6fe61dd46f8736b27339e81ee7dd3","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/exports/global.js","hash":"02eb4205014be54492ab43a943bba0ebce8f6d2e","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/_evalUrl.js","hash":"ddf963dc1b0158374d3da5e5cdce377cd1c0dfad","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/buildFragment.js","hash":"e4f9d9c7b9a12d77434cf3772d3f33cff74b8fd5","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/getAll.js","hash":"b81a6829984b361dd690cf6e2579edb03a6d5415","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/support.js","hash":"c595fa7ba119b8cf37355e43e4d3b48e31a6d9a3","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/wrapMap.js","hash":"200a586e16a2ec701276cf3726c2472422cc984a","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/setGlobalEval.js","hash":"a0f3b91dabe218bd9883689bfde906a645d8a22c","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/queue/delay.js","hash":"1dc196c5eb1f995364c7951895fca0b92551fb3b","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing/findFilter.js","hash":"a3ce4e12ee5710f86a4703cc4294de904117facf","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/arr.js","hash":"ba733cc5b66782be55a4cc629630dde8e325be27","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/ObjectFunctionString.js","hash":"7bccbb02e6baaf6fb14867a4fa6ff0f7d8298037","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/class2type.js","hash":"68ff35e5959ee063d41b69142a30a2d1ab00bc8c","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/concat.js","hash":"af2f0fbe56b0e8e6b2553ac1c992c3bf828e5848","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/document.js","hash":"8d135f401693309203493578f7106b1f92850778","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/documentElement.js","hash":"263f4b09abaa4a94a3f0bc5d930ec1551c539fd5","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/fnToString.js","hash":"d0259685c435bb92de024408ae550b3a47197834","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/hasOwn.js","hash":"e5f62edc17f41cd712b59e813ed50c090a57be2d","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/indexOf.js","hash":"899c79a00d012718fc52ef44c441070ac8f84145","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/isFunction.js","hash":"beff15b8bcca0fe67d2e23f6827d418e92c4c5d5","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/isWindow.js","hash":"e89b6a06a23cc267ca53df09e12ce1f6edd86888","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/pnum.js","hash":"1a87ed9c608685153553890b8fc73d753b60def4","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/push.js","hash":"54dfd1e5d9fb695ced23ec19b3e7b86fba1ae4e4","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/rnothtmlwhite.js","hash":"a671d4ecb846aa62fab08e2b3043661a40d4d6bc","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/rcssNum.js","hash":"f8384f6f62baab7b15a7f3440f6afbc3aa490922","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/getProto.js","hash":"8e2b5476d40861eaf974c666f89648fab0af217b","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/toString.js","hash":"58b3b06a5c28a34f0bbac41d86b31e6a85ac5f0d","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/slice.js","hash":"e73150eabb0d041d77529c717539a8d583d23bb5","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/named-properties-tracker.js","hash":"06c13b4e8ea708818a356199040f1597676d9c40","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/virtual-console.js","hash":"7756688258fc3610bb6c6da43e7b1a8ad71a66b2","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/utils.js","hash":"d3423ce98a4f4cfd3631e4c3f6ed0e635521e49c","modified":1512931745000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/support.js","hash":"db650e20c149d9d12eee29631932bf13fe88eb09","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/vm-shim.js","hash":"54d2d9e9e77e6c185f6a037bbf0deb8bdcf65283","modified":1509237787000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/calendar","hash":"3e53cb296ba1799f39c5a00bc4627fa10e26e165","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/geo","hash":"74d8c66f1ba74c6cd330b8acd5948efb5f2879e4","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/card","hash":"c1405e471f81bbb4eea94c2ef85fa07195a8ad80","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/address","hash":"b6e70440f5faf725b978da4e92f6f39100377674","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/interfaces","hash":"9666b12a3d05e526886aa2650f0439d32b25f0dd","modified":1289526444000},{"_id":"themes/tranquilpeak/node_modules/json-schema-traverse/spec/fixtures/schema.js","hash":"a900ee83c77812d766a338c77661982a3e232eac","modified":1497474815000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-jquery.js","hash":"5c5116059c5d4beceefc7671cdb005d030af1a5d","modified":1520285977000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-pseudos.js","hash":"7e855592c35edfa667d4ba9690eeedda1621d9d2","modified":1520285992000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-traversal.js","hash":"0203541901fb0177414d18aea943f86013df1a20","modified":1501857829000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-shortcuts.js","hash":"792a7fe28de517899eb31a4dc418528f3fe07e2b","modified":1501857829000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/doctype.js","hash":"a17aa0763af81f68367b0987e91235fc67d5c10f","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/foreign_content.js","hash":"0694b27d189ab1a64bda037ccfdb8b507a72fc2f","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/html.js","hash":"71412638eb668b34866ea8bfc5516c479247a287","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/unicode.js","hash":"7eac97ebc4fa47bcb23ee0bd44acff4a89ae3fe2","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-webforms.js","hash":"660d2b60e371316644ad96fc387300e892deb740","modified":1520286028000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/parser/formatting_element_list.js","hash":"e963edf1ec84f5782d32d17471108d28ca00bd59","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-cache.js","hash":"b540ed19ed05e5eb15b76147501cac113ec02eaa","modified":1520285958000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/parser/open_element_stack.js","hash":"6ebacbea460e62519b2a338a7041be90fb731f68","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/sax/dev_null_stream.js","hash":"54bc6268035474da4c822f3c8c49d384fedd7551","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/sax/index.js","hash":"fcfac944e9857026d285cea33da328c7ef5b5c8c","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/parser/parser_stream.js","hash":"266b5d8131bda70f8222e818a983524c54c60d8a","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/serializer/index.js","hash":"d3fe510a4fcba7da8fa1ca7e493ea2f506caee3b","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/serializer/serializer_stream.js","hash":"49fbb1f1533732b12ab36cef61fa1f106323d425","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tokenizer/index.js","hash":"7396718e2c37ce7023818847a6021f7a2f8ecb35","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tokenizer/preprocessor.js","hash":"70b5bff33a4a40b868662ab878602cf5528ccef4","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tree_adapters/default.js","hash":"07fdd4b8ed50a1e4491bd651041c50d531b004b0","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tree_adapters/htmlparser2.js","hash":"e99d5b5b2447c8e4bb105f4aa64e397f34468c71","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/utils/merge_options.js","hash":"b7eb060bfcdc1fa9d507e15b9ed16ec15efb95b0","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/utils/mixin.js","hash":"9e7f155ceba5d5e6f9b9068e1f709ebb749063aa","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/sax/parser_feedback_simulator.js","hash":"4d6bac5abe1a90b6f8051c13124f798b273bb3e9","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/parser/plain_text_conversion_stream.js","hash":"eaacfe12305c90d7d3f03831fe6a80d9cbc3958a","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/performance-now/test/scripts/delayed-call.coffee","hash":"e4f912e6ef8cd309316302052de85110e44059f3","modified":1484000812000},{"_id":"themes/tranquilpeak/node_modules/performance-now/test/scripts/difference.coffee","hash":"4a22bfede1f6f6ab3224c20db5132f957c2a12bc","modified":1483841832000},{"_id":"themes/tranquilpeak/node_modules/performance-now/test/scripts/delayed-require.coffee","hash":"d7dede6d953440f6ff3c71e3a5676d5d00f523cf","modified":1484000809000},{"_id":"themes/tranquilpeak/node_modules/performance-now/test/scripts/initial-value.coffee","hash":"c71cfd6cb07e088440755a867c2082a40276cef4","modified":1484000674000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/package.json","hash":"717140a09571c485498e4f814660973956617988","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/LICENSE","hash":"d453b8d6be98bbb6cff7074794f5776ff3a17115","modified":1519683727000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/README.md","hash":"a2ed92dfcc06fa9b69430c4c0378e4bcca2d52ac","modified":1519683727000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/dnssec.js","hash":"a1fe32a1c83ca6a7ff22f3e33dd3dc5db25efcbe","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/auto.js","hash":"af486af5f1d32e4a4e144e8e5753620cbe04c78d","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/openssh-cert.js","hash":"b02ab9b2ea96253336efdc58181cbc2b692863a6","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/pem.js","hash":"aea67310c5e822e80490363a578753a6cc4b07c2","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/pkcs1.js","hash":"2c3c0d6eaec70316d822066319bf5b304e28c84b","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/pkcs8.js","hash":"6a1e2e8e24a304a9399c6c5d40920dfb6ffeab3a","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/rfc4253.js","hash":"f9cf4a4a600db418c97b91a788253936373e1996","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/ssh-private.js","hash":"81059e3cc027b55923d1742ff195f6a81ca5b808","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/ssh.js","hash":"c8966077b15dd7244605704070c2807d74abc180","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/x509.js","hash":"1552b3bf182c11c588dfcdca701725e819bab855","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/x509-pem.js","hash":"28dbb614bd62c0704a6027ffba882dea49870d79","modified":1528223257000},{"_id":"themes/tranquilpeak/node_modules/sshpk/man/man1/sshpk-sign.1","hash":"742f5bb2986ad635eb081bad695573cd6826c96b","modified":1455085581000},{"_id":"themes/tranquilpeak/node_modules/sshpk/man/man1/sshpk-conv.1","hash":"a64a4769ca648e2047d255bf5237ce051f6af15a","modified":1455085581000},{"_id":"themes/tranquilpeak/node_modules/sshpk/man/man1/sshpk-verify.1","hash":"a5c70f82de5313ee103ba9bf3cfb9774465de370","modified":1455085581000},{"_id":"themes/tranquilpeak/node_modules/tr46/node_modules/punycode/README.md","hash":"471282886c3bad44b6359b091e9af61bad2291f6","modified":1526957064000},{"_id":"themes/tranquilpeak/node_modules/tr46/node_modules/punycode/package.json","hash":"e0e4aef0668dbfbb2f44927a7509deaf5f3951a8","modified":1532936500000},{"_id":"themes/tranquilpeak/node_modules/tr46/node_modules/punycode/LICENSE-MIT.txt","hash":"d7384cd3ed0c9614f87dde0f86568017f369814c","modified":1521100211000},{"_id":"themes/tranquilpeak/node_modules/tr46/node_modules/punycode/punycode.es6.js","hash":"4cd0d6df6666175db84f03044e1729d28149bfae","modified":1526957201000},{"_id":"themes/tranquilpeak/node_modules/tr46/node_modules/punycode/punycode.js","hash":"39ab3964d954c66ab440a590444fd7dd3493be37","modified":1526957064000},{"_id":"themes/tranquilpeak/node_modules/psl/dist/psl.js","hash":"bf7b17d8f7ecb391dbc3b8df2b6bb8fe5cd7922f","modified":499162500000},{"_id":"themes/tranquilpeak/source/_images/cover-v1.2.0.jpg","hash":"a98b9bf4d6be3af0156c0b6e781f067e343a682d","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/images/cover.jpg","hash":"df915f5b3eeed6bad93a183f65e5c6f536e551fe","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/scss/_icons.scss","hash":"0c58239341e4ad1cd1cd73dcea95a6bcdd2c659c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.eot","hash":"abbe9c0c113df685f86b23f8e1c79b35e087a7f3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.ttf","hash":"bdc5cc08af77d0e3d7a7c333f734fbff982a095c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff","hash":"41ba889468ecc0350ef2ac98f00af4068902febb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/sprites/regular.svg","hash":"97874599fb8347ec4dddd392372f509325a4eae5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff","hash":"ecb37a1b10ca2c42fb5e8a24ea071afdf788cd39","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/ajv/dist/ajv.bundle.js","hash":"a02c5e4acdc91a71fbd17cc29c055d40231de287","modified":1513456489000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/wheel.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510758669000},{"_id":"themes/tranquilpeak/node_modules/ajv/dist/nodent.min.js","hash":"529f4b868b54d95333e5e31e10d85044498701a3","modified":1513456511000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/js/regular.js","hash":"6d093a3b3be7ac411f0b4b79cbcd3921b8c8101c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/less/_icons.less","hash":"2421175e13b1ff2139fa5c067019d902eb4156b6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/browser/bluebird.core.js","hash":"77b537ba30a5592024b64e92b535cc73376f70c2","modified":1507132264000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/browser/bluebird.min.js","hash":"2a531eb53b1867033dd5297acf2f084ad3babdb1","modified":1507132266000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mathematica.js","hash":"78cee2f480b2ddb3e23dc7cebfb0bc07b60e0869","modified":1496198853000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.slim.js","hash":"1263f61eb65762f1af35c9b3f392ad18de4b3c33","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/parser/index.js","hash":"421cb698f17183c805a33bde153b792bd1fc2a3f","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tokenizer/named_entity_data.js","hash":"59d523ec51c44b6aa3a59bbdf43e1caa0d6f8a8f","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/source-map/dist/source-map.min.js.map","hash":"b6ed18620ecc607f89fd710546f53935d189485c","modified":1506695999000},{"_id":"themes/tranquilpeak/node_modules/tr46/lib/mappingTable.json","hash":"933221766b88ec0ff2d5200abecd1590a092e2a5","modified":1504404530000},{"_id":"themes/tranquilpeak/source/assets/js/jquery.js","hash":"46a436eba01c79acdb225757ed80bf54bad6416b","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/dist/jquery.fancybox.js","hash":"227dd641ffb92c1f0d1e6bb1c695fd4a05a13446","modified":1510924837000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.svg","hash":"27d5417b0df9b0fb4acb0cd00cf9d7bc7da73608","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.ttf","hash":"a16829d04437bccab092e3aaaa31fa8d5399e067","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/fullscreen.js","hash":"da13daea4bc9313cd529b0e0cb5fdf60e4999551","modified":1509692266000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/hash.js","hash":"ca6a86243e1eb30ed1d9a437579a40102bf16f51","modified":1510157416000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/share.js","hash":"5f82215ca40128d0a757b2bf8485f16cc0a59e09","modified":1510834703000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/guestures.js","hash":"b4fd6bfa8446f05acf04b2f2f60f194acf237826","modified":1510924772000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/slideshow.js","hash":"e489c787f979958ef228abb012fba17547acbc28","modified":1510156837000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/thumbs.js","hash":"9bd2831e83f5d851db6ceb4a3d354b59367a999b","modified":1510924731000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/css/core.css","hash":"065a29c117d501604f1c7a0ffddac4e5fcea3d89","modified":1510920749000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.eot","hash":"8fe955fff0adb55f95b4765406457b2afa0be32b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/media.js","hash":"017b82e1c22c43afeb6b837131bc22bf5036261f","modified":1510082616000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/css/fullscreen.css","hash":"77a78eec41a273ad382cd5460516497aef1bfb8b","modified":1496920225000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/css/share.css","hash":"1452b4eabd5093a7e85fd04a6f645bde24e1c59d","modified":1510775209000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/css/slideshow.css","hash":"f34aedee546fd9085bd52c5d4d66298c68253703","modified":1496920225000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/css/thumbs.css","hash":"d805bc578c883345f0c2e533db2d2548281132c4","modified":1510772014000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/angry.svg","hash":"4a4f648600341c9bcb098eb649cbd4e9091b9c7d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/arrow-alt-circle-left.svg","hash":"b1fc246e5bf68ea43f1df519aca9996677f354aa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/arrow-alt-circle-down.svg","hash":"ebf25c1a27009a5d817a5e72281efaade5c00db6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/address-card.svg","hash":"92f60238726f6126745d4b3bae5bf7fc9c1ebceb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/address-book.svg","hash":"4b9211f3a05e23182bcd3d3ec306d9d3685fd424","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/bell-slash.svg","hash":"e17557822fd73f4f0a946c0368b74ef1b2e797b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/bookmark.svg","hash":"fbdc057072a57f14a0bb87aa3509b389bfd159c6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/arrow-alt-circle-up.svg","hash":"26499c1a8e2d95ad1c69c099720b37fc5070d12d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/arrow-alt-circle-right.svg","hash":"75a0e0e72ef124f93d5adc9aacc619cd4ab56739","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/building.svg","hash":"f7ce5268afb54eb5e1dcec89eb5f7ab4784b04ef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/calendar-alt.svg","hash":"52f1960ddd366344c956074ed3732ba158b16d5d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/calendar-minus.svg","hash":"5ecbf243f84089587defd06d5ecff4ae477c4506","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/bell.svg","hash":"c50c7399f2a87aa2999b2544607c85a98bc7b6ae","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/calendar-times.svg","hash":"7fe45b122b674c5f7d2070d20c08a7e004798d27","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/caret-square-right.svg","hash":"3c58589508cfcf9d71c902c5bd65756f8d3715f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/calendar.svg","hash":"0531462d22b966fc2cd0d62f5a51e87aeae551f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/caret-square-down.svg","hash":"9294a81388279053b70b703a4177c6276770bb81","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/calendar-check.svg","hash":"97338e7affc9f1c3afa69d94f0dd48d6966df7b9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/calendar-plus.svg","hash":"5db8fec29648736cecfdd3537f99397ccfc304cb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/chart-bar.svg","hash":"ed65e41fa0405d48c4a7cb4f6ab93f898c57722f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/caret-square-up.svg","hash":"75681c44609d17ac3383f14860bc47d9fcb0c5e8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/check-square.svg","hash":"1dcf9e1b3966f353fe27c209e14dc8e31b17ea12","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/check-circle.svg","hash":"d1157b4b2417ab36162f5165d0403859bf2d2f18","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/caret-square-left.svg","hash":"e5d86f74dfade820ad0f2052569f2ec72aaf2a83","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/clipboard.svg","hash":"c256e8bc307e82c13b56bfab4c7410cc2fcc4d81","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/circle.svg","hash":"9c83bee4ae69e08031b0f23207aea1ef3ffa6f63","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/clock.svg","hash":"73522191f07f1b8aeb27671ba54a1b14e2e64ae6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/closed-captioning.svg","hash":"2c9bbdadbdd4d13e14109bba30e53e17fe16dc75","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/clone.svg","hash":"e647087086bfaedfedee0ddbd20fb64525ae412c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/comment-alt.svg","hash":"894ff226980e8523fa12162aba210ecd0acb4d87","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/comments.svg","hash":"b41b538bed919c9ec12d3515472711e7804cfdc7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/comment.svg","hash":"89e195acf002bba98a56f7a5ff006db5f0ebdfec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/copy.svg","hash":"01f4ae7754425da99ed36be833d61b3a7e53d44e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/compass.svg","hash":"b1a9269e0fdf6a9d970a5c3781925207eb5f6464","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/comment-dots.svg","hash":"cdccfa1bd2a8963b1ec07b81b08bbb57b63ce65e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/copyright.svg","hash":"e71ad0e03f310a2ba7508e52f6875aa60fe903c6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/credit-card.svg","hash":"bf5d1f70b73e1cd3a195e894186d8f07583548ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/edit.svg","hash":"683ac878b3d81e3d581bc8c1a2d7784c15023e84","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/dot-circle.svg","hash":"1639f99822e1cc27db859a6bfcba79bbde4a8aa0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/dizzy.svg","hash":"bf4c864233232ea4c1e76221c20fd743fad2cb07","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/envelope.svg","hash":"0f52d4bb86a3cc9dc2b6b8ef941640b06d7634cb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/eye-slash.svg","hash":"b4b969713c78e3b828ced9c831e514910f2440bc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/eye.svg","hash":"4b833dbd3a57de3632341d3794373c3cc43e111b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-archive.svg","hash":"5fd01d1f2acc01378205f831f7c7aeb307a85296","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-alt.svg","hash":"eedf3580cc9967cfce5efa935a9c7ba48273a3f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-audio.svg","hash":"5dda1a49e4e5091cdd8563df0c108dea69f12494","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-code.svg","hash":"f755ddf4a63d4099827aa369a94378c8931b6798","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-excel.svg","hash":"d4a1f4f0f3e44592d7416d4842c82dde4d2785ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-image.svg","hash":"8452b23b7dda7a38d7633a8a019f8d8ffc92d3dd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-pdf.svg","hash":"6e6eced236ed21e33ce063afc4bcf9c31923e868","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-powerpoint.svg","hash":"2909263331f5e996d8200963d64dbbea64ef7ead","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-video.svg","hash":"503e46cdcf81c7ed4239606360cdf16def01b1a3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file-word.svg","hash":"503629d40e786570c89427bba8607f97323219ca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/envelope-open.svg","hash":"87c8944f34579e2dce42585be7612c1123724d52","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/flag.svg","hash":"4c24dd6474c12789436052e9318f331e9644cf21","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/flushed.svg","hash":"04b2ea5b3ca8ccf2c8c26bb727d3ec7a2971b958","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/font-awesome-logo-full.svg","hash":"a97c710cb57ac93b2fd5d395802042facdc35ba0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/folder.svg","hash":"26bd5e974614ef7081a783cd03cbe6743530a738","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/file.svg","hash":"797b0087d19bb40c391f21947b80b61968c827f2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/frown-open.svg","hash":"97d195bda2b6401557191385ff4216f1d74a2e59","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/folder-open.svg","hash":"58dcb8a8e26ed4a3c41929990e42c096f4f3c874","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/futbol.svg","hash":"8c6b509959aecef48ea480e1b354c81c319db09a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/frown.svg","hash":"d5877afe178588bf3a48a45acd467050b31fe60b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/gem.svg","hash":"be053416a617b27b5e4f49fe992002a8bc5209e1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-alt.svg","hash":"5884486f213b098ddc649c83a1e8fd61c679f5d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grimace.svg","hash":"8f2c7f18adc7fbdd33a22df1a209578e4299f8bb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-beam-sweat.svg","hash":"e9b70d9eba28983317dc63e7be0513703b9755d6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-beam.svg","hash":"97f915c27d87173f1b9a1f6543d33ef833e4ccc0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-hearts.svg","hash":"f904a8b0d77ab8c77a6f33f1c3b06536dcdba278","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-squint-tears.svg","hash":"276a114de36c2250847480189982e17b4cac2314","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-tears.svg","hash":"d29a98d2a4208c4504a8269858820674334bf4f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-squint.svg","hash":"a7c33a079ef1897aa5512d94347a68e65e1594ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-stars.svg","hash":"9460faa3ec1b2051376f13952e6e62df763ad44b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-tongue-squint.svg","hash":"008f611a549ad4b6bfafa4d72e71c0f311d9a753","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-tongue.svg","hash":"7c19291c5b061a5d68c7e8fc5de120b6d126c778","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-wink.svg","hash":"fa7dbacd9916765374677063cfe055882f9f6fd2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-point-down.svg","hash":"24bf321d318514f3f9c4ffd617733ec238e8959e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin-tongue-wink.svg","hash":"97f1f2b6c20c6dab8bc15d8bc7e113affdddf2f8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/grin.svg","hash":"ddef31173cdc22a26aea312ce1e62ca923acb303","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-lizard.svg","hash":"3769490b27174eced55aafeafacd038218de38f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-point-left.svg","hash":"f1fbb36262c294255771e82fc9054de171df590c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-point-right.svg","hash":"9f8d6e8b94eed60cd5a6a444b284fa65cc11cf65","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-peace.svg","hash":"14ba0e8930d71b6cb1e50f5b123928eda1cf86c3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-paper.svg","hash":"af268ae911e09374e0a8826a62ef36f873086f51","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-point-up.svg","hash":"7bfb5e17cc62dba4adb1f9d91e89e7e24291287f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-spock.svg","hash":"faba6b21bfa239eadefcd477806d2c2163b59e69","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-pointer.svg","hash":"ce46b59efae02bcae91b2a2662a09aaea1f217e0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-rock.svg","hash":"dc1fd70e951f16a30ff6e57192045c2fff169c78","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hand-scissors.svg","hash":"162bcd88a668a371893fe4110e24b20274bf9ae6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/heart.svg","hash":"225c06355a10861208df88af1a0bb7c7042edb4e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hourglass.svg","hash":"200381dfc423d83d8d5a69ced2d221584d0c84fb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hdd.svg","hash":"af9d258b52920502252fbc55c12df5c21b9f6d6a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/hospital.svg","hash":"dbeaefe2ffce546f52c6786c5986cc1565c1202f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/handshake.svg","hash":"7e43de6ba6d027a437f1b9ecfa3e6f97532eed82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/id-card.svg","hash":"3fec26e09de4107de7dc14fe2685cdf6e90cbf37","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/image.svg","hash":"ff3b55367626e6d1f275c695c59ce4336e4e53c4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/keyboard.svg","hash":"75d995dae53b54e744f5addb04a1469e1b134d20","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/images.svg","hash":"e5476463a3522bde4b43817a54880a99368f442e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/id-badge.svg","hash":"18f58bc3b53693903a7d1bfb763b6dce3716ae8a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/kiss-wink-heart.svg","hash":"74cb321669fe527ed50f0def74c1e1b4946dfa0a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/kiss-beam.svg","hash":"dbf3df4c97f5ea8d3bda78a933242503a0df59db","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/kiss.svg","hash":"5191ac50fbdd8ec0d5c0a6e55bda0ba87497077a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/laugh.svg","hash":"16e6bdf87f514c1f8718e38dbcbe628e85870048","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/laugh-squint.svg","hash":"fac21c7a90072f6ab5239a98ff058c4ba1944b27","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/laugh-wink.svg","hash":"f2f9a38fe069bd4ce7affb28eb3657d8dd926f20","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/laugh-beam.svg","hash":"08b8a89d2e729928f53edfe8d22cc6ca88ceda40","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/life-ring.svg","hash":"c6e0d5e082b785d8a583eaa18e5764ceec3cd632","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/lemon.svg","hash":"4c87992e825c3b4fed7841d8218a6f7a07fece1f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/lightbulb.svg","hash":"014d6a29fc643fa10985ed74e5f55b649fd16050","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/meh-blank.svg","hash":"1e0510fe430b9589b67d44e042aec43a1ad03f2d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/map.svg","hash":"bacbb051dba3b2370d88b1d777014cd5c64953be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/list-alt.svg","hash":"e611b9a727f1fb084bc1c170102d0aee2b910b40","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/minus-square.svg","hash":"1c4535bd1e9bc89cdd087f71bbdb5ae64af5948f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/meh.svg","hash":"1d4812b7bb089dbf9bfadd37d082eacaecebd5a5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/money-bill-alt.svg","hash":"f7bd2f19375a79a6eaea00a4c48206d8b6e56d0a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/meh-rolling-eyes.svg","hash":"48c0f2a771d338f32734dc9b5f8a6ec027cecda7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/object-group.svg","hash":"a502c02bf9d63ff0260eb4204199924cd2c92e26","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/moon.svg","hash":"d6b498bd43f65295dba8c83b2f6b433509daf966","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/newspaper.svg","hash":"c4a3e9902e61b9104f1606d7d2853958b0aabdc1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/object-ungroup.svg","hash":"2bc7aaeff02710809d0ffc67e4c1d63cb668376b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/plus-square.svg","hash":"1ae0abc0afc3b9240e6b60a78f7092caa321012f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/play-circle.svg","hash":"5b02ff41ed7bc84f40f04753d5debbb9bbff6879","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/paper-plane.svg","hash":"af30a7ce40a6643538d467fa5c74d4ff9532c776","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/pause-circle.svg","hash":"b72f26b4706646b4f1d1b8a8531ec791b800c75d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/question-circle.svg","hash":"58214c73f5142bb38b279ebb10140a7c5c8359d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/sad-tear.svg","hash":"46cd16e92a1fff3ae98cff03d7c6787ae69ba5cc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/share-square.svg","hash":"fd24a6e09c5a218b44c63da40d6169ada8a082ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/registered.svg","hash":"bc6332db89b0d534cc7cea332757f693b12fbb82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/sad-cry.svg","hash":"6aa9dc3d2d7c745ad99e6e28662e49b756cf719f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/save.svg","hash":"76a5095187f669b4548ee842518ccf2a4d0d385d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/smile.svg","hash":"4f592b8d3985902c297640a3a25e07eb57ac079e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/smile-wink.svg","hash":"bc46731cd32d1842100bec3bd7cc3ebfa2005c1d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/snowflake.svg","hash":"caebc9ad93fafb9d5ce885840a47e35081504f20","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/smile-beam.svg","hash":"f87676042079dbaa2db760d4b38902888484bb17","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/star-half.svg","hash":"967b852e86be9c611000ce8d0cbd4ecaa33c4a61","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/star.svg","hash":"13b5264d472060062f2228c66883789c32aa1a5d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/square.svg","hash":"5c68b316a0797dca96e142cabc35b4921712a4e4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/stop-circle.svg","hash":"bd0bcc6493cf0c3e49b98544c249fb6ee22ad136","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/sticky-note.svg","hash":"f42b906a47d145751e83124de874228bb6152670","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/sun.svg","hash":"4956bc695fa8f72210ad3c78de807d4693516b87","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/surprise.svg","hash":"716f1b91e1b5566061a28677b601f5a87bdc37bf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/thumbs-down.svg","hash":"4bc2de17ebc8d6b314d1d77cd3bfd36b9857bec5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/thumbs-up.svg","hash":"646ef5bb563bf51b380676445f673c0fa4c9a075","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/times-circle.svg","hash":"2fe0bffe08e28549412a80e181c4357d1da14b2a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/user.svg","hash":"4b51ceac413f20833738052890176559ed1620b5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/tired.svg","hash":"a8279d83822c73b2a58d9ed0f063b016422a8666","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/user-circle.svg","hash":"9062135db51bb149d8432be79b8ef5f0067c5b02","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/trash-alt.svg","hash":"3f0faf05ec194f176aa9e8ae891b3b7a85a65eb2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/window-minimize.svg","hash":"f992cf4c45f352c1f4f30e1c849b026a808b0517","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/window-close.svg","hash":"6f0e540b2f8abf2ae30ce85b68488811e9b4ef4c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/window-restore.svg","hash":"dab6f0beef2d928b4b0a710ad992c061f3c89030","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/regular/window-maximize.svg","hash":"24497a258fa6e0e151e170f3947f12b39ce79543","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov-report/async-throttle/index.js.html","hash":"fdc1e8d556475ba10e82edc7db64f685eb57fa7a","modified":1505146456000},{"_id":"themes/tranquilpeak/node_modules/async-limiter/coverage/lcov-report/async-throttle/index.html","hash":"6168e0b1e0d2fa4f50737fb48faa76db7c2757a1","modified":1505146456000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/accessible-icon.svg","hash":"ae531cc01ef7ae187504e2e4d2c1fa6cc7e7091e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/browser/bluebird.js","hash":"7e43d39c21a8e049ca38d316ac8ea3c5e551b4b9","modified":1507132266000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/500px.svg","hash":"2a1ea8d8f797a543151da5a13a5a7b3106220ae7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/adn.svg","hash":"67ac5c97733c86ae0b4466b48bb22014e2194c84","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/accusoft.svg","hash":"e380007ff84e5a1967064b64fb43d28d0231178e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/affiliatetheme.svg","hash":"b7bc8c2043b51d005dfc9d553933a078062aa0f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/amazon.svg","hash":"a3f3eaa2d001279a528da3f5c100f16936fc7d4c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/adversal.svg","hash":"421cf9cb7d738dccf66aa911b78b3a19e61b2874","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/amazon-pay.svg","hash":"11e916652466c63315da0f69eac729258d8f8da3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/angellist.svg","hash":"826cda44a285e84d593029866dd455ed6e0888f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/algolia.svg","hash":"3977badb929f7b131d1e0e40e933f7ca1a780698","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/android.svg","hash":"cb63f7d29e792fb6c3f6bcbf435f00f6eb2d7d4b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/app-store-ios.svg","hash":"554c985d39db31f597a8852cd96bb4d6ee3b30c6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/amilia.svg","hash":"be50bf68492f8fbbbee96a4f8672fee87a921845","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/apper.svg","hash":"9dab96cf0444bff508bcd117518230a762fab723","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/angrycreative.svg","hash":"58546b9786e27ebec453248006725ed9b5f06c8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/app-store.svg","hash":"ef7f255040fdeb9976a462d084df41c74797035f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/apple-pay.svg","hash":"9e300b825a745fd0e03abad89084ed3d29a10db8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/asymmetrik.svg","hash":"92f1657920e18356097c6e082546e8ccc1b4df0f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/angular.svg","hash":"51949d4b65407a7e1df2fe510153b60006514eb5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/avianex.svg","hash":"0e858e97def7a43b1b8cb55c5e05a4ae760fc872","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/aviato.svg","hash":"783614dc7566665ee00ac340b5396cb36d1b80db","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/audible.svg","hash":"2fcf960974b195dadfcc797f885286d7dfd5f9d9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/autoprefixer.svg","hash":"92dd4740c3f31d385589cb7a5fd7bcfbedb0b105","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/behance-square.svg","hash":"e6e2842934d3f3298822712ec05919e527fc1385","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/apple.svg","hash":"813f4b491c33b533acd73bfed617adc77f26e110","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/behance.svg","hash":"ba92c082bffd0210435f1c8622bbb68845977c21","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/bandcamp.svg","hash":"31e3a3def74bd69f88e12c9f8cb0b96d7968300c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/bity.svg","hash":"25886eef8a019eb79c90b08e1328862b2bc5e1e3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/bimobject.svg","hash":"e6cad7e02e7c320099363a22d021bdf3f84503a4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/bitbucket.svg","hash":"1b78c2427dc74d03bbe0f1cf4cb957c94cc9fbd4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/blackberry.svg","hash":"7c6642f43c3e4d668f49e3cd283906464e8fbead","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/aws.svg","hash":"70ed7571a7193a0d6db872421a1c74a4b25bc341","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/black-tie.svg","hash":"84d75c7f76be4a526594702f79b5c1fa306152b8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/blogger.svg","hash":"cc302d5621b0ea2e472b856dc94d5ed79adc32c7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/bluetooth.svg","hash":"2d3b1cfc3fef749ba837bec97bb87f841462d93d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/bitcoin.svg","hash":"752a931eb0dced77b2bd533ca7217b7efe43bfe6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/btc.svg","hash":"cb9b72a53222f6f0fdff8d6e4925bad0cc921a23","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/buromobelexperte.svg","hash":"848ebd10b8f8bd707ff5d691253f83401434db19","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/buysellads.svg","hash":"52e66f692962cde5fc3152d12d09e971dbcac8aa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-amazon-pay.svg","hash":"92260a4f713ee4735517ddad6001c890f33af322","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/blogger-b.svg","hash":"f8c91d09ac299b18b916d547e4607dd1f5db6202","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-amex.svg","hash":"ffcf5c6e9b1d8195f82018b782efc8b62370caff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/bluetooth-b.svg","hash":"ed4dff2a857e67dcc28dbceafe10554cf976bb21","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-apple-pay.svg","hash":"148f31e4804a27bef0a84995369992a0941ed604","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-discover.svg","hash":"e6eabd88959c4c01ed32f4b91130af3e58df394b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-mastercard.svg","hash":"fe07401f2a7612328beff8d7d470ddad0574905b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-diners-club.svg","hash":"e91e73ebe145d0412a070c2b55c8d9d56233bbf8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-paypal.svg","hash":"54da4ffbac47000210c1796135b96ac025ee741f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-stripe.svg","hash":"ee15eeca377b6b4e90ae26afe461996cfd02649e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/centercode.svg","hash":"73e30db4f836c78c1600085ea8407b1b61726ce9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/chrome.svg","hash":"44e10dd3db8ff63d9ee59dcaf6b8484c66ad4b67","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cloudsmith.svg","hash":"464c0bfb2b93ebbf2e3d7d7d9d16c8dd7cb94dcd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cloudscale.svg","hash":"4d9ef06e60717f8098e3e91d0129fcc99191b3b1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-jcb.svg","hash":"5c24646977cb554c2d8cb54eb358bdeb856cd888","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/codiepie.svg","hash":"ffd2571ebd0a5cb1d1b57a81525d3fd1506d7be0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cc-visa.svg","hash":"e8693e8df1f3ee0e082f7f2efbdf35dc9f108a80","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cloudversify.svg","hash":"d22fadc1cd27979c8d46b0073fcdf6f4f3861014","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/contao.svg","hash":"76ce9c0f84e2614b0409ac635ab764b2b641e476","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/connectdevelop.svg","hash":"8c18b7ec4f1bfaad47357d85d5fd2fdbe18f5a72","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/codepen.svg","hash":"0e2687e7e9de020c9985f384054e5eefef5e7215","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-nc-eu.svg","hash":"34abbcd6eca1e68c4a6fa2510733af57aef1aa81","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-nc-jp.svg","hash":"6c343da0005f20bb8b8b1b6607d2284e286c225c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-nc.svg","hash":"5701e06fd072939e6a98057f56be192ff552c8bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cpanel.svg","hash":"3799d241f2b5252861f6025aaabd986ec47b8de0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-pd-alt.svg","hash":"564e89abc0a23cd4d444d0cee580d7be8fc7388d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-nd.svg","hash":"7e7b63973939d3eae382777f9bfaf99f085a0769","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-remix.svg","hash":"43d06339e40ed48520374dc7aec50029b7db5e4f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-sa.svg","hash":"cc4cadebaae9db8ab9e4714eb5eb71d59fdcd62b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-pd.svg","hash":"0e327a82c395a656a26842c4cdd301c90c60bc0f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-sampling-plus.svg","hash":"8f2359aafafadcdae9e73686a33c3f479ee6c71e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-sampling.svg","hash":"85fea5a513dc6b4c14d19c52513e91261ce242e1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons.svg","hash":"21be78e342d45bf292e7c146332fad37c6e90aef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/css3.svg","hash":"65bbd62454fdc59357c8733f82580b11a26051e3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-by.svg","hash":"70b810fa39ce3648c01fd60e49d4f6e7966170f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/creative-commons-share.svg","hash":"894cac0c6c1958819e358f74d24778d8917fecbb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/dashcube.svg","hash":"19a793bb3975ed421052e552cd8c8197a1c892c1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/cuttlefish.svg","hash":"dd8e396e9a00f87483a8ee57d1092dfe71c2b04f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/css3-alt.svg","hash":"c49606a0a57362879d1f5b16b89a7aa9cbe83330","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/d-and-d.svg","hash":"33bb39ec3714da6967fb2cb17cc4cb0d421e965b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/delicious.svg","hash":"5ef4ea4ff0923e5a89b32c98adb9074889c7affe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/digital-ocean.svg","hash":"12404134c9788763ec412195041151aed5edbe90","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/deskpro.svg","hash":"b13bb152f3043c4f95722827019d0f68baea284a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/deviantart.svg","hash":"b6b8865d4c13626ed4dbfa559cc48e0d2e8ae955","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/discourse.svg","hash":"f36e6bbc2b19ab9072021d330a3227c10b45c389","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/digg.svg","hash":"a528d2f6d0e83f9c0b93ad959f8c3470e77c8a0d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/dochub.svg","hash":"334c31a68699d68cf7012336181c1926ead4b455","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/draft2digital.svg","hash":"6790823b7c7d65fb79406de37feaed1dadb45a34","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/dribbble-square.svg","hash":"20f61210d98d9a25cfa0c03b292014435e9f2c43","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/dribbble.svg","hash":"f3a5eda2c9a62d2eedf7b66afe84632c5b9ffae1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/dropbox.svg","hash":"41961db9064cce275627b5aad9ee8ab44f2717a6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/docker.svg","hash":"3e98f3bf0f8d5e8d4572def95f0ac0effcfe0f20","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/drupal.svg","hash":"8ef709938159b8bd127b7a0effe550ed6314eaac","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/earlybirds.svg","hash":"1632288a9a26e8bdb4777c8b3a3d168314a65dbb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/discord.svg","hash":"27c271edc885de92975e99e1b862ff07eb2eacad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/ebay.svg","hash":"cd0e8b3c412cce9375e545bc779a9ec527dfa6d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/deploydog.svg","hash":"11d7a6a43b1943904f22ed2885e83cc4a95336c7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/edge.svg","hash":"dfb04c826ecc010da74413c389b6b85e7afb28f2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/dyalog.svg","hash":"a5cce1b1b1f1c5dc40ea270fc524fe007988cad2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/ember.svg","hash":"7ca4a979d3b3e6f0f1fc784f8faad6abcb571cfb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/elementor.svg","hash":"7f057941345dde19a11aba9452926d54e749aeb9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/empire.svg","hash":"40b4bd45072d8e3321e1a491b40f17504bbfbe3c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/erlang.svg","hash":"b631c495549293b4dffd55939adced1208237905","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/envira.svg","hash":"3a7f2f2af09af3f4be6661720c6ddb23dc741d8f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/etsy.svg","hash":"352ce8afcaaa86b915e522bec57c0927f34b64f8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/ethereum.svg","hash":"a87ffbc99b60b8d43391f2eae87edf527d602513","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/facebook-messenger.svg","hash":"da94aaeff80561d93a04dc8b5244083277ca8d5d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/expeditedssl.svg","hash":"8517062e4f7021c1019c3827bf349abbd471d3bc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/facebook-f.svg","hash":"2dab435110b60c194039a232b4a4999d7590b97f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/facebook.svg","hash":"cb1c21f509b6e5024762011025db4c383295ac45","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/firefox.svg","hash":"6ef9d72eeec84885c3aeace24b70f05a2f9b6df1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/facebook-square.svg","hash":"b9087373577cd90a698062e825cedfd383ac7559","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/first-order-alt.svg","hash":"fc09b7536d1be3064f0443c688421e14776c5eb2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/flickr.svg","hash":"538f74e9731a955ed350e277a45161af4544319a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/first-order.svg","hash":"d3c919e447b70ecc4d4ef98edc16f07ab5011118","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/fly.svg","hash":"b93c106b2b0ef03746708011659eb4b987e64c83","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/firstdraft.svg","hash":"982390a398fce1375d7ad67a98bce02a852983be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/flipboard.svg","hash":"9d2b8a970d35461463146872addb5cc56b5752ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/font-awesome-alt.svg","hash":"e89656d78ea79bce5cfce0b701a0e9479e8e3b7c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/font-awesome-logo-full.svg","hash":"a97c710cb57ac93b2fd5d395802042facdc35ba0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/font-awesome.svg","hash":"185bcb884f47e75ae110b86b40a9efa457eb2c12","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/font-awesome-flag.svg","hash":"ace8f7543e9aa857d4b6014c536efa8bd539db68","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/fonticons.svg","hash":"e89065c6bfb30c60a7a3b0016f76607ae48a9fbf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/fonticons-fi.svg","hash":"2c49e772ca2fe7630783c7cc8256739636f2bc04","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/forumbee.svg","hash":"c59d034dfb28b6a272e1607c3509f77ad9969ad6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/free-code-camp.svg","hash":"03b2fb4c634319923298fd1515e1bcfa5e0dc7b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/fort-awesome-alt.svg","hash":"0869e1dc5c4efcffd58aa9cd7f1ce26526537be9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/foursquare.svg","hash":"fc2d6e23b9f6fc44fc6908fb6a594d1944cc7cfb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/fort-awesome.svg","hash":"ee03cf8fee689d2e5400a56fb81b0d078a620553","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/freebsd.svg","hash":"9b3d4702d42876283b51f5aa146280213c40825a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/fulcrum.svg","hash":"19b333225e473f698628117d8753080151089418","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/galactic-republic.svg","hash":"0d3c56f6e49341c3ec50ecffe5375f4ee26f41cf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/galactic-senate.svg","hash":"8999eb552663d697132e0a00e6720aff9ac94788","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/get-pocket.svg","hash":"d154dec9ed3c06485a84d7c377e05b0adbcfa0ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gg-circle.svg","hash":"8e119d503a50d66e982d96d343f6ea764a6eafb6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/git-square.svg","hash":"d71ac2c00b88bd202a50c077070064311c8df894","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gg.svg","hash":"164e6a76a58ab1f626d21ed2c8126ee4b6ca3385","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/git.svg","hash":"fc329fcef823d2644fc47e42bcb23bf69c5cd87f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gitkraken.svg","hash":"1432f0c600949b52f4c7ebdf5f242a59b2ae1084","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/github-alt.svg","hash":"ec113e585d82a4fe910065ef5b37efeb11267418","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/github-square.svg","hash":"78983a267fcc19367710a66a5b20d423c1f784fa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/github.svg","hash":"d4ccf2d85ca282df89ccbf1114656deadf7ff3b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gitlab.svg","hash":"d4cea2c1ea04680f567965a3e7aa96f80a2cb8f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gofore.svg","hash":"5173c8620bb1b1354e56fe257640795386bed372","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/glide.svg","hash":"9293085e9239029881b325bf13d630c793e79d03","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/glide-g.svg","hash":"734b47eef61b08b329e1d8e8fad9c92410cf0aec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gitter.svg","hash":"62c7375b8464a27687f5fb192a63036923eaa648","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/goodreads-g.svg","hash":"4f865a60c67d9c43fa908444a0970d2dd0191121","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/goodreads.svg","hash":"6d9397e9734c650140ee9b124da288c819e93a20","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/google-drive.svg","hash":"b6334c67903c4d955a5321acba8c9f2fcbb64c12","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/google-play.svg","hash":"ef799a74ad59de43cd5e89b6dcfce226ef2216f2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/google-plus-square.svg","hash":"f3bdb2d21c9c3d56bd95fa2df9a34855e23d1efe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/google-plus-g.svg","hash":"4260dc2fa8978303a758a61d4b9c2da9072a0de9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/google.svg","hash":"05cae206782345d78545a7c9d7f2d55c75c5cd2f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/google-plus.svg","hash":"7c47d32dae2ebc2ae3c593efb4a940cfc297ae08","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/google-wallet.svg","hash":"840ee613ea2ecb939e931abf6db82b74c427e391","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gratipay.svg","hash":"5bd88170a2bcf2092437e9424aaf8bbc3f9fdc1d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/grav.svg","hash":"578f76be57ec07d4f4b64e3ce368a1e618558a20","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/grunt.svg","hash":"7a289f8a1fa3422ce1576623aa1c1d5c7b356bc0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gripfire.svg","hash":"e4da98254f3f89e6dc2dad235d85308b06a17be2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/gulp.svg","hash":"ca44a75a793ab11659b6e20d12639865cfe049da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/hacker-news.svg","hash":"d04095a6fd5f1a6e61f6106c43bfcea4ef48d800","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/hacker-news-square.svg","hash":"7245ec1a7cbdaa76f6ddd402e24bc0310bc616b7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/hips.svg","hash":"8a14a0c228fc2c4e0b5384d1a96e2cd2f791054a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/hire-a-helper.svg","hash":"f9a1b64ff4e66be1b5ac238abe2b781864e70a75","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/hooli.svg","hash":"d5a978fa580ac5118f771ec97365bb7e40d5955c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/hornbill.svg","hash":"aa0c0aedae540c6ddd704f999ae6ebf4e329b578","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/houzz.svg","hash":"7df2e3d8b7c600c5461af9896d7411b2ac9af5c4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/html5.svg","hash":"23da605891640d4564a468586307af38cde0dbe8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/hubspot.svg","hash":"3be1b7656de1b4089f870f7fd7587bc6b8bd9b57","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/imdb.svg","hash":"e6b01983e67057e234762ab9ee33c0bb3635cd1d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/hotjar.svg","hash":"6d829b6dd0178d50ab896519ed6a70c2269cb942","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/instagram.svg","hash":"831cdd2b89b230a52cf7a6ab66384744fa88e1f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/ioxhost.svg","hash":"c0de04a1416d2ab33a8f3098d22b5129e8765ffa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/internet-explorer.svg","hash":"bf99de80df5891324d0314da190d4f53b8248b6c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/itunes-note.svg","hash":"fb9bc2cb51e21cbc3f5aec446c5ee2e80bca3e21","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/itunes.svg","hash":"f9b3782b25fe7374b5fbde512a59fcce58e2d50c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/java.svg","hash":"fcdaf2e06b3d9373d6b4b94be386071a22ff4850","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/jedi-order.svg","hash":"6692d26a8d102b0fd53467290523bb7f19a007f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/jenkins.svg","hash":"02589930a8217d30f36302d7ea17409c5b98b32b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/joget.svg","hash":"0290116162fc835b3d352584569a90b17a267c7b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/joomla.svg","hash":"29319149f8e2409569996f3d4b1180c2a239b94f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/js-square.svg","hash":"3d56bd6069c05535006f00ba23b3aca656881304","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/js.svg","hash":"8224519ba401244ecee316f3fc760143185cad06","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/jsfiddle.svg","hash":"4c48e0bd0a2c7fb35679686f289828e13d19a8e7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/keybase.svg","hash":"2d628cc3255f5f203558a39552b1debcb0133a2e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/kickstarter-k.svg","hash":"d468ca9b3476a0d2ecbac2af1363a85496abb104","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/korvue.svg","hash":"312cd83a31f6c5e08d41d25b642cda2fa94b3ba2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/keycdn.svg","hash":"013f41e5017ad492d4451de443e6ff53c408856b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/kickstarter.svg","hash":"edfa012e4c5857c52223b80c7200d9c151a96b16","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/lastfm.svg","hash":"38d2859ede48dc96200d5fbfdee0618af895f570","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/lastfm-square.svg","hash":"d487932b1f586116362d6a819a9e750b79e34fe6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/laravel.svg","hash":"29c6626efb3c5b961cf038d9c673105316dc8ef5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/linkedin-in.svg","hash":"095a46504a22f7a257802dccfc5276dddb59429d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/leanpub.svg","hash":"604b8a79d9a1fa8af274a7c86815681b70efa0b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/less.svg","hash":"4c4672bee99efa74ee698d44a08c52db70a3e0d9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/line.svg","hash":"71189dc14af62d7c81051ed5eb4df3fad4933a29","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/linode.svg","hash":"c3910b53e4ac075c2c823fdea2adbedf38e67373","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/linkedin.svg","hash":"080a42e9177d25dcdc0989a954305bb1d9e9680c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/linux.svg","hash":"4d1b4a17628abeb68cd6eef8bc86a3aa2e95dbd1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/lyft.svg","hash":"ded4342e10160dca080491b6a786aa4f0270bcfe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/magento.svg","hash":"a9fa172cbb4c98978e15315c40f1b6f6227eec70","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/mailchimp.svg","hash":"be6d60753d99d5a05463a55548036debe18473ef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/mastodon.svg","hash":"5a9e4055ea835a8dbd364548dd932a41b3aa271a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/maxcdn.svg","hash":"89008b0103e3c24b0a75c6870a45b0e0e3226314","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/mandalorian.svg","hash":"2635dfaf17ccb07abc52cd578ad6cab135e0cb7d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/medium.svg","hash":"e1cd2cd8e100757ccb8653e697f9bbca3e3a966e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/medapps.svg","hash":"6629629c9895ee5611765fb0d894a88ead0dbf99","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/medium-m.svg","hash":"5e5978af1b886d7d84156abe335bb725c2414ad7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/medrt.svg","hash":"4db8351b050a385abacc8fa770e512321c897522","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/meetup.svg","hash":"3e972ea9294f3dfcc9fe99b839a590fb1040352e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/microsoft.svg","hash":"21fc1cf29846405b38439f2284ab5a21c39076e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/mix.svg","hash":"ddf4d8756e3a8d66849d9f55240eb5c37a9ce089","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/mixcloud.svg","hash":"0a4a70b9a927108cad3d3524b88e90ae9825d7f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/megaport.svg","hash":"26160f831f34100cc0c99826d640c2a4eb221f2b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/modx.svg","hash":"c74d73d94556b169d725de4e4664ec46d1daac64","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/monero.svg","hash":"0bc8e20b001be61526aa5037e35c1480913d7466","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/mizuni.svg","hash":"fa7738c3de7b4e0b4adcbd49c3566e82e51a4686","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/nimblr.svg","hash":"5c992d1d8d50d92b60918ced704fff0681f4b128","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/napster.svg","hash":"11dbc3f9bc23f0124e432b7f78e33f2bfdebaab7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/nintendo-switch.svg","hash":"088bce10b5873cad82f564aaa613b113fa1ba1c5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/node-js.svg","hash":"7552e12cfd54bda3739968273eba4914280cc6f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/node.svg","hash":"ea6518f59401c1381a9915e8bb8eb2be021caa7c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/npm.svg","hash":"41101e8a9e55f101e1a1b28e3659429efa33d985","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/ns8.svg","hash":"4502d936be1a6240e808e56ea1b6fe13bfb1edf6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/nutritionix.svg","hash":"6863f973e8d94264113e06ea5bdc92a50294cd11","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/odnoklassniki.svg","hash":"d038b44ce5e3ad98da354ba8edf762fa3c8c6efe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/odnoklassniki-square.svg","hash":"b8fce8e758f423ffeb2e00b48ca55f86e316335c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/old-republic.svg","hash":"63f88fb55bcfc3dbe65b054fbd6e3b9b1d082b62","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/opencart.svg","hash":"76ee9c5e0e4b284de58c0a88bfa4b53cb2492512","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/osi.svg","hash":"adbfd6afb8fac7b720a05e78ecae95f826bc91eb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/openid.svg","hash":"33f611d4dda051baa4800371629b066501c756d2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/opera.svg","hash":"f17103f57f84089d73c3b4f4d0e7953216aa405b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/page4.svg","hash":"5f9c71378ff52d3b8b4a65c97922ea5823322904","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/optin-monster.svg","hash":"093ed403731ed8777819d66038aa547b9dfe486d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pagelines.svg","hash":"d0e68417a406ede552feb3e00d9a4430af46c32c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/palfed.svg","hash":"a3f3603f831fffb0c0a4b9a51b19b99a0b24fd54","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/patreon.svg","hash":"e1014e83b7bfd86a39c3ef1d18ce5dec2eecd254","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/phabricator.svg","hash":"32f8cf15e794de7819f4b31184dad29e92cc4d39","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/paypal.svg","hash":"dc979b479fa5dfa1e4d409db6641b2a319d21535","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/phoenix-squadron.svg","hash":"f3622d6c50695e5a3fea16b1caf3403452023894","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pied-piper-alt.svg","hash":"9de3ec0b18af4d1dc55055fa15dcc2c7ce964270","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pied-piper-hat.svg","hash":"f13f7b50be847be31fb54b77568e5e621976d7c6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/periscope.svg","hash":"e2776af7ef830e7933f441583a49cef110282bac","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pied-piper-pp.svg","hash":"d203030789a37375a907abc9479df3f2994312fc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/phoenix-framework.svg","hash":"a59cf018e197245eb4df4f7714e31dfdd1783d7a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pied-piper.svg","hash":"10adce4565e76c31441edf2d59bf7599257e6768","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pinterest.svg","hash":"f98e0852b723aa11cbda2db9f83c9095924a53ab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/php.svg","hash":"2a0fbd9ad1f9a3f21ae7252e2507b474c0236fac","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pinterest-p.svg","hash":"af9ee202553b05291f8a924a7ca77f3d18b75f38","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pinterest-square.svg","hash":"1b1fbda3215c82138883a5600fac688fd9013d06","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/python.svg","hash":"38ce2706bc74bc6befb5b1f0e90d0cdfff9a458d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/product-hunt.svg","hash":"18733a20a94a749777f7ccce0083a1e930d1dceb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/pushed.svg","hash":"c6a975f7bec875113cf5a84ee8cce25d10d22598","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/playstation.svg","hash":"d1d396676851434b0a4848d1a7476be313321483","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/quinscape.svg","hash":"38a8b9b95a68acc58d5edbbb4d451a4b0463ece5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/qq.svg","hash":"218f25b71c0bad7c3d095ef1ad19a9c97c63d9f3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/react.svg","hash":"efea81448286c7cbd0e46f5f35cee171717deb40","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/quora.svg","hash":"3f86f64d316c04a0f846af07d1cb7e3962e268e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/ravelry.svg","hash":"fdf2ced2caf70a651a18fecc33e7a2eea908dcca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/r-project.svg","hash":"6ca20a35a31754adb001af64a3bd634a18912379","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/readme.svg","hash":"2c20f6ead35ac9bd384c2f891d7ebfabb5b7b82e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/reddit-alien.svg","hash":"f98c437a764e7c1a43ab1ddc43384c468b25c8f8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/rebel.svg","hash":"c7a8c79015c7be599603c48448870ea8c18a8508","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/red-river.svg","hash":"7d0235ebd4ff04db03a31c73bb0e9309e68a9fe2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/reddit-square.svg","hash":"f1a15da28d42454fecd179fa4ec0b98c2d80d644","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/reddit.svg","hash":"400150e832718c8db0f75ae83759ac0532811754","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/rendact.svg","hash":"4df2d92f54d4e26a4dc9c1026e267a07be86f6b0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/renren.svg","hash":"279d2dc3e07ef5216fabc37fa6a80fff159d8045","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/replyd.svg","hash":"234592546bd32211cc6e0a659cff214cfda8cd48","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/resolving.svg","hash":"c3e5de67e81ff78ec231add58a16226ceb6e0b1b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/rocketchat.svg","hash":"4b0b3bb3e68fa3a0ab57e6e8562012f186318c7b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/researchgate.svg","hash":"a10e03f8febe5c4461ad2a48988e38723e2f65a9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/rockrms.svg","hash":"6864df7e73f472296f07772eff30044638c1d109","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/safari.svg","hash":"4009e5f87313c7bdaed968c5058fc2627ea977b3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/sass.svg","hash":"54e7d0abc5c71fbe9eeb5aae7b2a47d379275033","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/schlix.svg","hash":"8da072a5467ccc83d9f43f9ba22c4f34bb5c014e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/scribd.svg","hash":"4b76d69ff887cc32e6882dffb28777f0a01a565f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/searchengin.svg","hash":"16847af4294803d6e73972cefcbd866cbd030769","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/sellsy.svg","hash":"a09df74f4ebc4ab835a98b2cafbf409b73d2fbd4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/sellcast.svg","hash":"c1db1d580d92c57f9f466c694a66284453beb6cb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/servicestack.svg","hash":"07f5f6eee5fa1e8e22fb02c3738b8907371cf718","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/shirtsinbulk.svg","hash":"e229ab3f22e5d459f31215683213698e1b5c2d3e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/simplybuilt.svg","hash":"3eafc383722fad479754939af55db95cb7afced4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/shopware.svg","hash":"e8d89be80333f33bc4a796108bbd5af3d29eade9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/sistrix.svg","hash":"0192a84c47485c6a0f592534e5375855eb23f273","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/sith.svg","hash":"bc22ea51eeceaa96cfc909dc44e8bc4a4cb1c417","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/slideshare.svg","hash":"df2da79c9d5cffa2fa9a69159237028f163234da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/slack.svg","hash":"53ad453eb10f657260d023da176994ce5a27809d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/skype.svg","hash":"3cfba6b0140b6c65fa35c2cb207f720e4fb3205b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/skyatlas.svg","hash":"9b38a8401a6186247f873c7d796a9eff22b844ae","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/snapchat-ghost.svg","hash":"9ee7e4cebd60d6e41915650dc10592f5c01e14e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/snapchat-square.svg","hash":"f450166368f09dd510edf4c2f27ac6aa9c12199c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/slack-hash.svg","hash":"ab4ee794f0ca82c0563c88f6d7a1d5befb44983b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/soundcloud.svg","hash":"abd09f10b12d0db3e100dc1011253b92b9ffb0ee","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/speakap.svg","hash":"42597f50445347dd6bb733458e49ec14ec06a260","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/spotify.svg","hash":"46e43a7585e42c21394f173082c7ad8e66419e4e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/snapchat.svg","hash":"454bdd3b313ba5cbf31c95b05ff60ee12ed213b8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/stack-overflow.svg","hash":"d6121a2149b83f7441864138f03b06383b02fe84","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/squarespace.svg","hash":"f4a04600c84e61753f437dbb0feb71405bc241ea","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/stack-exchange.svg","hash":"e6d9c99f6a37f2c7f7d8eefb8d0035e96a4c21e4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/staylinked.svg","hash":"46fe675abf4ddf6c9d17d8643505783ae158ea2e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/steam-square.svg","hash":"3a3922ea08cd0d326b9c66942c556ba6306679bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/steam-symbol.svg","hash":"31cca91f45d54c324f0df0d76606194d21ee4535","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/steam.svg","hash":"7d6e49e81a1e65f60a8042e96de22c7f6c3c086c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/sticker-mule.svg","hash":"3a266045c67575d5b4682b129a18205d585d5a44","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/stripe-s.svg","hash":"f7980fc9f15676f9e474a4951870b209c16b8f03","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/stripe.svg","hash":"db24f64a6a94cfc219ad309824f89fb4c361bbb9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/strava.svg","hash":"d3ed3cb404f19a4f75b13e96527045836590551d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/studiovinari.svg","hash":"f36257e330a93b9316c7476eb22058ba279fa609","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/stumbleupon-circle.svg","hash":"b334575dec04f1da507916ddfed9b668937540ba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/stumbleupon.svg","hash":"ba8478777112940f0947934358725b63b2dc7c44","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/superpowers.svg","hash":"0503897c4562b693aedb0b92401b14737e621c1c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/teamspeak.svg","hash":"59f25b9ccca84d350103e101756d31fc08884a1e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/supple.svg","hash":"9887d9b6a9c6faf8693989011b427dfe6078f090","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/telegram-plane.svg","hash":"a9d822db82a35b1521e34b2ab76d4721d8dc97c1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/telegram.svg","hash":"a3bf806e74fa6f5536f57a6487f7f44409aa60b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/tencent-weibo.svg","hash":"b64aef1696bb488f51af42b76a0492f20d24461e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/themeco.svg","hash":"669f51422bb8a9ef44e9aa2ea6a4a2853bb6b2be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/trade-federation.svg","hash":"080e55a8b865cdf21c4a775598af02e6e1119a32","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/themeisle.svg","hash":"599edb6266361fe34adfad75eb8a16453de2808e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/trello.svg","hash":"ca83a2727ca7468621ccf0a50704961f48e6e2b2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/tumblr.svg","hash":"1d87c425f5dc02edf79dee982302cc0a63f02144","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/tripadvisor.svg","hash":"b71092d368744d320df8e882e634ce0219f2e0d1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/tumblr-square.svg","hash":"ce81688f291d3a37d949fef201c58644f316ca3d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/twitch.svg","hash":"b7e2e473e6e70371e20bb66477902163014c297d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/twitter.svg","hash":"15f584e80da9abc9083ef67bc27bb19457053bad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/typo3.svg","hash":"2ab0e6fc482ba6169a45ba85617d3d92f52e26cf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/twitter-square.svg","hash":"f5ff03d802a9335e60815099ba9cfdf3fa4df37a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/uber.svg","hash":"e6792f663096a170923e6b50e3ffdbd5ecd7cb9e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/uikit.svg","hash":"5d8d7190d1b182e08b44890f0f9c4ef89b6c4d0d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/untappd.svg","hash":"4604c9e6ac7ece2b7d8ecf023b80894ce9c74bcc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/uniregistry.svg","hash":"c65ed42b1ff22394bdc3d2630b8c846f140c5eff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/ussunnah.svg","hash":"5d08118b9b507b63762cb71e6cce8a6944b0b720","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/vaadin.svg","hash":"8193a56f303d813d403bfaaa975518eee67a2f70","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/usb.svg","hash":"31d7fee3d5412ef3fd0177dfb102a4aafdf1d80a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/viacoin.svg","hash":"63bd552aea9fc3074c0ea94cb291290f8ff72cde","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/viadeo-square.svg","hash":"f9709a1cf024790af388b2e414c05b8ac29e71ea","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/viadeo.svg","hash":"d1042c762947513d219a70527f86dbae2fdea7c1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/viber.svg","hash":"938eec929307c316a715e4a7951961b98532985a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/vimeo-square.svg","hash":"8562807e3a9e4fb987f7a54ca600acb36abc9158","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/vimeo-v.svg","hash":"ea5d679d890955a8f909b4fa0bc92989e3986497","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/vimeo.svg","hash":"93ea8691671578e9b06b25beb7ddd2d48811e154","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/vine.svg","hash":"24daaf38f9e96709c541af14437692e85eb77fe2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/vk.svg","hash":"1747be4025a0f80ee85f8a9d9bd3d323e57ee3ed","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/vnv.svg","hash":"59a316051e9a2b2686a87527574fee68fa04259f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/vuejs.svg","hash":"777e9cdf0173a7d7c0197c0afb76d2d432b05f23","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/weebly.svg","hash":"9584f89f1bcdaf72ef641d7ada3943b8e8fce152","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/weibo.svg","hash":"d1022c2fe601d98e011a90ba6e2e46cefe33322a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/weixin.svg","hash":"39fb9dc792594bdc60eb5291607d2e9c53905ce6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/whatsapp-square.svg","hash":"c6d299f34362bd42397a01cb62ee988540bb2d8a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/whatsapp.svg","hash":"d1143f73486a66341e0d855eb5a4069aaab82efb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/whmcs.svg","hash":"73bc1f10c1b80e2fe6b5a1ac2dfd252dd065b936","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/wikipedia-w.svg","hash":"4accccd9b6ac99fe03efb93b6d742473194e3d16","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/windows.svg","hash":"aad724ce488a73115de598a649f24aae515b7d97","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/wix.svg","hash":"292e973d8109d5cd574f4e45e95d20e7f5e4c5e6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/wolf-pack-battalion.svg","hash":"ed9b86128666ae2f0d3aa2b6fe2ad739a4caae33","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/wordpress-simple.svg","hash":"85bbb37bc5a7dbf4380a1255b962e6546abc0a64","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/wpbeginner.svg","hash":"f849e11c8e5b023f585971942d962c569f810fe3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/wpexplorer.svg","hash":"d0ee56daa067990ed495e4292d0118cd58ca4b28","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/wordpress.svg","hash":"45072e207ebd99d67862b8241ff36972b6b56145","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/wpforms.svg","hash":"3792922fcebe8eefc37efa94fa221d6c23623bcb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/xing-square.svg","hash":"a0fe9a0d01e601844eb28512cabc450a987c34f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/xbox.svg","hash":"4bcc4d0d5748e82e5ae2552cda8bbd81d62c2983","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/xing.svg","hash":"b9e6b74a3eb0b8ca5c8d0668ec53f70b35036cbb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/y-combinator.svg","hash":"a81175331ea014b189dbc4010daff1af0838d033","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/yandex.svg","hash":"624e4ee2b8fb00e4504979fedd01d691fb6d4b68","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/yahoo.svg","hash":"4f5bd1e43d935f36df8c8b6bfd9e19a341495072","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/yandex-international.svg","hash":"3fda46d459b1907eb6fb9b783208ae51d8d83177","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/yoast.svg","hash":"152c820c0f2df6aac502b90d8f5fcf3c6cec48fa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/yelp.svg","hash":"43d2159e482e46026c02c7a6301b445c9fab1f36","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/youtube-square.svg","hash":"6957c53916e5663319df1093fc9cec947da6c6f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/brands/youtube.svg","hash":"e0a4484462cbf33f989db503b79b30bf4c7c67d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/adjust.svg","hash":"f1c1e7657dbf853f291cd5c26a9a480d36e0a47e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/address-book.svg","hash":"26e8e658a0446bfef69606e659d09aaf51a43d4a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/align-center.svg","hash":"4bfd98068fb9410aa53460e8eaf6238389782e36","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/allergies.svg","hash":"d04e0fc1d8bbf29955eeb94df79e30808259d05a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/align-left.svg","hash":"77038e7add423e094c3ce608604a1d8969c2fb0d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/address-card.svg","hash":"6e24ff410a4532cda7068b308666bcbed455c2db","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/align-justify.svg","hash":"d6039c9d608a90f8b8bed2d5f297751456885dab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/anchor.svg","hash":"dfc23c987fd9c8847c549eaba03b833c1b1489ba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ambulance.svg","hash":"b716e002f4d4ccc8026899f2a3b0f2f62599f071","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/align-right.svg","hash":"48c01494ee231ca9b7b5a0edc769e9c7f89f4a7b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/american-sign-language-interpreting.svg","hash":"d1e95d928c166820a4b9746823b5e60a4a47bd9f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angle-double-left.svg","hash":"e607fdda68f1228243d1d328e6d8acdc9b9895da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angle-double-right.svg","hash":"04314a415d436250cec35454f3ecaec1a71af5f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angle-double-down.svg","hash":"62ad1f32bd162a75e451f2b5b5642c754278bbd1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angle-double-up.svg","hash":"2cdd2600459fbdb82cd5698586f92458289b12c2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angle-down.svg","hash":"421804876ac13be0c636f39d436e6750833faea3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angle-right.svg","hash":"49be0f838d7f0b65aa8484f24577918c44a5bfee","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angry.svg","hash":"3eff55f53a32d9eb4f9326ce446642970ce94ba2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angle-left.svg","hash":"55358f4e3d833dfa582332168e6288afdcdb2714","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/angle-up.svg","hash":"d7efa3f6b20e2aae1da95a88bbbced81217a053a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/archive.svg","hash":"08c0c6897a0228fca5c6a9f6e14bea9bd16eebbb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-alt-circle-down.svg","hash":"fb3f0b07b5939f5119910595b523d1c621924dd5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-alt-circle-right.svg","hash":"9cc6129a196a54bd0725bcd294cbf766c0055cb6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-circle-down.svg","hash":"85d2f3b08f31c48c4a915329be06f0eab6911498","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/archway.svg","hash":"4a8ffda2725f386a0505ade5496fb9e5913d6e6c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-circle-right.svg","hash":"1bdec91264a0788f901fc125931a69032cfd9d06","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-alt-circle-left.svg","hash":"3b40e152eb9ebcd9a41f79a12aa96077e19b8bb7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-down.svg","hash":"3fe6097f2737886839a5daaded97b064c401597e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-alt-circle-up.svg","hash":"b406312b8b169fcfc39c5834943bcd5c5a3d2ec9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-up.svg","hash":"b1ce21c7ffbb9e1d89c7b431bf9f16a878fbcb2b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-left.svg","hash":"57326c31392118de7cfbb753e4776b73b8661a2b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-circle-up.svg","hash":"38b94fc7e2e4c63517a48fc03146c5b0552ec3fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-circle-left.svg","hash":"485b79f3e1331996aebfcbbf812bd9fcc5838f66","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrow-right.svg","hash":"9ca326db880a0198d764b6d3c263b83ed2c62b05","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrows-alt-v.svg","hash":"7d99f858cda3e07004e1046e5eb08c1041801e8d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrows-alt-h.svg","hash":"71bb2ec38bae7ae7dec701498f6d193dd4d8bc8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/at.svg","hash":"e26b08f553a2e8f704cc2207114186adb440d4d5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/arrows-alt.svg","hash":"1621205d8194d1f474bcf9fda984774527483d81","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/assistive-listening-systems.svg","hash":"551c0e12d560989f4b765ae45a5b394f55fe936f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/atlas.svg","hash":"1a1aaf67a2897f3638977d2fe40fa0166695cf82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/backspace.svg","hash":"fce29775882199c886e986228f61104338fbcf6b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/asterisk.svg","hash":"b7d7f9c1809412c9ffd2dfa29e3f7723eb5de78e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/backward.svg","hash":"42ef839122c0aa886d748490815fee34d33c709c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ban.svg","hash":"7be9014ccbdba3983bc2e1215f345c8781bc0b58","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/barcode.svg","hash":"32e8cfcf6551115532ea3154a3147c659c2224d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/balance-scale.svg","hash":"84b2bb01975ee73bf88bab038b8ca1aeb564d26b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/award.svg","hash":"99a297041745f24ab38bc59cb6fd27d9365abc4d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/audio-description.svg","hash":"d3bf8845f99ebaf81b40c19178aaf8f60043cf67","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/band-aid.svg","hash":"1e84e99187996ca942d5ae88d3f34e63f633dea5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bars.svg","hash":"d373e1359eb6d3327b843e8ebdc54849ce220b82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bath.svg","hash":"d8615ffdd0db3598b48411726e66dda0b2c8d966","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/baseball-ball.svg","hash":"769f30db2ee1e496376e701c60b7827e50ac880e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/battery-empty.svg","hash":"f3430eef83782e67f121cc265ed006d445b27696","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/battery-quarter.svg","hash":"63117fba892e072e2dbe9101f3ab8dfe8feefdb7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/battery-three-quarters.svg","hash":"0fd0af1712f0fd784525b0ee9047a6c1d5ecb249","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/basketball-ball.svg","hash":"f26a99b7b714626aec2f7fd65ec04bc7b060a5a3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/battery-full.svg","hash":"6ccf92ceee48880509c6fb9d31da1d9a8590b795","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/beer.svg","hash":"2d17ee259061a8056414b7978471bf9f235b250d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/battery-half.svg","hash":"2fc0ddaf9d107fd31c6f67852f945ffebd3208d5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bell-slash.svg","hash":"201a7eb4289c86a243d488bf71820fdd6ac98fc9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bicycle.svg","hash":"57bf0aa6bf760a11d390a1427e44cd30bbd19337","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bezier-curve.svg","hash":"0e66cc3196707d45edb46d176b895d5d941a13f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bell.svg","hash":"c6b6203c262ccc8dfde8038eb9640ce85ae8cb2a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/binoculars.svg","hash":"75d7c4342219419bb08a4442dffe2c649f13e690","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/blind.svg","hash":"2af31f41400bfea7136b5ee684875ffc9ce45df4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/birthday-cake.svg","hash":"eeb24ba2dbacf8fbb64ac76731ad4d5e05f8f32a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bold.svg","hash":"2b3d3d61d36ecd4b4a435c73dffdd9ca5b5267db","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bong.svg","hash":"86ebf12382529eb0cb51207e61ca6d2af1ba09d7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/blender.svg","hash":"19116de4e402228f7702076edcb7b6b88f4a5684","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bolt.svg","hash":"4e1fdca332a162a0661922898d1e8573d0c39c58","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bomb.svg","hash":"c45df43a41a93957ce980a5acfcf4223e376df8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/book-open.svg","hash":"e8ad60d21208ec6a64143ff90e01329ae4bd6b7f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bowling-ball.svg","hash":"968c975ef067a03fdf796781a2c6c09624398567","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/book.svg","hash":"3c4407ba406f612e6862ad149eb0a86829e1c6f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bookmark.svg","hash":"1fa6567946b37ef613e5f7f4822f81538c99222b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/box.svg","hash":"cc489ec9ce89bf3215d7cdef1150f03a41d3fff0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bed.svg","hash":"5c12bbc072cdd82e15aa2a90d45763ce04a74444","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/boxes.svg","hash":"71895a062206fc0de2c3094b07a4b414d8565ff6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/briefcase-medical.svg","hash":"ac6cd417ecb3f97fb246782b83f249f4e1a576c8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/briefcase.svg","hash":"26e3e52ea8337f07e65598342de48b6bc8a0fa0f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/broom.svg","hash":"05ff74329edcb13cca3c406e89c74d2949e406a6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/broadcast-tower.svg","hash":"23eea41969c221f0d87fff9b5e9ff0dd7b39f391","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/braille.svg","hash":"542f2ec2f250bd9d578aeec7a7e2795ecc98c10a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/brush.svg","hash":"c6c755b6ebcdf3d213c189f62f882c407b2e2068","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/building.svg","hash":"c76e045c819aa4458754109155c80c8e682e86f5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bug.svg","hash":"661995a62a5703ab039da3f0ad79386405513bab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bullhorn.svg","hash":"3bf1fd632f57b3e9b51291f3e23d59c1da0cf1b2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bullseye.svg","hash":"8153c7880ea2bd53127b10d8fed2b5cafe56020c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bus-alt.svg","hash":"60a2ccea7886b94a27202dc40e97c15a2eb1684a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/bus.svg","hash":"14d244f12684f785e7c35829205467400d240d98","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/burn.svg","hash":"996702845ab97a2b0b15dc7199a470af97d38096","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/calendar-minus.svg","hash":"1716fbeaea847ef8bf5915741a9b346472bc29be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/calendar-alt.svg","hash":"fd2a0976976822ca8e80a6dfcb25e8b15f61d44e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/calendar-check.svg","hash":"07f5b833e15842f43544c7913a7f2ac47140839a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/calculator.svg","hash":"dd25cebe19579640e6edf8fdf308a2f5b91f96ab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/box-open.svg","hash":"9f5cbc37a9b43767c1496fe50347455cad48df57","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/calendar-times.svg","hash":"4c5d02b54af46da34380abf5611cf27a782c2a71","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/camera-retro.svg","hash":"890dd215c8dc59a92535f7feb077d6651a8fc85a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/calendar.svg","hash":"72c85dd69157bbb94293fe9295523ea0058b58dc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/camera.svg","hash":"a6509a1fa4f6b671713255be0df2b773d127fd00","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/capsules.svg","hash":"6ad11b4d88672338479401a040ef6403a5365f5a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cannabis.svg","hash":"47d47a7a989bc8d6901620ab4f39aaffa4f98a4a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/car.svg","hash":"0712b1e5f1aaa3c9518aa7fe586b02a7964c1f52","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/caret-down.svg","hash":"39d3074e09b41e60499748ab111a4bbd3251a29c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/caret-left.svg","hash":"b6edb7de7809d972f8836d1f6e8002d9a6d12404","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/calendar-plus.svg","hash":"9bd21199c0f970a8a45ab1b102afeb17ab500c07","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/caret-right.svg","hash":"7dbb5e75b341acf9f02596867487a715c74fa655","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/caret-square-left.svg","hash":"12f7c21565504f26dd2c2945987d595807e7860b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/caret-square-right.svg","hash":"cac3fda1aa9b313d11d96840696656affa4f7b16","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/caret-up.svg","hash":"168cb81fe6e29317aa4d3ac3b456a00793da5a95","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cart-plus.svg","hash":"b68f33c573ae3635542de0be4d0a38ca70c6bbb0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cart-arrow-down.svg","hash":"db217b1ad7c6610bc0f88b1bf4a15e644dc19cbf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/certificate.svg","hash":"5681cd0a4112193c52f6799124d2865c918ab9f4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chalkboard-teacher.svg","hash":"721027ce5f470fe6bb1b9404f5771846f7818ab4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chalkboard.svg","hash":"fb499a22dc55d2ea43e7a316d5c2bc07afc7bed6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chart-bar.svg","hash":"4caaabcbee9cc96fce1dfb5f4f64069fd1ab532e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/caret-square-up.svg","hash":"97e2269901b44cffd530fc564883a582e84562ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chart-area.svg","hash":"b0fce1c60766d9db94125b70138824a1f9993f4b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chart-line.svg","hash":"efa6a2dbb72e9da03485dcd1c65ba4e6559125da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chart-pie.svg","hash":"4d35771e80a46c87e2978e5b897608ce7ae0e647","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/check-circle.svg","hash":"7e2dac53b5860ffcec821a90918b7a7baa916cac","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/check-square.svg","hash":"80d59b5349e7260f67f1d3881e832fd941f3b299","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/check.svg","hash":"0ee4f588f76d749215166fa7b44f2291acce37bf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/check-double.svg","hash":"5d6ffc04e2db34c976a359b1b7a96cb3ce58d73f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chess-bishop.svg","hash":"887a4e59ec497a09649e13118f9be1288bca7d46","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chess-board.svg","hash":"da8e4358a1af5d78ea6586445fbc0b15603a1ce2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chess-pawn.svg","hash":"03d304ad2b452f831548427a191eddedf06159ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chess-king.svg","hash":"3629e79a7b89cd87faf96d46a378c54a4e28cbc4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chess-knight.svg","hash":"1b7f66afefe9578d6403cf21e510d9239a5db04c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chess-queen.svg","hash":"46423534240750dc4a28fe59d06772b42f48518f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/caret-square-down.svg","hash":"d2b417f29bdbb94726093e2e7f8b1f36c2fa13dc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chevron-circle-down.svg","hash":"ea55f9dfbb7e66616f9afc98ccf09d7df111f3c8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chess-rook.svg","hash":"bed2c750bc605c7dbb5a1b19ee6af28ec9dfe419","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chevron-circle-right.svg","hash":"845cf102b4ad142ec1be8256e3c1182ef3f35e82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chevron-circle-left.svg","hash":"826b910034e7f2d4ffeae57eccd7cae4a72cc786","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chevron-circle-up.svg","hash":"0c4afb444db05c2f9994884fc5667124342bc466","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chevron-left.svg","hash":"269aef8eb7ef2a0d92cbbf89a033b4cdca678b21","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chevron-down.svg","hash":"3009bdfa51c2817cc0a896e1c5de30a58871f41f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chevron-up.svg","hash":"0c5f96331b5399f2a45af10b8d24f926e09fca33","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chevron-right.svg","hash":"e45388900932b5ab799bed34349a3c4372e60134","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/child.svg","hash":"2c1ef1a5f0c37d3efe6a5589c0196c39924ce87b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/circle.svg","hash":"996cf10ca3dd7f02cfa2b1b10169ab047c2b4ba5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/chess.svg","hash":"0c7300ca1a0b16a2c2241da98e4a04e244cba540","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/church.svg","hash":"33ef7cba06c2482630d1a5d61b728b6906e1b008","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/clipboard-check.svg","hash":"ae54053dc6029c03dd6a938113f08df8415beddc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/clipboard-list.svg","hash":"9890425c3dc42e909883ba6c507ff3fe5df38195","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/closed-captioning.svg","hash":"b5ee0f75449016a26344d5d324d315d97b7c90cb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/clone.svg","hash":"1c4e8423d19cb18715fbe4b56cf2e317d2232db3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/clipboard.svg","hash":"bb5646bfd136c3d26f3ad546b7e679430c2ecd9b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cloud-download-alt.svg","hash":"b4077d654530913f0bfb5cfc0604403946284227","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/clock.svg","hash":"dbeaed6f9ff810a5ae3d7e925849618da9132dcb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cloud-upload-alt.svg","hash":"c71c5db527681d7012bb5db5b3a63bcf9ff858c5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/code-branch.svg","hash":"f02cd6b197768fcaba9b522051bd1e9e0009d3ba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cocktail.svg","hash":"c1bf4ce0c5fbd4fa0acd76f433356c22cfc8a34a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/code.svg","hash":"fd62b17095763975c1a632a2163f19db9dc14794","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/coffee.svg","hash":"839c137c650a7458743f204452b53d43a4dd33ef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cog.svg","hash":"1eba1d2e667bd3b53efbd266e557be3af426b18c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cloud.svg","hash":"94c999a4959fbc8bcccf5ec152622bd702bcf096","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cogs.svg","hash":"8783d8f00730d2e4a26e88329ff7137c0b143caf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/coins.svg","hash":"bd4226a9ffe15bbc27a695188da4fb730bdd64d5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/columns.svg","hash":"5fb2613d256bbc9c63b388cd36782891e0c916d4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/comment-dots.svg","hash":"d2fc793260b6ded74248ea6e448f6c907e758210","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/comment-alt.svg","hash":"cf4c010358a216d4a7c85db2965cd8cee49e25e0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/comment.svg","hash":"e117accab935aa27d38861dab02d29a5d048b94f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/comment-slash.svg","hash":"416b4781d91ddba4d00b9750b8b5ef6a65f97f0a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/compass.svg","hash":"b6a84100ae5482e11cb5a91ca1d202baaf0d7920","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/compress.svg","hash":"fb7df15a31cd6f88ab8f1f0ee40b25f0a3298e6f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/compact-disc.svg","hash":"30ea01d77353c52e48b5c6723af7ed21e3f2a5f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/comments.svg","hash":"b56341c7528ae90483136d5c20f191323dbef557","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/concierge-bell.svg","hash":"f66f444beb2b35ff82f0c7ff2737c3b0fd5bfca4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/circle-notch.svg","hash":"e35f4e2cf3477f653a2120ea6437eeb016541c5b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cookie-bite.svg","hash":"934a6ceee360bcaf6db4841a94fd8b1d77d31689","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cookie.svg","hash":"33b31c17223186f094ce17799f4691b3beda3526","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/copy.svg","hash":"260ad7f72ab58c015defde369363eb7afe6aa26c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/crop-alt.svg","hash":"851d6bf345883acd8fc4ab6110b7a4a9e60d44bc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/credit-card.svg","hash":"f9f73109ac42085b0702d4120edd2f91285ab79f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/crow.svg","hash":"0904b952e438ec70714e4e11f6e73d29a9f65ea6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/copyright.svg","hash":"2835904f9b2b9bcf3845255d9c9ff4da954fa356","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/crosshairs.svg","hash":"6e95d29edc922a1affb49b0f92f85fc95933b041","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cube.svg","hash":"56f3fcc1add49241e36b96d521fa987be1601ea5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/crop.svg","hash":"48daa01ebb89928fdda88d5ff357fdccfa04cb32","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cubes.svg","hash":"0428cf6a1abe801984a8f8ff486cdd310782a357","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/deaf.svg","hash":"0eadbb1785b8f0c816810e9f05b28c605200181e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/database.svg","hash":"4db971c576da4a9bfe4cb4e98b23d49cc10663eb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/crown.svg","hash":"bf248d23776d8bfbf54ceb2bfd36e32491acc26f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/diagnoses.svg","hash":"862b45ac3c09911d36ef887444d99541d10e6a1b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/cut.svg","hash":"bd985c2ab1591c5895ead89dcf30be774777af52","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/desktop.svg","hash":"8ee26a456c857ac88c09f77fa9d8f62a6219f996","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dice-five.svg","hash":"dcaf00cd531ddddc0b047a0501c30a4259073913","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/couch.svg","hash":"08d424a56f183aa8966d685db68d8e8ee2fb8377","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dice-four.svg","hash":"bf3ee90314fd133ace757c7f5e98be4d3cef3572","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dice-six.svg","hash":"fab04146a1ee1d3f651de43578275493db84f9d5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dice-three.svg","hash":"6cc9d455f0d22e4b82bc323fe7800cf3ee3b4f04","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dice-one.svg","hash":"bc43c7ce51fb250ec924eb977aec0ad06e836451","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dice-two.svg","hash":"5c1f2a4ea372ababeedcc7f611f9f16d673d207c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/digital-tachograph.svg","hash":"acfb68df0fce21915efc275571781f3052b92678","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dice.svg","hash":"f4d8e917406587cc563f6409961a80053ad4d48b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dizzy.svg","hash":"f99b125981f831ad9e8a8762de466e26597fc53e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/divide.svg","hash":"e96597921e2a7d1c3b704f710fe15eb2efec0b7f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dna.svg","hash":"b6311ed61fed4990de0fcfbd67421b73c1d08d4b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dollar-sign.svg","hash":"983826ebc7bd2de26ccbe165800565a6fb0216e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dolly.svg","hash":"ad83b6380908fa68a803f104ad60d0c1f087dd99","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dolly-flatbed.svg","hash":"bf78ade1672388a2d6048c20627de6a22636f897","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/door-closed.svg","hash":"54dc9a574ba11f1e3b0f607734ac10cb5873dfba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/donate.svg","hash":"83e257ce61206de203bca61bbbde7c3758c170b2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dot-circle.svg","hash":"651bfdad1ab6f67145718a436b7c30036284fc0b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/download.svg","hash":"5b989657fc2a5e62f3fdc7421840ab7e8af51a83","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dove.svg","hash":"535eb6b138fc9f640752f79ad9e2e6fe1ef36336","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/door-open.svg","hash":"202e1ff09cc0af35a6dfba6ff8acfc3a82b4b0e8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/drum-steelpan.svg","hash":"7b67fc94c4cb45d4dbe221c7787914bca429bc52","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/drafting-compass.svg","hash":"5b631e297a4b50b84151bc16a9a632258569b3cf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/drum.svg","hash":"cb77204db69ff3c1276f35f2b05caef8150e5097","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/dumbbell.svg","hash":"13bd314a110a95f2b7ec4b36fa65cf14e5e28d3a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/edit.svg","hash":"dcae86c52a2b8a5e0eacdbb652625a33606d8b12","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/eject.svg","hash":"c8e124ffc25f58dde42c10e86e373965c6a27983","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ellipsis-h.svg","hash":"0b6572193a88e2acc69174056ba703fa0c32b346","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/eraser.svg","hash":"18bcb1187c8e19cd46ad82e1f5753533122b67d5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/equals.svg","hash":"450e55c7b4a5cab00ae0606d6d67b91b4dd53a44","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/envelope.svg","hash":"5488965b897dd44c6f29a98cb3b6f19b7ba345d5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/envelope-open.svg","hash":"d99783ecb12d6db4dafe8a0916c68287b7308b3c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/euro-sign.svg","hash":"c00d69256554b41b506ebd497fdf264f10c9cc88","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/envelope-square.svg","hash":"6ce975f5c52b37387f781589efb86404493c9565","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ellipsis-v.svg","hash":"ad561f2ea5185f20df8ca5e677dec1dc6f751aa0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/exchange-alt.svg","hash":"dd5dd8f18c18dd774117798737fd1734afab07e5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/exclamation-circle.svg","hash":"c00531dcae4fe997bee2ca833157e7077468c445","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/exclamation-triangle.svg","hash":"d9672a602fd096f3e8a64880e495037cb7c6a9de","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/expand.svg","hash":"a4df61a8a8b2c2196d26f9ad1b03ea3de3e7beb4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/exclamation.svg","hash":"874a69883414aa4ac32b6240c64ca0b38858ae4e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/external-link-alt.svg","hash":"125ea7e658753ae52174a62dd49293c435d45f36","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/external-link-square-alt.svg","hash":"626d6ae51de84c3e0be7844d9c6612265ecba927","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/eye-dropper.svg","hash":"c28edd70188761dc59e6b93b532d3bb79f3eda46","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/eye.svg","hash":"7acaa48b3cf5a66e4dc201829bc69a6391e3c75d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fast-backward.svg","hash":"cfe21fab2f076cda23367155a0bff03c043bb881","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fast-forward.svg","hash":"1dbf67d6164b097dfe0792e236d2170d4a04967d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/expand-arrows-alt.svg","hash":"64eb1e1d8442dd289870b497424724df618a543a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/eye-slash.svg","hash":"89ea14dcd566da694cda6b45391cf3946c8ef139","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/feather.svg","hash":"7cacb434a9a55373b68bb3d7b1d1249263cf579c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/feather-alt.svg","hash":"305bf15899b4a7076fb372d52de4c31005d6c0f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fax.svg","hash":"f9859d0054df6580cd6d3071edb33c661cd1e032","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/female.svg","hash":"2ed7f9d96940f8914dd07dc41a9d330024771fdf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-audio.svg","hash":"454eef8aa5b51824e536253d61fd16c08b6094b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fighter-jet.svg","hash":"98bf52656952b1b7c038c86a74f41f9a98806251","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-archive.svg","hash":"723102015f9f26f5a713d4a2b555090599257a59","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-alt.svg","hash":"a6354944fbe5baff1ab4b8b0732cebc175a23ddf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-code.svg","hash":"b1a450456513570f380e0fb7aec8a56222caf0e3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-download.svg","hash":"3faa246cd50cd0901094a837799779d474e867ae","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-excel.svg","hash":"6ea3334f7c1a5ff12af3807771588111a163637a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-contract.svg","hash":"dabd12c33c85b49fde2909fe7336cfd91ecb7c27","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-export.svg","hash":"fe5ddfa32bfd942c5a52ca7bea5bf1c9df2ac972","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-image.svg","hash":"d75b467736f906ee1aba611450f2a9e67cde18ab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-import.svg","hash":"62ea2abc65e1ed4f9002332b8802b53c0068b81c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-invoice.svg","hash":"8d1391df55d31943e5b468912d8576a6f9a842d4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-invoice-dollar.svg","hash":"e2c811e495cc27236b371ab0a2f55be9eabae888","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-medical-alt.svg","hash":"e4f651d09a58c86630da6ef6fc8b15d3a800fa71","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-medical.svg","hash":"aa4ce65a21d6ed81f2c47cea3f450f7b733a6676","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-pdf.svg","hash":"b823a3126af89d2bfce1b5e4eb755a09b1e36d6d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-powerpoint.svg","hash":"747659416f5efd8a2283ab6b82830f5f9d5f3d90","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-signature.svg","hash":"2ecfed97459f17e2f537648922f34ac8ce41616d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-prescription.svg","hash":"52b08436654580dfa664b88c97613fac32c678b0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-video.svg","hash":"fc31708813c2954c6e3a950e3357ff0d9bb769ad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-upload.svg","hash":"14387d37655630f964d07cfc35bdd2828aaf18a8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file.svg","hash":"d7009a9427de501c6a4e4fff31ec9aa8dae81b72","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/file-word.svg","hash":"ea2cfca45532fe967320e5b123222db2866a172f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fill.svg","hash":"6c8fb21fc3948c9118e9de77cd717a403cc89650","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fill-drip.svg","hash":"45c36316a0b750773353315a187355781c6e2267","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/filter.svg","hash":"c34fae909d68ccabcf9a3182bcc7d7b5dee81fb5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fire-extinguisher.svg","hash":"a4d5b4d2be74730dea26cee33c0fe0cde01fa4b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/film.svg","hash":"6d104de1ca1ead4a946b368d205ac648ee69a600","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fish.svg","hash":"62bbbac30412ac968c93014ba330e958cc57fbfc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fire.svg","hash":"2604f0358900c8b4dea1a463311c7798f08e68d4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/first-aid.svg","hash":"03e206999f8e5dae431eaa378344057ab0860bf4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/flag.svg","hash":"e3eb563492e3002a39e1bb79826aca629d12f4fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/fingerprint.svg","hash":"75bc6c90c5b0dac4934579fb9c012b041fcd2a75","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/flask.svg","hash":"ac8ec762ab3bae7dbaede9f8033c5bf19c030961","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/flag-checkered.svg","hash":"054dc654a5519cfe8a3269bc7ef1cc9567af171b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/folder-open.svg","hash":"e4ae88d614161078141be662e1523f471c11486c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/flushed.svg","hash":"b0e75dd7189fcd3a0571adbc6fd3c27be88d6879","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/font-awesome-logo-full.svg","hash":"a97c710cb57ac93b2fd5d395802042facdc35ba0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/folder.svg","hash":"ee99feece16f19ba46e1b6d503ac9c89753cc82e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/font.svg","hash":"e262d9c61f11c5c8e41e710f52d8eb857f7c47f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/football-ball.svg","hash":"83266488036a9162212d4cc16df5b3bb849dcdfc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/frog.svg","hash":"3eb95e82941713cd35e00f1b3df538cde88e1886","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/forward.svg","hash":"32c43b7feb1d428e0998724d239afbaa8e7dddbf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/frown.svg","hash":"274666647715f33dd43c2f0776ff42d6681d5c76","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/frown-open.svg","hash":"dc27914e777e0d5c670d2ff68343757c32e4fbca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/futbol.svg","hash":"8b295ca18789801a59f097ed4297a79cab8f9e17","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/gamepad.svg","hash":"6e5b722a19016de47502729906f74eadda7fe419","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/gas-pump.svg","hash":"601a5f6a8da8c4014530781ab66ec590568e3b24","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/gavel.svg","hash":"b0521b4574cc1c5b44b9cdbc83ab788326511b65","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/gem.svg","hash":"6ccf61ff7ca21c283abee62639cf07efcddfd65d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/genderless.svg","hash":"551f4d787d3081399d1856755dc6a66c113e7fdc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/gift.svg","hash":"6c86771f6712df58b67e434dd10b86003ae7a176","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/glass-martini-alt.svg","hash":"e762cdfca00a9b20ce540767c357dc4daf0113e8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/glass-martini.svg","hash":"b9fc1206852af2d3854604f8158ccf5c225de8b1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/glasses.svg","hash":"1eec45a8230face4028bd9975327d8c1a285f3f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/globe-africa.svg","hash":"90d66b7bebaabfca78897b2d233de40c91741c77","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/globe-americas.svg","hash":"fde82843fd17c09f14b373a5f5c30fd89f906445","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/globe-asia.svg","hash":"75e3f163290305b8d629ccd2aec9dc5f02f3333c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/globe.svg","hash":"8b3657796caece044b23592201b791bd092a3394","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/graduation-cap.svg","hash":"dc59937f4c99b236ed9c0d624606243b67b5735a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/golf-ball.svg","hash":"307a497df47cd4378d128cd4791bccf96f57e07c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/greater-than-equal.svg","hash":"cd0ad01841758aacb4cd8c94a37d4227a6a2d905","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-alt.svg","hash":"ef06ae03da91852996cdab0b10ce08e0144772c4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grimace.svg","hash":"d9504b654fb4bec6e9595fcad3a7356aee8f1579","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/greater-than.svg","hash":"a34b282c49254d6f198081ae0aea1b1e285e77b7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-beam-sweat.svg","hash":"7bde21151389034231d1ca13b84cd65311934357","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-hearts.svg","hash":"c08abd01ac0a19c491b378097feae03efb2d8077","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-squint-tears.svg","hash":"96599690d06f80dce8096a0cf84efbe258fd66a8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-beam.svg","hash":"4aa5897c35b15c3b82abaa75fe58fdf7eb554851","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-squint.svg","hash":"b96d68de5357c0d63f6eaf916f2d0f989a7f4cce","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-stars.svg","hash":"0329103ee9600d76a1da8b99d3f14146c328c7c3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-tongue-wink.svg","hash":"315f48fdf2fb24fd8bc98b4a8d0fceba3126a264","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-tongue-squint.svg","hash":"f98ebd697b07767a1a86ca7e93491b0be0522c36","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-tears.svg","hash":"7bf92774b0a2214c844639df257568402fc2bb7f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-tongue.svg","hash":"4f6f080b6c37bc4a92c745f240395e125646df8f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin.svg","hash":"8669bd819c4bd6ea3b77f019bd5323c4dcda9989","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grip-horizontal.svg","hash":"d4bc599d4e9f601508a27248de1557f30e595c68","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grin-wink.svg","hash":"fa7dbacd9916765374677063cfe055882f9f6fd2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/grip-vertical.svg","hash":"2688474ca848cdfa944ab3f3dc10ae0182d120bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/h-square.svg","hash":"ca7b535a35e1e2931713201706ecab7feb18b78c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-holding-heart.svg","hash":"feee95e158767a888409d70b0b685cc183a47cc8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-holding-usd.svg","hash":"568eca85238c6f51eeb141fcb97e634c2e1b3f91","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-holding.svg","hash":"9aa60b974e1e22d57a48fc4501432830ab870d73","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-lizard.svg","hash":"86ca4804961d2baab3734f6f89b53c07a242b160","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-paper.svg","hash":"4577bd9f3d0280a725827b8004ce237b9e7f8026","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-peace.svg","hash":"c3f13992e58e065786e5079a6a52d573426d9b17","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-point-down.svg","hash":"d1667faf5d9af5f0b41386af9be2286a849e3dcc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-point-left.svg","hash":"5e2fcc61b013745352baa0ebc7b4dc9cf0f92200","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-point-right.svg","hash":"7ef15dce80a0456742fb137f2aa6836069da7133","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-point-up.svg","hash":"2b9bf0a38a614b597cfd6e14e481e9dbf9a6dddb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-rock.svg","hash":"36ec4f99163c921ab15d03147e1ab56cc1117414","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-pointer.svg","hash":"05e9e174618715f3e3b847389608d329a074d963","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-scissors.svg","hash":"8ac9eab5f13cf310ab474d2206b77bad77abf4f6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hand-spock.svg","hash":"83f400d5be568007aecc6147b681e1fa61cbe65e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hashtag.svg","hash":"b9f4ccfa5a6e910189cf69f5c9ecf8b1198ac369","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/handshake.svg","hash":"a779ae2caa9e1707181aa1629ca21fef5a329024","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hands.svg","hash":"bbba29549c61c400d6b52c126a42bc73971066c8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hands-helping.svg","hash":"b933f8991ce69e30190849501b4d7146c34eed9c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hdd.svg","hash":"90278c1ce16714e9d50b179f18e3f2aa14b42395","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/heading.svg","hash":"29951c23a9302c340c94b0dff26bdb29a5099fcc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/headphones-alt.svg","hash":"0768bd52ab5be5c0c3e1ba38c613d1820ba971d7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/headphones.svg","hash":"bfeccbe8826cb00628c2a0f8fb11b46c24637c41","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/heart.svg","hash":"881c67320909c3bda7ce5b51074254de30b29cd9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/heartbeat.svg","hash":"bfd7835ce375659d6b0fb939a0ef85fb62948a9a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/headset.svg","hash":"384da3e037359aaceb1666d0ef885b6ee5f9b566","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/helicopter.svg","hash":"68f266e1e16550921a1df612d57f53bf74df81cd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/highlighter.svg","hash":"d84a82d030ea6e5b65bc531377304c06122b9166","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/history.svg","hash":"c047cd487ec84a061eff6a356cfd32083c30d349","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/home.svg","hash":"a166f26cd50ed0c373b86af3832d02f00a9a0d0e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hockey-puck.svg","hash":"57fad04277f1bee776ae06b57560318ca46eec44","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hospital-alt.svg","hash":"b6da1fd0d8ebd8f8fbc103f1221135161b73fa27","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hot-tub.svg","hash":"472036c43fdd56e68fa4f1b79442a9849153a7bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hospital-symbol.svg","hash":"dedb56f7718e3e5d7d11dd7511502ed701672c7d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hotel.svg","hash":"a2b299888167e2b4724fea004beba6f0aa9da919","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hospital.svg","hash":"4d1d765ce32deaa722142e360ea64d22a68af055","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hourglass-end.svg","hash":"f6b7e9156f392fba36f678e0b7eaf9fbc857f025","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hourglass-half.svg","hash":"1f22beeeec6de92d7ccdc147c3cd380cdd15bb36","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hourglass-start.svg","hash":"9b9e7df1f0cf3284f913d3945ee0596923f4e76d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/hourglass.svg","hash":"9a7377ea79d345154905daeb34b918e65d451432","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/i-cursor.svg","hash":"c55c17b6b515b2dfd5a08bdcf87bfa10b2bcf79e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/id-card-alt.svg","hash":"6857083dee0b2df05b7fa573c89644e777b86bb0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/id-badge.svg","hash":"c7a1de0cd556e1d606b094ff394235fd5a588a42","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/id-card.svg","hash":"892206f8c8f08e1826f242a3e0148601412a55af","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/image.svg","hash":"7090695138fa0bd1e6a4d40d094ef61ab233338d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/images.svg","hash":"7448e68f83c7155c58c13d35d0901c93b7889d8a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/inbox.svg","hash":"373cbc3017f903bd480b8c48224fd76d150c6cde","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/indent.svg","hash":"2593288be3129173e8462b736cdad9bf745f3e23","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/industry.svg","hash":"39560050a5a819b34b323058bc04a8d7d1cbdd14","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/infinity.svg","hash":"166bbf1e4caa7db8bad7a8b823f5c1dc59b9683f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/info-circle.svg","hash":"7fb78ed46c3fa8557ff8e13a81c331f52e6da6a1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/info.svg","hash":"d7d9dda8c189dc223cc81e6fb7f92559509f62da","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/joint.svg","hash":"c01979b06ee4c5363701e9988132c71c3c0ba182","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/italic.svg","hash":"4f5179bef6dc3679d3348e383f70124bb7c0469f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/key.svg","hash":"6f197c3e7e4ca508d5c5df6fad6a34b7199c50bf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/keyboard.svg","hash":"d8eb7e65e64ed33987d4d4b71a9cc4ba60ba6eba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/kiss-beam.svg","hash":"d958f337ca7957e5ddc4a6e4c024d1b9c0b51cf5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/kiss-wink-heart.svg","hash":"034b0b18e727897748038ecd3edb5a929651891c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/kiss.svg","hash":"48b1abb4aceff01a17dd134f932348c5dfd93a81","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/kiwi-bird.svg","hash":"4b56e84617b1bc35be81fdb38cd24e9aa9d46f8e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/language.svg","hash":"fa97c4b221106de3eb10bb8f7129b02fab09abb7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/laptop.svg","hash":"75ad61a10dbebff8565fa959d7dcf5db61114d9f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/laugh-beam.svg","hash":"be2801fe8efe433f051fe310dcfb8a3c928812f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/laugh-squint.svg","hash":"9b603fcb461aa82999541c185367bdbe59009306","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/laugh-wink.svg","hash":"ae4d9c8fba2cb5d858e615954135f3047796143c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/laugh.svg","hash":"27ad3aab46b7cfe6e83fca7e695d3267ccf77fc8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/leaf.svg","hash":"a555c112f452a637c1560ca654b49b6fd45f7d10","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/lemon.svg","hash":"10a69c26142e221f037bd0090d445f829cded951","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/level-down-alt.svg","hash":"c27b5b8a7593e7c4e0e7e96a1840c7ff6c646743","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/less-than-equal.svg","hash":"59cce7b1229b2c43607c358b4b107c2dc285d6e4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/less-than.svg","hash":"5c7922ef8a3648de8e9ac0199c8b3987a467b245","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/level-up-alt.svg","hash":"cfa4390e98c489b52ff5f55835929d8419554700","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/lightbulb.svg","hash":"283ff403510ea9d0658b5f29fcb329597a2f22d1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/life-ring.svg","hash":"af40189ec7f9e1affdb0e43cabed8096c5feff0d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/link.svg","hash":"6867e40aa64b82df80c7c9607ff3424131940c2b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/lira-sign.svg","hash":"f0b4a9a559924800e8416ff750708440ae73f33a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/list-ul.svg","hash":"15f85f4d0874adfad58b88be6186f706c58fc453","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/list-alt.svg","hash":"639a2f0e182765cc43e961c2317198254231e228","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/list.svg","hash":"7c2fd46eb68ef358cf396fd0380b4c13e73cd6d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/list-ol.svg","hash":"742cf41aff963d5b3c9a14ed599d27007059f4d8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/location-arrow.svg","hash":"953e446044537db080c28b9be423362a4a2c0d8a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/lock-open.svg","hash":"f0ddf7373f5715ef2ab2a613789c63792f21e9ac","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/long-arrow-alt-down.svg","hash":"e8a9a875516da73e9814597532015c63e147e17e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/lock.svg","hash":"5ad9bbb28b86ceab206fb0b043969e498134a9e0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/long-arrow-alt-left.svg","hash":"608575ef7089db791fdde891916ec51ce105ea25","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/long-arrow-alt-right.svg","hash":"d2ac32852989ab19d6365d1fa9afcba56cd46b04","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/low-vision.svg","hash":"c22ab1b2266f5375fe5fe715965e99107578f76b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/long-arrow-alt-up.svg","hash":"fa03bfa9850754eb09a052c6e163465f7d4e3432","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/luggage-cart.svg","hash":"9471986e6a199cf39051188a2b8e1476ee862d46","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/magnet.svg","hash":"c1b048d6a61c680ac6fdc3464e060f039d2693d0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/magic.svg","hash":"c699337ca6b341b995a643237bc38a7987f7549e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/map-marked-alt.svg","hash":"fb6428153c02409239d143f334603da248c3e3dc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/male.svg","hash":"4e2c2481b3230fd5f7e3d396e78ce0ae8f0368a5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/map-marked.svg","hash":"6b14e1511b054386bae7f9f047b5eee1ef021724","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/map-marker-alt.svg","hash":"ba6e829a0496ef0e60c480b6b3327a3e39549dd5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/map-marker.svg","hash":"838b77c7f6fa4484f83884eb8858ce2238a14dc8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/map-signs.svg","hash":"4312a9faaf6b267b8c1931c666aa75086b1477b8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/map-pin.svg","hash":"94d5db988ba8ad240cad66ac357b83e51a2fbeec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mars-double.svg","hash":"2771bb4f14889f7b0d8656cfaebf3f3cc3bedb95","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mars-stroke-h.svg","hash":"939e742529227d26b53d9ca2d2e5f395ad940528","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/marker.svg","hash":"e656a65a024ae82c0f25c93bd7ff57670f11a78a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/map.svg","hash":"9894cd3927eeb744f4fbd50fc90fe721975fda5f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mars-stroke-v.svg","hash":"839727048eabff1cc371dc4ab781c821aed0ffd3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mars-stroke.svg","hash":"f825b6773c90a50191005874d69663dd8401e450","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mars.svg","hash":"1746f071ec0988e53eed0bbe4393462c966326aa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/medal.svg","hash":"324ff0707806c466235a58c59cdbf5b65c79e0d2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/medkit.svg","hash":"f2b0ba9dfbf022518e1a7f527fe5b0104f3d9493","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/meh-rolling-eyes.svg","hash":"df131232b7a2081dd622108ddc44a38eee4b072a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/meh-blank.svg","hash":"2bbadc3c922fd97b2c8dcfa75077ae01ec6d60c3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/meh.svg","hash":"f56b7db2af6a09289dcfd2df68967f6cbc55b2ba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/memory.svg","hash":"d1bf8f972a4507e6286da4e5d0e3056bc2f59c66","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mercury.svg","hash":"b8446251bbfd0eec160e8ebd247949bd826492ba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/microphone-alt-slash.svg","hash":"2f6f5b18ec2c946c72229cacf13e87605ec65775","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/microchip.svg","hash":"28efda95a04fbbbcdeedfce157bf156baa278766","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/microphone-alt.svg","hash":"dbd906f5bac1fb8486b60f5d491c97f123b68c33","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/microphone-slash.svg","hash":"5d11a66e3f8b83199061ae2f2aac52015033d87e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/microphone.svg","hash":"8ac6e392fdfaece099ae838cdc5abf4e9dcd7710","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/minus-circle.svg","hash":"368d2a53e5bb65771d81564844805408d852ce8d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mobile-alt.svg","hash":"2fc88edd91e26f6bfc97e75ae4caaefeb07540f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/minus.svg","hash":"2f61c5e3287d291401ebea63a19077eaa196e795","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/minus-square.svg","hash":"ae06b166f7f027ed17274a1ee153289ed7920cad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mobile.svg","hash":"66ff690ec31869f369e84d7b48ea1f924bed4be4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/money-bill-alt.svg","hash":"9c6b05e90318e3e0f1f492273fbf1222c76719cc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/money-bill-wave-alt.svg","hash":"bf50b64dc498d8ed6ea819b3130201e5e1cfcaaa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/money-bill-wave.svg","hash":"20c6f65f4a78f92f1544e8a10d15a0417a2c977d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/money-bill.svg","hash":"79dd3b194bf42f440c47892ac28ad52910397e0a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/money-check-alt.svg","hash":"4ebd79a7de5adf9834942167ecbd78d94427d8aa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/money-check.svg","hash":"cef6596eba8cb11e7a3c97d3d8944b00e76e9dd7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/moon.svg","hash":"6eeffff29364d2289afb0dc6cbe5041d8329c6d4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/monument.svg","hash":"fcc25d980ac5b16b31c1c1735a2c0c49e08c171f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mortar-pestle.svg","hash":"a0abe0bd4d6c1b851ffc263e741ccca2651e381a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/mouse-pointer.svg","hash":"3929d7135b56ee265897599cdca28fff391988fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/music.svg","hash":"5d70f0a36083d56a6ce9e3dad989a3667b5bc787","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/motorcycle.svg","hash":"daf67b11077be6ff546850bb70eb9d4a0d8bd112","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/neuter.svg","hash":"fd54c123a7735c616298b4a9b4cb204afe66c65f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/newspaper.svg","hash":"8ed045aeaa2b3837d3569f805b15e0efbc841124","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/notes-medical.svg","hash":"93092bf8e082d43469a9e6150f224b3d88f38287","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/not-equal.svg","hash":"6bb6bdcad877bff0b592d4e0d9d726994f9625f9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/object-group.svg","hash":"de0d50b0b7f6255e1aae9aaa040f14611bffbcbb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/object-ungroup.svg","hash":"b3c9a0471e4065254996555948d57d37930ea855","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/outdent.svg","hash":"ca4db6e39b50eb21f0206fda99a467fb77c4c2cc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/paint-brush.svg","hash":"78972c6c3ff14a7a1882f05ce1d8e17e11e113cc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/palette.svg","hash":"dec7db0073e1d2c95d351095638466736e90b36a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/paint-roller.svg","hash":"d5ff533a2165ee7bbad0d8445df3b5ed28524ebe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pallet.svg","hash":"c682b624fbc2b77ed2abc3c2b89b1689a28c89d7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/paper-plane.svg","hash":"2ed583b288442fdf73c77454744367c41ff99bd2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/paperclip.svg","hash":"6d14202e0e6537bb5eb1b11e584be922dd546b43","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/paragraph.svg","hash":"97635fb7bc647232a6ad0d232744924264b8ad61","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/parachute-box.svg","hash":"9c07205339cecc4784740ceb20d20eda9255e4c4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/passport.svg","hash":"66bed31ae5bd1e923eb979af01fd0543581ff7ab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/paste.svg","hash":"f5b17d93a68068cfe1dc5fc8b763a8b13d1ba1f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/parking.svg","hash":"349cae2f69891d145a4319488e66a8f4902df65a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pause-circle.svg","hash":"88c89036978e99f84ac6d323a5ff29cc2c447b84","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pause.svg","hash":"31316e79c7f3a19af582cae05b4ffbe1d78193ef","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/paw.svg","hash":"cc2f6b22fddda9477b689e342f02ec9d9d7dfb05","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pen-fancy.svg","hash":"2954070ad968969e45330b03d74cff708e7eedf8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pen-alt.svg","hash":"393deb8e77d2ddb319fcac0b2e06ed3e27e73b62","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pen-square.svg","hash":"c21c60da71b5a04ca732100016351490b8c8bdf2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pen-nib.svg","hash":"afc1ecc38f495dbc574e2913ddc85e483d8e428e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pen.svg","hash":"1ac0d47b6311becb9c424c5e27598392e0dd68b1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pencil-alt.svg","hash":"f3ab5d8cc4ca19ced9136789695b7867a53307fc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pencil-ruler.svg","hash":"cecd6ffb16be2a8cb49a39314bd6d8b8cc42337d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/people-carry.svg","hash":"c0ec3636ef1f869d1d93a45f26425a004446c7e8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/percentage.svg","hash":"1332183b588ea873086e1e65fd2fd92fc87c6a22","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/percent.svg","hash":"cd41efd155543ff49a4499d8ed13fdd37a365f00","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/phone-slash.svg","hash":"7905571e3ecf5912b977845e725214eee2510998","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/phone.svg","hash":"c852ce4919eeb96dc058766a0bb7381588f9c96b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/phone-volume.svg","hash":"1e1db9ba1c5fad21848a758845d6970229c88712","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/phone-square.svg","hash":"bfd4d69d76e2a8cc862a860c5d5036a436b0bb48","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/piggy-bank.svg","hash":"fe87ccd3b8b968bdaf4983e1df71b13b22132ff2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pills.svg","hash":"e847ac50bdf92732f35b483f7d2e9a5ba01fe757","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/plane-arrival.svg","hash":"c21b827465062d46bc9cfc4fd29c94ee58ab13ea","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/plane-departure.svg","hash":"d04166bdbd4dfce53a082169bce452a2d4d3150a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/plane.svg","hash":"f196be12e9e5e5d676b6b800576e3c1c37831ac2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/play-circle.svg","hash":"3aa0967d65e3c9b5eb9902ac5f29e729b35bb6bb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/play.svg","hash":"4d7f5921b84003f70e7a807601b757a411ca321e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/plug.svg","hash":"779471dcf43a12199e937307e00ce8c9b2dc107f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/plus-circle.svg","hash":"bfa5f53cad75d86c63de3b368fe8e033f924ba82","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/plus-square.svg","hash":"c8e2248fe13028f90a40bc6367527d93e1972dd0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/plus.svg","hash":"dfedc81621755cb841b40e949c56cac205b449a4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/portrait.svg","hash":"f84afe57131b88d2f478e21bfe9a6961c93df8c7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/podcast.svg","hash":"937a60174dce6cf0ed5fc1c7f3b4b3fa2e4e8575","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/poo.svg","hash":"a714dc6e7557ea6092838ba6d5aaf607a619ca03","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/power-off.svg","hash":"db5cfea2eca63a2b67a4cd4f6ea96e69cfc9eec6","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/prescription-bottle.svg","hash":"4a0863403e7d5f2b25280b1b5e1736506ebc063c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/pound-sign.svg","hash":"9008cd496fe90aeb832b37685f11ecf1554900c4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/prescription-bottle-alt.svg","hash":"35797fe11a01dabb60359553c348793b40705cad","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/prescription.svg","hash":"a951e13e18ecc3359acd9c20b255bb2ce76620be","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/procedures.svg","hash":"d79119a4a24377719790b5f0637d37d222447208","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/print.svg","hash":"f9b362c04a10c224da878625b62acab68d68666e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/project-diagram.svg","hash":"cf65a94d91f2a9e3dde9f281429ad966923e2da9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/puzzle-piece.svg","hash":"c48b14476b40988efcba05b817ebf3252ca0a419","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/qrcode.svg","hash":"adc0aeb61404ac2af87f6c7f8bc0de9aeb50d17c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/question.svg","hash":"8c6a4c97b4044e41fddf1ebfa56557bcad118d29","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/question-circle.svg","hash":"b1234b82e5850d73168bc9e2132b50cdc5f04449","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/quidditch.svg","hash":"83401285bf6ee697e8e75d6eab4034abb14bd13c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/quote-left.svg","hash":"37dd3a525e00b9b2a2118a812e791ddc154e1bfb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/quote-right.svg","hash":"20e8d97ca3b3ba400a06e70380f3ecfb271fb519","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/random.svg","hash":"70f7a2470958aea9534a4f41fdaa5ee7e8b0bdd9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/receipt.svg","hash":"b94cd1d2f047986544efeeebd514afea0a54809f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/recycle.svg","hash":"7e6e00c2370c3b7b413b487947856268f94c208b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/redo-alt.svg","hash":"848f8002ab5e42023982fb73bfdf687635522114","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/redo.svg","hash":"e38022e23e5a64338e5ed24a572d5fdb126a3a9b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/registered.svg","hash":"72fbcf79c41f2e1cc40816665bd348db46ee6f6d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/reply-all.svg","hash":"736e378327c753cbc96bf86b515f059963600c63","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/reply.svg","hash":"a1ddac7fa015fe00e2e4fa026809dd494464f4d1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/retweet.svg","hash":"afa3802663f6c73f1c17eb82671074c8a957d648","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ribbon.svg","hash":"af612abe9ae09062779d95c20e696eaedacdbe44","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/robot.svg","hash":"5760ac76caefb5f3280218bccd4fb15c313df338","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/road.svg","hash":"41f14ab44b83fae39d842db753408865c6322a5d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/rocket.svg","hash":"f84c9f00e50b5229af30521158bb2769b83ee79f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/rss-square.svg","hash":"52b784c81577d7b1feff918f8f4867795cf43139","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ruler-combined.svg","hash":"d23a21c5941cc85a76358f8611c51315bec0670f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ruble-sign.svg","hash":"a4c32f0ed2250d125cfd0a75b2bb4b00c461cc54","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/rss.svg","hash":"41584d717f8f7b98f8aa9400d094c9a3ffe45f86","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/rupee-sign.svg","hash":"32a08b716b0d3da55d8ccf2b0d77d27ecfa7094c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ruler-vertical.svg","hash":"eaac3fe22c9af2257e3c6999aba2fe2f55f2b0ff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ruler.svg","hash":"edd10152f9c6ded83473fa210e577e30be36d013","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ruler-horizontal.svg","hash":"90359c77d3b18631b52e65c823bb5db69206fb7c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sad-cry.svg","hash":"974d1b6300e04ed3a404b078c7ab06d14b91e4ff","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/school.svg","hash":"a6dcae7faaa9ddd71e79403889cc2146bf1b7747","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/save.svg","hash":"2a1990731ee9157f2fd2b44e0b2869a88a27f064","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sad-tear.svg","hash":"c435b584d93eeb4642e83960ee228b382b297117","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/screwdriver.svg","hash":"692841b580806222fe1ef57141fc02cb24ba1721","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/search-minus.svg","hash":"430b2b4177e08168ec6b1a017846a4007f514507","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/search-plus.svg","hash":"f950d1699b62076a9dadad0c5691c318f926c3c3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/search.svg","hash":"309ddcc37cf4b212eb4c314996ce9e8c3ed28fd3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/seedling.svg","hash":"10bd23f6fd59ddf3d314c3a925cf652acb083ad1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/server.svg","hash":"5d4b8e5fdd496ffe01a92ce64a0165ebca6dc016","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/share-alt.svg","hash":"72dd193af0b3bce0935a90e7009c2a379232ec7a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/share-alt-square.svg","hash":"eb102699cb788122f4c13d0e79365257c224a2b3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/share.svg","hash":"66cbb18b8c43ec221325dee3d3f91d2670e86945","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/share-square.svg","hash":"15c31528b8288cfa172ee9104922ce8cdde820b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shekel-sign.svg","hash":"39ab3bb643ca3534f7c2b29981f505a748d65543","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shield-alt.svg","hash":"6e156c2c712f6f27e786e16417f082026cd8fb72","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ship.svg","hash":"b9793762c3ae26784730247a06058a1c5d906400","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shipping-fast.svg","hash":"c70bd64b11a15a980ac16981c1e0983de574aa70","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shoe-prints.svg","hash":"4746da76840d66f20c72d8df730bc5e5053142b0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shopping-bag.svg","hash":"d7683b0b1d8cdb32f5d760507a56e16f93af217c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shopping-cart.svg","hash":"bdf7bbb580def3a87d968b3379cd4f8aea73b7d4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shopping-basket.svg","hash":"55eb5fde0f9fe92aebdf0cfca9ea40098db9311a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shower.svg","hash":"099aaf510fe90221ed2b9caebeb9ef1359e25787","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/shuttle-van.svg","hash":"4ddd752bc4c64343874ce1d27dddea2bcc5a41a8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sign-in-alt.svg","hash":"cd5a13efb663569d0d6088eddf06478d4d43036f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sign-out-alt.svg","hash":"362ae1c60d8b12ae374bd63bf90cb4633c5cd718","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sign.svg","hash":"40346533f99bb76b6e7bafff8be9b4c432a191a9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sign-language.svg","hash":"3715071417fd94f582f128e830f440ac456c2382","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/signal.svg","hash":"c9edbef4f9872177d511083e36189b8200d41e14","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/signature.svg","hash":"450a7c341a13c9e501fcbcd3bd1b642eb5913f8d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sitemap.svg","hash":"18a9a4140881d11d721aefadabec1728042ef956","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/skull.svg","hash":"00c0209c4997d9348c02a12d9d965ba038b7c239","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/smile-beam.svg","hash":"a2ef92220949f36c9af9c17f0a83816b8ee856b4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sliders-h.svg","hash":"e010fe7bf22e9f24ba72c8e3b85276295bb60728","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/smile-wink.svg","hash":"a05c1d08599682af8dd78bc14be68aea8bc39ba5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/smile.svg","hash":"47e2bc6bcb54380f31c74f9dd9af1aac926bf1bf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/smoking.svg","hash":"cc239acaea9008a272b3d84196c3bfed659fcb90","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/smoking-ban.svg","hash":"afa7fb6e8e89f541f6aeb5e46abafaeea2f10a87","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/snowflake.svg","hash":"241a8215b888037562ce6e722ec14904034d6804","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/solar-panel.svg","hash":"ca8212d9f0b60d5bd26cb1c4625311d320d0d872","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort-alpha-up.svg","hash":"5c7b25eaaa85f4941e412ea5d16a8cabe154f267","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort-amount-down.svg","hash":"aa30ad34c52106f6ed753c89e7011e9cb9620c19","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort-alpha-down.svg","hash":"d943d0f31306f79fb2dc237433242164a9f73f0c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort-amount-up.svg","hash":"37bd0bcaa2063393744abb2159a16775574e1038","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort-down.svg","hash":"f97cf349b374277d2ad9c3258ab923d2008a0c78","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort-numeric-down.svg","hash":"5ae4f1c901412b15525607a4516c52eb1ae77ebb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort-numeric-up.svg","hash":"219313900704a406983c4c25e1f77fe83d99a3c4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort.svg","hash":"4d8c2e2637df11d47e4e42b7ae0c3be3a1c095e7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sort-up.svg","hash":"42ed276e63b80d18ba9ca94e054554e2a7598cf2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/space-shuttle.svg","hash":"dfd11cbd8f64b8ecc70d5c348f5a715250ec4ad9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/spa.svg","hash":"b2344603ece8035fac34753265c8ef2277dc369b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/square-full.svg","hash":"fdf509f7e5efdd44b937ac8981db8a9bd3a37a05","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/spinner.svg","hash":"93fd5f865cdebd0d254c4864b1359fbfc281de23","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/spray-can.svg","hash":"98c920ee122197cba7f4e02fd0e1e5bffb5e7346","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/stamp.svg","hash":"f511e9c8aaedbe571ce044d4b77b0a11631eb311","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/square.svg","hash":"11d1e4a65dcffe5cc68ca3d3e5c08a10eaffcc85","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/star-half-alt.svg","hash":"46cf909baec767f85b0814d45c0bfada4418c4e2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/splotch.svg","hash":"b6e6ef97a9ec496599cb505fd177ccba6ce07b41","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/star.svg","hash":"fc9004878d27ae362aeb4e79fac0b91b30da1818","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/star-half.svg","hash":"ef6240bba26d7d8c4f1c01b727cb02aacbd6128d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/step-backward.svg","hash":"4bafc30e4f05d5f451e6769ae7f68d4890ed6c07","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/step-forward.svg","hash":"10c158d223f92ecc7372f070e5214527821e613f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sticky-note.svg","hash":"a4d83a5db241e8a6d2051bd57335509c757161ab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/stethoscope.svg","hash":"a1ab4281d858ddd3fa62e0cedc928073c1383112","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/stop-circle.svg","hash":"3147bf8d7b5472a18ea65b724952cc9fa9d0fc64","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/stopwatch.svg","hash":"9b5893fc9b744edc2e74c34cd3607008be0beaca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/stop.svg","hash":"11d1e4a65dcffe5cc68ca3d3e5c08a10eaffcc85","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/store-alt.svg","hash":"dd481527f6be1b8194e0bae42669b10959bc8c7e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/stream.svg","hash":"b6a50332bb6f6d605904923fdca32dd8ce064890","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/store.svg","hash":"8eaae2b049d8897120a5515ff0f605c5cbf3d354","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/strikethrough.svg","hash":"6b9a01271efb658a1774cf5ed7304924053c07bb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/street-view.svg","hash":"60ed096c52ced287c6352f3cfce1b1ca6b518801","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/subscript.svg","hash":"fd986bcdcb0742683ad1e9721ae687e20c5b3130","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/stroopwafel.svg","hash":"36297773acf77666de3ce4f70fad2d63fad2ac32","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/subway.svg","hash":"adc979df69692b9af39a54a3f0a96e46abe7baaf","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/suitcase-rolling.svg","hash":"c8e74ddff9133b19f29c5db718a15a41c5cadaf4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sun.svg","hash":"cebc885590e5929509a6d14f1baa082ccbc3d35c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/suitcase.svg","hash":"50735f30ae69929b93253ba43d24527fc00846f7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/superscript.svg","hash":"428059d1eadc8b581a860883ba6c21eb189b6ba7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/surprise.svg","hash":"3f7660603203f42bb9b7f7eb0151becdd981390e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/swatchbook.svg","hash":"7ce0033f29d571b47af4d095a12cd28afb83e010","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/swimmer.svg","hash":"de9338974ce45e0dce46d4c1be1c89a6644f5ee9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/swimming-pool.svg","hash":"c1b6f69819cfa51d48dc814a70935e9bf258a8e5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sync.svg","hash":"4682e4a81b0c1129dbf224b8a36dda0dd5d61d81","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/sync-alt.svg","hash":"8392626311cba4b5cd0f229b100e31ace1410b53","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/syringe.svg","hash":"85886280f6d333dcec3a121caccc7132d0af49f0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/table-tennis.svg","hash":"7ca470f0a76011a04d1d1c5c1c578f219a83c4a7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tablet-alt.svg","hash":"d8c0195aca1ecf6d8a1ac55a02c6de6046b0155b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/table.svg","hash":"f5f3b161b2fd0d1ffde7ea5ebcc427113024b863","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tablets.svg","hash":"107d3c574e0751760e9d200ab87efc55dee2de19","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tablet.svg","hash":"76ef95407ad9c64336eec87c4e25146bdcc831b2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tachometer-alt.svg","hash":"fc6ea15a42462296c0c7dd31715ed11b9b66410b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tag.svg","hash":"8ff7aca7be4ee54aaca81a3f46509a75894c6203","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tags.svg","hash":"1879621b384291d6048b73baef03cec78af279ab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tape.svg","hash":"7ed4b060164f8e11abcaf585202211233d1b3557","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tasks.svg","hash":"114d1d9d86074bec66ccd09afdecbd0476390db8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/taxi.svg","hash":"aacac6bb98b7e02e626f5530f451a6a51135f7fe","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/terminal.svg","hash":"b6a24c4a3ae155dc600e3a2b940285c833dda48c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/th-list.svg","hash":"c01cb9418f8b7ce1c22f17a81f065110510c2f4d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/text-height.svg","hash":"995fced2e50b78581e390e7bb409a051b6dd4a50","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/text-width.svg","hash":"ab152dd6a844fb71dd893c480b2c1279dc78f808","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/th-large.svg","hash":"e642a978be02ce25cb618fb7e284c6ff8f77a09a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/th.svg","hash":"f7d12578e5b68a6c2846a61a90256ceb95bb75d0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thermometer-half.svg","hash":"01c26f481ca7c25a92e36333b7dc982ec1fba0d4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thermometer-full.svg","hash":"d6e6b1fb02c065142fe9b1af31590d8b448301e8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thermometer-empty.svg","hash":"5885acb1a1aefb11efb2e153ff850d4bb2669e15","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thermometer-quarter.svg","hash":"aca9fc34e8ea4c253c79d0e7126e992458dcc25a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thermometer-three-quarters.svg","hash":"dedd24a40587cad2ab0bddb01afee0e21ab9b77b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thumbs-down.svg","hash":"adc6318328320a7a1000b5292f7d2caac610b783","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thermometer.svg","hash":"2225e01c7f453290e611bde0b8658350d3518ffb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thumbtack.svg","hash":"957ac730f5e9276885122ea690589d122c198b1b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/thumbs-up.svg","hash":"204806dfec5a5d8f4a6a4024cbaf83ab424ad3af","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/times-circle.svg","hash":"277903eb94fb84456be20fdf334bc1a378f280dc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/ticket-alt.svg","hash":"0820cb26a236a4f3c5422d3eddddc360e35321ca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tint-slash.svg","hash":"dd42527a86ea157bdc2a2efb0f4c8897f4455aca","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/times.svg","hash":"95f77ec245a39763f82e124fcec858fd97e74f2e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tired.svg","hash":"fd20fe13c26ac55a5926df90dc6e463a4cc15cb4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tint.svg","hash":"2fb26aefada31f3341172ebabc4185416e396c46","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/toggle-off.svg","hash":"d1fac8bb982cdbf98dcb9d49f01d191c2f7b815f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/toolbox.svg","hash":"22cdc68bc9ce5140660cd4555a54f432b986fcde","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/toggle-on.svg","hash":"6eab227246ae1183de345a299ec5cec00723554f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tooth.svg","hash":"ad9a18f07c03e118dd72dd44d466b33085e49d2a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/trademark.svg","hash":"6829f85b0048ed9fe5cf849cabaf077809cd329d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/train.svg","hash":"279a17babedb3173005588cdbbe7b7ab81438407","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/transgender-alt.svg","hash":"8c16139b41e366ba1077a08171cd77f78420b46d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/transgender.svg","hash":"94f6e3e64b5602013e01a51ba50d9745e9df39ba","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/trash-alt.svg","hash":"7e03b7ca4d87c847f10762c420a0927e0a7abb4d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/trophy.svg","hash":"0942b48ea2665f2d248a39efd028f50ec0ae9ffc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tree.svg","hash":"5cab357fecc87ae9b146f6859e8744fb00e65957","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/trash.svg","hash":"81cd928a61ae8930eaf05e1c7ac6ea50f1ab9cf0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/truck-loading.svg","hash":"f631afa780d0f38479ac4b0ae10750e2892e87e8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/truck.svg","hash":"d3e31346fa73fa3686ab173d6fc7a4045de62367","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/truck-moving.svg","hash":"0ed0b2645dc68ea23f00bcbbd7a0b8d9a13c22e1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tshirt.svg","hash":"150d40fa325c63d9282935875f07590c822a13ea","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/umbrella-beach.svg","hash":"23b210bd2b5b329946c9cb82d856ed4e0632d5ae","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tv.svg","hash":"6efac37679f350eb0a4710e30346c74bd4e8eae4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/umbrella.svg","hash":"ccfd4ac1e3fb0bc3cf34a126346e1a2b9daecad7","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/tty.svg","hash":"bb48a2642663d8424cd275ab8caeb5f271be4ae9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/undo-alt.svg","hash":"85824bb3db43de87b8384aa8df63c259408c7f2d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/undo.svg","hash":"5e02ab1a0af2de21e527e4a0c1ce9527c4df5351","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/universal-access.svg","hash":"e4f60390ed5c14cda44783861c96fe4b70ee2482","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/underline.svg","hash":"c073b986bf2178d9510ab723b9419f2b5f87080f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/unlock.svg","hash":"45ecde3ff1e670a1ab91f1fa6011a96dcf6fabdd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/university.svg","hash":"9552f235e1e2bfd0c1da06f9b8327b744dabd4c9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/unlink.svg","hash":"3f4f6956ce91e143d52843382d09cdf25e5a9072","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/unlock-alt.svg","hash":"20a5b24ec02d303743919800a8aafc7beaed1adc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/upload.svg","hash":"b8364b387813c8694652935ab89d7df0a9bae36a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-alt-slash.svg","hash":"e7c38ac0d0f4b8891bde4bba804fe6e999112838","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-alt.svg","hash":"2ef83fab868e82fdb06b1b6f55459714500b6162","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-astronaut.svg","hash":"5b23dcb0f2e352edd834948281e775fa46f83281","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-circle.svg","hash":"61596d12dd899f3e92dbb67792471741666c6c98","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-clock.svg","hash":"cc506f6614433416274534449349bfc22e2e47a4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-cog.svg","hash":"9bcd47304a93699b8f91d028cd47e39af5eb7b1c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-check.svg","hash":"d2a108e174b9ade7dc8aaf8db6cc1a0acf1235db","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-edit.svg","hash":"6b75f748ade19285ee17581fb6361a3b30e2dd26","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-graduate.svg","hash":"16c5b42657df2469784860fd131f9aa256984164","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-lock.svg","hash":"470111a95382f85aa4aeb67f0a8f2c7424827d15","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-friends.svg","hash":"f5f3347beef1eb028c011f2635a9089133f54d62","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-md.svg","hash":"91bd3f5f5d5ef518dbd9378007dfa345737ce600","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-minus.svg","hash":"e5ea5eab19b6b823560e22b95882e60809e60666","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-ninja.svg","hash":"4231833301b8b526c7ce0f009061bde051c93ac1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-plus.svg","hash":"6cfacd7ca3e1b9301f0c5354494244096e6e5a24","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-secret.svg","hash":"e7da1792303c238334296fe8af5c92be658101ab","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-shield.svg","hash":"33700137cd725f5d9d4aaa41b899e5de02b364fb","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-slash.svg","hash":"be986735e55a06a94169c06f5d1e8cc97f2a9cc2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-tie.svg","hash":"609e89d751c807bcab0562c89d2e288cb70d62cc","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-tag.svg","hash":"85f41fa070444befb67f983d64001a99a8a35ca2","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user-times.svg","hash":"8d927250fdbb7bbacec6b72aff625c0e68d1f094","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/user.svg","hash":"237d49f82a112af2b6d78f7620e911a2dbe8593a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/utensil-spoon.svg","hash":"6cc36146cd7717401677abe51a60c3cbf1011c4e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/users-cog.svg","hash":"a5193096d808d7ced3eb7179c4b8934ba305320d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/utensils.svg","hash":"d39ae48fed8fe746200d01a3f8708d8b3028ad0a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/users.svg","hash":"5560533814a09d14659c024ca247b63f7539f638","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/venus-double.svg","hash":"cef48c90974cfdd6288861e1afaa3ba5b96b3667","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/vector-square.svg","hash":"3e65ff6ff287bf89c1cf46ab99371544ea2e8419","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/venus-mars.svg","hash":"02a2856167cd3699da8e5bcaffc1f30bac24064e","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/vials.svg","hash":"afc6cae568111b651899fb37d68f7202f705d3ec","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/venus.svg","hash":"9aa620a5b9773f7b26736e33167fd81923c2d9d3","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/vial.svg","hash":"a12fdadc6c188f64687dc5c5475c782393e672c9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/video-slash.svg","hash":"ed673bc96840a7834216a432fac592d568c8672b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/volleyball-ball.svg","hash":"3b8f2baf586e2f7153d5135b1350a3d272169073","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/video.svg","hash":"79d2807288aed92d19b46e42af1fc2b41185727d","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/volume-off.svg","hash":"5b6fae525e6026923a4aae28c39024b311ede6f1","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/volume-down.svg","hash":"d595912ab2b18dfe301e5d416c263720c12cd5a8","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/volume-up.svg","hash":"615df1082c6d034e30a1b202e7f1db75a5487004","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/walking.svg","hash":"1f305cd1e3f39429c6c8c3435473c8be8d33d99f","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/warehouse.svg","hash":"23ad8776ba373d15517240525529b7eb9706d154","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/wallet.svg","hash":"c274d7766632fe42ed3614fe906777e2d42a06d4","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/weight-hanging.svg","hash":"c401ce0df9f648ddfe4ab98feb98a877117f3218","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/weight.svg","hash":"40065511f4d746e650c894edd8e198efe483d0af","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/wheelchair.svg","hash":"1d4cfd63b51c5428d36d19aaabcc30c5484e6877","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/wifi.svg","hash":"bca8223b703ec603575081eb7c448cd33859e5bd","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/window-close.svg","hash":"586a6ed8b87380f8f6ac8b1fd86a3591658f8e61","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/window-maximize.svg","hash":"ea9002147033a53f1a7ba3ae58a6a8eb3125fa3a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/window-restore.svg","hash":"2a2c039f353b1cc1837d4303b90f9ccedec08c7c","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/window-minimize.svg","hash":"f9c01ff253d1ad0aa6a2425b2d6906019a5abc3a","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/wine-glass.svg","hash":"c9e94dbe7fcd1fff772e8cfda281a146de0f9672","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/wine-glass-alt.svg","hash":"1a8c9d01dbe997127e15c5f8c1a6191b59ec69fa","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/wrench.svg","hash":"ec990089a203e0d1e8ac30364e0783ff430b2d97","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/won-sign.svg","hash":"0a948657e03b9c250dc6cc0ca2385d04b4dcbbf9","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/yen-sign.svg","hash":"5aa4ba479842d7875f7cec32c0acdcaa74805f26","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/svgs/solid/x-ray.svg","hash":"9473c653c118f2ffcace6dc1427e158959552581","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/esprima/dist/esprima.js","hash":"ba6023495adf4ea5daae81316f581af91b43aef6","modified":1482463104000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.js","hash":"46a436eba01c79acdb225757ed80bf54bad6416b","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/var/location.js","hash":"149669ae604f8827d9afff7a9ff35b477c0d116c","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/external/sizzle/dist/sizzle.min.js","hash":"532610fb63d318895cc769c43ff1cf15b313fff3","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/external/sizzle/dist/sizzle.min.map","hash":"53b5df9469565ec4ed00adf05e805993528172a5","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/external/sizzle/dist/sizzle.js","hash":"c7e479983484073d5466abf3b82d29a62e6e75f6","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/var/rquery.js","hash":"1e94bd952094f895b24aa0f683527a1b49bd4758","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/var/nonce.js","hash":"aee7eb54ed4a76904fab26f47ab994616d640ee6","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data/var/dataPriv.js","hash":"6da82bd23af73c8e9bd8b8d2e8a791d72f903826","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data/var/acceptData.js","hash":"6f1a8e3bbd06b58c996d0b770371968316e13c0b","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/var/rsingleTag.js","hash":"e0c7f0197b99cae8e072defce84e825de08ffafe","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data/var/dataUser.js","hash":"6da82bd23af73c8e9bd8b8d2e8a791d72f903826","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/cssExpand.js","hash":"a102daccb31836f375d719adbf42492dd2aea403","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/isHiddenWithinTree.js","hash":"ce2865447af198897a75e060ab88bf0f4b849939","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/getStyles.js","hash":"e7ae46c3a405b592fae4fbb3ccc30deac8cdc414","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/rnumnonpx.js","hash":"8e1d2032b8545012c621415d6d8b20cd29cb99a6","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/swap.js","hash":"a3c39310f9fd61df40f31b2a70c425b590aa632d","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/rboxStyle.js","hash":"289c180549d9904a0e89049fc9b9730a2cf4725c","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/var/rcheckableType.js","hash":"6a61eb7800235a7853483fe99c514e20de667cc5","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/var/rtagName.js","hash":"18204e377e28a234757a6f817de557387c86d083","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/var/rscriptType.js","hash":"4279d52660bbad7a3cdbe4425823188f7f25da88","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/Window.js","hash":"329719cc68f9781f3a5fcb40a323124b19c0921f","modified":1516582202000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing/var/dir.js","hash":"ccaa8e6e08cf5dc4d37f72f5e7ca15b6020e5fb5","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/default-stylesheet.js","hash":"f2d39510ab9d54cd3081f693bf5018a0fc965f48","modified":1511132063000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing/var/siblings.js","hash":"6d5cd9f4b8c042d23c62b1de1ac69e1e5c95bc3b","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/documentfeatures.js","hash":"8fd0b180658dd3dc074b8c460955b90211137f2e","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/domtohtml.js","hash":"9f0b13fa2e45ac8d2dc2a1241e236979c50dd158","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/not-implemented.js","hash":"8cad68b2b537c5cd82a65a4f5ea32ac3794e34ef","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/parse5-adapter-parsing.js","hash":"3a154c760a2c560ad4e58bb9431018d6e51bf977","modified":1517279218000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/htmltodom.js","hash":"2a651ef8ee63d648ffe623297550250608671ae7","modified":1517279218000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/parse5-adapter-serialization.js","hash":"21724f86d6c9cd11e780b60cd5db1f2cda6ab25a","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/resource-loader.js","hash":"2102b8c25b5e81bbda665c3e4742117f40f7f661","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/level2/style.js","hash":"9edcc4cfa0baee2835d1ca46dfed76e3d7465791","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/attributes.js","hash":"e0f0195d409b530a7600f4fb80185dfa0331d7b1","modified":1516579752000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing/var/rneedsContext.js","hash":"66a630a73b6c44afa6cae81e449c85f81283512b","modified":1516469212000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/named-properties-window.js","hash":"227c8b95a7d5686c34437bf877d04478a547bb2e","modified":1511132063000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/index.js","hash":"5fcb98d1686d1d85931975fb2924019f2f488a9d","modified":1516582202000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/form-data-symbols.js","hash":"b29b3fa77eb881e0715ed2be0cb62208f5f74f3e","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node-filter.js","hash":"3bac3f078bf6daa081d5edae4bdbc0113ef3c84f","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node-document-position.js","hash":"592e5f4576379ce2636fa02ae07aded9773fbbcd","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node-type.js","hash":"41293df4016041192957df8af36489dcaae90eeb","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/post-message.js","hash":"71e060ab6bba53f7b393332211624297146b9a6e","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node.js","hash":"bdbe59facd1f860d3bb4847c46bd41b9b282eb18","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/register-elements.js","hash":"e9a885e8485b09592a9db479262eb60b17a03c60","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr-utils.js","hash":"4020c6fb3c9def363766e1cb19338b024f79d937","modified":1511130752000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xmlhttprequest-symbols.js","hash":"f6b724ba33b614eaa43b0b7e696e2ef28668aac8","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xmlhttprequest.js","hash":"e8c7d657e97bde266aa3b3bd20aa9ed63b0ee740","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/extensions/location_info/open_element_stack_mixin.js","hash":"760555ac268489ea00f1669454750e8fcc095d38","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/extensions/location_info/parser_mixin.js","hash":"85c92c84f5099b1b0f6b6e579335d9cf5032d93d","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/extensions/location_info/tokenizer_mixin.js","hash":"1af1c6683291cc715be6be23cd9b571414cd8890","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/extensions/position_tracking/preprocessor_mixin.js","hash":"251f0666e85a95692fb782717902e9ea31f16484","modified":1509841844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr-sync-worker.js","hash":"2ef78cce132d18723647e0433c016fc2b5592316","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/lib/cookie.js","hash":"3471e5c3f4290e8c19c0e3493b303ea57f92aa30","modified":1519683727000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/lib/memstore.js","hash":"ecd6269063fe718d5b46d4127ff9d12065660a90","modified":1519453196000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/lib/pathMatch.js","hash":"3d403b8aad536db9e97eef4915eb01ef53405323","modified":1519453196000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/lib/permuteDomain.js","hash":"700be205b7d0d3b4c4f442b7dc1b3299d47bf55d","modified":1519683727000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/lib/store.js","hash":"bcce2205e56bb588b4e6cfcd48a34610a5eccf82","modified":1519453196000},{"_id":"themes/tranquilpeak/node_modules/source-map/dist/source-map.debug.js","hash":"a6bfe62f20aae6db6d91a21cd26493ec318050d4","modified":1506695999000},{"_id":"themes/tranquilpeak/source/assets/images/cover-v1.2.0.jpg","hash":"a98b9bf4d6be3af0156c0b6e781f067e343a682d","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fancyapps/fancybox/src/js/core.js","hash":"1ceda7f6cc1f02bc3a6030afa0389608a547f96f","modified":1510924756000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/level3/xpath.js","hash":"760bd8534316f07fc44ae5d4c7a62f92e48b45ab","modified":1506783373000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/aborting/AbortController-impl.js","hash":"7d71dfb3f41844e347fba4a089180ef171ec6215","modified":1512931745000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/aborting/AbortSignal-impl.js","hash":"12c142a4afc817daceebe2498cfe1d0fa7751f1d","modified":1512931745000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/attributes/Attr-impl.js","hash":"e19a87710a0f1711d01d9c92820c98c7316e950c","modified":1511130752000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/attributes/NamedNodeMap-impl.js","hash":"ac564b618bb99fba92df1b4b8bfcd1c5fa3bcc48","modified":1511130752000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","hash":"5e4ed14523411d4c290181304f198b6803ad34ff","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/CloseEvent-impl.js","hash":"d529769241a59610825baa022ab324d4f4c1c0d9","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/attributes/Attr.webidl","hash":"d12e6045aac7a6671a6baa5acfc1d9badb8c6042","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/aborting/AbortController.webidl","hash":"c745e3912f59d7dd960cc74105eb2c1266c49022","modified":1512931745000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/CompositionEvent-impl.js","hash":"3a4f123331a1b8d1ed91658321865d46ac0cff6c","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/CustomEvent-impl.js","hash":"ad4c7ec9c38c5d0988e0398cfa4e68282c89354f","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/ErrorEvent-impl.js","hash":"66f32dce56ad675c86d7b0311194b9f1fe8988d0","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/aborting/AbortSignal.webidl","hash":"f9ba84b8e3acae5e3aa48449a3ffefcb8e1a272d","modified":1512931745000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/CustomEvent.webidl","hash":"ea77efc3f8541e65c79528a0a3753a7fc24b0ea5","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/Event-impl.js","hash":"63f617bca8997d266cbdae37b3f84c695107a331","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/EventModifierMixin-impl.js","hash":"9d418bee9136d2b64a6d0569af0b726baa432b63","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/ErrorEvent.webidl","hash":"929c2fe84f6577bf5c1d104f5025c9f497907582","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser.webidl","hash":"266cc4a8274cd9bd8618deb131fb7984e8cf60f5","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js","hash":"26aa4a3c46aef3cd403776359aea5623123eff83","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/FocusEvent-impl.js","hash":"050c0d71a0b6ccdf8d570d436e10ba43c45bacb0","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/HashChangeEvent-impl.js","hash":"acf8771bdacf7136546668dcfee72ec3d3e1aaf9","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/FocusEvent.webidl","hash":"361c7eda9993f1e0e860d07d718df933c441ea4a","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/Event.webidl","hash":"cfeee77070d02839d391acaf6dfb8a444fcb4d4d","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/KeyboardEvent-impl.js","hash":"9646cbe0def2f763b7e5984d182ba294f8b18572","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/MessageEvent-impl.js","hash":"becab94164dae5bd0321573331e614ca468a92cd","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/EventTarget.webidl","hash":"b72be7177b3072e97d3bcde19a2878fef1b8652e","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/KeyboardEvent.webidl","hash":"9fcb11dd035ced022f49f65189389e5a9b590751","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/MouseEvent-impl.js","hash":"2fb389a3f49ab12e49bd3bb3398e515fffbaface","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/PopStateEvent-impl.js","hash":"45c5846e516ff1a25e69664a60b469aaed3c7c96","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/HashChangeEvent.webidl","hash":"83389755004da409f783b7d7dbadee46ce994ac7","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/ProgressEvent-impl.js","hash":"4b0d1422a04c0dbf765b589387d01939634546bc","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/MessageEvent.webidl","hash":"6df0f2d5a86e0a8b8d51ffc4d27ce79c6d29230b","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/TouchEvent-impl.js","hash":"d9161859e74c72f6bfec7e2d400e5b2f333a558b","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/MouseEvent.webidl","hash":"b46dff06be55d5b26903357227813069e6b0fb56","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/UIEvent-impl.js","hash":"bb7bb59a978568b55087d8c95bd077358d07b96b","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/PopStateEvent.webidl","hash":"4e7606b2eef2f0ae0c715440dfc2ce060e03f3ef","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/WheelEvent-impl.js","hash":"35b154d1c73972ad9492547c69a8d0b30e4c2d1f","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/ProgressEvent.webidl","hash":"62dcc2517ae98ceb9e91eb3b0f54eb7ddce15bdc","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","hash":"1021fe005b766a8058dde7a9f922c4ed704e29b9","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/TouchEvent.webidl","hash":"a4395394089fd26c485e6aeec8b513b8c7dba1b7","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-api/File-impl.js","hash":"df4f1476c23815b950537f35edc1d55c730bd4ab","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/UIEvent.webidl","hash":"d11f0e40c8953be5faee2bba25ad821336bb4983","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-api/FileList-impl.js","hash":"902966fda72a5160aa2191e05293675f61ca5316","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/WheelEvent.webidl","hash":"4abad5d70e85ae2babf28083d5c05c51c8229981","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-api/File.webidl","hash":"c160539e84ad1ee01a5b0fdfe8c7c46f55c2a90e","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-api/FileReader-impl.js","hash":"491ca431847422a669bb817fdafa173dc2f78f09","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/create-event-accessor.js","hash":"c710839a5e81a43954c650c9b8d9604b70fbb102","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/dates-and-times.js","hash":"f8ac30e8962e71cb3b511dc9a4c6e97a84a51bed","modified":1512931745000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-api/Blob.webidl","hash":"ba623f9a061c2bfa5681a030f67e9b8d1fd25e32","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/document-base-url.js","hash":"f6f4ef535bd1f0f5d99a9f084bf58131d4742fa2","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/form-controls.js","hash":"bda372d4d4013c4b5c9ddca42e0cca03214612f2","modified":1512931745000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/focusing.js","hash":"1b2d3534791a2a8a2dde517021329f5b58b8c35f","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-api/FileList.webidl","hash":"d2a4b651719d1eea1221ec19c0088eefc2dcec55","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-api/FileReader.webidl","hash":"b62cfddbdf80132715ea06276b998f5a759ec060","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/internal-constants.js","hash":"79ef3dc695f7842b2411de1cbbb693d8930b21ff","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/json.js","hash":"82933f88f40717806875bfe06d344c6f490c8d5c","modified":1511130752000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js","hash":"63330034c7c3e6b25ef59e267802e8841d405984","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/ordered-set.js","hash":"214ea25a61d76b4ded9a222df5147b14a318b19d","modified":1506781430000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/selectors.js","hash":"1dcbe841a0c1fd1b4dede425d36b18c24fbbf734","modified":1511130752000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/strings.js","hash":"95f3d8ecbf3de85063410b4f0fda3e5274a9e127","modified":1512931745000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/text.js","hash":"f5476667aea8655c1d0155bde2165f00d90c832b","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/stylesheets.js","hash":"71ad38adf2572788aa981a222d488507a4b9382a","modified":1516777450000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/traversal.js","hash":"ca131c80bf639eee09193d6b5c43a0bd1aee9f14","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/validate-names.js","hash":"2fd08b9838b1e506674e59a7e8087e7fc29ea37a","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/hr-time/Performance-impl.js","hash":"aea14a7bce5a9817f18d952926f57f42eb95e30c","modified":1516582202000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/hr-time/Performance.webidl","hash":"e09e27954172158ad5ab3c61c02d71bee9245ed5","modified":1516582202000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/hr-time/DOMHighResTimeStamp.webidl","hash":"a65aac1f855ee38f006df59cb7b199ab3dfecdd0","modified":1516582202000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/AbortController.js","hash":"65ddd7c7557dab5f375f126688a71d7373cac3ae","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/AddEventListenerOptions.js","hash":"8e3c9a58ebf77dbd5a174593e4d670a70083679a","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/AbortSignal.js","hash":"0dc962009b1acea56b71f00aae9ab5ec623a4eb2","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Attr.js","hash":"7599f343ff2af07a572f0893db2add8d621118fa","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/BarProp.js","hash":"d8b888c616cb9293ceb4b25837904ba9c882e95d","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/BinaryType.js","hash":"5c9f2669d628a9eb469066606d29ed52eb687761","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Blob.js","hash":"df5c6d2a2956feae9aab53875d0835d36f08d98d","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CDATASection.js","hash":"525c446f2f71954a90d98f11b4c1416dd12099f6","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/CompositionEvent.webidl","hash":"30607dc9453f42565a492f33b64510256843d442","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/BlobPropertyBag.js","hash":"4dc43c10799aa5636fd239b791967320d58b4747","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ChildNode.js","hash":"0bedc5e964a4a0fb52dac0e2efdcbf0006246544","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CharacterData.js","hash":"bd6d089739d958b328a981b602009643a81b1ebc","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CloseEventInit.js","hash":"2e66002b783e357edb31c095c11b4d519f6c2caa","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CloseEvent.js","hash":"8408453ecdff6f5056f8a77f6336e9d41e389a6d","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Comment.js","hash":"419f17b2a1f52bb2d6f47913ec0349ffc5b8c38d","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CompositionEvent.js","hash":"3be941e3b4599153c69eb1f1d6b322fd561ed358","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CompositionEventInit.js","hash":"84d6108d932fde197617196e0d7cb9f30fe9213c","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CustomEvent.js","hash":"808ff082f86573aa383fb17ad6d01a9b6d00ee28","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CustomEventInit.js","hash":"b3fad43bc4e3f884c9e44025350ffd6b3dccb81f","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DOMImplementation.js","hash":"71893fb0233bd9d1293f38e30e594f22aa86e085","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DOMParser.js","hash":"f512c0c44043dbdcfdde1746984cbdc29cb401f6","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DOMStringMap.js","hash":"888fc3b4fb0a4cbb57cacfc66f41ededc7ec1a29","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DOMTokenList.js","hash":"306356b45ecdfc7dd700451a63288993a0b0a5e7","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Document.js","hash":"039ef4cc641ee90301bee050f07353b64abc1386","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DocumentFragment.js","hash":"789073a590d003d397e5e8d60761f3934a70c0ff","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DocumentType.js","hash":"66c6d289c2550be2feb237da36e9895192030305","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Element.js","hash":"dc205ad94b22c629b3c7ceb96abbaa90eaed9c31","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ElementCSSInlineStyle.js","hash":"b8bf68e356a137cae349d06da13b06574cc2f94c","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ElementContentEditable.js","hash":"9843136ca053ee64ddca320960053fcf80978439","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CanPlayTypeResult.js","hash":"02501b5293eb7dce852116883f6f719552215223","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/EndingType.js","hash":"c75874d420f3f354ddf1dd3bad6427b2a54553b8","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ErrorEvent.js","hash":"94e676d151c0bd3a99ee15285fe38b6023587b1f","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ErrorEventInit.js","hash":"01a25ab854628a12c8913f1993524a70ea41b06e","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Event.js","hash":"6b50a22cd4d11e7ed10c0f6809affc3386e8cfb1","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DocumentReadyState.js","hash":"0714a38c91d37980150bc79919afcc70f83b4883","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/EventInit.js","hash":"c97180a3d1a90bae4bc195e31aee5a58de7c3395","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/EventListenerOptions.js","hash":"aac84f95fe12659d6040928381206e3fb34d4c57","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/EventModifierInit.js","hash":"b1fbf5e0e82f108932284d2a1d5438a05aebf961","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js","hash":"8bb49e2626f183c2648bfbe8c8b8b281377b0ba6","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/External.js","hash":"4625e55f672072fa8a839c9bec46a81eace7bb06","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/File.js","hash":"21521389c22011ef10840708429ec01ece416c93","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/FileList.js","hash":"061bcee3143f07d75da49777cc2cfeeb0c865114","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/FilePropertyBag.js","hash":"fe78e31b77bc9cffcbcaf3407e9f798d39eaa6fe","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/FileReader.js","hash":"99afe329661ef4b2313d426544cdd6604a364373","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/FocusEvent.js","hash":"4efa08cdb435a59eaa0ed5513f5fd6693901d1cd","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ElementCreationOptions.js","hash":"209ccceab18d5b5811085585c6534e8f065d55f8","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/FocusEventInit.js","hash":"787e647ff3c9d457269a48a0021b7dd82958f360","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/FormData.js","hash":"7194c74eba031691f79ade2105b6db3c3dd0e4ec","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/GlobalEventHandlers.js","hash":"79b06fd1318a8f8b3a83c0cac0a06d81b93d6b29","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLAnchorElement.js","hash":"d28c51723fb40ef1a546b46b16c2826b4b8c962c","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLAudioElement.js","hash":"9763b5af5f2b2c0e784efe84dfba3709a789df6f","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLBRElement.js","hash":"a7eb71a87a32b0cc6aea959a7257e303c4b9a509","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLAreaElement.js","hash":"9ed27edf3d69f30ac24fc5a96ff654acd9f5e126","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLBaseElement.js","hash":"8bd8e69989fa16b3884b83e50ac12dfb6e7fa98f","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLBodyElement.js","hash":"c2334b777a83e9714277a3367724d1dbe871e3f5","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLButtonElement.js","hash":"b8a4e5b61546da7535d9311bf49b1de7b665dc7d","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLCanvasElement.js","hash":"3496e14a50ef8781efd87214af84971ed1e3241c","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLCollection.js","hash":"6bf44b68971e36440ab745bbf1b814ca1e58e2a5","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDListElement.js","hash":"b50837c74568ac83c9a3b2d2536083c2c17fdddd","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDataElement.js","hash":"3f78fa7d9e85694aac361bee2f28152e08241dfe","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDataListElement.js","hash":"103ffb34467c6f33fcbca211c85084f47b397951","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDetailsElement.js","hash":"39b039e88eba3e8413c9e283f776bf913fce0605","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDialogElement.js","hash":"313a4e486e816c80d8c32ca7d60bd513e9163a8d","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDirectoryElement.js","hash":"998a35b83909dfafe6f64c6e9d0274cebe49b052","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDivElement.js","hash":"a66d224509b8127a2acead1227cf92d4ea3c52b5","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLEmbedElement.js","hash":"240e3dd4e8904c7871c5b593dd204a1174521d5f","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLElement.js","hash":"7c34d95b9ca95fc7202400ee8714e3afdb00cacc","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFieldSetElement.js","hash":"03a20b270fe14b3c0bbc0381ffd8868072bfdff0","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFontElement.js","hash":"6928e9a9f43ce3ab81c730e39e8f709f45037939","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFormElement.js","hash":"e4a455841fc565667cef11879a93142d5fc3f51b","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFrameElement.js","hash":"92bdd4f4e28a08e44fa603b2c3731b301bcc6e3f","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHRElement.js","hash":"d373e089cf755f1fb5ac705b6a47e1ae0a21ce23","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFrameSetElement.js","hash":"bd33f50fec379ce19baff87b70d03e3f68b82e6a","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHeadElement.js","hash":"ebd0bc50105b27f62b75e10ad96e768372f2be45","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHeadingElement.js","hash":"e71f6e896a6182fa5c93417b56f620a1f42dd394","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHtmlElement.js","hash":"ee2904efbf5a55a3b61446b380b2a2db5854b3e0","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHyperlinkElementUtils.js","hash":"f1c57fcbff40cbb983d25d84968f8bec887e8a92","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLImageElement.js","hash":"012d723b88527f24c4d853d1cd004b9fceb10c93","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLIFrameElement.js","hash":"2f41669df6b74938cd93cc1d618758cc1565e555","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/GetRootNodeOptions.js","hash":"c0b66fb1f04f4cb215b1337ceff58780034a4308","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLLIElement.js","hash":"6cbaa1cacc11bc9e9fee6147656f201fb6fe72ae","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLLabelElement.js","hash":"fc4e4fd3abb43f9450d5e5920e066f11c62863a2","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLLegendElement.js","hash":"14f7fe9cb4269a0315d96d50bf302216c1596f86","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLLinkElement.js","hash":"db5c9230d9b180f428b92fcf7770cbb2032af983","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMapElement.js","hash":"ad04b4774fc34888163aec8b9a079ddbfd2422ff","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMarqueeElement.js","hash":"fbb96bc2081b8f64ce930f447313e6fd517e08d7","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMediaElement.js","hash":"d43441b2b04fff071952b4bba79e65619d4cf53e","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMenuElement.js","hash":"6ab605c290953c325444c4a8189594a22bfe317f","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMetaElement.js","hash":"a75581b1b13d38e65315a98dba6bfdd5abd37090","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMeterElement.js","hash":"b4656836b8893f7629688ee142e7327c5224b1d7","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLModElement.js","hash":"b23b459df867041c691fe34a2343f7c0643af43b","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOListElement.js","hash":"97e65803ae5829366d337d3690dcf9d00dddb8c3","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLObjectElement.js","hash":"1bf78e94b23f89acd0150a61c8be927943adc372","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOptGroupElement.js","hash":"7e6ae62df61a44baba906e695a53d9b286cca4d3","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLInputElement.js","hash":"f36346f26b6b6b83b88bff427176c39cb112a2bd","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOptionElement.js","hash":"c0fc7fbaa640b1b888729d7620de850240e10ad5","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOutputElement.js","hash":"90dbb129976486b87697a4cdbd05f1b8c757f625","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLParagraphElement.js","hash":"10b51ecdc63c73579b844960383b723214442214","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOptionsCollection.js","hash":"ea22f47634b139ea5c8f476f782c672ab040a395","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLPictureElement.js","hash":"c60af615dabac0c08c72b78e3c6778888d0a651b","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLParamElement.js","hash":"ffdcc7da5ff7c60c1c3df177b298827fc2daf5ae","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLPreElement.js","hash":"709c91bc0729640b7774c06fb8cf7a7a5e8cc40b","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLProgressElement.js","hash":"e94b41b56f04ac0ea1785245633ac3188362b39c","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLQuoteElement.js","hash":"743794eace3c6aabbb3754e761c0bd2787508429","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLScriptElement.js","hash":"99a579aa09d247335da5c6bd51e24dce6784208b","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLSelectElement.js","hash":"7179651c45eecd9cec3fe140b43821808c12abda","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLSourceElement.js","hash":"fa1c2396bc694c4efd3b01f186ea5614a2dc3394","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLSpanElement.js","hash":"ea437b1f9c98161c6fb5e23b229d8407831c5770","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLStyleElement.js","hash":"74cbbfbddd5eb5fd9419f4620df4cac1d1047187","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableCaptionElement.js","hash":"578360ad957433e096a1200c8a65495526445057","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableColElement.js","hash":"e0fe9a7e400f68e44878d2cb701e9717226ba64d","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableCellElement.js","hash":"293d1141556f7d2a45175888de8c4b90e1728c94","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableRowElement.js","hash":"e0d240a50a24010824bc1f5d2cbd8738404d5f12","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableElement.js","hash":"f6434b9a523b3b4a0fd39a4eaf335b749567ea0d","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableSectionElement.js","hash":"fc1d2d46045f564b49529fb60765785bf005f414","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTemplateElement.js","hash":"8775ef22b9d7fa9c93a842d18f03f0b4547a77b8","modified":1517279567000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTimeElement.js","hash":"8e3abb193679fc678bd038efc776616e18b423dc","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTextAreaElement.js","hash":"ad0174cbbad68e9039cc3e58c1e90a87b6866aa0","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTitleElement.js","hash":"19780293e81e0a30b12fd85b93842b561d60f306","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTrackElement.js","hash":"459559f7355415613bdee7a495bf2821ef53ac73","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLUnknownElement.js","hash":"9f84088eac3912125a6a94c1ef72ba8db6031172","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLUListElement.js","hash":"aa656336a992df16ac03cbffccce549551af627d","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HashChangeEvent.js","hash":"0315953d217bc1f7d173e3475b039155fa1cdce8","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLVideoElement.js","hash":"b62f41b3a97bb387b3aab339b140eba910d71f02","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HashChangeEventInit.js","hash":"9f3138b8a58a7d23fbd4fcef08b80976e6faa7e1","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/History.js","hash":"e5c9a6a0917f6899ac417e22e1e5415b42b0800c","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/KeyboardEventInit.js","hash":"78ea18f4b2655bdbcda880a39f38d858806bb2fb","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/KeyboardEvent.js","hash":"9e7b76b3910e8e43c487bb165d1077954586727f","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/LinkStyle.js","hash":"7ffa3f04e1eba1f96d48ff8b0c82ec8ed5ede9ca","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MessageEvent.js","hash":"a7f99b0ff41286b42ae26fb36aea56f9a5a6f779","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Location.js","hash":"575c1b600462771fe6c037c2a4314cc9c8f15221","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MessageEventInit.js","hash":"418e503b40354330b1b814250386cb676ee141af","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MouseEventInit.js","hash":"d7c18a3e878cb29caff9e1edf0d4050450c5f9d8","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MouseEvent.js","hash":"c959c4f0e393b3febd2cecfee00a22862d9ab73e","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NamedNodeMap.js","hash":"c201645725c8a5a5e0df3c282bb3ae7b34a41fd8","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Navigator.js","hash":"a1c6d9e1a4d03fa14c64f86f1c83cbc26ba5fae6","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorCookies.js","hash":"d47e9ba627582920debf7a56fcb79fe089e35033","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorID.js","hash":"c2988bf3549dd8912b0ac6cd0660591fd02f50c0","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorConcurrentHardware.js","hash":"4c9d6dd53eb13809ab72b8dbbc1e54d7c7e19d32","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorLanguage.js","hash":"16bd0facd977a67080793c761ab65e0cb02449d2","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorPlugins.js","hash":"87775d13399f1b9e0b9ac134ea1e46db3368df3c","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorOnLine.js","hash":"5cce0455095d77e5881d2ea9dc4d1e23aaa622bd","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NodeIterator.js","hash":"46cf2dc696db53f2fc29f7463353c2c1d96075de","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Node.js","hash":"1f9a8be998c954b136bf61d0ece1855d9681560e","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NodeList.js","hash":"be00e43dfeac3910d3fdfc71111f16e058907243","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NonDocumentTypeChildNode.js","hash":"a072cb8acf1af0930b750cda930fe3cc84e84ce3","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NonElementParentNode.js","hash":"544a931c961914234e7566bf7a176d34a2115342","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Performance.js","hash":"506788aff84c352b78a5c097b4e60b375ca3ce3f","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ParentNode.js","hash":"7ff3ab2e8bc2a9d92fb950c3f2e5fe410ee26d19","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/PopStateEvent.js","hash":"887922cfde792736aa8f61743c13592d292b4010","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/PopStateEventInit.js","hash":"4ab3e7da79ebb178ccc4e7d31a1d3897c603bd2d","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ProcessingInstruction.js","hash":"c333ce87880d140fd338f71c5170a686cceb94cb","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ProgressEventInit.js","hash":"537e7a915797d22c31fc59768203343de205617f","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ProgressEvent.js","hash":"acada9192348ac17e09c6018dc041bf0c120848b","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SVGAnimatedString.js","hash":"c0cdc48643e63353b9974fe7eaaaec9d1f2ef8e1","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SVGGraphicsElement.js","hash":"f57d80a560ff3f3537120493f4685f08497f03e0","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SVGNumber.js","hash":"9de498e17bf6a0f48029f23744e2d34b57200383","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SVGElement.js","hash":"f0cdceeea8802621d3dbe68b49a051464989398a","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SVGSVGElement.js","hash":"722fe2d0b49af31ec4ea36a2de763d96ccd5021e","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SVGStringList.js","hash":"4d3c3f78d15af2b76bd7d27611a694099780f830","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SVGTests.js","hash":"72e26fa01ece71b715b089c57db20db6f1734f63","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Screen.js","hash":"606947430156f4b4c1c58be34418dee1a440b44a","modified":1517279566000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SVGBoundingBoxOptions.js","hash":"4ac46dd4fa4a8f04cd3064a22b9e5a5a27e71d63","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ScrollIntoViewOptions.js","hash":"2c87241b2b052d5b8f8caa5465f6d0bd0e12b39b","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ScrollBehavior.js","hash":"3070b79370015912dcdfa94fb0cf24da26f45875","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ScrollOptions.js","hash":"c6d9ea476178646745b5ed99e7795ea8380b3d13","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SelectionMode.js","hash":"b7dde64739ca93f02e04da534430331e872cda65","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ScrollLogicalPosition.js","hash":"078931bf14b0e823e2bc365b923a12ab7ed40cc9","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/SupportedType.js","hash":"29ed16162402e0ec79332f776392206ddf7c96b4","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Text.js","hash":"44a29f651be57cc290b23db5c91234e99b3d9f1a","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ScrollRestoration.js","hash":"09609edc4b162dfb8b5d3357e6a518acf78324b0","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/TextTrackKind.js","hash":"fa99cc6bafbbdcf89ae81ea7d43a0a6d30d18934","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/TouchEventInit.js","hash":"6f7210ba50757b7f8bd99653d41712ae09c84a2d","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/TouchEvent.js","hash":"0c5749a7853b4b567d436a3d8b37ae474109694b","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/TreeWalker.js","hash":"0981353b55a9cfb33c81f86b281e004ed745f232","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/UIEvent.js","hash":"a0660f2e60321417fceb0713fdb9edd9221701c9","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/UIEventInit.js","hash":"8950e8828f34b3df09f81041922f88339a9f36e2","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/WebSocket.js","hash":"5e90ce22fe7bc2a89fb9d1920c92fd6c15c1c85f","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/WheelEvent.js","hash":"76f46596a79287a23540a7a76989e301f3c20e3c","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/WheelEventInit.js","hash":"028ff5f2e7ef452904bacb726a7fea6bda5c32de","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/WindowEventHandlers.js","hash":"df8f5f45cef4da7d95d641395d96774a8491e6a2","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/XMLDocument.js","hash":"c05814691c446c960d1b939e08f5a28f18e3bd02","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/XMLHttpRequestEventTarget.js","hash":"eece230a0486df60e93691bc0fee02e1e157f8da","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ShadowRootInit.js","hash":"2d4849c5c52868c73815118634ae2caae4d8934f","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/XMLHttpRequestUpload.js","hash":"73e462ed3cba44f1e9b40d4672e2c9762cd17474","modified":1517279568000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/utils.js","hash":"c052843be150a02b9a199d0b24806c41b207bd06","modified":1517279565000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/navigator/Navigator-impl.js","hash":"1485ef26cbe4c705c31f66b7a7d6f7f478468877","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/navigator/NavigatorConcurrentHardware-impl.js","hash":"32b4427e3023291ece06db7e44e59a68f80b8f17","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/navigator/NavigatorCookies-impl.js","hash":"564855e3b5f57d878b05e2ada8aa8c8d42a70470","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/navigator/NavigatorID-impl.js","hash":"010e2c4884268fff18a5d5a4f4ac3f9a97122380","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/navigator/NavigatorLanguage-impl.js","hash":"14cad57bc8a9bd8e7237a93e53a2f6185e099c4e","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/navigator/NavigatorOnLine-impl.js","hash":"1ab50e58df68349ca879553d903d8a027c2228be","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/VisibilityState.js","hash":"53fc8da1672eae07a26604a7afa234ed373fc9b8","modified":1517279569000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/navigator/NavigatorPlugins-impl.js","hash":"1e33f8fcf62d3202ed76ea0e9cfe2e9d5322d1de","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/svg/SVGAnimatedString-impl.js","hash":"1593c87b0c4343706ba6acebdf5ae18539850250","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/svg/SVGListBase.js","hash":"e8cc0d298a82aadb256e9edf84eb5522fd62e050","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/svg/SVGNumber-impl.js","hash":"0bc0d3cdbdc7f54b46a8c31b7fa3146a89a77994","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/navigator/Navigator.webidl","hash":"249c60a8bb160163376f0fa0bbe8018aadf02457","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/svg/SVGStringList-impl.js","hash":"d68540cb2996112b8c69e962db11b62cde2dff71","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/svg/SVGAnimatedString.webidl","hash":"58e52d16f04c8008489cac62de34238d1f3ddbc2","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/svg/SVGNumber.webidl","hash":"aafc8d540b0535934a230ab3a2586338fcf87a43","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/CDATASection-impl.js","hash":"47185b8841b71c5e890163f9a597fe6f4833371c","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/svg/SVGStringList.webidl","hash":"6ff3fbc59c67813af1cbb3612ba71fa120b79e3e","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/CharacterData-impl.js","hash":"191f82d0d609c73a182587587f93354905c6bae3","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ChildNode-impl.js","hash":"3abaa41f7da3ff28896ab70e36c2c676d75f33d2","modified":1511130765000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ChildNode.webidl","hash":"b5b97dc74413dfbdffebac393b9f4e54c43aa503","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/CDATASection.webidl","hash":"23d3b5c47eca46520110e298145f449522d11e10","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Comment-impl.js","hash":"7331b27821199bc4dc6cb0a7c197c0b614179ee5","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DOMImplementation-impl.js","hash":"6c0552beefe2e13e2946f414ce5c1ef442ab71ea","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/CharacterData.webidl","hash":"22bb2be4bb99cf26337c76dc10a0e534432cbedb","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DOMStringMap-impl.js","hash":"4ba832aeac798612ee1c355bdbec82644173097f","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DOMImplementation.webidl","hash":"7d9620304986ab8209028e25b0abf1069f321910","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DOMTokenList-impl.js","hash":"9f09512c0ef2daaad3d1ba738a9daa3f43f526b1","modified":1506781430000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DOMStringMap.webidl","hash":"914c46ad482d767cb5c7e86125ee016f42f9f60b","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Document-impl.js","hash":"a0ec345be6218a2884a35e23d246292008223b6f","modified":1517279218000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DOMTokenList.webidl","hash":"bb7eba25476e7669ca0d18aabeb66bfcc318d117","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DocumentFragment-impl.js","hash":"e92074dc8f25f0bada925a655aa279a9161b0793","modified":1511132061000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DocumentFragment.webidl","hash":"7230fbf9e6857cce78819544b549ebcfb5efd2f2","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DocumentType-impl.js","hash":"feeb94600c5b102b7770e2402941fb602fa4be15","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Document.webidl","hash":"5dd6050dc370c99294867954c66f9aea81e3b624","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Element-impl.js","hash":"7ae50f79f24ac0e943ff8525d74edd5278e3a87a","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DocumentType.webidl","hash":"65a89475ffc13792852973bbc9ad248419a1decb","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ElementCSSInlineStyle-impl.js","hash":"e384dc792a6bd3bb023ba293e9d8a2820ac1a3b4","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Element.webidl","hash":"b41509c5be987925e25b5e3d89bc5b282961c055","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ElementContentEditable-impl.js","hash":"c3619ff0b3bad09c36209340bf6978ac78037d5c","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ElementCSSInlineStyle.webidl","hash":"7706ad7cf1d6c019dc33e6d8be2e020195a1d242","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/GlobalEventHandlers-impl.js","hash":"bde749ded26e93be2318b2551f2a5b4e9715d20e","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ElementContentEditable.webidl","hash":"8f2291232cb11af06dbddc1b37bf81712848ac20","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAnchorElement-impl.js","hash":"491c420546014e5193e4e474bf2d3c6f77874adb","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/GlobalEventHandlers.webidl","hash":"f0b052819138ec078a1824f5468e16848dc290d4","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAnchorElement.webidl","hash":"10d5a98b59fc564f667be4a3628466fa73bba678","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAndSVGElementShared-impl.js","hash":"573f18e2e03dfbcd9cf4a0ee3941f97f299eea67","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAreaElement-impl.js","hash":"25c606f1e3c9231d1fa587692aea4c845750e238","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Comment.webidl","hash":"b6e005807060fc847d31fccce636bcac2d443a60","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAreaElement.webidl","hash":"719b72a4847e23ddd83720f2605ec7e9137aa3e9","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBRElement-impl.js","hash":"e1fc8dc55f846bb2d66eb933a541ed3c44b6825a","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBaseElement-impl.js","hash":"e46d76a33e82c6eb792816d93161d01a3e3a77fa","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAudioElement.webidl","hash":"afa5f4d99b4cf1564d89929a8d508b521ecf9128","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBodyElement-impl.js","hash":"151d8f9115d477f7bb52b6ef02b124611cd7163e","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js","hash":"c7f806ea636df5f39788021cfb11402ccd12c066","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBRElement.webidl","hash":"c95644f79fc97ac42aa109504f988e5d4dd7573b","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLCanvasElement-impl.js","hash":"ecc094f324967c94908617d474d7aec714389a88","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBaseElement.webidl","hash":"dc1dbea918b7185a12fa68ae462df795b9309c6d","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLCollection-impl.js","hash":"43d9ae9e63345ff85ba7fb920b078c7a88023b2b","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBodyElement.webidl","hash":"69bcb4f0191c2c7a51528fb04f104f3392039b61","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement.webidl","hash":"aa7da8914f908087217f0de0dd6b69496f5f0421","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDListElement-impl.js","hash":"5745c42732be20bffda1f9a6c4c21cbac6878f7e","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDataElement-impl.js","hash":"7e91b7a7ed1419ff1e6984ea15249e6a45d46953","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLCanvasElement.webidl","hash":"ff953cf0e6c722bbb15d51e9de6adfb1e167709b","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDataListElement-impl.js","hash":"af927134d2bd697e52bbd5bc571613404dd831c2","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLCollection.webidl","hash":"738c4618360a0e0cc7ccf6e8c862580003d2166e","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDetailsElement-impl.js","hash":"3818277d5d2bc178920960da29a46afe281eb324","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDListElement.webidl","hash":"9dbff780905d1452c91571d530f3f80d366ef8fc","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDataElement.webidl","hash":"8b42cd3c5896a721134c061b7de65852d5cc190b","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDialogElement-impl.js","hash":"9f31788eaf6ce49d46774da5692965902ee810c8","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDirectoryElement-impl.js","hash":"fd905ded23db5050ff4c8f1ed76edb15978dbfc7","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDataListElement.webidl","hash":"5c87d850bded0da9bb859e91f720c5f10d4102b1","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDivElement-impl.js","hash":"f0a69c856b283cc459aaf0afd33220bae6ddaa7b","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDetailsElement.webidl","hash":"2918de32e54c7423f9ad2b15775c1255857d5935","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement-impl.js","hash":"02838facb0c4ffed732ded159896400753b83dfc","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDialogElement.webidl","hash":"d3528f4b3ca0b71047ecdc73da55d2eac6f59175","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDirectoryElement.webidl","hash":"a98dc280797be669af9b56ce44e273fc39362295","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDivElement.webidl","hash":"6b717a15f708675232c4be863da311a7c8c28ee1","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFieldSetElement-impl.js","hash":"6c3d6eebea777e76444d1944761058a15107309b","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLEmbedElement-impl.js","hash":"e55adb9628c9818b69870960f7dcfd5e1c24e994","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement.webidl","hash":"c708e636031848c6deb6192cfae1b3a950adeccc","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFontElement-impl.js","hash":"793ecb91687b5a50543c97eba7a0d8a7ba15f6ee","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js","hash":"b8e075e88f08082f25a9225740d7bfa76fe3d926","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLEmbedElement.webidl","hash":"06735c916dcfef410b905ce85190922198fc3343","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameElement-impl.js","hash":"a40ecd5fd5dfd92ba57b0bf758b1c92c0ba67c4a","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFieldSetElement.webidl","hash":"75efc66d8c04ab91fde07a42cad55a69a5f4ea0a","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameSetElement-impl.js","hash":"9363e4cff77ebf49d928ebe5f3c39c3e521572f7","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameElement.webidl","hash":"770c44e75ca3579368a8e7fa225407bfa6781f3c","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHRElement-impl.js","hash":"522c797970ee672ee643126c76dc9793bfab78e6","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFontElement.webidl","hash":"5679898e9e0ce6e63f34be331d26f15531200996","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameSetElement.webidl","hash":"146896d0fc93a8596541076dcd624d2d430f3c68","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHeadElement-impl.js","hash":"2bbb27a5521fad3f5f005759ee459dbe5a68383e","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAudioElement-impl.js","hash":"10ef14c0afc3652302c4778237f19cccc9e06564","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHeadingElement-impl.js","hash":"c7a7e816d36404d52806c08419ca3733c2cd541d","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHtmlElement-impl.js","hash":"84f2328b8627fe8ad57ca86ddb792699ed0bf3a8","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement.webidl","hash":"4e45c98b95c6ed2aefeb6cc7d0a99870dc5f8837","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHRElement.webidl","hash":"215a6e9f22939ed99d49abdb59d5983f61d9facf","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHeadElement.webidl","hash":"ba2056edd57c6a51e5adf6e0ccb297e63232795c","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHyperlinkElementUtils-impl.js","hash":"4484a26ebc288c525002169a9c856aa7bf1e7302","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHeadingElement.webidl","hash":"4c3c60510ba6928a6a832e1b2e9c640d99bae634","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLIFrameElement-impl.js","hash":"6a328dcb608e279b9765007916331ad8e9db1435","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLImageElement-impl.js","hash":"3a042f961d65f7ab2e7801b71acfbba6d8f9ff61","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHtmlElement.webidl","hash":"2f8fe5c92d36d7415a75903f6008193fd80e1188","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHyperlinkElementUtils.webidl","hash":"ba68e99cf8a75937c5d27cdd2de9f25a1a46511a","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLIElement-impl.js","hash":"0de9b191217dab95b971b16b8a434fa68ca05754","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLImageElement.webidl","hash":"592037cb5b022ae2c882e9ea99252c7de91575b5","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLabelElement-impl.js","hash":"3de5e38961e74fc781844a01672d12ec8c2f0b38","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLInputElement.webidl","hash":"20f86e544014c2e5f6da0c5f141fd1743b9e81d1","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLegendElement-impl.js","hash":"97a7f956fe22751bf7cbb56d1cc6d54ae5146d0f","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLIFrameElement.webidl","hash":"937b101647f663b18d22857ab7543ea3f8cd4473","modified":1514839825000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLinkElement-impl.js","hash":"26834d4ce5e1ef98326780e845be6549a0171e24","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLIElement.webidl","hash":"237968c84d747c8094e252c875ed4ad3e748882f","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMapElement-impl.js","hash":"e837967275436a0f8472b7882073ad6fbb7640b9","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLabelElement.webidl","hash":"461f3b9b766cec0b9ef40168136c80003067de2a","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMarqueeElement-impl.js","hash":"2f9132c1592d4ee512cf7acbc106667221ff47a9","modified":1506781430000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLegendElement.webidl","hash":"19232fa596a9d7caf62846a8e5d092b1e7ffe96c","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMediaElement-impl.js","hash":"b8e9c86ebde2c79a8f1a48a1e44f35d070556159","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLinkElement.webidl","hash":"b0132ae9f09930bd699fb299d0a052132815dd1e","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMapElement.webidl","hash":"275fc6dec487c108193f5620ebecb933cca104b5","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMenuElement-impl.js","hash":"b197cebd03a3f8b82d1e04b7b45a17ad81fb5d63","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMetaElement-impl.js","hash":"a8565f2cf7e547503bba3384468e93ae12232b9a","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMarqueeElement.webidl","hash":"7c95e8945cea64c97fe072ca1a52f8d8eb23cb25","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMeterElement-impl.js","hash":"cdedf6a3f30141fa375f334d6d0a585fb4715900","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMenuElement.webidl","hash":"32392fec99bb0a4c7f7e5832d9eca0184b354dca","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLModElement-impl.js","hash":"0cd4a7b2698036e6a5eeded4806924d201a16c9e","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLInputElement-impl.js","hash":"e6cb04bed6719cdbb6afcfa65679301ff631411b","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOListElement-impl.js","hash":"71ae32c167fba61cc8fd84eac0f8d9516ecdbe68","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMetaElement.webidl","hash":"f8ef595a3685c8b39818d521b86a46a9f8df07c6","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLObjectElement-impl.js","hash":"a242875b0250856a71783cdd0b91bfb6aa4cc94c","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMeterElement.webidl","hash":"c6e2494a91b0bb67d960001bb408ff3039327011","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptGroupElement-impl.js","hash":"36378a95447fc107cd82ee379a24117b60ca0242","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOListElement.webidl","hash":"1f177fb464b051e0eb6812ce31a25ea0786c6827","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLModElement.webidl","hash":"fecb1076abf5d3490059609b56384f91ad4611bc","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptionElement-impl.js","hash":"4fb7f7012573289dc77dedba6b1f6dc6bb929c18","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptionsCollection-impl.js","hash":"76bd7c7285765b1d06ae669e33af2fd79209bcf9","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptGroupElement.webidl","hash":"2c2f0169da1348ca1907169ea0b09f93416ec075","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLObjectElement.webidl","hash":"141dcfe14ee7a42fe2d3da57644da07e92dd703f","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOutputElement-impl.js","hash":"b6f7cc308c41fea7b85f549816164db23331b399","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLParagraphElement-impl.js","hash":"91789409b7df92ff1eda307e249d2e938d2e4aa5","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptionElement.webidl","hash":"c5700dd8a740548504c2f523f4c2c714bbef733b","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLParamElement-impl.js","hash":"8a93e6414dcb7b744b06ebdb75e69ef76c74cf7a","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptionsCollection.webidl","hash":"c848021cb5cd9e6e4d232fa52d2c215b00e491e4","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOutputElement.webidl","hash":"f1837618daed84c7f9c48968f0d9c15cac4d5466","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLPictureElement-impl.js","hash":"74c85d4e80f25b8d6641194ead123dc34f864020","modified":1506781430000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLPreElement-impl.js","hash":"cd8d14f01925fe9a17aa479d22b7e7001920b4c3","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLParamElement.webidl","hash":"3578a748960a45dac1a8c6f9e8f3539e7ce3b081","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLProgressElement-impl.js","hash":"4ece1b78f2e36c4b3ebfa02820d287a26ce13b29","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLParagraphElement.webidl","hash":"0578d671ee9e0a9cc6d13a7d902db0e27a84a85c","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLPictureElement.webidl","hash":"253185bfc7d94ab4db76192c3935d73eaaef536f","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLQuoteElement-impl.js","hash":"c485460cf2e0ecc3d01fc157d51add7d74d0e9d9","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLScriptElement-impl.js","hash":"6db520656db79c37434309a54160e7fb7bf87297","modified":1517279218000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLPreElement.webidl","hash":"60684e8a80b2e114bad99b114cfc1e2dc914986f","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSelectElement-impl.js","hash":"a3adba8fab04d973fde70d67f43a6f8ae5e72cfb","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLProgressElement.webidl","hash":"8b4978f030fa2b6e02b5bae4dd3dbcdaa2ef23fa","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSourceElement-impl.js","hash":"67b83af899eae1e9d40b9d23594e5ca111da415a","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLQuoteElement.webidl","hash":"3707b5baaf91cb3fa7a1b11cbfda41e5a979f381","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSpanElement-impl.js","hash":"dce2f95d89a49bf7f016c6c467d64da0a758b0bc","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLScriptElement.webidl","hash":"981849a3e779fd29ae202a72347de93518831cf5","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSourceElement.webidl","hash":"81d0f95651ef1a4e17807d9d4609364a99472bfc","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLStyleElement-impl.js","hash":"40ea56dc448c4e5f822d982ee1290fb9d5e4abaf","modified":1517279218000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableCaptionElement-impl.js","hash":"495dc7ffe10fc0ff26a7005fff8eb8c8574922de","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSelectElement.webidl","hash":"ba9368ed6a8a76b6cb05b9df56f124d66a2ca050","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableCellElement-impl.js","hash":"830865da3cdb1df065b26136b4f357427ee70e75","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSpanElement.webidl","hash":"afe8e85b9e1416487aa014e01da0678925c739cd","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableColElement-impl.js","hash":"43b95465e274b8f06b53921c844d8f2b8d0f3023","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLStyleElement.webidl","hash":"ce9188225b3a3f2e4fd3492b0b341b24f5ceb401","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableCellElement.webidl","hash":"3db6e6e0cbf1814725d8a6aed6d880cfc593166d","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableElement-impl.js","hash":"cb4b543b3ad609ffb0f635051a69fd42a06858cf","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableRowElement-impl.js","hash":"44d121019425ba374a1ecbbbfc5e2dbbbc2e23e1","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableColElement.webidl","hash":"892728d29dfd634cb66a41beaf7e6b007b0220ef","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableSectionElement-impl.js","hash":"5ba531440fc81c36ea0a1e960e6ebe23a54d5ec0","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableCaptionElement.webidl","hash":"7cbf80e12392399beaa234a677a50b73ce055e56","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTemplateElement-impl.js","hash":"6f0017ba332a6a95c26b30ac52770d23c3f6f0ce","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableRowElement.webidl","hash":"bb5af9b49ab46d21d919291d8b36aa2b0e3aa710","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTextAreaElement-impl.js","hash":"22181786322594cf0472945c6775d7d356224265","modified":1513454507000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableElement.webidl","hash":"591f3392352045ec1dde474c6de3585bc60f5776","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTimeElement-impl.js","hash":"d273d82b6e145604fa47b12c25f20714e3258e3e","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTemplateElement.webidl","hash":"86e844d3762da890a6c0fc8d45c01f26818b2b30","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableSectionElement.webidl","hash":"039295aa92116224ae8a1a61b04b1eb455d9a288","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTitleElement-impl.js","hash":"e354e03a0de0940bbb76606f5e4784f352d8eaba","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTrackElement-impl.js","hash":"dd561321ab154527192db8c488998d13acac62c3","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTimeElement.webidl","hash":"3d2ae3f508d7a70eabf647add452a21e10c89711","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLUListElement-impl.js","hash":"dc1352274136e33447df34a0ea7a8764efbf600d","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTextAreaElement.webidl","hash":"35509a42ffbea9a5573c81485b9069ab0ccd623d","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLUnknownElement-impl.js","hash":"11d82895fba655d6d6b79aba217dbcca8988296b","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTitleElement.webidl","hash":"8bcca48dd84e641cf4cb77125733f1129d379c6d","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTrackElement.webidl","hash":"84d558e64e14639d655c7eb63b798dd7467ae484","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLVideoElement-impl.js","hash":"5b35bed4e07b6e982f4b3a12280b454f73ce456b","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMediaElement.webidl","hash":"b41402d11f4c4bec17bc2c8b7e8088a513aed369","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLUnknownElement.webidl","hash":"6ced82ad376d71585add10a9bc06f5f3535d69ff","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLUListElement.webidl","hash":"29203f2ef2173b446acf084b6cdfcadce54f5e3f","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/LinkStyle-impl.js","hash":"c740b201f3f7daf7a25378830dac9d68ac3af474","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/LinkStyle.webidl","hash":"13672d23cf81a3f283ac491281d5b15e3b00603f","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Node-impl.js","hash":"fe24e6b94179bfd55d2f8813860187020956702c","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLVideoElement.webidl","hash":"661ad77d5d6f04ffe394edc57938c2fa648fd607","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/NodeList-impl.js","hash":"92c24a02bb81bdd97665e557486c83c71c153957","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Node.webidl","hash":"53bfbbdd93b6aef31f8e50dfe8b8b84919596041","modified":1511130752000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/NonDocumentTypeChildNode-impl.js","hash":"e3e23295ce8d6bc307c8d2a063924153b314a874","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/NodeList.webidl","hash":"5ebe5e64d7f266095734152ba79d1ccae8b90431","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/NonElementParentNode-impl.js","hash":"9c5fa37f1510a4231b95b3fb0acca08b24bafcf7","modified":1511132061000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/NonDocumentTypeChildNode.webidl","hash":"5d036404d857b0e12f368303db2f6a7ad17a630c","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/NonElementParentNode.webidl","hash":"0d69c2d21258439246662216a4a08d990d6118a8","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ParentNode-impl.js","hash":"40435cc6770e7a5767cdbcfcfaeb6a19ec118435","modified":1511130765000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ProcessingInstruction-impl.js","hash":"fc62596d80d42577ded289f8260b4877021d1a99","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ProcessingInstruction.webidl","hash":"4d791eae162e83d3487c9b37823fd9213b0e1005","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/SVGElement-impl.js","hash":"b3cbb829a27371d2986dd43f8dd4b43ee3b6ee87","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ParentNode.webidl","hash":"7cdd31111927cc5560495d1b600eaeed0b00818b","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/SVGElement.webidl","hash":"9c0ee85ddad247c072b0d9ff869ebaf63b2bb88a","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/SVGGraphicsElement-impl.js","hash":"043ef7c6a33d827487ec3692e8517337c359ae12","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/SVGSVGElement-impl.js","hash":"88d0a6a43b585d1fb7856ff8675df10532cf9cb1","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/SVGSVGElement.webidl","hash":"8e1176486c72518c2da4b80a1b28f2f6b0855cd9","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/SVGTests-impl.js","hash":"39b420235a5d94acccbaa28d772744258bf52920","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/SVGTests.webidl","hash":"f5bfe958cd91edc6c7c542aca63bbf9eafc1a3cb","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/SVGGraphicsElement.webidl","hash":"d0ed71e5890a775fbdfeb6e482e27afd5fa27702","modified":1511126381000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Text-impl.js","hash":"f39828776a2f910ad903cbd905f2b6de4c376ce2","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/WindowEventHandlers-impl.js","hash":"582979644a289623b015e0dab20c21b30e1c478e","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Text.webidl","hash":"a4870735fbaf2a5992b392937cea77ac9bb0e481","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/XMLDocument-impl.js","hash":"a909b70e5be71d09fb9122039e50d28b6c1e5015","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/WindowEventHandlers.webidl","hash":"121c42bad68c98a7263f295a62160d62d12285cf","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/traversal/NodeIterator-impl.js","hash":"7a95e2eccb0e8f181d80128d8a4c8caee8b5ffb4","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/XMLDocument.webidl","hash":"9f391030045d9c4cf4c4968597145d03d19890c8","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/traversal/TreeWalker-impl.js","hash":"a3ce37fb781f7c999e1fc47a2704a410f5fbb34d","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/traversal/NodeIterator.webidl","hash":"1399f2140e3344159d193f768fd2fb952b4a25a2","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/traversal/helpers.js","hash":"7e60b6eb6a0c8c92ff8dc84a1dd28ffc8b4a52fa","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/websockets/WebSocket-impl-browser.js","hash":"2b0e20ece0059caf6d52e216d0b1acb221bb5685","modified":1516591185000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/traversal/TreeWalker.webidl","hash":"08bd0729ecab1ef06e1b7f0a72e616f6dde2dc8d","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/websockets/WebSocket-impl.js","hash":"b2f973cc4c445d67eb23469c5f60378b8a9ec8b1","modified":1516591185000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr/FormData-impl.js","hash":"ad35916ea286fea4d39b7d9ba5c45bb9663c97c0","modified":1513454507000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr/XMLHttpRequestEventTarget-impl.js","hash":"4caa938a0a12bbefac3c3797871f4fbed3d716a9","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/websockets/WebSocket.webidl","hash":"eba566fa69d090f29ef5a0e96a3061bee8794e97","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr/XMLHttpRequestEventTarget.webidl","hash":"2cc77d17f58ca4daeed33843cae480776b98788c","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr/XMLHttpRequestUpload-impl.js","hash":"82c6056f2c415a9f0108bbeb1161a64adecc5063","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/BarProp-impl.js","hash":"ac80be3b3da57860e11e55907a4ffbe3b4d3e5d3","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr/FormData.webidl","hash":"1e6b23b36ec4af8c867adfea02136bf7ae3d4849","modified":1513454507000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr/XMLHttpRequestUpload.webidl","hash":"e32cfc6b53e871ab9e0674132da534be18695a62","modified":1506798174000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/External-impl.js","hash":"57c6f70448e79950aedc3cc93eda25cc0e30adab","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/History-impl.js","hash":"1abd1bb3faa1247e0aa3feaf195e2679b390728d","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/BarProp.webidl","hash":"d4b58f60527625a4453d90182b358ab4527d0a64","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/Location-impl.js","hash":"5ada3221fcfcdca7c730b0b7b25728cd91d716dd","modified":1506803484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/History.webidl","hash":"75c8efa79a102e9538eabfff4b0064b1b4a64126","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/External.webidl","hash":"45081bec3b5b1a812b90a6b4bc45a66ffca6be25","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/Screen-impl.js","hash":"268b9e86d821c259cead9ea27797721ec44d44e8","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/SessionHistory.js","hash":"11b410d43ae039861c65a3184c90eeea9a96fabe","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/navigation.js","hash":"061e4d46976c3d62fdc9a75be259e4e7549799e2","modified":1506779160000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/Location.webidl","hash":"070fc63d5d1831124c4a20c89e3b7a6d6c36daee","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/Screen.webidl","hash":"17fd45d830fcfe6faad5e4da6050c1f3d24d33a5","modified":1514839826000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/attributes/NamedNodeMap.webidl","hash":"086a3153dec97ab80da8f54fc94008dee10851cf","modified":1511130752000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/CloseEvent.webidl","hash":"37704398fc36699bfb84a8a5da9ec8aa9f088d15","modified":1516580484000},{"_id":"themes/tranquilpeak/node_modules/lodash/lodash.js","hash":"1b681dad9ed43129c8bd5f527cbadf169e1e5c90","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/request/node_modules/tough-cookie/lib/pubsuffix.js","hash":"ca4db0a0778931d88a162a3c42aee7f4cdcc3cab","modified":1519683727000},{"_id":"themes/tranquilpeak/source/assets/js/script.js","hash":"2deaf3853107b8e03c985c4e99749b6541f1c466","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/sprites/brands.svg","hash":"ace593bd1ba1e1872fee4d7d7e949c6aad12e7e5","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/js/brands.js","hash":"8d96da9bf356be2b5f4884aba928cc3556d2ba8b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/js/solid.js","hash":"4db4adb21737226a309247cd7c6a91f1243d3d3b","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/svg/basic-types.js","hash":"f25b22a19aba579799987f064006fe48088fc6e9","modified":1511126381000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.svg","hash":"2182d81c546fff286f868e977c8fe62a26af3168","modified":1532936491000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.svg","hash":"e3c71cca13a4a7c9b21fb6b8ee78a080c3d7dba0","modified":1532936491000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/sprites/solid.svg","hash":"6704bb8190c1722cccb128406075554fe4bafc21","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.svg","hash":"2182d81c546fff286f868e977c8fe62a26af3168","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.svg","hash":"e3c71cca13a4a7c9b21fb6b8ee78a080c3d7dba0","modified":499162500000},{"_id":"themes/tranquilpeak/node_modules/ajv/dist/regenerator.min.js","hash":"bb12d6566346a3e419430a55246f6b926c4cdeaf","modified":1513456506000},{"_id":"themes/tranquilpeak/node_modules/@fortawesome/fontawesome-free/js/all.js","hash":"45b91ec300d7dc4872fe8ff5b27ceffb83c590b3","modified":499162500000}],"Category":[{"name":"algorithm","_id":"cjp6k652l000431x7j2aw0t7h"},{"name":"node","_id":"cjp6k654a001431x7kcthu9bl"},{"name":"git","_id":"cjp6k6580003t31x7jquj4gms"},{"name":"android","_id":"cjp6k65b2006931x7gohzzegd"},{"name":"ios","_id":"cjp6k65c2007b31x7b6175ijk"},{"name":"cs","_id":"cjp6k65du008931x7qgwm3so7"},{"name":"DesignPattern","_id":"cjp6k65ga009431x7cy50cy25"},{"name":"boostcourse","_id":"cjp6k65id00az31x75gi7r6hb"},{"name":"DIP","_id":"cjp6k65k700ct31x7my3n2xul"},{"name":"OS","_id":"cjp6k65pk00h431x7k00gbe03"},{"name":"Java","_id":"cjp6k65sa00i831x74cpr2g6e"},{"name":"network","_id":"cjp6k65so00iu31x73ea7x6ke"},{"name":"dataStructure","_id":"cjp6k65ss00j031x70dredotm"},{"name":"database","_id":"cjp6k65t500jj31x7p85y1oql"},{"name":"softwareEngineering","_id":"cjp6k65t900jp31x7bwy4zo2q"}],"Data":[],"Page":[{"title":"all-archives","layout":"all-archives","comments":0,"_content":"","source":"all-archives/index.md","raw":"---\ntitle: \"all-archives\"\nlayout: \"all-archives\"\ncomments: false\n---","date":"2018-12-02T07:17:37.831Z","updated":"2018-12-02T06:22:30.883Z","path":"all-archives/index.html","_id":"cjp6k6527000031x76j8cr07p","content":"","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":""},{"title":"all-categories","layout":"all-categories","comments":0,"_content":"","source":"all-categories/index.md","raw":"---\ntitle: \"all-categories\"\nlayout: \"all-categories\"\ncomments: false\n---","date":"2018-12-02T07:17:37.830Z","updated":"2018-12-02T06:17:07.443Z","path":"all-categories/index.html","_id":"cjp6k652g000231x7fs36rb2a","content":"","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":""},{"title":"all-tags","layout":"all-tags","comments":0,"_content":"\n","source":"all-tags/index.md","raw":"---\ntitle: \"all-tags\"\nlayout: \"all-tags\"\ncomments: false\n---\n\n","date":"2018-12-02T07:17:37.841Z","updated":"2018-12-02T06:22:37.185Z","path":"all-tags/index.html","_id":"cjp6k652p000531x7khch6d0m","content":"","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":""}],"Post":[{"layout":"post","title":"1406:에디터","date":"2017-09-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1406>\n\n## 풀이\n\n\n1. 스택 두개 생성. lStack, rStack\n\n2. 초기 입력 문자열 lStack에 모두 push \n\n3. 명령어 대로\n\t* L : lStack의 top 문자를 rStack에 push \n\t* D : rStack의 top 문자를 lStack에 push\n\t* B : lStack pop\n\t* P $ : lStack에 $ push\n\n4. 왼쪽 스택 문자 하나하나 pop해서 rStack에 push\n\n5. rStack 하나하나 pop 해서 출력\n","source":"_posts/2017-09-05-boj-editor.md","raw":"---\nlayout: post\ntitle:  \"1406:에디터\"\ndate:   2017-09-05\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1406>\n\n## 풀이\n\n\n1. 스택 두개 생성. lStack, rStack\n\n2. 초기 입력 문자열 lStack에 모두 push \n\n3. 명령어 대로\n\t* L : lStack의 top 문자를 rStack에 push \n\t* D : rStack의 top 문자를 lStack에 push\n\t* B : lStack pop\n\t* P $ : lStack에 $ push\n\n4. 왼쪽 스택 문자 하나하나 pop해서 rStack에 push\n\n5. rStack 하나하나 pop 해서 출력\n","slug":"2017-09-05-boj-editor","published":1,"updated":"2018-04-16T04:01:33.317Z","comments":1,"photos":[],"link":"","_id":"cjp6k652a000131x7awbgq8l8","content":"<p><a href=\"https://www.acmicpc.net/problem/1406\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1406</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>스택 두개 생성. lStack, rStack</p>\n</li>\n<li><p>초기 입력 문자열 lStack에 모두 push </p>\n</li>\n<li><p>명령어 대로</p>\n<ul>\n<li>L : lStack의 top 문자를 rStack에 push </li>\n<li>D : rStack의 top 문자를 lStack에 push</li>\n<li>B : lStack pop</li>\n<li>P $ : lStack에 $ push</li>\n</ul>\n</li>\n<li><p>왼쪽 스택 문자 하나하나 pop해서 rStack에 push</p>\n</li>\n<li><p>rStack 하나하나 pop 해서 출력</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1406\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1406</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>스택 두개 생성. lStack, rStack</p>\n</li>\n<li><p>초기 입력 문자열 lStack에 모두 push </p>\n</li>\n<li><p>명령어 대로</p>\n<ul>\n<li>L : lStack의 top 문자를 rStack에 push </li>\n<li>D : rStack의 top 문자를 lStack에 push</li>\n<li>B : lStack pop</li>\n<li>P $ : lStack에 $ push</li>\n</ul>\n</li>\n<li><p>왼쪽 스택 문자 하나하나 pop해서 rStack에 push</p>\n</li>\n<li><p>rStack 하나하나 pop 해서 출력</p>\n</li>\n</ol>\n"},{"layout":"post","title":"9012:괄호","date":"2017-09-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/9012>\n\n## 풀이\n1. '(' 이면 스택 push\n \n2. ')' 이면 스택 pop\n\n3. 마지막에 스택 size 가 0 이면 VPS\n","source":"_posts/2017-09-05-boj-parentheses.markdown","raw":"---\nlayout: post\ntitle:  \"9012:괄호\"\ndate:   2017-09-05\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/9012>\n\n## 풀이\n1. '(' 이면 스택 push\n \n2. ')' 이면 스택 pop\n\n3. 마지막에 스택 size 가 0 이면 VPS\n","slug":"2017-09-05-boj-parentheses","published":1,"updated":"2018-04-16T04:01:38.922Z","comments":1,"photos":[],"link":"","_id":"cjp6k652h000331x79ycc9wkg","content":"<p><a href=\"https://www.acmicpc.net/problem/9012\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9012</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>‘(‘ 이면 스택 push</p>\n</li>\n<li><p>‘)’ 이면 스택 pop</p>\n</li>\n<li><p>마지막에 스택 size 가 0 이면 VPS</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/9012\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9012</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>‘(‘ 이면 스택 push</p>\n</li>\n<li><p>‘)’ 이면 스택 pop</p>\n</li>\n<li><p>마지막에 스택 size 가 0 이면 VPS</p>\n</li>\n</ol>\n"},{"layout":"post","title":"쇠막대기","date":"2017-09-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/10799>\n\n## 풀이\n\n- '(' 이면 stack에 push \n- ')' 이면 바로 전 문자 확인. 전 문자가\n  - '(' 이면 stack에서 pop 하고 stack size 만큼 더해\n    - 레이저이기 때문에, stack size만큼 짤림\n  - ')' 이면 1 더하고 stack pop                         \n    - 막대기의 끝이기 때문, 한 개만큼 짤림\n\n","source":"_posts/2017-09-05-boj-pole.md","raw":"---\nlayout: post\ntitle:  \"쇠막대기\"\ndate:   2017-09-05\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/10799>\n\n## 풀이\n\n- '(' 이면 stack에 push \n- ')' 이면 바로 전 문자 확인. 전 문자가\n  - '(' 이면 stack에서 pop 하고 stack size 만큼 더해\n    - 레이저이기 때문에, stack size만큼 짤림\n  - ')' 이면 1 더하고 stack pop                         \n    - 막대기의 끝이기 때문, 한 개만큼 짤림\n\n","slug":"2017-09-05-boj-pole","published":1,"updated":"2018-05-04T05:15:12.379Z","comments":1,"photos":[],"link":"","_id":"cjp6k652q000631x7vv5mllxg","content":"<p><a href=\"https://www.acmicpc.net/problem/10799\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10799</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>‘(‘ 이면 stack에 push </li>\n<li>‘)’ 이면 바로 전 문자 확인. 전 문자가<ul>\n<li>‘(‘ 이면 stack에서 pop 하고 stack size 만큼 더해<ul>\n<li>레이저이기 때문에, stack size만큼 짤림</li>\n</ul>\n</li>\n<li>‘)’ 이면 1 더하고 stack pop                         <ul>\n<li>막대기의 끝이기 때문, 한 개만큼 짤림</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/10799\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10799</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>‘(‘ 이면 stack에 push </li>\n<li>‘)’ 이면 바로 전 문자 확인. 전 문자가<ul>\n<li>‘(‘ 이면 stack에서 pop 하고 stack size 만큼 더해<ul>\n<li>레이저이기 때문에, stack size만큼 짤림</li>\n</ul>\n</li>\n<li>‘)’ 이면 1 더하고 stack pop                         <ul>\n<li>막대기의 끝이기 때문, 한 개만큼 짤림</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Level3_다음 큰 숫자","date":"2017-09-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://programmers.co.kr/learn/challenge_codes/170>\n\n## 풀이\n\n\n1.  79, 80, 81, 82, 83 ~ 차례대로\n\n2. 이진수로 바꿨을 때의 1 개수 count\n\n3. 78을 이진수로 바꿨을 때의 1 개수와 같은지 확인\n\n4. 1개수가 같은 순간의 숫자가 정답.                         \n\t\n\t* 1 개수가 같은, 가장 작은 숫자를 찾는 것이므로\n","source":"_posts/2017-09-05-leve3-다음큰숫자.md","raw":"---\nlayout: post\ntitle:  \"Level3_다음 큰 숫자\"\ndate:   2017-09-05\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://programmers.co.kr/learn/challenge_codes/170>\n\n## 풀이\n\n\n1.  79, 80, 81, 82, 83 ~ 차례대로\n\n2. 이진수로 바꿨을 때의 1 개수 count\n\n3. 78을 이진수로 바꿨을 때의 1 개수와 같은지 확인\n\n4. 1개수가 같은 순간의 숫자가 정답.                         \n\t\n\t* 1 개수가 같은, 가장 작은 숫자를 찾는 것이므로\n","slug":"2017-09-05-leve3-다음큰숫자","published":1,"updated":"2018-04-16T04:01:48.124Z","comments":1,"photos":[],"link":"","_id":"cjp6k652t000731x7eoyn79mi","content":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/170\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/170</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>79, 80, 81, 82, 83 ~ 차례대로</p>\n</li>\n<li><p>이진수로 바꿨을 때의 1 개수 count</p>\n</li>\n<li><p>78을 이진수로 바꿨을 때의 1 개수와 같은지 확인</p>\n</li>\n<li><p>1개수가 같은 순간의 숫자가 정답.                         </p>\n<ul>\n<li>1 개수가 같은, 가장 작은 숫자를 찾는 것이므로</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/170\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/170</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>79, 80, 81, 82, 83 ~ 차례대로</p>\n</li>\n<li><p>이진수로 바꿨을 때의 1 개수 count</p>\n</li>\n<li><p>78을 이진수로 바꿨을 때의 1 개수와 같은지 확인</p>\n</li>\n<li><p>1개수가 같은 순간의 숫자가 정답.                         </p>\n<ul>\n<li>1 개수가 같은, 가장 작은 숫자를 찾는 것이므로</li>\n</ul>\n</li>\n</ol>\n"},{"layout":"post","title":"level3_시저암호","date":"2017-09-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://programmers.co.kr/learn/challenge_codes/144>\n\n## 풀이\n\n1. 소문자이면\n\t\n\t- 현재 문자에서 'a' 기준으로 얼만큼 떨어져 있는지 + n\n\t- 알파뱃 수 만큼 % \n\t- + a\n\n2. 대문자이면\n\n\t- 소문자와 같은 방식\n\n3. 공백\n\n\t- pass\n","source":"_posts/2017-09-09-leve3-시저암호.md","raw":"---\nlayout: post\ntitle:  \"level3_시저암호\"\ndate:   2017-09-09\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://programmers.co.kr/learn/challenge_codes/144>\n\n## 풀이\n\n1. 소문자이면\n\t\n\t- 현재 문자에서 'a' 기준으로 얼만큼 떨어져 있는지 + n\n\t- 알파뱃 수 만큼 % \n\t- + a\n\n2. 대문자이면\n\n\t- 소문자와 같은 방식\n\n3. 공백\n\n\t- pass\n","slug":"2017-09-09-leve3-시저암호","published":1,"updated":"2018-04-16T04:02:13.987Z","comments":1,"photos":[],"link":"","_id":"cjp6k652y000831x7bywr3lwi","content":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/144\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/144</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>소문자이면</p>\n<ul>\n<li>현재 문자에서 ‘a’ 기준으로 얼만큼 떨어져 있는지 + n</li>\n<li>알파뱃 수 만큼 % </li>\n<li><ul>\n<li>a</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>대문자이면</p>\n<ul>\n<li>소문자와 같은 방식</li>\n</ul>\n</li>\n<li><p>공백</p>\n<ul>\n<li>pass</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/144\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/144</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>소문자이면</p>\n<ul>\n<li>현재 문자에서 ‘a’ 기준으로 얼만큼 떨어져 있는지 + n</li>\n<li>알파뱃 수 만큼 % </li>\n<li><ul>\n<li>a</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>대문자이면</p>\n<ul>\n<li>소문자와 같은 방식</li>\n</ul>\n</li>\n<li><p>공백</p>\n<ul>\n<li>pass</li>\n</ul>\n</li>\n</ol>\n"},{"layout":"post","title":"Level3_멀리뛰기","date":"2017-09-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://programmers.co.kr/learn/challenge_codes/153>\n\n## 풀이\n\n1. 한 칸을 오르는 방법 : 1\n\n2. 두 칸을 오르는 방법 : 2 \n\n3. 세 칸을 오르는 방법\n\t\t\n\t\t처음 한 칸 오르고 나머지 두 칸 오르는 방법 \n\t\t+ 처음 두 칸 오르고 나머지 한 칸 오르는 방법\n\n4. 네 칸을 오르는 방법\n\n\t\t처음 한 칸 오르고 나머지 세 칸 오르는 방법\n\t\t+ 처음 두 칸 오르고 나머지 두 칸 오르는 방법 \n\n5. f(1) =1 / f(2) =2 / ... / f(n+2) = f(n+1) + f(n)\n\n## 개념\n\n1. Dynamic Programming\n\n\t- 복잡한 문제를 간단한 문제로 나눠 푸는 방법.  \n\t- 문제를 여러 하위 문제로 나눠 푼 다음, 그 결과를 이용하여 결합해 문제 해결\n\n2. 피보나치 수열\n","source":"_posts/2017-09-06-leve3-멀리뛰기.md","raw":"---\nlayout: post\ntitle:  \"Level3_멀리뛰기\"\ndate:   2017-09-06\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://programmers.co.kr/learn/challenge_codes/153>\n\n## 풀이\n\n1. 한 칸을 오르는 방법 : 1\n\n2. 두 칸을 오르는 방법 : 2 \n\n3. 세 칸을 오르는 방법\n\t\t\n\t\t처음 한 칸 오르고 나머지 두 칸 오르는 방법 \n\t\t+ 처음 두 칸 오르고 나머지 한 칸 오르는 방법\n\n4. 네 칸을 오르는 방법\n\n\t\t처음 한 칸 오르고 나머지 세 칸 오르는 방법\n\t\t+ 처음 두 칸 오르고 나머지 두 칸 오르는 방법 \n\n5. f(1) =1 / f(2) =2 / ... / f(n+2) = f(n+1) + f(n)\n\n## 개념\n\n1. Dynamic Programming\n\n\t- 복잡한 문제를 간단한 문제로 나눠 푸는 방법.  \n\t- 문제를 여러 하위 문제로 나눠 푼 다음, 그 결과를 이용하여 결합해 문제 해결\n\n2. 피보나치 수열\n","slug":"2017-09-06-leve3-멀리뛰기","published":1,"updated":"2018-04-16T04:01:52.805Z","comments":1,"photos":[],"link":"","_id":"cjp6k6535000a31x75g6q3y13","content":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/153\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/153</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>한 칸을 오르는 방법 : 1</p>\n</li>\n<li><p>두 칸을 오르는 방법 : 2 </p>\n</li>\n<li><p>세 칸을 오르는 방법</p>\n<pre><code>처음 한 칸 오르고 나머지 두 칸 오르는 방법 \n+ 처음 두 칸 오르고 나머지 한 칸 오르는 방법\n</code></pre></li>\n<li><p>네 칸을 오르는 방법</p>\n<pre><code>처음 한 칸 오르고 나머지 세 칸 오르는 방법\n+ 처음 두 칸 오르고 나머지 두 칸 오르는 방법 \n</code></pre></li>\n<li><p>f(1) =1 / f(2) =2 / … / f(n+2) = f(n+1) + f(n)</p>\n</li>\n</ol>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><ol>\n<li><p>Dynamic Programming</p>\n<ul>\n<li>복잡한 문제를 간단한 문제로 나눠 푸는 방법.  </li>\n<li>문제를 여러 하위 문제로 나눠 푼 다음, 그 결과를 이용하여 결합해 문제 해결</li>\n</ul>\n</li>\n<li><p>피보나치 수열</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/153\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/153</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>한 칸을 오르는 방법 : 1</p>\n</li>\n<li><p>두 칸을 오르는 방법 : 2 </p>\n</li>\n<li><p>세 칸을 오르는 방법</p>\n<pre><code>처음 한 칸 오르고 나머지 두 칸 오르는 방법 \n+ 처음 두 칸 오르고 나머지 한 칸 오르는 방법\n</code></pre></li>\n<li><p>네 칸을 오르는 방법</p>\n<pre><code>처음 한 칸 오르고 나머지 세 칸 오르는 방법\n+ 처음 두 칸 오르고 나머지 두 칸 오르는 방법 \n</code></pre></li>\n<li><p>f(1) =1 / f(2) =2 / … / f(n+2) = f(n+1) + f(n)</p>\n</li>\n</ol>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><ol>\n<li><p>Dynamic Programming</p>\n<ul>\n<li>복잡한 문제를 간단한 문제로 나눠 푸는 방법.  </li>\n<li>문제를 여러 하위 문제로 나눠 푼 다음, 그 결과를 이용하여 결합해 문제 해결</li>\n</ul>\n</li>\n<li><p>피보나치 수열</p>\n</li>\n</ol>\n"},{"layout":"post","title":"level3_n개의 최소공배수","date":"2017-09-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://programmers.co.kr/learn/challenge_codes/152>\n\n## 풀이\n\n1. 두 수의 최소 공배수\n\n\t- 두 수의 곱 / 두 수의 최대공약수\n\n2. 두 수의 최대 공약수 \n\n\t![img](http://cfile27.uf.tistory.com/image/\t992E363359B0DF7D1A5547)\n\n3. 10 12 14 의 최소공배수\n\t\n\t- (10, 12) 의 최소공배수와 14의 최소공배수\n\n## 개념\n\n>유클리드 알고리즘 (from 위키백과)\n\n\t- 호제법이란 말은 두 수가 서로(互) 상대방 수를 나누어(除)서 결국 원하는 수를 얻는 알고리즘.\n\t- 2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b), \n\t- a와 b의 최대공약수는 b와 r의 최대공약수와 같다. \n\t- 이 성질에 따라, b를 r로 나눈 나머지 r'를 구하고, \n\t- 다시 r을 r'로 나눈 나머지를 구하는 과정을 반복하여 \n\t- 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.\n","source":"_posts/2017-09-07-leve3-n개의최소공배수.md","raw":"---\nlayout: post\ntitle:  \"level3_n개의 최소공배수\"\ndate:   2017-09-07\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://programmers.co.kr/learn/challenge_codes/152>\n\n## 풀이\n\n1. 두 수의 최소 공배수\n\n\t- 두 수의 곱 / 두 수의 최대공약수\n\n2. 두 수의 최대 공약수 \n\n\t![img](http://cfile27.uf.tistory.com/image/\t992E363359B0DF7D1A5547)\n\n3. 10 12 14 의 최소공배수\n\t\n\t- (10, 12) 의 최소공배수와 14의 최소공배수\n\n## 개념\n\n>유클리드 알고리즘 (from 위키백과)\n\n\t- 호제법이란 말은 두 수가 서로(互) 상대방 수를 나누어(除)서 결국 원하는 수를 얻는 알고리즘.\n\t- 2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b), \n\t- a와 b의 최대공약수는 b와 r의 최대공약수와 같다. \n\t- 이 성질에 따라, b를 r로 나눈 나머지 r'를 구하고, \n\t- 다시 r을 r'로 나눈 나머지를 구하는 과정을 반복하여 \n\t- 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.\n","slug":"2017-09-07-leve3-n개의최소공배수","published":1,"updated":"2018-04-16T04:01:58.762Z","comments":1,"photos":[],"link":"","_id":"cjp6k6537000b31x7ui11scog","content":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/152\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/152</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>두 수의 최소 공배수</p>\n<ul>\n<li>두 수의 곱 / 두 수의 최대공약수</li>\n</ul>\n</li>\n<li><p>두 수의 최대 공약수 </p>\n<p> <img src=\"http://cfile27.uf.tistory.com/image/    992E363359B0DF7D1A5547\" alt=\"img\"></p>\n</li>\n<li><p>10 12 14 의 최소공배수</p>\n<ul>\n<li>(10, 12) 의 최소공배수와 14의 최소공배수</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><blockquote>\n<p>유클리드 알고리즘 (from 위키백과)</p>\n</blockquote>\n<pre><code>- 호제법이란 말은 두 수가 서로(互) 상대방 수를 나누어(除)서 결국 원하는 수를 얻는 알고리즘.\n- 2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a&gt;b), \n- a와 b의 최대공약수는 b와 r의 최대공약수와 같다. \n- 이 성질에 따라, b를 r로 나눈 나머지 r&apos;를 구하고, \n- 다시 r을 r&apos;로 나눈 나머지를 구하는 과정을 반복하여 \n- 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/152\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/152</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>두 수의 최소 공배수</p>\n<ul>\n<li>두 수의 곱 / 두 수의 최대공약수</li>\n</ul>\n</li>\n<li><p>두 수의 최대 공약수 </p>\n<p> <img src=\"http://cfile27.uf.tistory.com/image/    992E363359B0DF7D1A5547\" alt=\"img\"></p>\n</li>\n<li><p>10 12 14 의 최소공배수</p>\n<ul>\n<li>(10, 12) 의 최소공배수와 14의 최소공배수</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><blockquote>\n<p>유클리드 알고리즘 (from 위키백과)</p>\n</blockquote>\n<pre><code>- 호제법이란 말은 두 수가 서로(互) 상대방 수를 나누어(除)서 결국 원하는 수를 얻는 알고리즘.\n- 2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a&gt;b), \n- a와 b의 최대공약수는 b와 r의 최대공약수와 같다. \n- 이 성질에 따라, b를 r로 나눈 나머지 r&apos;를 구하고, \n- 다시 r을 r&apos;로 나눈 나머지를 구하는 과정을 반복하여 \n- 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.\n</code></pre>"},{"layout":"post","title":"Dynamic Programming","date":"2017-09-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n## 정의\n- 복잡한 문제를 간단한 여러 개의 문제로 나누어 푸는 방법\n\n## 원리 \n- 문제를 여러 개의 하위 문제(subproblem)로 나누어 푼 다음, 그것을 결합하여 최종적인 목적에 도달\n- 각 하위 문제의 해결을 계산한 뒤, 그 해결책을 저장하여 후에 같은 하위 문제가 나왔을 경우 그것을 간단하게 해결\n\n## 예제\n- 막대기 자르기 ( 막대기를 적절히 잘라서 가장 가격이 높게 만들어야 함)\n\n````\n길이(i)   0  1  2  3  4   5   6   7   8   9  10\n가격(Pi)  0  1  5  8  9  10  17  17  20  24  30\n````\n\n- 길이가 4인 막대기로 자를 때 얻을 수 있는 최대 가격 : 길이 2인 막대기 두 개로 자름. -> 5 + 5 = 10 \n- 길이가 6인 막대기 : 자르지 않고 그대로\n- 길이가 n인 막대기의 최대 가격 = Rn = max(Pi + Rn-i) (i는 1부터 n) \n- R1 = max(P1 + R0)  =1\n- R2 = max(P1 + R1, P2 + R0) = 5\n- R3 = max(P1 + R2, P2 + R1, P3 + R0) = 8\n- R4 = max(P1 + R3, P2 + R2, P3 + R1) = 10\n\n--> R1, R2, R3... 가 반복적으로 나옴 . 메모제이션 사용. 이전에 계산한 값들 저장.\n\n## 단점\n- 모든 방법을 일일이 검토하여 그 중 최적해를 찾아내는 주먹구구식 방법\n\n## 장점\n- 문제가 가능한 모든 방법을 충분히 빠른 속도로 처리할 수 있는 경우, 동적 계획법은 최적의 해법\n- 계산 횟수를 줄임 \n- 하위 문제의 수가 기하급수적으로 증가할 때 유용\n\n## 그리디 알고리즘과 비교\n\nex) A라는 지점에서 B라는 지점까지 가능한 빨리 이동하는 경로를 찾기\"\n\n- 그리디 :  전체적인 상황을 고려하지 않고, 순간순간 교차로가 보일 때마다 가장 빠른 경로를 검색\n-> 즉효성이 있음, but 항상 최적의 경로를 찾아주지는 않음 (각 구간마다는 최적경로O, 전체적으로는 최적 경로X)\n- DP : 갈 수 있는 모든 상황과 교통 정체를 전부 감안하여 최적의 경로 찾음\n-> 약간의 시간 소요, but 가장 빠른 길이 된다고 장담\n\n","source":"_posts/2017-09-08-Dynamic Programming.md","raw":"---\nlayout: post\ntitle:  \"Dynamic Programming\"\ndate:   2017-09-08\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n\n---\n\n\n## 정의\n- 복잡한 문제를 간단한 여러 개의 문제로 나누어 푸는 방법\n\n## 원리 \n- 문제를 여러 개의 하위 문제(subproblem)로 나누어 푼 다음, 그것을 결합하여 최종적인 목적에 도달\n- 각 하위 문제의 해결을 계산한 뒤, 그 해결책을 저장하여 후에 같은 하위 문제가 나왔을 경우 그것을 간단하게 해결\n\n## 예제\n- 막대기 자르기 ( 막대기를 적절히 잘라서 가장 가격이 높게 만들어야 함)\n\n````\n길이(i)   0  1  2  3  4   5   6   7   8   9  10\n가격(Pi)  0  1  5  8  9  10  17  17  20  24  30\n````\n\n- 길이가 4인 막대기로 자를 때 얻을 수 있는 최대 가격 : 길이 2인 막대기 두 개로 자름. -> 5 + 5 = 10 \n- 길이가 6인 막대기 : 자르지 않고 그대로\n- 길이가 n인 막대기의 최대 가격 = Rn = max(Pi + Rn-i) (i는 1부터 n) \n- R1 = max(P1 + R0)  =1\n- R2 = max(P1 + R1, P2 + R0) = 5\n- R3 = max(P1 + R2, P2 + R1, P3 + R0) = 8\n- R4 = max(P1 + R3, P2 + R2, P3 + R1) = 10\n\n--> R1, R2, R3... 가 반복적으로 나옴 . 메모제이션 사용. 이전에 계산한 값들 저장.\n\n## 단점\n- 모든 방법을 일일이 검토하여 그 중 최적해를 찾아내는 주먹구구식 방법\n\n## 장점\n- 문제가 가능한 모든 방법을 충분히 빠른 속도로 처리할 수 있는 경우, 동적 계획법은 최적의 해법\n- 계산 횟수를 줄임 \n- 하위 문제의 수가 기하급수적으로 증가할 때 유용\n\n## 그리디 알고리즘과 비교\n\nex) A라는 지점에서 B라는 지점까지 가능한 빨리 이동하는 경로를 찾기\"\n\n- 그리디 :  전체적인 상황을 고려하지 않고, 순간순간 교차로가 보일 때마다 가장 빠른 경로를 검색\n-> 즉효성이 있음, but 항상 최적의 경로를 찾아주지는 않음 (각 구간마다는 최적경로O, 전체적으로는 최적 경로X)\n- DP : 갈 수 있는 모든 상황과 교통 정체를 전부 감안하여 최적의 경로 찾음\n-> 약간의 시간 소요, but 가장 빠른 길이 된다고 장담\n\n","slug":"2017-09-08-Dynamic Programming","published":1,"updated":"2018-04-16T04:02:03.698Z","comments":1,"photos":[],"link":"","_id":"cjp6k653r000e31x74ul07eg0","content":"<h2 id=\"정의\"><a href=\"#정의\" class=\"headerlink\" title=\"정의\"></a>정의</h2><ul>\n<li>복잡한 문제를 간단한 여러 개의 문제로 나누어 푸는 방법</li>\n</ul>\n<h2 id=\"원리\"><a href=\"#원리\" class=\"headerlink\" title=\"원리\"></a>원리</h2><ul>\n<li>문제를 여러 개의 하위 문제(subproblem)로 나누어 푼 다음, 그것을 결합하여 최종적인 목적에 도달</li>\n<li>각 하위 문제의 해결을 계산한 뒤, 그 해결책을 저장하여 후에 같은 하위 문제가 나왔을 경우 그것을 간단하게 해결</li>\n</ul>\n<h2 id=\"예제\"><a href=\"#예제\" class=\"headerlink\" title=\"예제\"></a>예제</h2><ul>\n<li>막대기 자르기 ( 막대기를 적절히 잘라서 가장 가격이 높게 만들어야 함)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">길이(i)   0  1  2  3  4   5   6   7   8   9  10</span><br><span class=\"line\">가격(Pi)  0  1  5  8  9  10  17  17  20  24  30</span><br></pre></td></tr></table></figure>\n<ul>\n<li>길이가 4인 막대기로 자를 때 얻을 수 있는 최대 가격 : 길이 2인 막대기 두 개로 자름. -&gt; 5 + 5 = 10 </li>\n<li>길이가 6인 막대기 : 자르지 않고 그대로</li>\n<li>길이가 n인 막대기의 최대 가격 = Rn = max(Pi + Rn-i) (i는 1부터 n) </li>\n<li>R1 = max(P1 + R0)  =1</li>\n<li>R2 = max(P1 + R1, P2 + R0) = 5</li>\n<li>R3 = max(P1 + R2, P2 + R1, P3 + R0) = 8</li>\n<li>R4 = max(P1 + R3, P2 + R2, P3 + R1) = 10</li>\n</ul>\n<p>–&gt; R1, R2, R3… 가 반복적으로 나옴 . 메모제이션 사용. 이전에 계산한 값들 저장.</p>\n<h2 id=\"단점\"><a href=\"#단점\" class=\"headerlink\" title=\"단점\"></a>단점</h2><ul>\n<li>모든 방법을 일일이 검토하여 그 중 최적해를 찾아내는 주먹구구식 방법</li>\n</ul>\n<h2 id=\"장점\"><a href=\"#장점\" class=\"headerlink\" title=\"장점\"></a>장점</h2><ul>\n<li>문제가 가능한 모든 방법을 충분히 빠른 속도로 처리할 수 있는 경우, 동적 계획법은 최적의 해법</li>\n<li>계산 횟수를 줄임 </li>\n<li>하위 문제의 수가 기하급수적으로 증가할 때 유용</li>\n</ul>\n<h2 id=\"그리디-알고리즘과-비교\"><a href=\"#그리디-알고리즘과-비교\" class=\"headerlink\" title=\"그리디 알고리즘과 비교\"></a>그리디 알고리즘과 비교</h2><p>ex) A라는 지점에서 B라는 지점까지 가능한 빨리 이동하는 경로를 찾기”</p>\n<ul>\n<li>그리디 :  전체적인 상황을 고려하지 않고, 순간순간 교차로가 보일 때마다 가장 빠른 경로를 검색<br>-&gt; 즉효성이 있음, but 항상 최적의 경로를 찾아주지는 않음 (각 구간마다는 최적경로O, 전체적으로는 최적 경로X)</li>\n<li>DP : 갈 수 있는 모든 상황과 교통 정체를 전부 감안하여 최적의 경로 찾음<br>-&gt; 약간의 시간 소요, but 가장 빠른 길이 된다고 장담</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"정의\"><a href=\"#정의\" class=\"headerlink\" title=\"정의\"></a>정의</h2><ul>\n<li>복잡한 문제를 간단한 여러 개의 문제로 나누어 푸는 방법</li>\n</ul>\n<h2 id=\"원리\"><a href=\"#원리\" class=\"headerlink\" title=\"원리\"></a>원리</h2><ul>\n<li>문제를 여러 개의 하위 문제(subproblem)로 나누어 푼 다음, 그것을 결합하여 최종적인 목적에 도달</li>\n<li>각 하위 문제의 해결을 계산한 뒤, 그 해결책을 저장하여 후에 같은 하위 문제가 나왔을 경우 그것을 간단하게 해결</li>\n</ul>\n<h2 id=\"예제\"><a href=\"#예제\" class=\"headerlink\" title=\"예제\"></a>예제</h2><ul>\n<li>막대기 자르기 ( 막대기를 적절히 잘라서 가장 가격이 높게 만들어야 함)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">길이(i)   0  1  2  3  4   5   6   7   8   9  10</span><br><span class=\"line\">가격(Pi)  0  1  5  8  9  10  17  17  20  24  30</span><br></pre></td></tr></table></figure>\n<ul>\n<li>길이가 4인 막대기로 자를 때 얻을 수 있는 최대 가격 : 길이 2인 막대기 두 개로 자름. -&gt; 5 + 5 = 10 </li>\n<li>길이가 6인 막대기 : 자르지 않고 그대로</li>\n<li>길이가 n인 막대기의 최대 가격 = Rn = max(Pi + Rn-i) (i는 1부터 n) </li>\n<li>R1 = max(P1 + R0)  =1</li>\n<li>R2 = max(P1 + R1, P2 + R0) = 5</li>\n<li>R3 = max(P1 + R2, P2 + R1, P3 + R0) = 8</li>\n<li>R4 = max(P1 + R3, P2 + R2, P3 + R1) = 10</li>\n</ul>\n<p>–&gt; R1, R2, R3… 가 반복적으로 나옴 . 메모제이션 사용. 이전에 계산한 값들 저장.</p>\n<h2 id=\"단점\"><a href=\"#단점\" class=\"headerlink\" title=\"단점\"></a>단점</h2><ul>\n<li>모든 방법을 일일이 검토하여 그 중 최적해를 찾아내는 주먹구구식 방법</li>\n</ul>\n<h2 id=\"장점\"><a href=\"#장점\" class=\"headerlink\" title=\"장점\"></a>장점</h2><ul>\n<li>문제가 가능한 모든 방법을 충분히 빠른 속도로 처리할 수 있는 경우, 동적 계획법은 최적의 해법</li>\n<li>계산 횟수를 줄임 </li>\n<li>하위 문제의 수가 기하급수적으로 증가할 때 유용</li>\n</ul>\n<h2 id=\"그리디-알고리즘과-비교\"><a href=\"#그리디-알고리즘과-비교\" class=\"headerlink\" title=\"그리디 알고리즘과 비교\"></a>그리디 알고리즘과 비교</h2><p>ex) A라는 지점에서 B라는 지점까지 가능한 빨리 이동하는 경로를 찾기”</p>\n<ul>\n<li>그리디 :  전체적인 상황을 고려하지 않고, 순간순간 교차로가 보일 때마다 가장 빠른 경로를 검색<br>-&gt; 즉효성이 있음, but 항상 최적의 경로를 찾아주지는 않음 (각 구간마다는 최적경로O, 전체적으로는 최적 경로X)</li>\n<li>DP : 갈 수 있는 모든 상황과 교통 정체를 전부 감안하여 최적의 경로 찾음<br>-&gt; 약간의 시간 소요, but 가장 빠른 길이 된다고 장담</li>\n</ul>\n"},{"layout":"post","title":"leve3_야근지수","date":"2017-09-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://programmers.co.kr/learn/challenge_codes/145>\n\n## 풀이\n\n\n1. 리스트의 값 중 최대값을 찾음\n\n2. n이 0이 될때 까지, 그 최대값 -1\n\n3. 최종 제곱의 합을 출력\n","source":"_posts/2017-09-08-leve3-야근지수.md","raw":"---\nlayout: post\ntitle:  \"leve3_야근지수\"\ndate:   2017-09-08\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://programmers.co.kr/learn/challenge_codes/145>\n\n## 풀이\n\n\n1. 리스트의 값 중 최대값을 찾음\n\n2. n이 0이 될때 까지, 그 최대값 -1\n\n3. 최종 제곱의 합을 출력\n","slug":"2017-09-08-leve3-야근지수","published":1,"updated":"2018-04-16T04:02:09.508Z","comments":1,"photos":[],"link":"","_id":"cjp6k653u000g31x71x4lbaw7","content":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/145\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/145</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>리스트의 값 중 최대값을 찾음</p>\n</li>\n<li><p>n이 0이 될때 까지, 그 최대값 -1</p>\n</li>\n<li><p>최종 제곱의 합을 출력</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://programmers.co.kr/learn/challenge_codes/145\" target=\"_blank\" rel=\"noopener\">https://programmers.co.kr/learn/challenge_codes/145</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>리스트의 값 중 최대값을 찾음</p>\n</li>\n<li><p>n이 0이 될때 까지, 그 최대값 -1</p>\n</li>\n<li><p>최종 제곱의 합을 출력</p>\n</li>\n</ol>\n"},{"layout":"post","title":"1260:DFS와BFS","date":"2017-09-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1260>\n\n## 풀이\n\n- 어레이리스트 생성\n  - ArrayList<Integer>[] a = (ArrayList<Integer>[]) new ArrayList[n+1];\n- DFS\n  - dfs(x) : x를 방문\n  - 한 정점에 연결된 정점들 중에\n    - 방문하지 않았으면 방문\n- BFS\n  - 아직 방문 하지 않았고 현 위치에서 갈 수 있는 정점들을 모두 큐에 넣어\n  - 큐에 넣을 때 방문했다고 체크\n\n\n\n## 결과\n\n\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_main.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_dfs.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_bfs.png)\n","source":"_posts/2017-09-11-DFS와BFS문제.md","raw":"---\nlayout: post\ntitle:  \"1260:DFS와BFS\"\ndate:   2017-09-11\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1260>\n\n## 풀이\n\n- 어레이리스트 생성\n  - ArrayList<Integer>[] a = (ArrayList<Integer>[]) new ArrayList[n+1];\n- DFS\n  - dfs(x) : x를 방문\n  - 한 정점에 연결된 정점들 중에\n    - 방문하지 않았으면 방문\n- BFS\n  - 아직 방문 하지 않았고 현 위치에서 갈 수 있는 정점들을 모두 큐에 넣어\n  - 큐에 넣을 때 방문했다고 체크\n\n\n\n## 결과\n\n\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_main.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_dfs.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_bfs.png)\n","slug":"2017-09-11-DFS와BFS문제","published":1,"updated":"2018-04-16T04:02:23.527Z","comments":1,"photos":[],"link":"","_id":"cjp6k653v000i31x7dwb9nk44","content":"<p><a href=\"https://www.acmicpc.net/problem/1260\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1260</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>어레이리스트 생성<ul>\n<li>ArrayList<integer>[] a = (ArrayList<integer>[]) new ArrayList[n+1];</integer></integer></li>\n</ul>\n</li>\n<li>DFS<ul>\n<li>dfs(x) : x를 방문</li>\n<li>한 정점에 연결된 정점들 중에<ul>\n<li>방문하지 않았으면 방문</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>BFS<ul>\n<li>아직 방문 하지 않았고 현 위치에서 갈 수 있는 정점들을 모두 큐에 넣어</li>\n<li>큐에 넣을 때 방문했다고 체크</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_main.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_dfs.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_bfs.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1260\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1260</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>어레이리스트 생성<ul>\n<li>ArrayList<integer>[] a = (ArrayList<integer>[]) new ArrayList[n+1];</integer></integer></li>\n</ul>\n</li>\n<li>DFS<ul>\n<li>dfs(x) : x를 방문</li>\n<li>한 정점에 연결된 정점들 중에<ul>\n<li>방문하지 않았으면 방문</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>BFS<ul>\n<li>아직 방문 하지 않았고 현 위치에서 갈 수 있는 정점들을 모두 큐에 넣어</li>\n<li>큐에 넣을 때 방문했다고 체크</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_main.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_dfs.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfsBfs_bfs.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Greedy Algorithm","date":"2017-09-16T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n## 정의\n\n- 어떤 것을 결정해야 하는 순간, 가장 좋다고 생각하는 것을 선택하면서 답 찾는 알고리즘\n\n## Dynamic Programming과 비교 \n\n- DP : 어떤 상황에서 할수 있는 상황 모두 살펴보고 거기서 가장 좋은것 선택\n\n- Greedy : 할수 있는 선택 중에 제일 좋다고 생각되는 것 하나 선택해서 정답 찾아감\n\n## 단점 \n\n- 그 때 그 때는 최적일 수 있지만, 최종적으로는 최적이 아니 수도\n\n````\nex)  12원을 1, 4, 5원으로 거슬러 줄 때, \n\n5원 2개, 1원 2개 --> 총 4개가 필요\n\nbut, 정답은 4원 3개!!!\n\nDP로 풀어야해.\n\nD[n] = n원을 거슬러 주는 동전의 최소 개수\n\nmin(D[n-1], D[n-4], D[n-5]) + 1 \n````\n\n## 그럼 언제 쓰나\n\n- 지금 이 순간 가장 좋은 경우 선택하는 것이 최적일 때.\n\n- 왜 그게 최적인지 증명해야함 \n\n- 그래서 가장 어려워\n\n- 그래서 시험이나 대회에 나오면 가장 나중에 풀어\n\n\n## 예제 \n\n<https://www.acmicpc.net/problem/11399>\n\n- 줄 서 있는 사람 N, 각 사람의 인출 시간 Pi. 각 사람이 인출하는데 필요한 시간의 합의 최소값은?\n\n````\nex) P1=3, P2=1, P3=4, P4=3, P5=2\n\n1번  : 3분 소요\n\n2번 : 3 +1 = 4분 소요 \n\n3번 : 3 + 1 + 4 = 8분 소요 \n\n4번 : 3 + 1 + 4 + 3 = 11분  소요 \n\n5번 : 3 + 1 + 4 + 3 + 2 = 13 분 소요      \n\n따라서, 3 + 4 + 8 + 11 + 13 = 39분 소요\n````\n\n- 기다리는 시간 짧은 사람부터 인출하는 것이 좋음 ... 이걸 증명해야함.\n\n- p1 <= p2<= ......<=pn 이라고 가정\n\n- S = p1 + (p1+p2) + (p1+p2+p3) +  .... + (p1+p2+p3+...+pn) = n*p1 + (n-1)*p2 + ... + pn\n\n- 중간에 i<j 인 pi<pj 순서를 바꾸면 S는 더 커지거나 같아져야함. 즉, S <= S` ---->  S-S` <=0\n\n- 계산결과, S-S`<=0 을 성립함.  따라서 오름차순이 정답\n\n\n\n","source":"_posts/2017-09-17-Greedy Algorithm.md","raw":"---\nlayout: post\ntitle:  \"Greedy Algorithm\"\ndate:   2017-09-17\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n## 정의\n\n- 어떤 것을 결정해야 하는 순간, 가장 좋다고 생각하는 것을 선택하면서 답 찾는 알고리즘\n\n## Dynamic Programming과 비교 \n\n- DP : 어떤 상황에서 할수 있는 상황 모두 살펴보고 거기서 가장 좋은것 선택\n\n- Greedy : 할수 있는 선택 중에 제일 좋다고 생각되는 것 하나 선택해서 정답 찾아감\n\n## 단점 \n\n- 그 때 그 때는 최적일 수 있지만, 최종적으로는 최적이 아니 수도\n\n````\nex)  12원을 1, 4, 5원으로 거슬러 줄 때, \n\n5원 2개, 1원 2개 --> 총 4개가 필요\n\nbut, 정답은 4원 3개!!!\n\nDP로 풀어야해.\n\nD[n] = n원을 거슬러 주는 동전의 최소 개수\n\nmin(D[n-1], D[n-4], D[n-5]) + 1 \n````\n\n## 그럼 언제 쓰나\n\n- 지금 이 순간 가장 좋은 경우 선택하는 것이 최적일 때.\n\n- 왜 그게 최적인지 증명해야함 \n\n- 그래서 가장 어려워\n\n- 그래서 시험이나 대회에 나오면 가장 나중에 풀어\n\n\n## 예제 \n\n<https://www.acmicpc.net/problem/11399>\n\n- 줄 서 있는 사람 N, 각 사람의 인출 시간 Pi. 각 사람이 인출하는데 필요한 시간의 합의 최소값은?\n\n````\nex) P1=3, P2=1, P3=4, P4=3, P5=2\n\n1번  : 3분 소요\n\n2번 : 3 +1 = 4분 소요 \n\n3번 : 3 + 1 + 4 = 8분 소요 \n\n4번 : 3 + 1 + 4 + 3 = 11분  소요 \n\n5번 : 3 + 1 + 4 + 3 + 2 = 13 분 소요      \n\n따라서, 3 + 4 + 8 + 11 + 13 = 39분 소요\n````\n\n- 기다리는 시간 짧은 사람부터 인출하는 것이 좋음 ... 이걸 증명해야함.\n\n- p1 <= p2<= ......<=pn 이라고 가정\n\n- S = p1 + (p1+p2) + (p1+p2+p3) +  .... + (p1+p2+p3+...+pn) = n*p1 + (n-1)*p2 + ... + pn\n\n- 중간에 i<j 인 pi<pj 순서를 바꾸면 S는 더 커지거나 같아져야함. 즉, S <= S` ---->  S-S` <=0\n\n- 계산결과, S-S`<=0 을 성립함.  따라서 오름차순이 정답\n\n\n\n","slug":"2017-09-17-Greedy Algorithm","published":1,"updated":"2018-04-16T04:02:32.099Z","comments":1,"photos":[],"link":"","_id":"cjp6k653w000k31x7ut6i564j","content":"<h2 id=\"정의\"><a href=\"#정의\" class=\"headerlink\" title=\"정의\"></a>정의</h2><ul>\n<li>어떤 것을 결정해야 하는 순간, 가장 좋다고 생각하는 것을 선택하면서 답 찾는 알고리즘</li>\n</ul>\n<h2 id=\"Dynamic-Programming과-비교\"><a href=\"#Dynamic-Programming과-비교\" class=\"headerlink\" title=\"Dynamic Programming과 비교\"></a>Dynamic Programming과 비교</h2><ul>\n<li><p>DP : 어떤 상황에서 할수 있는 상황 모두 살펴보고 거기서 가장 좋은것 선택</p>\n</li>\n<li><p>Greedy : 할수 있는 선택 중에 제일 좋다고 생각되는 것 하나 선택해서 정답 찾아감</p>\n</li>\n</ul>\n<h2 id=\"단점\"><a href=\"#단점\" class=\"headerlink\" title=\"단점\"></a>단점</h2><ul>\n<li>그 때 그 때는 최적일 수 있지만, 최종적으로는 최적이 아니 수도</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ex)  12원을 1, 4, 5원으로 거슬러 줄 때, </span><br><span class=\"line\"></span><br><span class=\"line\">5원 2개, 1원 2개 --&gt; 총 4개가 필요</span><br><span class=\"line\"></span><br><span class=\"line\">but, 정답은 4원 3개!!!</span><br><span class=\"line\"></span><br><span class=\"line\">DP로 풀어야해.</span><br><span class=\"line\"></span><br><span class=\"line\">D[n] = n원을 거슬러 주는 동전의 최소 개수</span><br><span class=\"line\"></span><br><span class=\"line\">min(D[n-1], D[n-4], D[n-5]) + 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"그럼-언제-쓰나\"><a href=\"#그럼-언제-쓰나\" class=\"headerlink\" title=\"그럼 언제 쓰나\"></a>그럼 언제 쓰나</h2><ul>\n<li><p>지금 이 순간 가장 좋은 경우 선택하는 것이 최적일 때.</p>\n</li>\n<li><p>왜 그게 최적인지 증명해야함 </p>\n</li>\n<li><p>그래서 가장 어려워</p>\n</li>\n<li><p>그래서 시험이나 대회에 나오면 가장 나중에 풀어</p>\n</li>\n</ul>\n<h2 id=\"예제\"><a href=\"#예제\" class=\"headerlink\" title=\"예제\"></a>예제</h2><p><a href=\"https://www.acmicpc.net/problem/11399\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11399</a></p>\n<ul>\n<li>줄 서 있는 사람 N, 각 사람의 인출 시간 Pi. 각 사람이 인출하는데 필요한 시간의 합의 최소값은?</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ex) P1=3, P2=1, P3=4, P4=3, P5=2</span><br><span class=\"line\"></span><br><span class=\"line\">1번  : 3분 소요</span><br><span class=\"line\"></span><br><span class=\"line\">2번 : 3 +1 = 4분 소요 </span><br><span class=\"line\"></span><br><span class=\"line\">3번 : 3 + 1 + 4 = 8분 소요 </span><br><span class=\"line\"></span><br><span class=\"line\">4번 : 3 + 1 + 4 + 3 = 11분  소요 </span><br><span class=\"line\"></span><br><span class=\"line\">5번 : 3 + 1 + 4 + 3 + 2 = 13 분 소요      </span><br><span class=\"line\"></span><br><span class=\"line\">따라서, 3 + 4 + 8 + 11 + 13 = 39분 소요</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>기다리는 시간 짧은 사람부터 인출하는 것이 좋음 … 이걸 증명해야함.</p>\n</li>\n<li><p>p1 &lt;= p2&lt;= ……&lt;=pn 이라고 가정</p>\n</li>\n<li><p>S = p1 + (p1+p2) + (p1+p2+p3) +  …. + (p1+p2+p3+…+pn) = n<em>p1 + (n-1)</em>p2 + … + pn</p>\n</li>\n<li><p>중간에 i&lt;j 인 pi&lt;pj 순서를 바꾸면 S는 더 커지거나 같아져야함. 즉, S &lt;= S<code>----&gt;  S-S</code> &lt;=0</p>\n</li>\n<li><p>계산결과, S-S`&lt;=0 을 성립함.  따라서 오름차순이 정답</p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"정의\"><a href=\"#정의\" class=\"headerlink\" title=\"정의\"></a>정의</h2><ul>\n<li>어떤 것을 결정해야 하는 순간, 가장 좋다고 생각하는 것을 선택하면서 답 찾는 알고리즘</li>\n</ul>\n<h2 id=\"Dynamic-Programming과-비교\"><a href=\"#Dynamic-Programming과-비교\" class=\"headerlink\" title=\"Dynamic Programming과 비교\"></a>Dynamic Programming과 비교</h2><ul>\n<li><p>DP : 어떤 상황에서 할수 있는 상황 모두 살펴보고 거기서 가장 좋은것 선택</p>\n</li>\n<li><p>Greedy : 할수 있는 선택 중에 제일 좋다고 생각되는 것 하나 선택해서 정답 찾아감</p>\n</li>\n</ul>\n<h2 id=\"단점\"><a href=\"#단점\" class=\"headerlink\" title=\"단점\"></a>단점</h2><ul>\n<li>그 때 그 때는 최적일 수 있지만, 최종적으로는 최적이 아니 수도</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ex)  12원을 1, 4, 5원으로 거슬러 줄 때, </span><br><span class=\"line\"></span><br><span class=\"line\">5원 2개, 1원 2개 --&gt; 총 4개가 필요</span><br><span class=\"line\"></span><br><span class=\"line\">but, 정답은 4원 3개!!!</span><br><span class=\"line\"></span><br><span class=\"line\">DP로 풀어야해.</span><br><span class=\"line\"></span><br><span class=\"line\">D[n] = n원을 거슬러 주는 동전의 최소 개수</span><br><span class=\"line\"></span><br><span class=\"line\">min(D[n-1], D[n-4], D[n-5]) + 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"그럼-언제-쓰나\"><a href=\"#그럼-언제-쓰나\" class=\"headerlink\" title=\"그럼 언제 쓰나\"></a>그럼 언제 쓰나</h2><ul>\n<li><p>지금 이 순간 가장 좋은 경우 선택하는 것이 최적일 때.</p>\n</li>\n<li><p>왜 그게 최적인지 증명해야함 </p>\n</li>\n<li><p>그래서 가장 어려워</p>\n</li>\n<li><p>그래서 시험이나 대회에 나오면 가장 나중에 풀어</p>\n</li>\n</ul>\n<h2 id=\"예제\"><a href=\"#예제\" class=\"headerlink\" title=\"예제\"></a>예제</h2><p><a href=\"https://www.acmicpc.net/problem/11399\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11399</a></p>\n<ul>\n<li>줄 서 있는 사람 N, 각 사람의 인출 시간 Pi. 각 사람이 인출하는데 필요한 시간의 합의 최소값은?</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ex) P1=3, P2=1, P3=4, P4=3, P5=2</span><br><span class=\"line\"></span><br><span class=\"line\">1번  : 3분 소요</span><br><span class=\"line\"></span><br><span class=\"line\">2번 : 3 +1 = 4분 소요 </span><br><span class=\"line\"></span><br><span class=\"line\">3번 : 3 + 1 + 4 = 8분 소요 </span><br><span class=\"line\"></span><br><span class=\"line\">4번 : 3 + 1 + 4 + 3 = 11분  소요 </span><br><span class=\"line\"></span><br><span class=\"line\">5번 : 3 + 1 + 4 + 3 + 2 = 13 분 소요      </span><br><span class=\"line\"></span><br><span class=\"line\">따라서, 3 + 4 + 8 + 11 + 13 = 39분 소요</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>기다리는 시간 짧은 사람부터 인출하는 것이 좋음 … 이걸 증명해야함.</p>\n</li>\n<li><p>p1 &lt;= p2&lt;= ……&lt;=pn 이라고 가정</p>\n</li>\n<li><p>S = p1 + (p1+p2) + (p1+p2+p3) +  …. + (p1+p2+p3+…+pn) = n<em>p1 + (n-1)</em>p2 + … + pn</p>\n</li>\n<li><p>중간에 i&lt;j 인 pi&lt;pj 순서를 바꾸면 S는 더 커지거나 같아져야함. 즉, S &lt;= S<code>----&gt;  S-S</code> &lt;=0</p>\n</li>\n<li><p>계산결과, S-S`&lt;=0 을 성립함.  따라서 오름차순이 정답</p>\n</li>\n</ul>\n"},{"layout":"post","title":"10845:큐","date":"2017-09-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/10845>\n\n## DFS 풀이\n1. head, tail 을 둔다\n\n\n2. push\n\t- head는 초기 추가된 노드를 계속 가르킴\n\t- tail이 가르키느 노드는, 새로 추가된 노드를 가르킴\n\t- tail은, 새로 추가된 노드를 가르킴\n3. pop\n\t- head가 가르키는 노드가 가르키는 노드를 head가 가르킴\n","source":"_posts/2017-09-09-큐.md","raw":"---\nlayout: post\ntitle:  \"10845:큐\"\ndate:   2017-09-09\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/10845>\n\n## DFS 풀이\n1. head, tail 을 둔다\n\n\n2. push\n\t- head는 초기 추가된 노드를 계속 가르킴\n\t- tail이 가르키느 노드는, 새로 추가된 노드를 가르킴\n\t- tail은, 새로 추가된 노드를 가르킴\n3. pop\n\t- head가 가르키는 노드가 가르키는 노드를 head가 가르킴\n","slug":"2017-09-09-큐","published":1,"updated":"2018-04-16T04:02:18.867Z","comments":1,"photos":[],"link":"","_id":"cjp6k653y000m31x7ogk2mbtp","content":"<p><a href=\"https://www.acmicpc.net/problem/10845\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10845</a></p>\n<h2 id=\"DFS-풀이\"><a href=\"#DFS-풀이\" class=\"headerlink\" title=\"DFS 풀이\"></a>DFS 풀이</h2><ol>\n<li>head, tail 을 둔다</li>\n</ol>\n<ol start=\"2\">\n<li>push<ul>\n<li>head는 초기 추가된 노드를 계속 가르킴</li>\n<li>tail이 가르키느 노드는, 새로 추가된 노드를 가르킴</li>\n<li>tail은, 새로 추가된 노드를 가르킴</li>\n</ul>\n</li>\n<li>pop<ul>\n<li>head가 가르키는 노드가 가르키는 노드를 head가 가르킴</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/10845\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10845</a></p>\n<h2 id=\"DFS-풀이\"><a href=\"#DFS-풀이\" class=\"headerlink\" title=\"DFS 풀이\"></a>DFS 풀이</h2><ol>\n<li>head, tail 을 둔다</li>\n</ol>\n<ol start=\"2\">\n<li>push<ul>\n<li>head는 초기 추가된 노드를 계속 가르킴</li>\n<li>tail이 가르키느 노드는, 새로 추가된 노드를 가르킴</li>\n<li>tail은, 새로 추가된 노드를 가르킴</li>\n</ul>\n</li>\n<li>pop<ul>\n<li>head가 가르키는 노드가 가르키는 노드를 head가 가르킴</li>\n</ul>\n</li>\n</ol>\n"},{"layout":"post","title":"모의테스트01_각 자릿수의 합","date":"2017-09-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 문제\n\n자연수 N이 주어지면,<br> N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.<br>\n예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.<br>\n\n제한사항<br>\n\n\t* N의 범위 : 100,000,000 이하의 자연수 <br>\n\n<입출력 예> <br>\nN --- answer <br>\n123 --- 6 <br>\n987\t--- 24 <br>\n입출력 예 설명<br><br>\n입출력 예 #1<br>\n문제의 예시와 같습니다.<br>\n입출력 예 #2<br>\n9 + 8 + 7 = 24이므로 24를 return 하면 됩니다.\n\n## 풀이\n\n1. 정수형으로 입력 받음\n\n2. 입력 받음 정수형을 문자열형으로 변환 ( 자릿수 구하기 용이하기 때문 )\n\n3. chatAt(i) 번째 - ' 0 ' 을 하면 그 자릿수가 나옴\n\n4. 각각 더하면 결과값 나옴\n\n## 개념\n\n1. 987이 입력되면 \n\n2. '9' - '0' = 57 - 48 = 9\n","source":"_posts/2017-09-12-모의테스트01-각자릿수의합.md","raw":"---\nlayout: post\ntitle:  \"모의테스트01_각 자릿수의 합\"\ndate:   2017-09-12\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 문제\n\n자연수 N이 주어지면,<br> N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.<br>\n예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.<br>\n\n제한사항<br>\n\n\t* N의 범위 : 100,000,000 이하의 자연수 <br>\n\n<입출력 예> <br>\nN --- answer <br>\n123 --- 6 <br>\n987\t--- 24 <br>\n입출력 예 설명<br><br>\n입출력 예 #1<br>\n문제의 예시와 같습니다.<br>\n입출력 예 #2<br>\n9 + 8 + 7 = 24이므로 24를 return 하면 됩니다.\n\n## 풀이\n\n1. 정수형으로 입력 받음\n\n2. 입력 받음 정수형을 문자열형으로 변환 ( 자릿수 구하기 용이하기 때문 )\n\n3. chatAt(i) 번째 - ' 0 ' 을 하면 그 자릿수가 나옴\n\n4. 각각 더하면 결과값 나옴\n\n## 개념\n\n1. 987이 입력되면 \n\n2. '9' - '0' = 57 - 48 = 9\n","slug":"2017-09-12-모의테스트01-각자릿수의합","published":1,"updated":"2018-04-16T04:02:27.796Z","comments":1,"photos":[],"link":"","_id":"cjp6k6540000o31x7f9aenn3m","content":"<h2 id=\"문제\"><a href=\"#문제\" class=\"headerlink\" title=\"문제\"></a>문제</h2><p>자연수 N이 주어지면,<br> N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.<br><br>예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.<br></p>\n<p>제한사항<br></p>\n<pre><code>* N의 범위 : 100,000,000 이하의 자연수 &lt;br&gt;\n</code></pre><p>&lt;입출력 예&gt; <br><br>N — answer <br><br>123 — 6 <br><br>987    — 24 <br><br>입출력 예 설명<br><br><br>입출력 예 #1<br><br>문제의 예시와 같습니다.<br><br>입출력 예 #2<br><br>9 + 8 + 7 = 24이므로 24를 return 하면 됩니다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>정수형으로 입력 받음</p>\n</li>\n<li><p>입력 받음 정수형을 문자열형으로 변환 ( 자릿수 구하기 용이하기 때문 )</p>\n</li>\n<li><p>chatAt(i) 번째 - ‘ 0 ‘ 을 하면 그 자릿수가 나옴</p>\n</li>\n<li><p>각각 더하면 결과값 나옴</p>\n</li>\n</ol>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><ol>\n<li><p>987이 입력되면 </p>\n</li>\n<li><p>‘9’ - ‘0’ = 57 - 48 = 9</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"문제\"><a href=\"#문제\" class=\"headerlink\" title=\"문제\"></a>문제</h2><p>자연수 N이 주어지면,<br> N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.<br><br>예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.<br></p>\n<p>제한사항<br></p>\n<pre><code>* N의 범위 : 100,000,000 이하의 자연수 &lt;br&gt;\n</code></pre><p>&lt;입출력 예&gt; <br><br>N — answer <br><br>123 — 6 <br><br>987    — 24 <br><br>입출력 예 설명<br><br><br>입출력 예 #1<br><br>문제의 예시와 같습니다.<br><br>입출력 예 #2<br><br>9 + 8 + 7 = 24이므로 24를 return 하면 됩니다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>정수형으로 입력 받음</p>\n</li>\n<li><p>입력 받음 정수형을 문자열형으로 변환 ( 자릿수 구하기 용이하기 때문 )</p>\n</li>\n<li><p>chatAt(i) 번째 - ‘ 0 ‘ 을 하면 그 자릿수가 나옴</p>\n</li>\n<li><p>각각 더하면 결과값 나옴</p>\n</li>\n</ol>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><ol>\n<li><p>987이 입력되면 </p>\n</li>\n<li><p>‘9’ - ‘0’ = 57 - 48 = 9</p>\n</li>\n</ol>\n"},{"layout":"post","title":"1463:1로 만들기","date":"2017-09-17T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1463>\n\n## 풀이\nD[N] = N을 1로 만드는데 필요한 연산의 최솟값\n\nN\t\n\t-> N-3 -> ..... > 1\t:  1 + D[N/3]\t====1번 <br>\n\t-> N-2 -> ..... > 1\t:  1 + D[N/2]\t====2번 <br>\n\t-> N-1 -> ..... > 1\t\t:  1 + D[N/1]\t====3번 <br>\n\n\n\tD[N] = min(1번, 2번, 3번)\n\n","source":"_posts/2017-09-18-1로만들기.md","raw":"---\nlayout: post\ntitle:  \"1463:1로 만들기\"\ndate:   2017-09-18\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1463>\n\n## 풀이\nD[N] = N을 1로 만드는데 필요한 연산의 최솟값\n\nN\t\n\t-> N-3 -> ..... > 1\t:  1 + D[N/3]\t====1번 <br>\n\t-> N-2 -> ..... > 1\t:  1 + D[N/2]\t====2번 <br>\n\t-> N-1 -> ..... > 1\t\t:  1 + D[N/1]\t====3번 <br>\n\n\n\tD[N] = min(1번, 2번, 3번)\n\n","slug":"2017-09-18-1로만들기","published":1,"updated":"2018-04-16T04:02:36.762Z","comments":1,"photos":[],"link":"","_id":"cjp6k6541000q31x7ohce3h12","content":"<p><a href=\"https://www.acmicpc.net/problem/1463\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1463</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>D[N] = N을 1로 만드는데 필요한 연산의 최솟값</p>\n<p>N<br>    -&gt; N-3 -&gt; ….. &gt; 1    :  1 + D[N/3]    ====1번 <br><br>    -&gt; N-2 -&gt; ….. &gt; 1    :  1 + D[N/2]    ====2번 <br><br>    -&gt; N-1 -&gt; ….. &gt; 1        :  1 + D[N/1]    ====3번 <br></p>\n<pre><code>D[N] = min(1번, 2번, 3번)\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1463\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1463</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>D[N] = N을 1로 만드는데 필요한 연산의 최솟값</p>\n<p>N<br>    -&gt; N-3 -&gt; ….. &gt; 1    :  1 + D[N/3]    ====1번 <br><br>    -&gt; N-2 -&gt; ….. &gt; 1    :  1 + D[N/2]    ====2번 <br><br>    -&gt; N-1 -&gt; ….. &gt; 1        :  1 + D[N/1]    ====3번 <br></p>\n<pre><code>D[N] = min(1번, 2번, 3번)\n</code></pre>"},{"layout":"post","title":"11726:2xn타일링","date":"2017-09-18T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11726>\n\n## 풀이\n1. d(n) = d(n-2) + n(n-1)\n\n\n2. 재귀함수\n\n\t\"왜 시간 초과?\"\n\n","source":"_posts/2017-09-19-2xn타일링.md","raw":"---\nlayout: post\ntitle:  \"11726:2xn타일링\"\ndate:   2017-09-19\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11726>\n\n## 풀이\n1. d(n) = d(n-2) + n(n-1)\n\n\n2. 재귀함수\n\n\t\"왜 시간 초과?\"\n\n","slug":"2017-09-19-2xn타일링","published":1,"updated":"2018-04-16T04:02:41.546Z","comments":1,"photos":[],"link":"","_id":"cjp6k6542000s31x74wxf7gqa","content":"<p><a href=\"https://www.acmicpc.net/problem/11726\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11726</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>d(n) = d(n-2) + n(n-1)</li>\n</ol>\n<ol start=\"2\">\n<li><p>재귀함수</p>\n<p> “왜 시간 초과?”</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11726\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11726</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>d(n) = d(n-2) + n(n-1)</li>\n</ol>\n<ol start=\"2\">\n<li><p>재귀함수</p>\n<p> “왜 시간 초과?”</p>\n</li>\n</ol>\n"},{"layout":"post","title":"10844:쉬운계단수","date":"2017-09-22T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/10844>\n\n## 틀린 풀이\n\n직접 <br>\n길이가 1인 계단수 <br>\n길이가 2인 계단수<br>\n...<br>\n를 하나하나 구해보니 <br>\n길이가 n인 계단 수 = 길이가 n-1인 계단수 * 2 -1 이라는 규칙이 나왔다.<br>\n하지만 계속 채점 결과는 틀렸다고 나옴.. \n\n## 맞는 풀이\n\n이차원 배열로 품\n\n\t* D[i][j] : 길이 i, 마지막 숫자가 j인 계단 수의 개수\n\t* D[N][L] : N자리 계단수 마지막수는 L인 계단수의 개수\n\t* D[N][L] = D[N-1][L-1] + D[N-1][L+1] (L : 1~8)\n\t* D[N][0] = D[N][1]\n\t* D[N][9] = D[N-1][8]\n","source":"_posts/2017-09-23-쉬운계단수.md","raw":"---\nlayout: post\ntitle:  \"10844:쉬운계단수\"\ndate:   2017-09-23\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/10844>\n\n## 틀린 풀이\n\n직접 <br>\n길이가 1인 계단수 <br>\n길이가 2인 계단수<br>\n...<br>\n를 하나하나 구해보니 <br>\n길이가 n인 계단 수 = 길이가 n-1인 계단수 * 2 -1 이라는 규칙이 나왔다.<br>\n하지만 계속 채점 결과는 틀렸다고 나옴.. \n\n## 맞는 풀이\n\n이차원 배열로 품\n\n\t* D[i][j] : 길이 i, 마지막 숫자가 j인 계단 수의 개수\n\t* D[N][L] : N자리 계단수 마지막수는 L인 계단수의 개수\n\t* D[N][L] = D[N-1][L-1] + D[N-1][L+1] (L : 1~8)\n\t* D[N][0] = D[N][1]\n\t* D[N][9] = D[N-1][8]\n","slug":"2017-09-23-쉬운계단수","published":1,"updated":"2018-04-16T04:02:59.427Z","comments":1,"photos":[],"link":"","_id":"cjp6k6543000u31x7vcoxufxg","content":"<p><a href=\"https://www.acmicpc.net/problem/10844\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10844</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><p>직접 <br><br>길이가 1인 계단수 <br><br>길이가 2인 계단수<br><br>…<br><br>를 하나하나 구해보니 <br><br>길이가 n인 계단 수 = 길이가 n-1인 계단수 * 2 -1 이라는 규칙이 나왔다.<br><br>하지만 계속 채점 결과는 틀렸다고 나옴.. </p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p>이차원 배열로 품</p>\n<pre><code>* D[i][j] : 길이 i, 마지막 숫자가 j인 계단 수의 개수\n* D[N][L] : N자리 계단수 마지막수는 L인 계단수의 개수\n* D[N][L] = D[N-1][L-1] + D[N-1][L+1] (L : 1~8)\n* D[N][0] = D[N][1]\n* D[N][9] = D[N-1][8]\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/10844\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10844</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><p>직접 <br><br>길이가 1인 계단수 <br><br>길이가 2인 계단수<br><br>…<br><br>를 하나하나 구해보니 <br><br>길이가 n인 계단 수 = 길이가 n-1인 계단수 * 2 -1 이라는 규칙이 나왔다.<br><br>하지만 계속 채점 결과는 틀렸다고 나옴.. </p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p>이차원 배열로 품</p>\n<pre><code>* D[i][j] : 길이 i, 마지막 숫자가 j인 계단 수의 개수\n* D[N][L] : N자리 계단수 마지막수는 L인 계단수의 개수\n* D[N][L] = D[N-1][L-1] + D[N-1][L+1] (L : 1~8)\n* D[N][0] = D[N][1]\n* D[N][9] = D[N-1][8]\n</code></pre>"},{"layout":"post","title":"11057:오르막수","date":"2017-09-24T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11057>\n\n## 풀이 \n\n1. 이차원 배열로 생각\n\n2. 식 세우기 ... 다음과 같이 시도했지만 정답 도출 실패..  </br>==> 답지 보고 다시 풀 예정\n\n````\nint d[n][l] : 자리수가 n 자리인 수의 마지막 수가 l인 오르막 수의 개수\nd[n][l] = d[n-1][l] + (10-l)  ( l은 0~9 )\n````\n","source":"_posts/2017-09-25-오르막수.md","raw":"---\nlayout: post\ntitle:  \"11057:오르막수\"\ndate:   2017-09-25\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11057>\n\n## 풀이 \n\n1. 이차원 배열로 생각\n\n2. 식 세우기 ... 다음과 같이 시도했지만 정답 도출 실패..  </br>==> 답지 보고 다시 풀 예정\n\n````\nint d[n][l] : 자리수가 n 자리인 수의 마지막 수가 l인 오르막 수의 개수\nd[n][l] = d[n-1][l] + (10-l)  ( l은 0~9 )\n````\n","slug":"2017-09-25-오르막수","published":1,"updated":"2018-04-16T04:03:04.110Z","comments":1,"photos":[],"link":"","_id":"cjp6k6544000w31x7pazj5fgq","content":"<p><a href=\"https://www.acmicpc.net/problem/11057\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11057</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>이차원 배열로 생각</p>\n</li>\n<li><p>식 세우기 … 다음과 같이 시도했지만 정답 도출 실패..  <br>==&gt; 답지 보고 다시 풀 예정</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int d[n][l] : 자리수가 n 자리인 수의 마지막 수가 l인 오르막 수의 개수</span><br><span class=\"line\">d[n][l] = d[n-1][l] + (10-l)  ( l은 0~9 )</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11057\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11057</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>이차원 배열로 생각</p>\n</li>\n<li><p>식 세우기 … 다음과 같이 시도했지만 정답 도출 실패..  <br>==&gt; 답지 보고 다시 풀 예정</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int d[n][l] : 자리수가 n 자리인 수의 마지막 수가 l인 오르막 수의 개수</span><br><span class=\"line\">d[n][l] = d[n-1][l] + (10-l)  ( l은 0~9 )</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"11727:2xn타일링2","date":"2017-09-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11727>\n\n## 풀이\n1. d(n) = d(n-1) + 2*d(n-2)<br>\n\n2. 재귀\n\n","source":"_posts/2017-09-20-2xn타일링2.md","raw":"---\nlayout: post\ntitle:  \"11727:2xn타일링2\"\ndate:   2017-09-20\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11727>\n\n## 풀이\n1. d(n) = d(n-1) + 2*d(n-2)<br>\n\n2. 재귀\n\n","slug":"2017-09-20-2xn타일링2","published":1,"updated":"2018-04-16T04:02:46.592Z","comments":1,"photos":[],"link":"","_id":"cjp6k6546000y31x7qo9hexi4","content":"<p><a href=\"https://www.acmicpc.net/problem/11727\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11727</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>d(n) = d(n-1) + 2*d(n-2)<br></p>\n</li>\n<li><p>재귀</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11727\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11727</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>d(n) = d(n-1) + 2*d(n-2)<br></p>\n</li>\n<li><p>재귀</p>\n</li>\n</ol>\n"},{"layout":"post","title":"express-passport","date":"2017-09-26T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n### session 등록\n\n````\napp.use(session({secret:'MySecret', resave: false, saveUninitialized:true}));\n````\n\n### passport가 등록한 session 사용하도록 등록\n\n````\napp.use(passport.initialize());\napp.use(passport.session());\n````\n\n### userSchema의 method에 authenticate 등록\n\n````\nuserSchema.methods.authenticate = function (password) {\n  var user = this;\n  return password==user.password ?  true : false;\n};\n````\n\n````\n/login으로 들어오면 passport.authenticate middle ware가 실행이 돼\n그럼 middleware의 local-login 에 의해서 \npassport에 등록된 Local Strategy 라는 객체의 인자인 콜백함수가 실행이 됨\n\nrouter.post('/login', passport.authenticate('local-login', {\n  successRedirect : '/posts',\n  failureRedirect : '/login',\n  failureFlash : true\n}));\n````\n\n### id, pwd 확인\n\n````\npassport.use('local-login',\n  new LocalStrategy({\n      usernameField : 'email',\n      passwordField : 'password',\n      passReqToCallback : true\n    },\n    function(req, email, password, done) {\n      User.findOne({ 'email' :  email }, function(err, user) {\n        if (err) return done(err);\n        if (!user){\n            req.flash(\"email\", req.body.email);\n            return done(null, false, req.flash('loginError', 'No user found.'));\n        }\n        if (!user.authenticate(password)){\n            req.flash(\"email\", req.body.email);\n            return done(null, false, req.flash('loginError', 'Password does not Match.'));\n        }\n        return done(null, user);\t//login 끝났는데 false가 아니면 login한 사용자에 대한 객체로 사용\n      });\n    }\n  )\n);\n````\n\n### passport.serializeUser 에서 등록한 call back 함수 실행\n\n````\npassport.serializeUser(function(user, done) {\n  done(null, user.id);  //현재 접근하고 있는 사용자의 user.id(db의 고유 아이디)가 session에 저장.\n});\n````\n\n### 다시 사용자가 웹에 방문하면 passport.deserializeUser에 등록된 call back 함수 실행\n\n````\npassport.deserializeUser(function(id, done) {\n  User.findById(id, function(err, user) {\n    done(err, user);\n  });\n});\n````\n","source":"_posts/2017-09-27-[express] passort.md","raw":"---\nlayout: post\ntitle:  \"express-passport\"\ndate:   2017-09-27\ncategories: node\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n### session 등록\n\n````\napp.use(session({secret:'MySecret', resave: false, saveUninitialized:true}));\n````\n\n### passport가 등록한 session 사용하도록 등록\n\n````\napp.use(passport.initialize());\napp.use(passport.session());\n````\n\n### userSchema의 method에 authenticate 등록\n\n````\nuserSchema.methods.authenticate = function (password) {\n  var user = this;\n  return password==user.password ?  true : false;\n};\n````\n\n````\n/login으로 들어오면 passport.authenticate middle ware가 실행이 돼\n그럼 middleware의 local-login 에 의해서 \npassport에 등록된 Local Strategy 라는 객체의 인자인 콜백함수가 실행이 됨\n\nrouter.post('/login', passport.authenticate('local-login', {\n  successRedirect : '/posts',\n  failureRedirect : '/login',\n  failureFlash : true\n}));\n````\n\n### id, pwd 확인\n\n````\npassport.use('local-login',\n  new LocalStrategy({\n      usernameField : 'email',\n      passwordField : 'password',\n      passReqToCallback : true\n    },\n    function(req, email, password, done) {\n      User.findOne({ 'email' :  email }, function(err, user) {\n        if (err) return done(err);\n        if (!user){\n            req.flash(\"email\", req.body.email);\n            return done(null, false, req.flash('loginError', 'No user found.'));\n        }\n        if (!user.authenticate(password)){\n            req.flash(\"email\", req.body.email);\n            return done(null, false, req.flash('loginError', 'Password does not Match.'));\n        }\n        return done(null, user);\t//login 끝났는데 false가 아니면 login한 사용자에 대한 객체로 사용\n      });\n    }\n  )\n);\n````\n\n### passport.serializeUser 에서 등록한 call back 함수 실행\n\n````\npassport.serializeUser(function(user, done) {\n  done(null, user.id);  //현재 접근하고 있는 사용자의 user.id(db의 고유 아이디)가 session에 저장.\n});\n````\n\n### 다시 사용자가 웹에 방문하면 passport.deserializeUser에 등록된 call back 함수 실행\n\n````\npassport.deserializeUser(function(id, done) {\n  User.findById(id, function(err, user) {\n    done(err, user);\n  });\n});\n````\n","slug":"2017-09-27-[express] passort","published":1,"updated":"2018-04-16T04:03:12.170Z","comments":1,"photos":[],"link":"","_id":"cjp6k6548001031x7oaownjnu","content":"<h3 id=\"session-등록\"><a href=\"#session-등록\" class=\"headerlink\" title=\"session 등록\"></a>session 등록</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(session(&#123;secret:&apos;MySecret&apos;, resave: false, saveUninitialized:true&#125;));</span><br></pre></td></tr></table></figure>\n<h3 id=\"passport가-등록한-session-사용하도록-등록\"><a href=\"#passport가-등록한-session-사용하도록-등록\" class=\"headerlink\" title=\"passport가 등록한 session 사용하도록 등록\"></a>passport가 등록한 session 사용하도록 등록</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(passport.initialize());</span><br><span class=\"line\">app.use(passport.session());</span><br></pre></td></tr></table></figure>\n<h3 id=\"userSchema의-method에-authenticate-등록\"><a href=\"#userSchema의-method에-authenticate-등록\" class=\"headerlink\" title=\"userSchema의 method에 authenticate 등록\"></a>userSchema의 method에 authenticate 등록</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">userSchema.methods.authenticate = function (password) &#123;</span><br><span class=\"line\">  var user = this;</span><br><span class=\"line\">  return password==user.password ?  true : false;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/login으로 들어오면 passport.authenticate middle ware가 실행이 돼</span><br><span class=\"line\">그럼 middleware의 local-login 에 의해서 </span><br><span class=\"line\">passport에 등록된 Local Strategy 라는 객체의 인자인 콜백함수가 실행이 됨</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&apos;/login&apos;, passport.authenticate(&apos;local-login&apos;, &#123;</span><br><span class=\"line\">  successRedirect : &apos;/posts&apos;,</span><br><span class=\"line\">  failureRedirect : &apos;/login&apos;,</span><br><span class=\"line\">  failureFlash : true</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n<h3 id=\"id-pwd-확인\"><a href=\"#id-pwd-확인\" class=\"headerlink\" title=\"id, pwd 확인\"></a>id, pwd 확인</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.use(&apos;local-login&apos;,</span><br><span class=\"line\">  new LocalStrategy(&#123;</span><br><span class=\"line\">      usernameField : &apos;email&apos;,</span><br><span class=\"line\">      passwordField : &apos;password&apos;,</span><br><span class=\"line\">      passReqToCallback : true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    function(req, email, password, done) &#123;</span><br><span class=\"line\">      User.findOne(&#123; &apos;email&apos; :  email &#125;, function(err, user) &#123;</span><br><span class=\"line\">        if (err) return done(err);</span><br><span class=\"line\">        if (!user)&#123;</span><br><span class=\"line\">            req.flash(&quot;email&quot;, req.body.email);</span><br><span class=\"line\">            return done(null, false, req.flash(&apos;loginError&apos;, &apos;No user found.&apos;));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (!user.authenticate(password))&#123;</span><br><span class=\"line\">            req.flash(&quot;email&quot;, req.body.email);</span><br><span class=\"line\">            return done(null, false, req.flash(&apos;loginError&apos;, &apos;Password does not Match.&apos;));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return done(null, user);\t//login 끝났는데 false가 아니면 login한 사용자에 대한 객체로 사용</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"passport-serializeUser-에서-등록한-call-back-함수-실행\"><a href=\"#passport-serializeUser-에서-등록한-call-back-함수-실행\" class=\"headerlink\" title=\"passport.serializeUser 에서 등록한 call back 함수 실행\"></a>passport.serializeUser 에서 등록한 call back 함수 실행</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.serializeUser(function(user, done) &#123;</span><br><span class=\"line\">  done(null, user.id);  //현재 접근하고 있는 사용자의 user.id(db의 고유 아이디)가 session에 저장.</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"다시-사용자가-웹에-방문하면-passport-deserializeUser에-등록된-call-back-함수-실행\"><a href=\"#다시-사용자가-웹에-방문하면-passport-deserializeUser에-등록된-call-back-함수-실행\" class=\"headerlink\" title=\"다시 사용자가 웹에 방문하면 passport.deserializeUser에 등록된 call back 함수 실행\"></a>다시 사용자가 웹에 방문하면 passport.deserializeUser에 등록된 call back 함수 실행</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.deserializeUser(function(id, done) &#123;</span><br><span class=\"line\">  User.findById(id, function(err, user) &#123;</span><br><span class=\"line\">    done(err, user);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h3 id=\"session-등록\"><a href=\"#session-등록\" class=\"headerlink\" title=\"session 등록\"></a>session 등록</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(session(&#123;secret:&apos;MySecret&apos;, resave: false, saveUninitialized:true&#125;));</span><br></pre></td></tr></table></figure>\n<h3 id=\"passport가-등록한-session-사용하도록-등록\"><a href=\"#passport가-등록한-session-사용하도록-등록\" class=\"headerlink\" title=\"passport가 등록한 session 사용하도록 등록\"></a>passport가 등록한 session 사용하도록 등록</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(passport.initialize());</span><br><span class=\"line\">app.use(passport.session());</span><br></pre></td></tr></table></figure>\n<h3 id=\"userSchema의-method에-authenticate-등록\"><a href=\"#userSchema의-method에-authenticate-등록\" class=\"headerlink\" title=\"userSchema의 method에 authenticate 등록\"></a>userSchema의 method에 authenticate 등록</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">userSchema.methods.authenticate = function (password) &#123;</span><br><span class=\"line\">  var user = this;</span><br><span class=\"line\">  return password==user.password ?  true : false;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/login으로 들어오면 passport.authenticate middle ware가 실행이 돼</span><br><span class=\"line\">그럼 middleware의 local-login 에 의해서 </span><br><span class=\"line\">passport에 등록된 Local Strategy 라는 객체의 인자인 콜백함수가 실행이 됨</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&apos;/login&apos;, passport.authenticate(&apos;local-login&apos;, &#123;</span><br><span class=\"line\">  successRedirect : &apos;/posts&apos;,</span><br><span class=\"line\">  failureRedirect : &apos;/login&apos;,</span><br><span class=\"line\">  failureFlash : true</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n<h3 id=\"id-pwd-확인\"><a href=\"#id-pwd-확인\" class=\"headerlink\" title=\"id, pwd 확인\"></a>id, pwd 확인</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.use(&apos;local-login&apos;,</span><br><span class=\"line\">  new LocalStrategy(&#123;</span><br><span class=\"line\">      usernameField : &apos;email&apos;,</span><br><span class=\"line\">      passwordField : &apos;password&apos;,</span><br><span class=\"line\">      passReqToCallback : true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    function(req, email, password, done) &#123;</span><br><span class=\"line\">      User.findOne(&#123; &apos;email&apos; :  email &#125;, function(err, user) &#123;</span><br><span class=\"line\">        if (err) return done(err);</span><br><span class=\"line\">        if (!user)&#123;</span><br><span class=\"line\">            req.flash(&quot;email&quot;, req.body.email);</span><br><span class=\"line\">            return done(null, false, req.flash(&apos;loginError&apos;, &apos;No user found.&apos;));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (!user.authenticate(password))&#123;</span><br><span class=\"line\">            req.flash(&quot;email&quot;, req.body.email);</span><br><span class=\"line\">            return done(null, false, req.flash(&apos;loginError&apos;, &apos;Password does not Match.&apos;));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return done(null, user);\t//login 끝났는데 false가 아니면 login한 사용자에 대한 객체로 사용</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"passport-serializeUser-에서-등록한-call-back-함수-실행\"><a href=\"#passport-serializeUser-에서-등록한-call-back-함수-실행\" class=\"headerlink\" title=\"passport.serializeUser 에서 등록한 call back 함수 실행\"></a>passport.serializeUser 에서 등록한 call back 함수 실행</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.serializeUser(function(user, done) &#123;</span><br><span class=\"line\">  done(null, user.id);  //현재 접근하고 있는 사용자의 user.id(db의 고유 아이디)가 session에 저장.</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"다시-사용자가-웹에-방문하면-passport-deserializeUser에-등록된-call-back-함수-실행\"><a href=\"#다시-사용자가-웹에-방문하면-passport-deserializeUser에-등록된-call-back-함수-실행\" class=\"headerlink\" title=\"다시 사용자가 웹에 방문하면 passport.deserializeUser에 등록된 call back 함수 실행\"></a>다시 사용자가 웹에 방문하면 passport.deserializeUser에 등록된 call back 함수 실행</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passport.deserializeUser(function(id, done) &#123;</span><br><span class=\"line\">  User.findById(id, function(err, user) &#123;</span><br><span class=\"line\">    done(err, user);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"11052:붕어빵 판매하기","date":"2017-09-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11052>\n\n## 풀이\n\nd[n] = n개 팔아서 얻을 수 있는 최대 수익 <br>\n따라서 \nmax( p[i] + d[n-i] )  \ni는 1~n\n\n","source":"_posts/2017-09-22-붕어빵판매하기.md","raw":"---\nlayout: post\ntitle:  \"11052:붕어빵 판매하기\"\ndate:   2017-09-22\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11052>\n\n## 풀이\n\nd[n] = n개 팔아서 얻을 수 있는 최대 수익 <br>\n따라서 \nmax( p[i] + d[n-i] )  \ni는 1~n\n\n","slug":"2017-09-22-붕어빵판매하기","published":1,"updated":"2018-04-16T04:02:54.897Z","comments":1,"photos":[],"link":"","_id":"cjp6k6549001231x7fmpirmx4","content":"<p><a href=\"https://www.acmicpc.net/problem/11052\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11052</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>d[n] = n개 팔아서 얻을 수 있는 최대 수익 <br><br>따라서<br>max( p[i] + d[n-i] )<br>i는 1~n</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11052\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11052</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>d[n] = n개 팔아서 얻을 수 있는 최대 수익 <br><br>따라서<br>max( p[i] + d[n-i] )<br>i는 1~n</p>\n"},{"layout":"post","title":"2193:이친수","date":"2017-09-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/2193>\n\n## 풀이 1)\n\n1. d[n][l]\n\t* 자리가 n & 끝자리가 l 인 이친수의 개수\n2. d[n][0]\n\t* d[n-1][0] + d[n-1][1]\n3. d[n][1]\n\t* d[n-1][0]\n4. ans\n\t* d[n][0]+d[n][1]        \n\n=> 근데 왜 답은 틀렸다고 나올까..?\n\n## 풀이 2)\n\n1. d[n]\n\t*  n 자리 이친수의 개수\n\t* d[n-1] + d[n-2]\n\n=> 이 방법도 틀리게 나옴\n","source":"_posts/2017-09-26-이친수.md","raw":"---\nlayout: post\ntitle:  \"2193:이친수\"\ndate:   2017-09-26\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/2193>\n\n## 풀이 1)\n\n1. d[n][l]\n\t* 자리가 n & 끝자리가 l 인 이친수의 개수\n2. d[n][0]\n\t* d[n-1][0] + d[n-1][1]\n3. d[n][1]\n\t* d[n-1][0]\n4. ans\n\t* d[n][0]+d[n][1]        \n\n=> 근데 왜 답은 틀렸다고 나올까..?\n\n## 풀이 2)\n\n1. d[n]\n\t*  n 자리 이친수의 개수\n\t* d[n-1] + d[n-2]\n\n=> 이 방법도 틀리게 나옴\n","slug":"2017-09-26-이친수","published":1,"updated":"2018-04-16T04:03:07.831Z","comments":1,"photos":[],"link":"","_id":"cjp6k654b001531x7k6urrvo9","content":"<p><a href=\"https://www.acmicpc.net/problem/2193\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2193</a></p>\n<h2 id=\"풀이-1\"><a href=\"#풀이-1\" class=\"headerlink\" title=\"풀이 1)\"></a>풀이 1)</h2><ol>\n<li>d[n][l]<ul>\n<li>자리가 n &amp; 끝자리가 l 인 이친수의 개수</li>\n</ul>\n</li>\n<li>d[n][0]<ul>\n<li>d[n-1][0] + d[n-1][1]</li>\n</ul>\n</li>\n<li>d[n][1]<ul>\n<li>d[n-1][0]</li>\n</ul>\n</li>\n<li>ans<ul>\n<li>d[n][0]+d[n][1]        </li>\n</ul>\n</li>\n</ol>\n<p>=&gt; 근데 왜 답은 틀렸다고 나올까..?</p>\n<h2 id=\"풀이-2\"><a href=\"#풀이-2\" class=\"headerlink\" title=\"풀이 2)\"></a>풀이 2)</h2><ol>\n<li>d[n]<ul>\n<li>n 자리 이친수의 개수</li>\n<li>d[n-1] + d[n-2]</li>\n</ul>\n</li>\n</ol>\n<p>=&gt; 이 방법도 틀리게 나옴</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2193\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2193</a></p>\n<h2 id=\"풀이-1\"><a href=\"#풀이-1\" class=\"headerlink\" title=\"풀이 1)\"></a>풀이 1)</h2><ol>\n<li>d[n][l]<ul>\n<li>자리가 n &amp; 끝자리가 l 인 이친수의 개수</li>\n</ul>\n</li>\n<li>d[n][0]<ul>\n<li>d[n-1][0] + d[n-1][1]</li>\n</ul>\n</li>\n<li>d[n][1]<ul>\n<li>d[n-1][0]</li>\n</ul>\n</li>\n<li>ans<ul>\n<li>d[n][0]+d[n][1]        </li>\n</ul>\n</li>\n</ol>\n<p>=&gt; 근데 왜 답은 틀렸다고 나올까..?</p>\n<h2 id=\"풀이-2\"><a href=\"#풀이-2\" class=\"headerlink\" title=\"풀이 2)\"></a>풀이 2)</h2><ol>\n<li>d[n]<ul>\n<li>n 자리 이친수의 개수</li>\n<li>d[n-1] + d[n-2]</li>\n</ul>\n</li>\n</ol>\n<p>=&gt; 이 방법도 틀리게 나옴</p>\n"},{"layout":"post","title":"9095:1,2,3더하기","date":"2017-09-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/9095>\n\n## 풀이\n\n재귀로 푸니 또 다시 런타임 에러. <br>그래서 재귀로 풀지 않음<br>\n\n핵심 : 가장 마지막에 1을 더하거나, 2를 더하거나, 3을 더하건<br>\n\n\td[n] = d[n-1] + d[n-2] + d[n-3]\n\n","source":"_posts/2017-09-21-123더하기.md","raw":"---\nlayout: post\ntitle:  \"9095:1,2,3더하기\"\ndate:   2017-09-21\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/9095>\n\n## 풀이\n\n재귀로 푸니 또 다시 런타임 에러. <br>그래서 재귀로 풀지 않음<br>\n\n핵심 : 가장 마지막에 1을 더하거나, 2를 더하거나, 3을 더하건<br>\n\n\td[n] = d[n-1] + d[n-2] + d[n-3]\n\n","slug":"2017-09-21-123더하기","published":1,"updated":"2018-04-16T04:02:50.949Z","comments":1,"photos":[],"link":"","_id":"cjp6k654d001731x7a4r3j65j","content":"<p><a href=\"https://www.acmicpc.net/problem/9095\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9095</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>재귀로 푸니 또 다시 런타임 에러. <br>그래서 재귀로 풀지 않음<br></p>\n<p>핵심 : 가장 마지막에 1을 더하거나, 2를 더하거나, 3을 더하건<br></p>\n<pre><code>d[n] = d[n-1] + d[n-2] + d[n-3]\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/9095\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9095</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>재귀로 푸니 또 다시 런타임 에러. <br>그래서 재귀로 풀지 않음<br></p>\n<p>핵심 : 가장 마지막에 1을 더하거나, 2를 더하거나, 3을 더하건<br></p>\n<pre><code>d[n] = d[n-1] + d[n-2] + d[n-3]\n</code></pre>"},{"layout":"post","title":"11053:가장 긴 증가하는 부분 수열","date":"2017-09-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11053>\n\n## 틀린 풀이\n\n1. d[n]\n\t* 첫번째 ~ n번째 값 중, \n\t* 가장 큰 수 \n2. 10 20 10 30 20 50\n\t* d[0] = 0\n\t* d[1] = 10 \n\t* d[2] = 20\n\t* d[3] = 20\n\t* d[4] = 30\n\t* d[5] = 30\n\t* d[6] = 50\n\n3. d 배열의 값이 바뀔 때를 count \n\n4. count 값이 답.\n\n## 맞는 풀이\n\nLIS 문제. 유명한 문제.\n\n- d[i]\n\t- a[1] ... a[i] 가 있을 때,\n\t- a[i]를 마지막으로 하는\n\t- 가장 긴 증가하는 부분 수열의 길이.\n\t- d[i]는 a[i] 가 반드시 포함\n\n- ~ a[j] ... a[i]\n\n\t- ~ a[j]길이 : d[j] ----> d[j]  + 1\n\n- d[i]\n\t\n\t- max( d[j] ) + 1\n\n- a[j] 와 a[i]의 관계\n\t\n\t- a[j] < a[i]\n\n```\n  i\t\t\t1     2     3     4     5     6 \na[i]\t\t10    20    10    30    20    50 \nd[i]     \t 1     2     1     3     2     4         \n\nd[4]를 예를들어,\nd[4]는 처음에 1. 왜냐하면 자기 자신하나만 있으면 길이기 1이기 때문에.\na[3]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[3] +1 = 2. 1보다 크기 때문에. d[4]=2\na[2]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[2] +1 = 3. 2보다 크기 때문에 d[4] =3 \na[1]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[1] +1 = 1. 3보다 작기 때문에 그대로\n```\n\n","source":"_posts/2017-09-29-가장긴증가부분수열 2.md","raw":"---\nlayout: post\ntitle:  \"11053:가장 긴 증가하는 부분 수열\"\ndate:   2017-09-29\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11053>\n\n## 틀린 풀이\n\n1. d[n]\n\t* 첫번째 ~ n번째 값 중, \n\t* 가장 큰 수 \n2. 10 20 10 30 20 50\n\t* d[0] = 0\n\t* d[1] = 10 \n\t* d[2] = 20\n\t* d[3] = 20\n\t* d[4] = 30\n\t* d[5] = 30\n\t* d[6] = 50\n\n3. d 배열의 값이 바뀔 때를 count \n\n4. count 값이 답.\n\n## 맞는 풀이\n\nLIS 문제. 유명한 문제.\n\n- d[i]\n\t- a[1] ... a[i] 가 있을 때,\n\t- a[i]를 마지막으로 하는\n\t- 가장 긴 증가하는 부분 수열의 길이.\n\t- d[i]는 a[i] 가 반드시 포함\n\n- ~ a[j] ... a[i]\n\n\t- ~ a[j]길이 : d[j] ----> d[j]  + 1\n\n- d[i]\n\t\n\t- max( d[j] ) + 1\n\n- a[j] 와 a[i]의 관계\n\t\n\t- a[j] < a[i]\n\n```\n  i\t\t\t1     2     3     4     5     6 \na[i]\t\t10    20    10    30    20    50 \nd[i]     \t 1     2     1     3     2     4         \n\nd[4]를 예를들어,\nd[4]는 처음에 1. 왜냐하면 자기 자신하나만 있으면 길이기 1이기 때문에.\na[3]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[3] +1 = 2. 1보다 크기 때문에. d[4]=2\na[2]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[2] +1 = 3. 2보다 크기 때문에 d[4] =3 \na[1]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[1] +1 = 1. 3보다 작기 때문에 그대로\n```\n\n","slug":"2017-09-29-가장긴증가부분수열 2","published":1,"updated":"2018-04-16T04:03:26.786Z","comments":1,"photos":[],"link":"","_id":"cjp6k654h001931x7po0pxgfo","content":"<p><a href=\"https://www.acmicpc.net/problem/11053\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11053</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li>d[n]<ul>\n<li>첫번째 ~ n번째 값 중, </li>\n<li>가장 큰 수 </li>\n</ul>\n</li>\n<li><p>10 20 10 30 20 50</p>\n<ul>\n<li>d[0] = 0</li>\n<li>d[1] = 10 </li>\n<li>d[2] = 20</li>\n<li>d[3] = 20</li>\n<li>d[4] = 30</li>\n<li>d[5] = 30</li>\n<li>d[6] = 50</li>\n</ul>\n</li>\n<li><p>d 배열의 값이 바뀔 때를 count </p>\n</li>\n<li><p>count 값이 답.</p>\n</li>\n</ol>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p>LIS 문제. 유명한 문제.</p>\n<ul>\n<li><p>d[i]</p>\n<ul>\n<li>a[1] … a[i] 가 있을 때,</li>\n<li>a[i]를 마지막으로 하는</li>\n<li>가장 긴 증가하는 부분 수열의 길이.</li>\n<li>d[i]는 a[i] 가 반드시 포함</li>\n</ul>\n</li>\n<li><p>~ a[j] … a[i]</p>\n<ul>\n<li>~ a[j]길이 : d[j] —-&gt; d[j]  + 1</li>\n</ul>\n</li>\n<li><p>d[i]</p>\n<ul>\n<li>max( d[j] ) + 1</li>\n</ul>\n</li>\n<li><p>a[j] 와 a[i]의 관계</p>\n<ul>\n<li>a[j] &lt; a[i]</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  i\t\t\t1     2     3     4     5     6 </span><br><span class=\"line\">a[i]\t\t10    20    10    30    20    50 </span><br><span class=\"line\">d[i]     \t 1     2     1     3     2     4         </span><br><span class=\"line\"></span><br><span class=\"line\">d[4]를 예를들어,</span><br><span class=\"line\">d[4]는 처음에 1. 왜냐하면 자기 자신하나만 있으면 길이기 1이기 때문에.</span><br><span class=\"line\">a[3]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[3] +1 = 2. 1보다 크기 때문에. d[4]=2</span><br><span class=\"line\">a[2]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[2] +1 = 3. 2보다 크기 때문에 d[4] =3 </span><br><span class=\"line\">a[1]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[1] +1 = 1. 3보다 작기 때문에 그대로</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11053\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11053</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li>d[n]<ul>\n<li>첫번째 ~ n번째 값 중, </li>\n<li>가장 큰 수 </li>\n</ul>\n</li>\n<li><p>10 20 10 30 20 50</p>\n<ul>\n<li>d[0] = 0</li>\n<li>d[1] = 10 </li>\n<li>d[2] = 20</li>\n<li>d[3] = 20</li>\n<li>d[4] = 30</li>\n<li>d[5] = 30</li>\n<li>d[6] = 50</li>\n</ul>\n</li>\n<li><p>d 배열의 값이 바뀔 때를 count </p>\n</li>\n<li><p>count 값이 답.</p>\n</li>\n</ol>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p>LIS 문제. 유명한 문제.</p>\n<ul>\n<li><p>d[i]</p>\n<ul>\n<li>a[1] … a[i] 가 있을 때,</li>\n<li>a[i]를 마지막으로 하는</li>\n<li>가장 긴 증가하는 부분 수열의 길이.</li>\n<li>d[i]는 a[i] 가 반드시 포함</li>\n</ul>\n</li>\n<li><p>~ a[j] … a[i]</p>\n<ul>\n<li>~ a[j]길이 : d[j] —-&gt; d[j]  + 1</li>\n</ul>\n</li>\n<li><p>d[i]</p>\n<ul>\n<li>max( d[j] ) + 1</li>\n</ul>\n</li>\n<li><p>a[j] 와 a[i]의 관계</p>\n<ul>\n<li>a[j] &lt; a[i]</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  i\t\t\t1     2     3     4     5     6 </span><br><span class=\"line\">a[i]\t\t10    20    10    30    20    50 </span><br><span class=\"line\">d[i]     \t 1     2     1     3     2     4         </span><br><span class=\"line\"></span><br><span class=\"line\">d[4]를 예를들어,</span><br><span class=\"line\">d[4]는 처음에 1. 왜냐하면 자기 자신하나만 있으면 길이기 1이기 때문에.</span><br><span class=\"line\">a[3]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[3] +1 = 2. 1보다 크기 때문에. d[4]=2</span><br><span class=\"line\">a[2]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[2] +1 = 3. 2보다 크기 때문에 d[4] =3 </span><br><span class=\"line\">a[1]을 봤더니, a[4]보다 작아. 증가하는 수열이기때문에 올 수 있어. 그럼, d[1] +1 = 1. 3보다 작기 때문에 그대로</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"2156:포도주 시식","date":"2017-09-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/2156>\n\n## 풀이 1) 이차원 배열\n\n1. d[i][j] \n\t* 1~i 번째 포도주까지 마셨을 때, 마실 수 있는 포도주의 최대 양<br>\n\ti번째 포두주 잔은 j 번 연속 마신 포도주 잔임\n\n2. a[i] \n\t* (i : 1~n)\n\t* i 번째 포도주의 양\n3. 결과 \n\t* d[n][0] = max( d[n-1][0] , d[n-1][1], d[n-1][2] )\n\t* d[n][1] = d[n-1][0] + a[n]\n\t* d[n][2] = d[n-1][1] + a[n]\n\n\n## 풀이 2) 일차원 배열\n\n1. d[i]\n\t \n\t* 1~i 번째 포도주까지 마셨을 때, 마실 수 있는 포도주의 최대 양\n\n2.  a[i]    \n\t* (i : 1~n)\n\t* i 번째 포도주의 양\n\n3. 결과\n\t* 0번 연속 : d[i] = d[i-1]\n\t* 1번 연속 : d[i] = d[i-2] + a[i]\n\t* 2번 연속 : d[i] = d[i-3] + a[i-1] + a[i]\n\n![img](http://cfile6.uf.tistory.com/image/995D6E3359CCF7B51233DF)\n","source":"_posts/2017-09-28-포도주시식.md","raw":"---\nlayout: post\ntitle:  \"2156:포도주 시식\"\ndate:   2017-09-28\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/2156>\n\n## 풀이 1) 이차원 배열\n\n1. d[i][j] \n\t* 1~i 번째 포도주까지 마셨을 때, 마실 수 있는 포도주의 최대 양<br>\n\ti번째 포두주 잔은 j 번 연속 마신 포도주 잔임\n\n2. a[i] \n\t* (i : 1~n)\n\t* i 번째 포도주의 양\n3. 결과 \n\t* d[n][0] = max( d[n-1][0] , d[n-1][1], d[n-1][2] )\n\t* d[n][1] = d[n-1][0] + a[n]\n\t* d[n][2] = d[n-1][1] + a[n]\n\n\n## 풀이 2) 일차원 배열\n\n1. d[i]\n\t \n\t* 1~i 번째 포도주까지 마셨을 때, 마실 수 있는 포도주의 최대 양\n\n2.  a[i]    \n\t* (i : 1~n)\n\t* i 번째 포도주의 양\n\n3. 결과\n\t* 0번 연속 : d[i] = d[i-1]\n\t* 1번 연속 : d[i] = d[i-2] + a[i]\n\t* 2번 연속 : d[i] = d[i-3] + a[i-1] + a[i]\n\n![img](http://cfile6.uf.tistory.com/image/995D6E3359CCF7B51233DF)\n","slug":"2017-09-28-포도주시식","published":1,"updated":"2018-04-16T04:03:21.263Z","comments":1,"photos":[],"link":"","_id":"cjp6k654j001b31x7qwmoqh9q","content":"<p><a href=\"https://www.acmicpc.net/problem/2156\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2156</a></p>\n<h2 id=\"풀이-1-이차원-배열\"><a href=\"#풀이-1-이차원-배열\" class=\"headerlink\" title=\"풀이 1) 이차원 배열\"></a>풀이 1) 이차원 배열</h2><ol>\n<li><p>d[i][j] </p>\n<ul>\n<li>1~i 번째 포도주까지 마셨을 때, 마실 수 있는 포도주의 최대 양<br><br>i번째 포두주 잔은 j 번 연속 마신 포도주 잔임</li>\n</ul>\n</li>\n<li><p>a[i] </p>\n<ul>\n<li>(i : 1~n)</li>\n<li>i 번째 포도주의 양</li>\n</ul>\n</li>\n<li>결과 <ul>\n<li>d[n][0] = max( d[n-1][0] , d[n-1][1], d[n-1][2] )</li>\n<li>d[n][1] = d[n-1][0] + a[n]</li>\n<li>d[n][2] = d[n-1][1] + a[n]</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"풀이-2-일차원-배열\"><a href=\"#풀이-2-일차원-배열\" class=\"headerlink\" title=\"풀이 2) 일차원 배열\"></a>풀이 2) 일차원 배열</h2><ol>\n<li><p>d[i]</p>\n<ul>\n<li>1~i 번째 포도주까지 마셨을 때, 마실 수 있는 포도주의 최대 양</li>\n</ul>\n</li>\n<li><p>a[i]    </p>\n<ul>\n<li>(i : 1~n)</li>\n<li>i 번째 포도주의 양</li>\n</ul>\n</li>\n<li><p>결과</p>\n<ul>\n<li>0번 연속 : d[i] = d[i-1]</li>\n<li>1번 연속 : d[i] = d[i-2] + a[i]</li>\n<li>2번 연속 : d[i] = d[i-3] + a[i-1] + a[i]</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"http://cfile6.uf.tistory.com/image/995D6E3359CCF7B51233DF\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2156\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2156</a></p>\n<h2 id=\"풀이-1-이차원-배열\"><a href=\"#풀이-1-이차원-배열\" class=\"headerlink\" title=\"풀이 1) 이차원 배열\"></a>풀이 1) 이차원 배열</h2><ol>\n<li><p>d[i][j] </p>\n<ul>\n<li>1~i 번째 포도주까지 마셨을 때, 마실 수 있는 포도주의 최대 양<br><br>i번째 포두주 잔은 j 번 연속 마신 포도주 잔임</li>\n</ul>\n</li>\n<li><p>a[i] </p>\n<ul>\n<li>(i : 1~n)</li>\n<li>i 번째 포도주의 양</li>\n</ul>\n</li>\n<li>결과 <ul>\n<li>d[n][0] = max( d[n-1][0] , d[n-1][1], d[n-1][2] )</li>\n<li>d[n][1] = d[n-1][0] + a[n]</li>\n<li>d[n][2] = d[n-1][1] + a[n]</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"풀이-2-일차원-배열\"><a href=\"#풀이-2-일차원-배열\" class=\"headerlink\" title=\"풀이 2) 일차원 배열\"></a>풀이 2) 일차원 배열</h2><ol>\n<li><p>d[i]</p>\n<ul>\n<li>1~i 번째 포도주까지 마셨을 때, 마실 수 있는 포도주의 최대 양</li>\n</ul>\n</li>\n<li><p>a[i]    </p>\n<ul>\n<li>(i : 1~n)</li>\n<li>i 번째 포도주의 양</li>\n</ul>\n</li>\n<li><p>결과</p>\n<ul>\n<li>0번 연속 : d[i] = d[i-1]</li>\n<li>1번 연속 : d[i] = d[i-2] + a[i]</li>\n<li>2번 연속 : d[i] = d[i-3] + a[i-1] + a[i]</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"http://cfile6.uf.tistory.com/image/995D6E3359CCF7B51233DF\" alt=\"img\"></p>\n"},{"layout":"post","title":"11722:가장 긴 감소하는 부분 수열","date":"2017-10-01T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11722>\n\n## 풀이\n\n1. 가장 긴 증가하는 부분 수열과 동일\n\n2. 다른 점\n\t* 증가하는 수열이 아닌 감소하는 수열\n검색할 때의 조건이 자신보다 높은값만 찾으면 됨\n\t* a[j] > a[i]\n\n![img](http://cfile21.uf.tistory.com/image/99728B3359DA40F919605C)\n","source":"_posts/2017-10-02-가장긴감소하는부분수열.md","raw":"---\nlayout: post\ntitle:  \"11722:가장 긴 감소하는 부분 수열\"\ndate:   2017-10-02\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11722>\n\n## 풀이\n\n1. 가장 긴 증가하는 부분 수열과 동일\n\n2. 다른 점\n\t* 증가하는 수열이 아닌 감소하는 수열\n검색할 때의 조건이 자신보다 높은값만 찾으면 됨\n\t* a[j] > a[i]\n\n![img](http://cfile21.uf.tistory.com/image/99728B3359DA40F919605C)\n","slug":"2017-10-02-가장긴감소하는부분수열","published":1,"updated":"2018-04-16T04:03:36.333Z","comments":1,"photos":[],"link":"","_id":"cjp6k654l001d31x7d72mxkwn","content":"<p><a href=\"https://www.acmicpc.net/problem/11722\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11722</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>가장 긴 증가하는 부분 수열과 동일</p>\n</li>\n<li><p>다른 점</p>\n<ul>\n<li>증가하는 수열이 아닌 감소하는 수열<br>검색할 때의 조건이 자신보다 높은값만 찾으면 됨</li>\n<li>a[j] &gt; a[i]</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"http://cfile21.uf.tistory.com/image/99728B3359DA40F919605C\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11722\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11722</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>가장 긴 증가하는 부분 수열과 동일</p>\n</li>\n<li><p>다른 점</p>\n<ul>\n<li>증가하는 수열이 아닌 감소하는 수열<br>검색할 때의 조건이 자신보다 높은값만 찾으면 됨</li>\n<li>a[j] &gt; a[i]</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"http://cfile21.uf.tistory.com/image/99728B3359DA40F919605C\" alt=\"img\"></p>\n"},{"layout":"post","title":"9465:스티커","date":"2017-09-26T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/9465>\n\n## 풀이\n\n1. s : n열의 상태 \n\t* [0]      [1]      [2]\n\t* X        O        X\n\t* X        X        O\n\n2. d[n][s] \n\t\n\t* 2 x n 에서 얻을 수 있는 최대 점수. n열에서 뜯은 스티커는 s\n\n3. a[i][j]\n\n\t* i열 j행에 들어있는 스티커의 점수\n\n4. 결과\n\t* d[n][0] =  max( d[n-1][0] , d[n-1][1] , d[n-1][2] )\n\t* d[n][1] =  max( d[n-1][0] , d[n-1][2] ) + a[n][1]\n\t* d[n][2] =  max( d[n-1][0] , d[n-1][1] ) + a[n][2]\n\n5. 정답\n\t* max( d[n][0], d[n][1], d[n][2] )\n\n\n\n==> 어렵다. 다시 풀어야함\n","source":"_posts/2017-09-27-스티커.md","raw":"---\nlayout: post\ntitle:  \"9465:스티커\"\ndate:   2017-09-27\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/9465>\n\n## 풀이\n\n1. s : n열의 상태 \n\t* [0]      [1]      [2]\n\t* X        O        X\n\t* X        X        O\n\n2. d[n][s] \n\t\n\t* 2 x n 에서 얻을 수 있는 최대 점수. n열에서 뜯은 스티커는 s\n\n3. a[i][j]\n\n\t* i열 j행에 들어있는 스티커의 점수\n\n4. 결과\n\t* d[n][0] =  max( d[n-1][0] , d[n-1][1] , d[n-1][2] )\n\t* d[n][1] =  max( d[n-1][0] , d[n-1][2] ) + a[n][1]\n\t* d[n][2] =  max( d[n-1][0] , d[n-1][1] ) + a[n][2]\n\n5. 정답\n\t* max( d[n][0], d[n][1], d[n][2] )\n\n\n\n==> 어렵다. 다시 풀어야함\n","slug":"2017-09-27-스티커","published":1,"updated":"2018-04-16T04:03:16.916Z","comments":1,"photos":[],"link":"","_id":"cjp6k654n001f31x76a4z38r4","content":"<p><a href=\"https://www.acmicpc.net/problem/9465\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9465</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>s : n열의 상태 </p>\n<ul>\n<li>[0]      [1]      [2]</li>\n<li>X        O        X</li>\n<li>X        X        O</li>\n</ul>\n</li>\n<li><p>d[n][s] </p>\n<ul>\n<li>2 x n 에서 얻을 수 있는 최대 점수. n열에서 뜯은 스티커는 s</li>\n</ul>\n</li>\n<li><p>a[i][j]</p>\n<ul>\n<li>i열 j행에 들어있는 스티커의 점수</li>\n</ul>\n</li>\n<li><p>결과</p>\n<ul>\n<li>d[n][0] =  max( d[n-1][0] , d[n-1][1] , d[n-1][2] )</li>\n<li>d[n][1] =  max( d[n-1][0] , d[n-1][2] ) + a[n][1]</li>\n<li>d[n][2] =  max( d[n-1][0] , d[n-1][1] ) + a[n][2]</li>\n</ul>\n</li>\n<li><p>정답</p>\n<ul>\n<li>max( d[n][0], d[n][1], d[n][2] )</li>\n</ul>\n</li>\n</ol>\n<p>==&gt; 어렵다. 다시 풀어야함</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/9465\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9465</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>s : n열의 상태 </p>\n<ul>\n<li>[0]      [1]      [2]</li>\n<li>X        O        X</li>\n<li>X        X        O</li>\n</ul>\n</li>\n<li><p>d[n][s] </p>\n<ul>\n<li>2 x n 에서 얻을 수 있는 최대 점수. n열에서 뜯은 스티커는 s</li>\n</ul>\n</li>\n<li><p>a[i][j]</p>\n<ul>\n<li>i열 j행에 들어있는 스티커의 점수</li>\n</ul>\n</li>\n<li><p>결과</p>\n<ul>\n<li>d[n][0] =  max( d[n-1][0] , d[n-1][1] , d[n-1][2] )</li>\n<li>d[n][1] =  max( d[n-1][0] , d[n-1][2] ) + a[n][1]</li>\n<li>d[n][2] =  max( d[n-1][0] , d[n-1][1] ) + a[n][2]</li>\n</ul>\n</li>\n<li><p>정답</p>\n<ul>\n<li>max( d[n][0], d[n][1], d[n][2] )</li>\n</ul>\n</li>\n</ol>\n<p>==&gt; 어렵다. 다시 풀어야함</p>\n"},{"layout":"post","title":"11055:가장 큰 증가 부분 수열","date":"2017-09-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11055>\n\n## 틀린 풀이\n\n1. d[i]\n\t* a[1] ~ a[i] 중\n\t* a[i]를 포함하며,\n\t* 수열의 합\n2. i번째를 기준으로 i-1번째 ~ 1번째로 하나 하나 검색\n\n3. i번째보다 작으면 d[i]에 더함\n\n\n## 맞는 풀이\n\n1. 앞 문제와 동일하다\n\n2. 앞 문제의 조건\n\t* i < j   =>  a[i] < a[j]\n\t* max(d[j]) + 1   => 여기서 1은 길이\n3. 1을 점수로 바꿔주면 됨\n4. 햇갈리니까 표를 그리자!!\n","source":"_posts/2017-09-30-가장큰증가부분수열.md","raw":"---\nlayout: post\ntitle:  \"11055:가장 큰 증가 부분 수열\"\ndate:   2017-09-30\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11055>\n\n## 틀린 풀이\n\n1. d[i]\n\t* a[1] ~ a[i] 중\n\t* a[i]를 포함하며,\n\t* 수열의 합\n2. i번째를 기준으로 i-1번째 ~ 1번째로 하나 하나 검색\n\n3. i번째보다 작으면 d[i]에 더함\n\n\n## 맞는 풀이\n\n1. 앞 문제와 동일하다\n\n2. 앞 문제의 조건\n\t* i < j   =>  a[i] < a[j]\n\t* max(d[j]) + 1   => 여기서 1은 길이\n3. 1을 점수로 바꿔주면 됨\n4. 햇갈리니까 표를 그리자!!\n","slug":"2017-09-30-가장큰증가부분수열","published":1,"updated":"2018-04-16T04:03:31.775Z","comments":1,"photos":[],"link":"","_id":"cjp6k654o001h31x7fwt8n7x3","content":"<p><a href=\"https://www.acmicpc.net/problem/11055\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11055</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li>d[i]<ul>\n<li>a[1] ~ a[i] 중</li>\n<li>a[i]를 포함하며,</li>\n<li>수열의 합</li>\n</ul>\n</li>\n<li><p>i번째를 기준으로 i-1번째 ~ 1번째로 하나 하나 검색</p>\n</li>\n<li><p>i번째보다 작으면 d[i]에 더함</p>\n</li>\n</ol>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ol>\n<li><p>앞 문제와 동일하다</p>\n</li>\n<li><p>앞 문제의 조건</p>\n<ul>\n<li>i &lt; j   =&gt;  a[i] &lt; a[j]</li>\n<li>max(d[j]) + 1   =&gt; 여기서 1은 길이</li>\n</ul>\n</li>\n<li>1을 점수로 바꿔주면 됨</li>\n<li>햇갈리니까 표를 그리자!!</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11055\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11055</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li>d[i]<ul>\n<li>a[1] ~ a[i] 중</li>\n<li>a[i]를 포함하며,</li>\n<li>수열의 합</li>\n</ul>\n</li>\n<li><p>i번째를 기준으로 i-1번째 ~ 1번째로 하나 하나 검색</p>\n</li>\n<li><p>i번째보다 작으면 d[i]에 더함</p>\n</li>\n</ol>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ol>\n<li><p>앞 문제와 동일하다</p>\n</li>\n<li><p>앞 문제의 조건</p>\n<ul>\n<li>i &lt; j   =&gt;  a[i] &lt; a[j]</li>\n<li>max(d[j]) + 1   =&gt; 여기서 1은 길이</li>\n</ul>\n</li>\n<li>1을 점수로 바꿔주면 됨</li>\n<li>햇갈리니까 표를 그리자!!</li>\n</ol>\n"},{"layout":"post","title":"1934:최소공배수","date":"2017-10-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1934>\n\n## 풀이\n\n1. 최대공약수를 구한다\n2. 최소 공배수 = 두 수의 곱 / 최대공약수\n\n\n\n","source":"_posts/2017-10-05-최소공배수.md","raw":"---\nlayout: post\ntitle:  \"1934:최소공배수\"\ndate:   2017-10-05\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1934>\n\n## 풀이\n\n1. 최대공약수를 구한다\n2. 최소 공배수 = 두 수의 곱 / 최대공약수\n\n\n\n","slug":"2017-10-05-최소공배수","published":1,"updated":"2018-04-16T04:03:47.954Z","comments":1,"photos":[],"link":"","_id":"cjp6k654p001j31x7sjepy13w","content":"<p><a href=\"https://www.acmicpc.net/problem/1934\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1934</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>최대공약수를 구한다</li>\n<li>최소 공배수 = 두 수의 곱 / 최대공약수</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1934\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1934</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>최대공약수를 구한다</li>\n<li>최소 공배수 = 두 수의 곱 / 최대공약수</li>\n</ol>\n"},{"layout":"post","title":"9613:GCD합","date":"2017-10-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/9613>\n\n## 풀이\n\n1) GCD 구하는 함수를 만든다\n\n2) 모든 쌍을 반복문 통해서 확인\n\n3) 더해서 출력\n\n","source":"_posts/2017-10-06-GCD합.md","raw":"---\nlayout: post\ntitle:  \"9613:GCD합\"\ndate:   2017-10-06\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/9613>\n\n## 풀이\n\n1) GCD 구하는 함수를 만든다\n\n2) 모든 쌍을 반복문 통해서 확인\n\n3) 더해서 출력\n\n","slug":"2017-10-06-GCD합","published":1,"updated":"2018-04-16T04:03:51.734Z","comments":1,"photos":[],"link":"","_id":"cjp6k654q001l31x798h2f51z","content":"<p><a href=\"https://www.acmicpc.net/problem/9613\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9613</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>1) GCD 구하는 함수를 만든다</p>\n<p>2) 모든 쌍을 반복문 통해서 확인</p>\n<p>3) 더해서 출력</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/9613\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9613</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>1) GCD 구하는 함수를 만든다</p>\n<p>2) 모든 쌍을 반복문 통해서 확인</p>\n<p>3) 더해서 출력</p>\n"},{"layout":"post","title":"11005:진법변환2","date":"2017-10-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11005>\n\n## 풀이\n\n1. 몇 번 나누는지 count\n\n2. count 만큼 배열 생성\n3. 생성한 배열에 n%b를 차례대로 저장\n4. n 은 n/b를 새로 저장\n5. n이 0보다 클때까지 3번4번을 반복 실행\n6. 값들을 저장한 배열의 값을 index 끝부터 0까지 차례대로 출력\n7. 그런데, 해당 index의 값이 10보다 큰경우는\n8. char(값+55) 로 출력\n\n````\nStringBuilder ans = new StringBuilder();\n        while (n > 0) {\n            int r = n % b;\n            if (r < 10) {\n                ans.append((char)(r + '0'));\n            } else {\n                ans.append((char)(r - 10 + 'A'));\n            }\n            n /= b;\n        }\n        System.out.println(ans.reverse());\n    }\n````\n\n","source":"_posts/2017-10-07-진법변환2.md","raw":"---\nlayout: post\ntitle:  \"11005:진법변환2\"\ndate:   2017-10-08\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11005>\n\n## 풀이\n\n1. 몇 번 나누는지 count\n\n2. count 만큼 배열 생성\n3. 생성한 배열에 n%b를 차례대로 저장\n4. n 은 n/b를 새로 저장\n5. n이 0보다 클때까지 3번4번을 반복 실행\n6. 값들을 저장한 배열의 값을 index 끝부터 0까지 차례대로 출력\n7. 그런데, 해당 index의 값이 10보다 큰경우는\n8. char(값+55) 로 출력\n\n````\nStringBuilder ans = new StringBuilder();\n        while (n > 0) {\n            int r = n % b;\n            if (r < 10) {\n                ans.append((char)(r + '0'));\n            } else {\n                ans.append((char)(r - 10 + 'A'));\n            }\n            n /= b;\n        }\n        System.out.println(ans.reverse());\n    }\n````\n\n","slug":"2017-10-07-진법변환2","published":1,"updated":"2018-04-16T04:03:56.151Z","comments":1,"photos":[],"link":"","_id":"cjp6k654s001n31x76h5v6k00","content":"<p><a href=\"https://www.acmicpc.net/problem/11005\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11005</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>몇 번 나누는지 count</p>\n</li>\n<li><p>count 만큼 배열 생성</p>\n</li>\n<li>생성한 배열에 n%b를 차례대로 저장</li>\n<li>n 은 n/b를 새로 저장</li>\n<li>n이 0보다 클때까지 3번4번을 반복 실행</li>\n<li>값들을 저장한 배열의 값을 index 끝부터 0까지 차례대로 출력</li>\n<li>그런데, 해당 index의 값이 10보다 큰경우는</li>\n<li>char(값+55) 로 출력</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StringBuilder ans = new StringBuilder();</span><br><span class=\"line\">        while (n &gt; 0) &#123;</span><br><span class=\"line\">            int r = n % b;</span><br><span class=\"line\">            if (r &lt; 10) &#123;</span><br><span class=\"line\">                ans.append((char)(r + &apos;0&apos;));</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                ans.append((char)(r - 10 + &apos;A&apos;));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            n /= b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(ans.reverse());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11005\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11005</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>몇 번 나누는지 count</p>\n</li>\n<li><p>count 만큼 배열 생성</p>\n</li>\n<li>생성한 배열에 n%b를 차례대로 저장</li>\n<li>n 은 n/b를 새로 저장</li>\n<li>n이 0보다 클때까지 3번4번을 반복 실행</li>\n<li>값들을 저장한 배열의 값을 index 끝부터 0까지 차례대로 출력</li>\n<li>그런데, 해당 index의 값이 10보다 큰경우는</li>\n<li>char(값+55) 로 출력</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StringBuilder ans = new StringBuilder();</span><br><span class=\"line\">        while (n &gt; 0) &#123;</span><br><span class=\"line\">            int r = n % b;</span><br><span class=\"line\">            if (r &lt; 10) &#123;</span><br><span class=\"line\">                ans.append((char)(r + &apos;0&apos;));</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                ans.append((char)(r - 10 + &apos;A&apos;));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            n /= b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(ans.reverse());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"1430:나머지","date":"2017-10-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1430>\n\n## 풀이\n\n1. 그냥 풀면 됨\n\n2. 이 문제는 풀이가 의미 있는 것이 아니라, \n문제 자체가 의미 있음. \n문제 자체가 알고리즘 풀 때 쓰임.\n\n3. 다이나믹 문제 풀다가\n int , long long 범위를 넘기 때문에 정답을 \n \n ````\n %100007\n ````\n 이렇게 구하는 문제가 있음.\n이것은,\n전체 정답을 구하고 나머지 출력하는것이 아님.\n중간에 정수 범위를 넘어가기 때문에\n중간 중간 나머지 연산 처리 해야함.\n","source":"_posts/2017-10-03-나머지.md","raw":"---\nlayout: post\ntitle:  \"1430:나머지\"\ndate:   2017-10-03\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1430>\n\n## 풀이\n\n1. 그냥 풀면 됨\n\n2. 이 문제는 풀이가 의미 있는 것이 아니라, \n문제 자체가 의미 있음. \n문제 자체가 알고리즘 풀 때 쓰임.\n\n3. 다이나믹 문제 풀다가\n int , long long 범위를 넘기 때문에 정답을 \n \n ````\n %100007\n ````\n 이렇게 구하는 문제가 있음.\n이것은,\n전체 정답을 구하고 나머지 출력하는것이 아님.\n중간에 정수 범위를 넘어가기 때문에\n중간 중간 나머지 연산 처리 해야함.\n","slug":"2017-10-03-나머지","published":1,"updated":"2018-04-16T04:03:40.150Z","comments":1,"photos":[],"link":"","_id":"cjp6k654z001p31x76xpp1vt5","content":"<p><a href=\"https://www.acmicpc.net/problem/1430\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1430</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>그냥 풀면 됨</p>\n</li>\n<li><p>이 문제는 풀이가 의미 있는 것이 아니라,<br>문제 자체가 의미 있음.<br>문제 자체가 알고리즘 풀 때 쓰임.</p>\n</li>\n<li><p>다이나믹 문제 풀다가<br>int , long long 범위를 넘기 때문에 정답을 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%100007</span><br></pre></td></tr></table></figure>\n<p>이렇게 구하는 문제가 있음.<br>이것은,<br>전체 정답을 구하고 나머지 출력하는것이 아님.<br>중간에 정수 범위를 넘어가기 때문에<br>중간 중간 나머지 연산 처리 해야함.</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1430\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1430</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>그냥 풀면 됨</p>\n</li>\n<li><p>이 문제는 풀이가 의미 있는 것이 아니라,<br>문제 자체가 의미 있음.<br>문제 자체가 알고리즘 풀 때 쓰임.</p>\n</li>\n<li><p>다이나믹 문제 풀다가<br>int , long long 범위를 넘기 때문에 정답을 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%100007</span><br></pre></td></tr></table></figure>\n<p>이렇게 구하는 문제가 있음.<br>이것은,<br>전체 정답을 구하고 나머지 출력하는것이 아님.<br>중간에 정수 범위를 넘어가기 때문에<br>중간 중간 나머지 연산 처리 해야함.</p>\n</li>\n</ol>\n"},{"layout":"post","title":"2609:최대공약수와 최소공배수","date":"2017-10-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n\n<https://www.acmicpc.net/problem/2609>\n\n## 풀이\n\n1. 유클리드 호제법 이용\n\n2. r = a%b \n3. gcd(a , b) == gcd (b, r)\n4. r==0 이면\n이때 b가 gcd\n\n\n\n\n\n\t\n","source":"_posts/2017-10-04-최대공약수와 최소공배수.md","raw":"---\nlayout: post\ntitle:  \"2609:최대공약수와 최소공배수\"\ndate:   2017-10-04\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n\n<https://www.acmicpc.net/problem/2609>\n\n## 풀이\n\n1. 유클리드 호제법 이용\n\n2. r = a%b \n3. gcd(a , b) == gcd (b, r)\n4. r==0 이면\n이때 b가 gcd\n\n\n\n\n\n\t\n","slug":"2017-10-04-최대공약수와 최소공배수","published":1,"updated":"2018-04-16T04:03:44.176Z","comments":1,"photos":[],"link":"","_id":"cjp6k6553001r31x7h65han06","content":"<p><a href=\"https://www.acmicpc.net/problem/2609\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2609</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>유클리드 호제법 이용</p>\n</li>\n<li><p>r = a%b </p>\n</li>\n<li>gcd(a , b) == gcd (b, r)</li>\n<li>r==0 이면<br>이때 b가 gcd</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2609\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2609</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>유클리드 호제법 이용</p>\n</li>\n<li><p>r = a%b </p>\n</li>\n<li>gcd(a , b) == gcd (b, r)</li>\n<li>r==0 이면<br>이때 b가 gcd</li>\n</ol>\n"},{"layout":"post","title":"login-token authentication","date":"2017-10-09T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n- 클라이언트가 로그인을 하면\n\n- 클라이언트는 서버로부터 jwt 토큰을 받음\n\n- 클라이언트가 api 요청을 할때마다\n\n- token을 서버에게 보냄 \n\n- 서버에서는\n\n- api 요청을 수행함\n\n\n","source":"_posts/2017-10-10-login-token authentication.md","raw":"---\nlayout: post\ntitle:  \"login-token authentication\"\ndate:   2017-10-10\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n- 클라이언트가 로그인을 하면\n\n- 클라이언트는 서버로부터 jwt 토큰을 받음\n\n- 클라이언트가 api 요청을 할때마다\n\n- token을 서버에게 보냄 \n\n- 서버에서는\n\n- api 요청을 수행함\n\n\n","slug":"2017-10-10-login-token authentication","published":1,"updated":"2018-04-16T04:04:08.366Z","comments":1,"photos":[],"link":"","_id":"cjp6k6556001t31x7q7bz1mkf","content":"<ul>\n<li><p>클라이언트가 로그인을 하면</p>\n</li>\n<li><p>클라이언트는 서버로부터 jwt 토큰을 받음</p>\n</li>\n<li><p>클라이언트가 api 요청을 할때마다</p>\n</li>\n<li><p>token을 서버에게 보냄 </p>\n</li>\n<li><p>서버에서는</p>\n</li>\n<li><p>api 요청을 수행함</p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>클라이언트가 로그인을 하면</p>\n</li>\n<li><p>클라이언트는 서버로부터 jwt 토큰을 받음</p>\n</li>\n<li><p>클라이언트가 api 요청을 할때마다</p>\n</li>\n<li><p>token을 서버에게 보냄 </p>\n</li>\n<li><p>서버에서는</p>\n</li>\n<li><p>api 요청을 수행함</p>\n</li>\n</ul>\n"},{"layout":"post","title":"bcrypt-password 암호화","date":"2017-10-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n- 회원가입 할 때\n\n- password를 hashing 하여 \n\n- 회원 생성\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/23.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/24.png)\n\n\n\n","source":"_posts/2017-10-11-bcrypt-password 암호화.md","raw":"---\nlayout: post\ntitle:  \"bcrypt-password 암호화\"\ndate:   2017-10-11\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n- 회원가입 할 때\n\n- password를 hashing 하여 \n\n- 회원 생성\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/23.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/24.png)\n\n\n\n","slug":"2017-10-11-bcrypt-password 암호화","published":1,"updated":"2018-04-16T04:04:12.652Z","comments":1,"photos":[],"link":"","_id":"cjp6k6557001v31x7g0agj6n7","content":"<ul>\n<li><p>회원가입 할 때</p>\n</li>\n<li><p>password를 hashing 하여 </p>\n</li>\n<li><p>회원 생성</p>\n<p>  <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/23.png\" alt=\"img\"></p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/24.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>회원가입 할 때</p>\n</li>\n<li><p>password를 hashing 하여 </p>\n</li>\n<li><p>회원 생성</p>\n<p>  <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/23.png\" alt=\"img\"></p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/24.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"2089:이진수","date":"2017-10-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/2089>\n\n## 풀이\n\n1. 일반적인 진법 변환이랑 같음\n\n2. -2로 계속 나누어감\n3. 양수냐 음수냐가 중요 \n\n![img](http://cfile10.uf.tistory.com/image/99B47E3359DE3510229328)\n","source":"_posts/2017-10-11-이진수.md","raw":"---\nlayout: post\ntitle:  \"2089:이진수\"\ndate:   2017-10-11\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/2089>\n\n## 풀이\n\n1. 일반적인 진법 변환이랑 같음\n\n2. -2로 계속 나누어감\n3. 양수냐 음수냐가 중요 \n\n![img](http://cfile10.uf.tistory.com/image/99B47E3359DE3510229328)\n","slug":"2017-10-11-이진수","published":1,"updated":"2018-04-16T04:04:17.016Z","comments":1,"photos":[],"link":"","_id":"cjp6k6559001x31x7fx6dny9w","content":"<p><a href=\"https://www.acmicpc.net/problem/2089\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2089</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>일반적인 진법 변환이랑 같음</p>\n</li>\n<li><p>-2로 계속 나누어감</p>\n</li>\n<li>양수냐 음수냐가 중요 </li>\n</ol>\n<p><img src=\"http://cfile10.uf.tistory.com/image/99B47E3359DE3510229328\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2089\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2089</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>일반적인 진법 변환이랑 같음</p>\n</li>\n<li><p>-2로 계속 나누어감</p>\n</li>\n<li>양수냐 음수냐가 중요 </li>\n</ol>\n<p><img src=\"http://cfile10.uf.tistory.com/image/99B47E3359DE3510229328\" alt=\"img\"></p>\n"},{"layout":"post","title":"11576:base conversion","date":"2017-10-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11576>\n\n## 틀린 풀이\n\n* a 진법 -> 10진법 -> b진법\n* 다음과 같이 풀면 틀렸다고 나옴.\n\n![img](http://cfile9.uf.tistory.com/image/994C503359DF6E021AA0A8)\n\n\n## 맞는 풀이\n\n![img](http://cfile23.uf.tistory.com/image/99FDC63359DF6E222CDB02)\n","source":"_posts/2017-10-12-baseconversion.md","raw":"---\nlayout: post\ntitle:  \"11576:base conversion\"\ndate:   2017-10-12\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11576>\n\n## 틀린 풀이\n\n* a 진법 -> 10진법 -> b진법\n* 다음과 같이 풀면 틀렸다고 나옴.\n\n![img](http://cfile9.uf.tistory.com/image/994C503359DF6E021AA0A8)\n\n\n## 맞는 풀이\n\n![img](http://cfile23.uf.tistory.com/image/99FDC63359DF6E222CDB02)\n","slug":"2017-10-12-baseconversion","published":1,"updated":"2018-04-16T04:04:21.984Z","comments":1,"photos":[],"link":"","_id":"cjp6k655b001z31x7mnf5mef9","content":"<p><a href=\"https://www.acmicpc.net/problem/11576\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11576</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>a 진법 -&gt; 10진법 -&gt; b진법</li>\n<li>다음과 같이 풀면 틀렸다고 나옴.</li>\n</ul>\n<p><img src=\"http://cfile9.uf.tistory.com/image/994C503359DF6E021AA0A8\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p><img src=\"http://cfile23.uf.tistory.com/image/99FDC63359DF6E222CDB02\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11576\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11576</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>a 진법 -&gt; 10진법 -&gt; b진법</li>\n<li>다음과 같이 풀면 틀렸다고 나옴.</li>\n</ul>\n<p><img src=\"http://cfile9.uf.tistory.com/image/994C503359DF6E021AA0A8\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p><img src=\"http://cfile23.uf.tistory.com/image/99FDC63359DF6E222CDB02\" alt=\"img\"></p>\n"},{"layout":"post","title":"1912:연속합","date":"2017-10-16T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1912>\n\n## 풀이\n\n1. d[n] \na[n]을 마지막으로 하는 연속하는 수들의 합 중 가장 큰 수 \n\n2. 예를들어,\n10 -4 3 1 5 6 -35 12 21 -1 \n\n3. d[4]\n\t* 5\n\t* 5\t+ 1\n\t* 5 + 1 + 3\n\t* 5 + 1 + 3 -1\n\t* 5 + 1 + 3 -1 -4\n\t* 5 + 1 + 3 -1 -4 + 10\n\t* 중 가장 큰 값\n\n4. 여기서 dp 문제라고 파악해야함\n\n5. 왜냐하면,\n\n6. d[3] 은\n\t* 1\n\t* 1 + 3\n\t* 1 + 3 - 4\n\t* 1 + 3 - 4 + 10 \n\t* 이기 때문이다. \n\t* d[3]이 d[4] 구할때 쓰임\n\n7. 따라서\nd[4] = max ( a[4] , a[4]+d[3] )\n\n8. 즉,\nd[n] = max ( a[n], a[n]+d[n-1] )\n\n\n![img](http://cfile30.uf.tistory.com/image/99C01A3359E5FBAE21B896)\n\n","source":"_posts/2017-10-17-연속합.md","raw":"---\nlayout: post\ntitle:  \"1912:연속합\"\ndate:   2017-10-17\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1912>\n\n## 풀이\n\n1. d[n] \na[n]을 마지막으로 하는 연속하는 수들의 합 중 가장 큰 수 \n\n2. 예를들어,\n10 -4 3 1 5 6 -35 12 21 -1 \n\n3. d[4]\n\t* 5\n\t* 5\t+ 1\n\t* 5 + 1 + 3\n\t* 5 + 1 + 3 -1\n\t* 5 + 1 + 3 -1 -4\n\t* 5 + 1 + 3 -1 -4 + 10\n\t* 중 가장 큰 값\n\n4. 여기서 dp 문제라고 파악해야함\n\n5. 왜냐하면,\n\n6. d[3] 은\n\t* 1\n\t* 1 + 3\n\t* 1 + 3 - 4\n\t* 1 + 3 - 4 + 10 \n\t* 이기 때문이다. \n\t* d[3]이 d[4] 구할때 쓰임\n\n7. 따라서\nd[4] = max ( a[4] , a[4]+d[3] )\n\n8. 즉,\nd[n] = max ( a[n], a[n]+d[n-1] )\n\n\n![img](http://cfile30.uf.tistory.com/image/99C01A3359E5FBAE21B896)\n\n","slug":"2017-10-17-연속합","published":1,"updated":"2018-04-16T04:04:35.422Z","comments":1,"photos":[],"link":"","_id":"cjp6k655c002131x7j11ggcnr","content":"<p><a href=\"https://www.acmicpc.net/problem/1912\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1912</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>d[n]<br>a[n]을 마지막으로 하는 연속하는 수들의 합 중 가장 큰 수 </p>\n</li>\n<li><p>예를들어,<br>10 -4 3 1 5 6 -35 12 21 -1 </p>\n</li>\n<li><p>d[4]</p>\n<ul>\n<li>5</li>\n<li>5    + 1</li>\n<li>5 + 1 + 3</li>\n<li>5 + 1 + 3 -1</li>\n<li>5 + 1 + 3 -1 -4</li>\n<li>5 + 1 + 3 -1 -4 + 10</li>\n<li>중 가장 큰 값</li>\n</ul>\n</li>\n<li><p>여기서 dp 문제라고 파악해야함</p>\n</li>\n<li><p>왜냐하면,</p>\n</li>\n<li><p>d[3] 은</p>\n<ul>\n<li>1</li>\n<li>1 + 3</li>\n<li>1 + 3 - 4</li>\n<li>1 + 3 - 4 + 10 </li>\n<li>이기 때문이다. </li>\n<li>d[3]이 d[4] 구할때 쓰임</li>\n</ul>\n</li>\n<li><p>따라서<br>d[4] = max ( a[4] , a[4]+d[3] )</p>\n</li>\n<li><p>즉,<br>d[n] = max ( a[n], a[n]+d[n-1] )</p>\n</li>\n</ol>\n<p><img src=\"http://cfile30.uf.tistory.com/image/99C01A3359E5FBAE21B896\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1912\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1912</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>d[n]<br>a[n]을 마지막으로 하는 연속하는 수들의 합 중 가장 큰 수 </p>\n</li>\n<li><p>예를들어,<br>10 -4 3 1 5 6 -35 12 21 -1 </p>\n</li>\n<li><p>d[4]</p>\n<ul>\n<li>5</li>\n<li>5    + 1</li>\n<li>5 + 1 + 3</li>\n<li>5 + 1 + 3 -1</li>\n<li>5 + 1 + 3 -1 -4</li>\n<li>5 + 1 + 3 -1 -4 + 10</li>\n<li>중 가장 큰 값</li>\n</ul>\n</li>\n<li><p>여기서 dp 문제라고 파악해야함</p>\n</li>\n<li><p>왜냐하면,</p>\n</li>\n<li><p>d[3] 은</p>\n<ul>\n<li>1</li>\n<li>1 + 3</li>\n<li>1 + 3 - 4</li>\n<li>1 + 3 - 4 + 10 </li>\n<li>이기 때문이다. </li>\n<li>d[3]이 d[4] 구할때 쓰임</li>\n</ul>\n</li>\n<li><p>따라서<br>d[4] = max ( a[4] , a[4]+d[3] )</p>\n</li>\n<li><p>즉,<br>d[n] = max ( a[n], a[n]+d[n-1] )</p>\n</li>\n</ol>\n<p><img src=\"http://cfile30.uf.tistory.com/image/99C01A3359E5FBAE21B896\" alt=\"img\"></p>\n"},{"layout":"post","title":"2745:진법변환","date":"2017-10-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1912>\n\n## 틀린 풀이\n\n1. 수학에서 진법 변확 하는 방식으로 풀면 됨\n\n2. 수는 string 으로 , 진법은 int 로 입력 받음 \n(string으로 받아 각 자리에 접근하고, 자릿수를 쉽게 파악하기 위해)\n\n3. 각 자리 수에 접근하여 int로 입력받은 수의 자릿수 제곱을 곱하여 \n\n4. 더함\n\n![img](http://cfile29.uf.tistory.com/image/99F8273359DA31220B49CF)\n\n## 맞는 풀이\n\n![img](http://cfile26.uf.tistory.com/image/99B3C33359DA36C51E06C7)\n\n","source":"_posts/2017-10-08-진법변환.md","raw":"---\nlayout: post\ntitle:  \"2745:진법변환\"\ndate:   2017-10-08\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1912>\n\n## 틀린 풀이\n\n1. 수학에서 진법 변확 하는 방식으로 풀면 됨\n\n2. 수는 string 으로 , 진법은 int 로 입력 받음 \n(string으로 받아 각 자리에 접근하고, 자릿수를 쉽게 파악하기 위해)\n\n3. 각 자리 수에 접근하여 int로 입력받은 수의 자릿수 제곱을 곱하여 \n\n4. 더함\n\n![img](http://cfile29.uf.tistory.com/image/99F8273359DA31220B49CF)\n\n## 맞는 풀이\n\n![img](http://cfile26.uf.tistory.com/image/99B3C33359DA36C51E06C7)\n\n","slug":"2017-10-08-진법변환","published":1,"updated":"2018-04-16T04:04:02.635Z","comments":1,"photos":[],"link":"","_id":"cjp6k655f002331x7taagsq0z","content":"<p><a href=\"https://www.acmicpc.net/problem/1912\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1912</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>수학에서 진법 변확 하는 방식으로 풀면 됨</p>\n</li>\n<li><p>수는 string 으로 , 진법은 int 로 입력 받음<br>(string으로 받아 각 자리에 접근하고, 자릿수를 쉽게 파악하기 위해)</p>\n</li>\n<li><p>각 자리 수에 접근하여 int로 입력받은 수의 자릿수 제곱을 곱하여 </p>\n</li>\n<li><p>더함</p>\n</li>\n</ol>\n<p><img src=\"http://cfile29.uf.tistory.com/image/99F8273359DA31220B49CF\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p><img src=\"http://cfile26.uf.tistory.com/image/99B3C33359DA36C51E06C7\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1912\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1912</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>수학에서 진법 변확 하는 방식으로 풀면 됨</p>\n</li>\n<li><p>수는 string 으로 , 진법은 int 로 입력 받음<br>(string으로 받아 각 자리에 접근하고, 자릿수를 쉽게 파악하기 위해)</p>\n</li>\n<li><p>각 자리 수에 접근하여 int로 입력받은 수의 자릿수 제곱을 곱하여 </p>\n</li>\n<li><p>더함</p>\n</li>\n</ol>\n<p><img src=\"http://cfile29.uf.tistory.com/image/99F8273359DA31220B49CF\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p><img src=\"http://cfile26.uf.tistory.com/image/99B3C33359DA36C51E06C7\" alt=\"img\"></p>\n"},{"layout":"post","title":"network","date":"2017-10-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n1. kt service provider는 a 사무실의 router에게\n\n2. 63.1~ 이렇게 부여\n\n3. a 사무실의 router는 각 pc에게 \n\n4. 192.168.~.1, 192.168.~.2, 192.168.~.3, 192.1.~.4 이렇게 부여\n\n5. a 사무실의 pc1이 pc2에 접근 할 수 있는 이유 : 같은 router 공유하기 때문.\n\n6. localhost:port (domain) == 127.0.0.1:port. (ip)   <== 오직 내 네트워크 환경. 외부에서 접근 불가\n\n7. B사무실의 pc1이 A사무실의 pc1에 접근 하기위해서는\n\n8. A 사무실의 router ip를 알아야하고\n\n9. A 사무실에서는, 외부에서 특정 port로 접속시에 \n\n10. 이 pc로 가라~ 라고 설정해야함    \n\n","source":"_posts/2017-10-13-network.md","raw":"---\nlayout: post\ntitle:  \"network\"\ndate:   2017-10-13\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n1. kt service provider는 a 사무실의 router에게\n\n2. 63.1~ 이렇게 부여\n\n3. a 사무실의 router는 각 pc에게 \n\n4. 192.168.~.1, 192.168.~.2, 192.168.~.3, 192.1.~.4 이렇게 부여\n\n5. a 사무실의 pc1이 pc2에 접근 할 수 있는 이유 : 같은 router 공유하기 때문.\n\n6. localhost:port (domain) == 127.0.0.1:port. (ip)   <== 오직 내 네트워크 환경. 외부에서 접근 불가\n\n7. B사무실의 pc1이 A사무실의 pc1에 접근 하기위해서는\n\n8. A 사무실의 router ip를 알아야하고\n\n9. A 사무실에서는, 외부에서 특정 port로 접속시에 \n\n10. 이 pc로 가라~ 라고 설정해야함    \n\n","slug":"2017-10-13-network","published":1,"updated":"2018-04-16T04:04:26.970Z","comments":1,"photos":[],"link":"","_id":"cjp6k655i002531x7pyv6jqx8","content":"<ol>\n<li><p>kt service provider는 a 사무실의 router에게</p>\n</li>\n<li><p>63.1~ 이렇게 부여</p>\n</li>\n<li><p>a 사무실의 router는 각 pc에게 </p>\n</li>\n<li><p>192.168.~.1, 192.168.~.2, 192.168.~.3, 192.1.~.4 이렇게 부여</p>\n</li>\n<li><p>a 사무실의 pc1이 pc2에 접근 할 수 있는 이유 : 같은 router 공유하기 때문.</p>\n</li>\n<li><p>localhost:port (domain) == 127.0.0.1:port. (ip)   &lt;== 오직 내 네트워크 환경. 외부에서 접근 불가</p>\n</li>\n<li><p>B사무실의 pc1이 A사무실의 pc1에 접근 하기위해서는</p>\n</li>\n<li><p>A 사무실의 router ip를 알아야하고</p>\n</li>\n<li><p>A 사무실에서는, 외부에서 특정 port로 접속시에 </p>\n</li>\n<li><p>이 pc로 가라~ 라고 설정해야함    </p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ol>\n<li><p>kt service provider는 a 사무실의 router에게</p>\n</li>\n<li><p>63.1~ 이렇게 부여</p>\n</li>\n<li><p>a 사무실의 router는 각 pc에게 </p>\n</li>\n<li><p>192.168.~.1, 192.168.~.2, 192.168.~.3, 192.1.~.4 이렇게 부여</p>\n</li>\n<li><p>a 사무실의 pc1이 pc2에 접근 할 수 있는 이유 : 같은 router 공유하기 때문.</p>\n</li>\n<li><p>localhost:port (domain) == 127.0.0.1:port. (ip)   &lt;== 오직 내 네트워크 환경. 외부에서 접근 불가</p>\n</li>\n<li><p>B사무실의 pc1이 A사무실의 pc1에 접근 하기위해서는</p>\n</li>\n<li><p>A 사무실의 router ip를 알아야하고</p>\n</li>\n<li><p>A 사무실에서는, 외부에서 특정 port로 접속시에 </p>\n</li>\n<li><p>이 pc로 가라~ 라고 설정해야함    </p>\n</li>\n</ol>\n"},{"layout":"post","title":"1699:제곱수의 합","date":"2017-10-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1699>\n\n## 틀린 풀이\n\n1. d[i] = i의 제곱수의 항의 최소 개수\n\n2. n과 가장 가까운 제곱수를 찾음\n\n3. d[n-(n과 가장 가까운수의 제곱수)] + 1\n\n4. +1을 하는 이유\n\t* 제곱수 자체도 하나 이기 때문에\n\n5. 예를 들어\n\t* d[7]  = d[ 7 - 2^2 ] + 1 = d[3] + 1 이라고 생각했다\n\n6. 하지만, 위의 예시에서, d[3]이 가장 작은 값이라는 보장이 없다\n\n7. 즉, 가장 가까운 제곱수를 찾는 것이 틀림\n\n![img](http://cfile30.uf.tistory.com/image/99A19A3359E9F1261ABE35)\n\n## 맞는 풀이\n\n1. 예를 들어 ,\n\t* d[25] 를 구하려고 할때,\n\t* d[25-1^2] + 1\n\t* d[25-2^2] + 1 \n\t* d[25-3^2] + 1 \n\t* d[25-4^2] + 1 \n\n2. min 값이 답\n\n![img](http://cfile21.uf.tistory.com/image/99AB5E3359E9F1BA07555D)\n\n\n","source":"_posts/2017-10-20-제곱수의합.md","raw":"---\nlayout: post\ntitle:  \"1699:제곱수의 합\"\ndate:   2017-10-20\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1699>\n\n## 틀린 풀이\n\n1. d[i] = i의 제곱수의 항의 최소 개수\n\n2. n과 가장 가까운 제곱수를 찾음\n\n3. d[n-(n과 가장 가까운수의 제곱수)] + 1\n\n4. +1을 하는 이유\n\t* 제곱수 자체도 하나 이기 때문에\n\n5. 예를 들어\n\t* d[7]  = d[ 7 - 2^2 ] + 1 = d[3] + 1 이라고 생각했다\n\n6. 하지만, 위의 예시에서, d[3]이 가장 작은 값이라는 보장이 없다\n\n7. 즉, 가장 가까운 제곱수를 찾는 것이 틀림\n\n![img](http://cfile30.uf.tistory.com/image/99A19A3359E9F1261ABE35)\n\n## 맞는 풀이\n\n1. 예를 들어 ,\n\t* d[25] 를 구하려고 할때,\n\t* d[25-1^2] + 1\n\t* d[25-2^2] + 1 \n\t* d[25-3^2] + 1 \n\t* d[25-4^2] + 1 \n\n2. min 값이 답\n\n![img](http://cfile21.uf.tistory.com/image/99AB5E3359E9F1BA07555D)\n\n\n","slug":"2017-10-20-제곱수의합","published":1,"updated":"2018-04-16T04:04:43.724Z","comments":1,"photos":[],"link":"","_id":"cjp6k655m002731x7v54o1pk9","content":"<p><a href=\"https://www.acmicpc.net/problem/1699\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1699</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>d[i] = i의 제곱수의 항의 최소 개수</p>\n</li>\n<li><p>n과 가장 가까운 제곱수를 찾음</p>\n</li>\n<li><p>d[n-(n과 가장 가까운수의 제곱수)] + 1</p>\n</li>\n<li><p>+1을 하는 이유</p>\n<ul>\n<li>제곱수 자체도 하나 이기 때문에</li>\n</ul>\n</li>\n<li><p>예를 들어</p>\n<ul>\n<li>d[7]  = d[ 7 - 2^2 ] + 1 = d[3] + 1 이라고 생각했다</li>\n</ul>\n</li>\n<li><p>하지만, 위의 예시에서, d[3]이 가장 작은 값이라는 보장이 없다</p>\n</li>\n<li><p>즉, 가장 가까운 제곱수를 찾는 것이 틀림</p>\n</li>\n</ol>\n<p><img src=\"http://cfile30.uf.tistory.com/image/99A19A3359E9F1261ABE35\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ol>\n<li><p>예를 들어 ,</p>\n<ul>\n<li>d[25] 를 구하려고 할때,</li>\n<li>d[25-1^2] + 1</li>\n<li>d[25-2^2] + 1 </li>\n<li>d[25-3^2] + 1 </li>\n<li>d[25-4^2] + 1 </li>\n</ul>\n</li>\n<li><p>min 값이 답</p>\n</li>\n</ol>\n<p><img src=\"http://cfile21.uf.tistory.com/image/99AB5E3359E9F1BA07555D\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1699\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1699</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>d[i] = i의 제곱수의 항의 최소 개수</p>\n</li>\n<li><p>n과 가장 가까운 제곱수를 찾음</p>\n</li>\n<li><p>d[n-(n과 가장 가까운수의 제곱수)] + 1</p>\n</li>\n<li><p>+1을 하는 이유</p>\n<ul>\n<li>제곱수 자체도 하나 이기 때문에</li>\n</ul>\n</li>\n<li><p>예를 들어</p>\n<ul>\n<li>d[7]  = d[ 7 - 2^2 ] + 1 = d[3] + 1 이라고 생각했다</li>\n</ul>\n</li>\n<li><p>하지만, 위의 예시에서, d[3]이 가장 작은 값이라는 보장이 없다</p>\n</li>\n<li><p>즉, 가장 가까운 제곱수를 찾는 것이 틀림</p>\n</li>\n</ol>\n<p><img src=\"http://cfile30.uf.tistory.com/image/99A19A3359E9F1261ABE35\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ol>\n<li><p>예를 들어 ,</p>\n<ul>\n<li>d[25] 를 구하려고 할때,</li>\n<li>d[25-1^2] + 1</li>\n<li>d[25-2^2] + 1 </li>\n<li>d[25-3^2] + 1 </li>\n<li>d[25-4^2] + 1 </li>\n</ul>\n</li>\n<li><p>min 값이 답</p>\n</li>\n</ol>\n<p><img src=\"http://cfile21.uf.tistory.com/image/99AB5E3359E9F1BA07555D\" alt=\"img\"></p>\n"},{"layout":"post","title":"11054:가장 긴 바이토닉 부분 수열","date":"2017-10-15T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11054>\n\n## 풀이\n\n1. 가장 긴 증가하는 부분 수열 문제와 가장 긴 감소하는 부분 수열 문제를 더한 문제\n\n2. 가장 긴 증가하는 부분 수열을 구한다\n3. 가장 긴 감소하는 부분 수열을 구한다 \n4. d1[i] + d2[i] -1 의 최대값을 구한다\n5. 여기서 1을 빼는 이유 => 증가하다가 감소할 경우에 1이 두번 더해지기 때문에\n\n![img](http://cfile25.uf.tistory.com/image/9980443359E4C54A226E06)\n\n","source":"_posts/2017-10-16-가장긴바이토닉부분수열.md","raw":"---\nlayout: post\ntitle:  \"11054:가장 긴 바이토닉 부분 수열\"\ndate:   2017-10-16\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11054>\n\n## 풀이\n\n1. 가장 긴 증가하는 부분 수열 문제와 가장 긴 감소하는 부분 수열 문제를 더한 문제\n\n2. 가장 긴 증가하는 부분 수열을 구한다\n3. 가장 긴 감소하는 부분 수열을 구한다 \n4. d1[i] + d2[i] -1 의 최대값을 구한다\n5. 여기서 1을 빼는 이유 => 증가하다가 감소할 경우에 1이 두번 더해지기 때문에\n\n![img](http://cfile25.uf.tistory.com/image/9980443359E4C54A226E06)\n\n","slug":"2017-10-16-가장긴바이토닉부분수열","published":1,"updated":"2018-04-16T04:04:30.803Z","comments":1,"photos":[],"link":"","_id":"cjp6k655n002931x7362s9mhh","content":"<p><a href=\"https://www.acmicpc.net/problem/11054\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11054</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>가장 긴 증가하는 부분 수열 문제와 가장 긴 감소하는 부분 수열 문제를 더한 문제</p>\n</li>\n<li><p>가장 긴 증가하는 부분 수열을 구한다</p>\n</li>\n<li>가장 긴 감소하는 부분 수열을 구한다 </li>\n<li>d1[i] + d2[i] -1 의 최대값을 구한다</li>\n<li>여기서 1을 빼는 이유 =&gt; 증가하다가 감소할 경우에 1이 두번 더해지기 때문에</li>\n</ol>\n<p><img src=\"http://cfile25.uf.tistory.com/image/9980443359E4C54A226E06\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11054\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11054</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>가장 긴 증가하는 부분 수열 문제와 가장 긴 감소하는 부분 수열 문제를 더한 문제</p>\n</li>\n<li><p>가장 긴 증가하는 부분 수열을 구한다</p>\n</li>\n<li>가장 긴 감소하는 부분 수열을 구한다 </li>\n<li>d1[i] + d2[i] -1 의 최대값을 구한다</li>\n<li>여기서 1을 빼는 이유 =&gt; 증가하다가 감소할 경우에 1이 두번 더해지기 때문에</li>\n</ol>\n<p><img src=\"http://cfile25.uf.tistory.com/image/9980443359E4C54A226E06\" alt=\"img\"></p>\n"},{"layout":"post","title":"background server","date":"2017-10-31T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n\n## background server\n\n\naws ec2 접속해서\n\n````\nsudo nohup node index.js &\n````\n\t\n* 관리자 권한으로 실행해야 SSL protocol 끊겨도 지속\n* nohup & : background \t방식으로 프로세스 실행 \n* node : nodejs 실행 명령어\n\n\n```\nps -ef\n```\n\n* background에서 구동되는 프로세스 확인가능\n\n\n```\nps -ef|grep node\n```\n\n* node로 시작하는 프로세스 모두 확인가능\n\n\n\n\n\t\n","source":"_posts/2017-11-01-background-server.md","raw":"---\nlayout: post\ntitle:  \"background server\"\ndate:   2017-11-01\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n\n## background server\n\n\naws ec2 접속해서\n\n````\nsudo nohup node index.js &\n````\n\t\n* 관리자 권한으로 실행해야 SSL protocol 끊겨도 지속\n* nohup & : background \t방식으로 프로세스 실행 \n* node : nodejs 실행 명령어\n\n\n```\nps -ef\n```\n\n* background에서 구동되는 프로세스 확인가능\n\n\n```\nps -ef|grep node\n```\n\n* node로 시작하는 프로세스 모두 확인가능\n\n\n\n\n\t\n","slug":"2017-11-01-background-server","published":1,"updated":"2018-04-16T04:04:48.419Z","comments":1,"photos":[],"link":"","_id":"cjp6k655p002b31x7wr86lk78","content":"<h2 id=\"background-server\"><a href=\"#background-server\" class=\"headerlink\" title=\"background server\"></a>background server</h2><p>aws ec2 접속해서</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nohup node index.js &amp;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>관리자 권한으로 실행해야 SSL protocol 끊겨도 지속</li>\n<li>nohup &amp; : background     방식으로 프로세스 실행 </li>\n<li>node : nodejs 실행 명령어</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef</span><br></pre></td></tr></table></figure>\n<ul>\n<li>background에서 구동되는 프로세스 확인가능</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef|grep node</span><br></pre></td></tr></table></figure>\n<ul>\n<li>node로 시작하는 프로세스 모두 확인가능</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"background-server\"><a href=\"#background-server\" class=\"headerlink\" title=\"background server\"></a>background server</h2><p>aws ec2 접속해서</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nohup node index.js &amp;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>관리자 권한으로 실행해야 SSL protocol 끊겨도 지속</li>\n<li>nohup &amp; : background     방식으로 프로세스 실행 </li>\n<li>node : nodejs 실행 명령어</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef</span><br></pre></td></tr></table></figure>\n<ul>\n<li>background에서 구동되는 프로세스 확인가능</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef|grep node</span><br></pre></td></tr></table></figure>\n<ul>\n<li>node로 시작하는 프로세스 모두 확인가능</li>\n</ul>\n"},{"layout":"post","title":"2011:암호코드","date":"2017-11-01T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/2011>\n\n## 풀이\n\n1. d[i]\n\n\t````\n\ti번째 까지 해석했을 때, 경우의 수\n\t````\n2. i번째 문자\n\n\t- 한 자리로 해석되는 경우 : 1 ~ 9 \n\t- 두 자리로 해석되는 경우 : 10 ~ 26\n\n3. 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/9.png)\n\n\t\n\n\n","source":"_posts/2017-11-02-암호코드.md","raw":"---\nlayout: post\ntitle:  \"2011:암호코드\"\ndate:   2017-11-02\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/2011>\n\n## 풀이\n\n1. d[i]\n\n\t````\n\ti번째 까지 해석했을 때, 경우의 수\n\t````\n2. i번째 문자\n\n\t- 한 자리로 해석되는 경우 : 1 ~ 9 \n\t- 두 자리로 해석되는 경우 : 10 ~ 26\n\n3. 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/9.png)\n\n\t\n\n\n","slug":"2017-11-02-암호코드","published":1,"updated":"2018-04-16T04:04:57.541Z","comments":1,"photos":[],"link":"","_id":"cjp6k655q002d31x7z7d16idf","content":"<p><a href=\"https://www.acmicpc.net/problem/2011\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2011</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>d[i]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i번째 까지 해석했을 때, 경우의 수</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>i번째 문자</p>\n<ul>\n<li>한 자리로 해석되는 경우 : 1 ~ 9 </li>\n<li>두 자리로 해석되는 경우 : 10 ~ 26</li>\n</ul>\n</li>\n<li><p>결과</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/9.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2011\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2011</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>d[i]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i번째 까지 해석했을 때, 경우의 수</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>i번째 문자</p>\n<ul>\n<li>한 자리로 해석되는 경우 : 1 ~ 9 </li>\n<li>두 자리로 해석되는 경우 : 10 ~ 26</li>\n</ul>\n</li>\n<li><p>결과</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/9.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"2133:타일채우기","date":"2017-10-31T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/2133>\n\n## 풀이\n\n1. d[i] \n\n\t- 3 * i 타일을 채우는 방법의 수 \n\t\n\n2. 가장 마지막에 올 수 있는 경우를 찾아야 한다.\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/1.png)\n\t\n\t```\n\td[i] = 3 * d[i-2]\n\t```\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/2.png)\n\t\n\t```\n\td[i] = 2 * d[i-4]\n\t```\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/3.png)\n\t\n\t```\n\td[i] = 2 * d[i-6]\n\t```\n\n3. d[i]\n\n\t```\n\t3*d[i-2] + 2*d[i-4] + 2*d[i-6] + ... + 2*d[0]\n\t```\n\t어차피, 가로 길이가 홀수이면 타일로 채울 수 X\n\t\n4. 코드\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/4.png)\n\n\t\t\n\n\n\n\n","source":"_posts/2017-11-01-타일채우기.md","raw":"---\nlayout: post\ntitle:  \"2133:타일채우기\"\ndate:   2017-11-01\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/2133>\n\n## 풀이\n\n1. d[i] \n\n\t- 3 * i 타일을 채우는 방법의 수 \n\t\n\n2. 가장 마지막에 올 수 있는 경우를 찾아야 한다.\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/1.png)\n\t\n\t```\n\td[i] = 3 * d[i-2]\n\t```\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/2.png)\n\t\n\t```\n\td[i] = 2 * d[i-4]\n\t```\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/3.png)\n\t\n\t```\n\td[i] = 2 * d[i-6]\n\t```\n\n3. d[i]\n\n\t```\n\t3*d[i-2] + 2*d[i-4] + 2*d[i-6] + ... + 2*d[0]\n\t```\n\t어차피, 가로 길이가 홀수이면 타일로 채울 수 X\n\t\n4. 코드\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/4.png)\n\n\t\t\n\n\n\n\n","slug":"2017-11-01-타일채우기","published":1,"updated":"2018-04-16T04:04:52.673Z","comments":1,"photos":[],"link":"","_id":"cjp6k655r002f31x7m55igqd0","content":"<p><a href=\"https://www.acmicpc.net/problem/2133\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2133</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>d[i] </p>\n<ul>\n<li>3 * i 타일을 채우는 방법의 수 </li>\n</ul>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>가장 마지막에 올 수 있는 경우를 찾아야 한다.</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/1.png\" alt=\"img\"></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d[i] = 3 * d[i-2]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/2.png)\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d[i] = 2 * d[i-4]</span><br></pre></td></tr></table></figure>\n\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/3.png)\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d[i] = 2 * d[i-6]</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"3\">\n<li><p>d[i]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3*d[i-2] + 2*d[i-4] + 2*d[i-6] + ... + 2*d[0]</span><br></pre></td></tr></table></figure>\n<p> 어차피, 가로 길이가 홀수이면 타일로 채울 수 X</p>\n</li>\n<li><p>코드</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/4.png\" alt=\"img\"></p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2133\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2133</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>d[i] </p>\n<ul>\n<li>3 * i 타일을 채우는 방법의 수 </li>\n</ul>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>가장 마지막에 올 수 있는 경우를 찾아야 한다.</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/1.png\" alt=\"img\"></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d[i] = 3 * d[i-2]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/2.png)\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d[i] = 2 * d[i-4]</span><br></pre></td></tr></table></figure>\n\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/3.png)\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d[i] = 2 * d[i-6]</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"3\">\n<li><p>d[i]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3*d[i-2] + 2*d[i-4] + 2*d[i-6] + ... + 2*d[0]</span><br></pre></td></tr></table></figure>\n<p> 어차피, 가로 길이가 홀수이면 타일로 채울 수 X</p>\n</li>\n<li><p>코드</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/4.png\" alt=\"img\"></p>\n</li>\n</ol>\n"},{"layout":"post","title":"2579:계단오르기","date":"2017-10-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/2579>\n\n## 풀이\n\n1. d[i]\n\t* a[i]를 밟았을 경우, 0~i 번째까지 최대 점수\n2. d[i]\n\t* max( a[i]+a[i-1]+d[i-3] , a[i]+d[i-2] )\n3. example : 10    20    15    25    10    20\n\n\t*  20 X     15 O    25 O : a[i]+a[i-1]+d[i-3]\n\t* 15 X     25 O : a[i]+d[i-2]\n4. 근데, 여기서 사소한 문제 !\n\t* n을 입력받고, 배열을 생성할 때\n0~n-1 인덱스로 할 것이냐,\n1~n 인덱스로 할 것이냐에 따라 문제가 생김\n\n5. 0~n-1 인덱스로 다음과 같이 하면 틀렸음. \n\t* 왜냐하면, d[2]를 구하지 않았기 때문.\n\n![img](http://cfile3.uf.tistory.com/image/9920A43359E752E439E48B)\n6. 따라서 다음과 같이 d[2]를 구해야함\n \n![img](http://cfile28.uf.tistory.com/image/9941113359E75310248E9B)\n7. 1~n 인덱스로 범위 잡으면, 상관 없음\n\n![img](http://cfile6.uf.tistory.com/image/99E8393359E7532D22AC37)\n\n\n","source":"_posts/2017-10-18-계단오르기.md","raw":"---\nlayout: post\ntitle:  \"2579:계단오르기\"\ndate:   2017-10-20\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/2579>\n\n## 풀이\n\n1. d[i]\n\t* a[i]를 밟았을 경우, 0~i 번째까지 최대 점수\n2. d[i]\n\t* max( a[i]+a[i-1]+d[i-3] , a[i]+d[i-2] )\n3. example : 10    20    15    25    10    20\n\n\t*  20 X     15 O    25 O : a[i]+a[i-1]+d[i-3]\n\t* 15 X     25 O : a[i]+d[i-2]\n4. 근데, 여기서 사소한 문제 !\n\t* n을 입력받고, 배열을 생성할 때\n0~n-1 인덱스로 할 것이냐,\n1~n 인덱스로 할 것이냐에 따라 문제가 생김\n\n5. 0~n-1 인덱스로 다음과 같이 하면 틀렸음. \n\t* 왜냐하면, d[2]를 구하지 않았기 때문.\n\n![img](http://cfile3.uf.tistory.com/image/9920A43359E752E439E48B)\n6. 따라서 다음과 같이 d[2]를 구해야함\n \n![img](http://cfile28.uf.tistory.com/image/9941113359E75310248E9B)\n7. 1~n 인덱스로 범위 잡으면, 상관 없음\n\n![img](http://cfile6.uf.tistory.com/image/99E8393359E7532D22AC37)\n\n\n","slug":"2017-10-18-계단오르기","published":1,"updated":"2018-04-16T04:04:39.532Z","comments":1,"photos":[],"link":"","_id":"cjp6k655s002h31x7gas94py7","content":"<p><a href=\"https://www.acmicpc.net/problem/2579\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2579</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>d[i]<ul>\n<li>a[i]를 밟았을 경우, 0~i 번째까지 최대 점수</li>\n</ul>\n</li>\n<li>d[i]<ul>\n<li>max( a[i]+a[i-1]+d[i-3] , a[i]+d[i-2] )</li>\n</ul>\n</li>\n<li><p>example : 10    20    15    25    10    20</p>\n<ul>\n<li>20 X     15 O    25 O : a[i]+a[i-1]+d[i-3]</li>\n<li>15 X     25 O : a[i]+d[i-2]</li>\n</ul>\n</li>\n<li><p>근데, 여기서 사소한 문제 !</p>\n<ul>\n<li>n을 입력받고, 배열을 생성할 때<br>0~n-1 인덱스로 할 것이냐,<br>1~n 인덱스로 할 것이냐에 따라 문제가 생김</li>\n</ul>\n</li>\n<li><p>0~n-1 인덱스로 다음과 같이 하면 틀렸음. </p>\n<ul>\n<li>왜냐하면, d[2]를 구하지 않았기 때문.</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"http://cfile3.uf.tistory.com/image/9920A43359E752E439E48B\" alt=\"img\"></p>\n<ol start=\"6\">\n<li>따라서 다음과 같이 d[2]를 구해야함</li>\n</ol>\n<p><img src=\"http://cfile28.uf.tistory.com/image/9941113359E75310248E9B\" alt=\"img\"></p>\n<ol start=\"7\">\n<li>1~n 인덱스로 범위 잡으면, 상관 없음</li>\n</ol>\n<p><img src=\"http://cfile6.uf.tistory.com/image/99E8393359E7532D22AC37\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2579\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2579</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>d[i]<ul>\n<li>a[i]를 밟았을 경우, 0~i 번째까지 최대 점수</li>\n</ul>\n</li>\n<li>d[i]<ul>\n<li>max( a[i]+a[i-1]+d[i-3] , a[i]+d[i-2] )</li>\n</ul>\n</li>\n<li><p>example : 10    20    15    25    10    20</p>\n<ul>\n<li>20 X     15 O    25 O : a[i]+a[i-1]+d[i-3]</li>\n<li>15 X     25 O : a[i]+d[i-2]</li>\n</ul>\n</li>\n<li><p>근데, 여기서 사소한 문제 !</p>\n<ul>\n<li>n을 입력받고, 배열을 생성할 때<br>0~n-1 인덱스로 할 것이냐,<br>1~n 인덱스로 할 것이냐에 따라 문제가 생김</li>\n</ul>\n</li>\n<li><p>0~n-1 인덱스로 다음과 같이 하면 틀렸음. </p>\n<ul>\n<li>왜냐하면, d[2]를 구하지 않았기 때문.</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"http://cfile3.uf.tistory.com/image/9920A43359E752E439E48B\" alt=\"img\"></p>\n<ol start=\"6\">\n<li>따라서 다음과 같이 d[2]를 구해야함</li>\n</ol>\n<p><img src=\"http://cfile28.uf.tistory.com/image/9941113359E75310248E9B\" alt=\"img\"></p>\n<ol start=\"7\">\n<li>1~n 인덱스로 범위 잡으면, 상관 없음</li>\n</ol>\n<p><img src=\"http://cfile6.uf.tistory.com/image/99E8393359E7532D22AC37\" alt=\"img\"></p>\n"},{"layout":"post","title":"웹사이트 배포 방법","date":"2017-11-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n1. 도메인을 구입한다\n\n\t* free domain을 쉽게 구할 수 있다.\n\t* ex) freenom.com\n\n2. ec2\n\n\t* 서버를 background로 가동\n\n3. s3\n\n\t* front code를 버킷에 업로드하는 방법\n\t\n\t````\n\t1. IAM 에서 user를 생성.\n\t\n\t\t- user를 생성할 때, \n\t\n\t\t- Access key ID & Secret access key 를 받음 \n\t\n\t\t- 프론트에게 알려준다.\n\t\t\n\t2. 생성한 user에게 permission 부여.\n\t\t\n\t\t- AmazonS3FullAccess를 부여\n\t\n\t````\n\n4. 구입한 도메인에 URL forwarding\n\n\t* bucket에 올린 index.html의 링크를 forwarding\n","source":"_posts/2017-11-03-웹사이트배포방법.md","raw":"---\nlayout: post\ntitle:  \"웹사이트 배포 방법\"\ndate:   2017-11-03\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n1. 도메인을 구입한다\n\n\t* free domain을 쉽게 구할 수 있다.\n\t* ex) freenom.com\n\n2. ec2\n\n\t* 서버를 background로 가동\n\n3. s3\n\n\t* front code를 버킷에 업로드하는 방법\n\t\n\t````\n\t1. IAM 에서 user를 생성.\n\t\n\t\t- user를 생성할 때, \n\t\n\t\t- Access key ID & Secret access key 를 받음 \n\t\n\t\t- 프론트에게 알려준다.\n\t\t\n\t2. 생성한 user에게 permission 부여.\n\t\t\n\t\t- AmazonS3FullAccess를 부여\n\t\n\t````\n\n4. 구입한 도메인에 URL forwarding\n\n\t* bucket에 올린 index.html의 링크를 forwarding\n","slug":"2017-11-03-웹사이트배포방법","published":1,"updated":"2018-04-16T04:05:01.772Z","comments":1,"photos":[],"link":"","_id":"cjp6k655u002j31x744t0efxa","content":"<ol>\n<li><p>도메인을 구입한다</p>\n<ul>\n<li>free domain을 쉽게 구할 수 있다.</li>\n<li>ex) freenom.com</li>\n</ul>\n</li>\n<li><p>ec2</p>\n<ul>\n<li>서버를 background로 가동</li>\n</ul>\n</li>\n<li><p>s3</p>\n<ul>\n<li><p>front code를 버킷에 업로드하는 방법</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. IAM 에서 user를 생성.</span><br><span class=\"line\"></span><br><span class=\"line\">\t- user를 생성할 때, </span><br><span class=\"line\"></span><br><span class=\"line\">\t- Access key ID &amp; Secret access key 를 받음 </span><br><span class=\"line\"></span><br><span class=\"line\">\t- 프론트에게 알려준다.</span><br><span class=\"line\">\t</span><br><span class=\"line\">2. 생성한 user에게 permission 부여.</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t- AmazonS3FullAccess를 부여</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>구입한 도메인에 URL forwarding</p>\n<ul>\n<li>bucket에 올린 index.html의 링크를 forwarding</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ol>\n<li><p>도메인을 구입한다</p>\n<ul>\n<li>free domain을 쉽게 구할 수 있다.</li>\n<li>ex) freenom.com</li>\n</ul>\n</li>\n<li><p>ec2</p>\n<ul>\n<li>서버를 background로 가동</li>\n</ul>\n</li>\n<li><p>s3</p>\n<ul>\n<li><p>front code를 버킷에 업로드하는 방법</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. IAM 에서 user를 생성.</span><br><span class=\"line\"></span><br><span class=\"line\">\t- user를 생성할 때, </span><br><span class=\"line\"></span><br><span class=\"line\">\t- Access key ID &amp; Secret access key 를 받음 </span><br><span class=\"line\"></span><br><span class=\"line\">\t- 프론트에게 알려준다.</span><br><span class=\"line\">\t</span><br><span class=\"line\">2. 생성한 user에게 permission 부여.</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t- AmazonS3FullAccess를 부여</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>구입한 도메인에 URL forwarding</p>\n<ul>\n<li>bucket에 올린 index.html의 링크를 forwarding</li>\n</ul>\n</li>\n</ol>\n"},{"layout":"post","title":"9461:파도반 수열","date":"2017-11-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/9461>\n\n## 틀린 풀이\n\n1. p[i]를 나열해서 규칙을 찾음\n\n2. p[i]\n\n\t```\n\tp[i]= p[i-1] + p[i-5]\n\t```\n\t\n3. 결과 : 틀렸다고 나옴\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/5.png)\n\t\n\t\n## 맞는 풀이\n\n1. 다시 풀어봐야함\n\n\n\t\n\n\n","source":"_posts/2017-11-03-파도반수열.md","raw":"---\nlayout: post\ntitle:  \"9461:파도반 수열\"\ndate:   2017-11-03\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/9461>\n\n## 틀린 풀이\n\n1. p[i]를 나열해서 규칙을 찾음\n\n2. p[i]\n\n\t```\n\tp[i]= p[i-1] + p[i-5]\n\t```\n\t\n3. 결과 : 틀렸다고 나옴\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/5.png)\n\t\n\t\n## 맞는 풀이\n\n1. 다시 풀어봐야함\n\n\n\t\n\n\n","slug":"2017-11-03-파도반수열","published":1,"updated":"2018-04-16T04:05:06.784Z","comments":1,"photos":[],"link":"","_id":"cjp6k6568002l31x713qggiu3","content":"<p><a href=\"https://www.acmicpc.net/problem/9461\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9461</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>p[i]를 나열해서 규칙을 찾음</p>\n</li>\n<li><p>p[i]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p[i]= p[i-1] + p[i-5]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>결과 : 틀렸다고 나옴</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/5.png\" alt=\"img\"></p>\n</li>\n</ol>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ol>\n<li>다시 풀어봐야함</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/9461\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9461</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>p[i]를 나열해서 규칙을 찾음</p>\n</li>\n<li><p>p[i]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p[i]= p[i-1] + p[i-5]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>결과 : 틀렸다고 나옴</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/5.png\" alt=\"img\"></p>\n</li>\n</ol>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ol>\n<li>다시 풀어봐야함</li>\n</ol>\n"},{"layout":"post","title":"11724:연결요소의 개수","date":"2017-11-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/11724>\n\n## 연결요소\n\n\n1. 다음은 1개의 그래프가 2개의 연결 요소(Connected Component)로 이루어져 있는거임\n\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/10.png)\n\n\n2. DFS or BFS 로 풀 수 있음 \n\n\tDFS나 BFS의 목적이 모든 정점을 한번 씩 방문하는 것이기 때문에 \n\n\n3. DFS 풀이\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/11.png)\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/12.png)\t\t\n\n\n\t\n\n\n","source":"_posts/2017-11-06-연결요소의개수.md","raw":"---\nlayout: post\ntitle:  \"11724:연결요소의 개수\"\ndate:   2017-11-06\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/11724>\n\n## 연결요소\n\n\n1. 다음은 1개의 그래프가 2개의 연결 요소(Connected Component)로 이루어져 있는거임\n\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/10.png)\n\n\n2. DFS or BFS 로 풀 수 있음 \n\n\tDFS나 BFS의 목적이 모든 정점을 한번 씩 방문하는 것이기 때문에 \n\n\n3. DFS 풀이\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/11.png)\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/12.png)\t\t\n\n\n\t\n\n\n","slug":"2017-11-06-연결요소의개수","published":1,"updated":"2018-04-16T04:05:15.285Z","comments":1,"photos":[],"link":"","_id":"cjp6k6569002n31x7mah3ex9n","content":"<p><a href=\"https://www.acmicpc.net/problem/11724\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11724</a></p>\n<h2 id=\"연결요소\"><a href=\"#연결요소\" class=\"headerlink\" title=\"연결요소\"></a>연결요소</h2><ol>\n<li>다음은 1개의 그래프가 2개의 연결 요소(Connected Component)로 이루어져 있는거임</li>\n</ol>\n<pre><code>![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/10.png)\n</code></pre><ol start=\"2\">\n<li><p>DFS or BFS 로 풀 수 있음 </p>\n<p> DFS나 BFS의 목적이 모든 정점을 한번 씩 방문하는 것이기 때문에 </p>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>DFS 풀이</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/11.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/12.png\" alt=\"img\">        </p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11724\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11724</a></p>\n<h2 id=\"연결요소\"><a href=\"#연결요소\" class=\"headerlink\" title=\"연결요소\"></a>연결요소</h2><ol>\n<li>다음은 1개의 그래프가 2개의 연결 요소(Connected Component)로 이루어져 있는거임</li>\n</ol>\n<pre><code>![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/10.png)\n</code></pre><ol start=\"2\">\n<li><p>DFS or BFS 로 풀 수 있음 </p>\n<p> DFS나 BFS의 목적이 모든 정점을 한번 씩 방문하는 것이기 때문에 </p>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>DFS 풀이</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/11.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/12.png\" alt=\"img\">        </p>\n</li>\n</ol>\n"},{"layout":"post","title":"1707:이분그래프","date":"2017-11-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/1707>\n\n## 개념\n\n\n1. 그래프를 다음과 같이 A와 B로 나눌 수 있으면 이분그래프\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/13.png)\n\t\n\t````\n\t모든 간선의 한 끝은 A에, 다른 한 끝은 B에 있음.\n\t````\n\n2. DFS or BFS 로 풀 수 있음. check 배열이 포인트!! \n\n\t````\n\tcheck[i] == 0 : 아직 방문 X\n\tcheck[i] == 1 : 방문 O, 빨간색\n\tcheck[i] == 2 : 방문 O, 파란색\n\t````\n\t\n3. 결과\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/14.png)\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/15.png)\n\n\n\n\n\t\n\n\n","source":"_posts/2017-11-07-이분그래프.md","raw":"---\nlayout: post\ntitle:  \"1707:이분그래프\"\ndate:   2017-11-07\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/1707>\n\n## 개념\n\n\n1. 그래프를 다음과 같이 A와 B로 나눌 수 있으면 이분그래프\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/13.png)\n\t\n\t````\n\t모든 간선의 한 끝은 A에, 다른 한 끝은 B에 있음.\n\t````\n\n2. DFS or BFS 로 풀 수 있음. check 배열이 포인트!! \n\n\t````\n\tcheck[i] == 0 : 아직 방문 X\n\tcheck[i] == 1 : 방문 O, 빨간색\n\tcheck[i] == 2 : 방문 O, 파란색\n\t````\n\t\n3. 결과\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/14.png)\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/15.png)\n\n\n\n\n\t\n\n\n","slug":"2017-11-07-이분그래프","published":1,"updated":"2018-04-16T04:05:19.918Z","comments":1,"photos":[],"link":"","_id":"cjp6k656h002p31x7bnoh89t3","content":"<p><a href=\"https://www.acmicpc.net/problem/1707\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1707</a></p>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><ol>\n<li><p>그래프를 다음과 같이 A와 B로 나눌 수 있으면 이분그래프</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/13.png\" alt=\"img\"></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">모든 간선의 한 끝은 A에, 다른 한 끝은 B에 있음.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>DFS or BFS 로 풀 수 있음. check 배열이 포인트!! </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">check[i] == 0 : 아직 방문 X</span><br><span class=\"line\">check[i] == 1 : 방문 O, 빨간색</span><br><span class=\"line\">check[i] == 2 : 방문 O, 파란색</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>결과</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/14.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/15.png\" alt=\"img\"></p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1707\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1707</a></p>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><ol>\n<li><p>그래프를 다음과 같이 A와 B로 나눌 수 있으면 이분그래프</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/13.png\" alt=\"img\"></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">모든 간선의 한 끝은 A에, 다른 한 끝은 B에 있음.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>DFS or BFS 로 풀 수 있음. check 배열이 포인트!! </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">check[i] == 0 : 아직 방문 X</span><br><span class=\"line\">check[i] == 1 : 방문 O, 빨간색</span><br><span class=\"line\">check[i] == 2 : 방문 O, 파란색</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>결과</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/14.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/15.png\" alt=\"img\"></p>\n</li>\n</ol>\n"},{"layout":"post","title":"Request JSON","date":"2017-11-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n## JSON으로 요청하고 받는 방법\n\n1. headers\n\n\t'Accept': 'application/json'\n\n2. parsing\n\n\tJSON.parse(body)\n\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/18.png)\n\t\n","source":"_posts/2017-11-09-Request JSON.md","raw":"---\nlayout: post\ntitle:  \"Request JSON\"\ndate:   2017-11-09\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n## JSON으로 요청하고 받는 방법\n\n1. headers\n\n\t'Accept': 'application/json'\n\n2. parsing\n\n\tJSON.parse(body)\n\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/18.png)\n\t\n","slug":"2017-11-09-Request JSON","published":1,"updated":"2018-04-16T04:05:28.135Z","comments":1,"photos":[],"link":"","_id":"cjp6k656i002r31x7sejsxnp1","content":"<h2 id=\"JSON으로-요청하고-받는-방법\"><a href=\"#JSON으로-요청하고-받는-방법\" class=\"headerlink\" title=\"JSON으로 요청하고 받는 방법\"></a>JSON으로 요청하고 받는 방법</h2><ol>\n<li><p>headers</p>\n<p> ‘Accept’: ‘application/json’</p>\n</li>\n<li><p>parsing</p>\n<p> JSON.parse(body)</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/18.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"JSON으로-요청하고-받는-방법\"><a href=\"#JSON으로-요청하고-받는-방법\" class=\"headerlink\" title=\"JSON으로 요청하고 받는 방법\"></a>JSON으로 요청하고 받는 방법</h2><ol>\n<li><p>headers</p>\n<p> ‘Accept’: ‘application/json’</p>\n</li>\n<li><p>parsing</p>\n<p> JSON.parse(body)</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/18.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"10451:순열사이클","date":"2017-11-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/10451>\n\n## 풀이\n\n* 이분그래프 풀이와 같음\n\n2. check배열, 입력 배열 생성\t\n\n3. 그래프 그림 \n\n4. dfs에 check배열과 입력 배열 넘김\n\n5. 넘길때마다 ans++ (순열 사이클 찾는 방법)\n\n5. dfs에서 재귀로 돌림\n\n6. 결과\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/16.png)\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/17.png)\n\t\n\n\n\n\n\n\t\n\n\n","source":"_posts/2017-11-08-순열사이클.md","raw":"---\nlayout: post\ntitle:  \"10451:순열사이클\"\ndate:   2017-11-08\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/10451>\n\n## 풀이\n\n* 이분그래프 풀이와 같음\n\n2. check배열, 입력 배열 생성\t\n\n3. 그래프 그림 \n\n4. dfs에 check배열과 입력 배열 넘김\n\n5. 넘길때마다 ans++ (순열 사이클 찾는 방법)\n\n5. dfs에서 재귀로 돌림\n\n6. 결과\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/16.png)\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/17.png)\n\t\n\n\n\n\n\n\t\n\n\n","slug":"2017-11-08-순열사이클","published":1,"updated":"2018-04-16T04:05:24.068Z","comments":1,"photos":[],"link":"","_id":"cjp6k656k002t31x7053voayd","content":"<p><a href=\"https://www.acmicpc.net/problem/10451\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10451</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>이분그래프 풀이와 같음</li>\n</ul>\n<ol start=\"2\">\n<li><p>check배열, 입력 배열 생성    </p>\n</li>\n<li><p>그래프 그림 </p>\n</li>\n<li><p>dfs에 check배열과 입력 배열 넘김</p>\n</li>\n<li><p>넘길때마다 ans++ (순열 사이클 찾는 방법)</p>\n</li>\n<li><p>dfs에서 재귀로 돌림</p>\n</li>\n<li><p>결과</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/16.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/17.png\" alt=\"img\"></p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/10451\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10451</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>이분그래프 풀이와 같음</li>\n</ul>\n<ol start=\"2\">\n<li><p>check배열, 입력 배열 생성    </p>\n</li>\n<li><p>그래프 그림 </p>\n</li>\n<li><p>dfs에 check배열과 입력 배열 넘김</p>\n</li>\n<li><p>넘길때마다 ans++ (순열 사이클 찾는 방법)</p>\n</li>\n<li><p>dfs에서 재귀로 돌림</p>\n</li>\n<li><p>결과</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/16.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/17.png\" alt=\"img\"></p>\n</li>\n</ol>\n"},{"layout":"post","title":"반복수열","date":"2017-11-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2331>\n\n## 틀린 풀이\n\n1. a, p를 입력받고\n\n2. 다음 숫자를 구함\n\n3. 구한 숫자가 지금까지 저장한 배열에 있으면 출력\n\n4. 없으면 배열에 추가하고\n\n5. 2번부터 다시 반복\n\n6. 계속해서 틀렸다고 나왔음\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/19.png)\n\t\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/20.png)\n\n7. 다시 시도하니까 맞음 \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/21.png)\n\t\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22.png)\n\n8. 하지만 그래프로 풀지 않았음\n\n9. 전에 숫자가 있는지 확인하는 작업을 그래프로 해야된다고 생각됨.\n\n10. 그래프 풀이 다시 시도해봐야함\n\n\n\n\n\n\n","source":"_posts/2017-11-09-반복수열.md","raw":"---\nlayout: post\ntitle:  \"반복수열\"\ndate:   2017-11-09\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2331>\n\n## 틀린 풀이\n\n1. a, p를 입력받고\n\n2. 다음 숫자를 구함\n\n3. 구한 숫자가 지금까지 저장한 배열에 있으면 출력\n\n4. 없으면 배열에 추가하고\n\n5. 2번부터 다시 반복\n\n6. 계속해서 틀렸다고 나왔음\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/19.png)\n\t\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/20.png)\n\n7. 다시 시도하니까 맞음 \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/21.png)\n\t\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22.png)\n\n8. 하지만 그래프로 풀지 않았음\n\n9. 전에 숫자가 있는지 확인하는 작업을 그래프로 해야된다고 생각됨.\n\n10. 그래프 풀이 다시 시도해봐야함\n\n\n\n\n\n\n","slug":"2017-11-09-반복수열","published":1,"updated":"2018-04-16T04:05:32.300Z","comments":1,"photos":[],"link":"","_id":"cjp6k656m002v31x7q5pzloqr","content":"<p><a href=\"https://www.acmicpc.net/problem/2331\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2331</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>a, p를 입력받고</p>\n</li>\n<li><p>다음 숫자를 구함</p>\n</li>\n<li><p>구한 숫자가 지금까지 저장한 배열에 있으면 출력</p>\n</li>\n<li><p>없으면 배열에 추가하고</p>\n</li>\n<li><p>2번부터 다시 반복</p>\n</li>\n<li><p>계속해서 틀렸다고 나왔음</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/19.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/20.png\" alt=\"img\"></p>\n<ol start=\"7\">\n<li>다시 시도하니까 맞음 </li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/21.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22.png\" alt=\"img\"></p>\n<ol start=\"8\">\n<li><p>하지만 그래프로 풀지 않았음</p>\n</li>\n<li><p>전에 숫자가 있는지 확인하는 작업을 그래프로 해야된다고 생각됨.</p>\n</li>\n<li><p>그래프 풀이 다시 시도해봐야함</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2331\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2331</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>a, p를 입력받고</p>\n</li>\n<li><p>다음 숫자를 구함</p>\n</li>\n<li><p>구한 숫자가 지금까지 저장한 배열에 있으면 출력</p>\n</li>\n<li><p>없으면 배열에 추가하고</p>\n</li>\n<li><p>2번부터 다시 반복</p>\n</li>\n<li><p>계속해서 틀렸다고 나왔음</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/19.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/20.png\" alt=\"img\"></p>\n<ol start=\"7\">\n<li>다시 시도하니까 맞음 </li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/21.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22.png\" alt=\"img\"></p>\n<ol start=\"8\">\n<li><p>하지만 그래프로 풀지 않았음</p>\n</li>\n<li><p>전에 숫자가 있는지 확인하는 작업을 그래프로 해야된다고 생각됨.</p>\n</li>\n<li><p>그래프 풀이 다시 시도해봐야함</p>\n</li>\n</ol>\n"},{"layout":"post","title":"단지번호 붙이기","date":"2017-11-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2667>\n\n## 풀이\n\n* 연결요수 문제와 비슷 \n* 그래프 문제이지만, 인접리스트 or 인접행렬 만들 필요 X\n* 왜냐하면, 어떤 칸과 연결되어 있는 칸 : 상하좌우 네 칸 중에 있기때문에.\n* 따러서, 모든 칸 마다 네 칸을 검사하면 됨\n\n1. d[i][j]\n\n\t````\n\ti,j 를 방문 X => d[i][j] = 0\n\ti,j 를 방문 O => d[i][j] = 단지 번호\n\t````\n\t\n2. 방문을 아직 안했고, 아파트가 있으면 \n\n\t````\n\tdfs탐색으로 상하좌우 조사\n\t````\n\t\n3. 결과\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/25.png)\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/26.png)\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/27.png)\n\t\n\n\n\n\n\n\n\t\n","source":"_posts/2017-11-11-단지번호붙이기.md","raw":"---\nlayout: post\ntitle:  \"단지번호 붙이기\"\ndate:   2017-11-11\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2667>\n\n## 풀이\n\n* 연결요수 문제와 비슷 \n* 그래프 문제이지만, 인접리스트 or 인접행렬 만들 필요 X\n* 왜냐하면, 어떤 칸과 연결되어 있는 칸 : 상하좌우 네 칸 중에 있기때문에.\n* 따러서, 모든 칸 마다 네 칸을 검사하면 됨\n\n1. d[i][j]\n\n\t````\n\ti,j 를 방문 X => d[i][j] = 0\n\ti,j 를 방문 O => d[i][j] = 단지 번호\n\t````\n\t\n2. 방문을 아직 안했고, 아파트가 있으면 \n\n\t````\n\tdfs탐색으로 상하좌우 조사\n\t````\n\t\n3. 결과\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/25.png)\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/26.png)\n\t\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/27.png)\n\t\n\n\n\n\n\n\n\t\n","slug":"2017-11-11-단지번호붙이기","published":1,"updated":"2018-04-16T04:05:45.161Z","comments":1,"photos":[],"link":"","_id":"cjp6k656n002x31x7rmkfxwoe","content":"<p><a href=\"https://www.acmicpc.net/problem/2667\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2667</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>연결요수 문제와 비슷 </li>\n<li>그래프 문제이지만, 인접리스트 or 인접행렬 만들 필요 X</li>\n<li>왜냐하면, 어떤 칸과 연결되어 있는 칸 : 상하좌우 네 칸 중에 있기때문에.</li>\n<li>따러서, 모든 칸 마다 네 칸을 검사하면 됨</li>\n</ul>\n<ol>\n<li><p>d[i][j]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i,j 를 방문 X =&gt; d[i][j] = 0</span><br><span class=\"line\">i,j 를 방문 O =&gt; d[i][j] = 단지 번호</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>방문을 아직 안했고, 아파트가 있으면 </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dfs탐색으로 상하좌우 조사</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>결과</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/25.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/26.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/27.png\" alt=\"img\"></p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2667\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2667</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>연결요수 문제와 비슷 </li>\n<li>그래프 문제이지만, 인접리스트 or 인접행렬 만들 필요 X</li>\n<li>왜냐하면, 어떤 칸과 연결되어 있는 칸 : 상하좌우 네 칸 중에 있기때문에.</li>\n<li>따러서, 모든 칸 마다 네 칸을 검사하면 됨</li>\n</ul>\n<ol>\n<li><p>d[i][j]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i,j 를 방문 X =&gt; d[i][j] = 0</span><br><span class=\"line\">i,j 를 방문 O =&gt; d[i][j] = 단지 번호</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>방문을 아직 안했고, 아파트가 있으면 </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dfs탐색으로 상하좌우 조사</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>결과</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/25.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/26.png\" alt=\"img\"></p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/27.png\" alt=\"img\"></p>\n</li>\n</ol>\n"},{"layout":"post","title":"ROT13","date":"2017-11-13T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/11655>\n\n## 풀이\n\n* 쉬운 문제 \n* 핵심 : 중간을 기준으로 +13, -13\n\n1. a-n or A-N\n\n\t+13 \n\t\n2. m-z or M-Z\n\n\t-13\n\n3. 결과\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/28.png)\n\n\n\n\n\n\n\n\t\n","source":"_posts/2017-11-14-ROT13.md","raw":"---\nlayout: post\ntitle:  \"ROT13\"\ndate:   2017-11-14\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/11655>\n\n## 풀이\n\n* 쉬운 문제 \n* 핵심 : 중간을 기준으로 +13, -13\n\n1. a-n or A-N\n\n\t+13 \n\t\n2. m-z or M-Z\n\n\t-13\n\n3. 결과\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/28.png)\n\n\n\n\n\n\n\n\t\n","slug":"2017-11-14-ROT13","published":1,"updated":"2018-04-16T04:05:54.146Z","comments":1,"photos":[],"link":"","_id":"cjp6k656o002z31x7lfom3tog","content":"<p><a href=\"https://www.acmicpc.net/problem/11655\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11655</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>쉬운 문제 </li>\n<li>핵심 : 중간을 기준으로 +13, -13</li>\n</ul>\n<ol>\n<li><p>a-n or A-N</p>\n<p> +13 </p>\n</li>\n<li><p>m-z or M-Z</p>\n<p> -13</p>\n</li>\n<li><p>결과</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/28.png\" alt=\"img\"></p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11655\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11655</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>쉬운 문제 </li>\n<li>핵심 : 중간을 기준으로 +13, -13</li>\n</ul>\n<ol>\n<li><p>a-n or A-N</p>\n<p> +13 </p>\n</li>\n<li><p>m-z or M-Z</p>\n<p> -13</p>\n</li>\n<li><p>결과</p>\n<p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/28.png\" alt=\"img\"></p>\n</li>\n</ol>\n"},{"layout":"post","title":"미로탐색","date":"2017-11-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2178>\n\n## 풀이\n\n* 빠른길은 BFS로 품\n* 모든 가중치가 1이면 최단 거리 알고리즘은 BFS로 품\n* BFS는 단계별로 진행됨. 즉 거리별로 진행됨. 거리가 1인곳가고, 거리가 2인곳 가고~\n\n1. 입력값대로 미로 그림\n\t\n2. 1,1 좌표를 큐에 넣음\n\n3. 큐에서 pop\n\n4. 점 이동\n\n5. 이동한 점 큐에 넣음 \n\n6. 거리 계산 \n\n7. 3번으로\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/29.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/30.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/31.png)\n\n\n\n\n\n\n\n\t\n","source":"_posts/2017-11-15-미로탐색.md","raw":"---\nlayout: post\ntitle:  \"미로탐색\"\ndate:   2017-11-15\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2178>\n\n## 풀이\n\n* 빠른길은 BFS로 품\n* 모든 가중치가 1이면 최단 거리 알고리즘은 BFS로 품\n* BFS는 단계별로 진행됨. 즉 거리별로 진행됨. 거리가 1인곳가고, 거리가 2인곳 가고~\n\n1. 입력값대로 미로 그림\n\t\n2. 1,1 좌표를 큐에 넣음\n\n3. 큐에서 pop\n\n4. 점 이동\n\n5. 이동한 점 큐에 넣음 \n\n6. 거리 계산 \n\n7. 3번으로\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/29.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/30.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/31.png)\n\n\n\n\n\n\n\n\t\n","slug":"2017-11-15-미로탐색","published":1,"updated":"2018-04-16T04:06:32.499Z","comments":1,"photos":[],"link":"","_id":"cjp6k656q003131x7qu6tci6b","content":"<p><a href=\"https://www.acmicpc.net/problem/2178\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2178</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>빠른길은 BFS로 품</li>\n<li>모든 가중치가 1이면 최단 거리 알고리즘은 BFS로 품</li>\n<li>BFS는 단계별로 진행됨. 즉 거리별로 진행됨. 거리가 1인곳가고, 거리가 2인곳 가고~</li>\n</ul>\n<ol>\n<li><p>입력값대로 미로 그림</p>\n</li>\n<li><p>1,1 좌표를 큐에 넣음</p>\n</li>\n<li><p>큐에서 pop</p>\n</li>\n<li><p>점 이동</p>\n</li>\n<li><p>이동한 점 큐에 넣음 </p>\n</li>\n<li><p>거리 계산 </p>\n</li>\n<li><p>3번으로</p>\n</li>\n</ol>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/29.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/30.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/31.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2178\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2178</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>빠른길은 BFS로 품</li>\n<li>모든 가중치가 1이면 최단 거리 알고리즘은 BFS로 품</li>\n<li>BFS는 단계별로 진행됨. 즉 거리별로 진행됨. 거리가 1인곳가고, 거리가 2인곳 가고~</li>\n</ul>\n<ol>\n<li><p>입력값대로 미로 그림</p>\n</li>\n<li><p>1,1 좌표를 큐에 넣음</p>\n</li>\n<li><p>큐에서 pop</p>\n</li>\n<li><p>점 이동</p>\n</li>\n<li><p>이동한 점 큐에 넣음 </p>\n</li>\n<li><p>거리 계산 </p>\n</li>\n<li><p>3번으로</p>\n</li>\n</ol>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/29.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/30.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/31.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"방번호","date":"2017-11-15T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1475>\n\n## 풀이\n\n* 수학문제\n* 0~9를 가지고 있는 배열 생성\n* 입력한 숫자가 없을때마다 배열에 다시 0~9 까지 추가해줌\n* 추가하는 개수가 답\n* but, 틀렸다고 나옴.\n* 효율적인 코드일까? 왜 틀렸다고 나올까?\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/32.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/33.png)\n\n\n\n\n\n\n\n\t\n","source":"_posts/2017-11-16-방번호.md","raw":"---\nlayout: post\ntitle:  \"방번호\"\ndate:   2017-11-16\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1475>\n\n## 풀이\n\n* 수학문제\n* 0~9를 가지고 있는 배열 생성\n* 입력한 숫자가 없을때마다 배열에 다시 0~9 까지 추가해줌\n* 추가하는 개수가 답\n* but, 틀렸다고 나옴.\n* 효율적인 코드일까? 왜 틀렸다고 나올까?\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/32.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/33.png)\n\n\n\n\n\n\n\n\t\n","slug":"2017-11-16-방번호","published":1,"updated":"2018-04-16T04:06:36.689Z","comments":1,"photos":[],"link":"","_id":"cjp6k656t003331x7crzxsc0o","content":"<p><a href=\"https://www.acmicpc.net/problem/1475\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1475</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>수학문제</li>\n<li>0~9를 가지고 있는 배열 생성</li>\n<li>입력한 숫자가 없을때마다 배열에 다시 0~9 까지 추가해줌</li>\n<li>추가하는 개수가 답</li>\n<li>but, 틀렸다고 나옴.</li>\n<li>효율적인 코드일까? 왜 틀렸다고 나올까?</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/32.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/33.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1475\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1475</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>수학문제</li>\n<li>0~9를 가지고 있는 배열 생성</li>\n<li>입력한 숫자가 없을때마다 배열에 다시 0~9 까지 추가해줌</li>\n<li>추가하는 개수가 답</li>\n<li>but, 틀렸다고 나옴.</li>\n<li>효율적인 코드일까? 왜 틀렸다고 나올까?</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/32.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/33.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"splice()","date":"2017-11-09T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n## 배열에 기존 요소를 제거, 새 요소를 추가\n\n\n````\nvar arr = [1, 2, 3, 4, 5];\n\narr.splice(2, 1);\t//\tindex 2번째 요소를 시작점으로 1개 원소 삭제\n\nconsole.log(arr);\t//\t[1,2,4,5]\n````\n\n\n","source":"_posts/2017-11-10-splice method.md","raw":"---\nlayout: post\ntitle:  \"splice()\"\ndate:   2017-11-10\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n## 배열에 기존 요소를 제거, 새 요소를 추가\n\n\n````\nvar arr = [1, 2, 3, 4, 5];\n\narr.splice(2, 1);\t//\tindex 2번째 요소를 시작점으로 1개 원소 삭제\n\nconsole.log(arr);\t//\t[1,2,4,5]\n````\n\n\n","slug":"2017-11-10-splice method","published":1,"updated":"2018-04-16T04:05:36.484Z","comments":1,"photos":[],"link":"","_id":"cjp6k656x003531x7qkhc98zp","content":"<h2 id=\"배열에-기존-요소를-제거-새-요소를-추가\"><a href=\"#배열에-기존-요소를-제거-새-요소를-추가\" class=\"headerlink\" title=\"배열에 기존 요소를 제거, 새 요소를 추가\"></a>배열에 기존 요소를 제거, 새 요소를 추가</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [1, 2, 3, 4, 5];</span><br><span class=\"line\"></span><br><span class=\"line\">arr.splice(2, 1);\t//\tindex 2번째 요소를 시작점으로 1개 원소 삭제</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(arr);\t//\t[1,2,4,5]</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"배열에-기존-요소를-제거-새-요소를-추가\"><a href=\"#배열에-기존-요소를-제거-새-요소를-추가\" class=\"headerlink\" title=\"배열에 기존 요소를 제거, 새 요소를 추가\"></a>배열에 기존 요소를 제거, 새 요소를 추가</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [1, 2, 3, 4, 5];</span><br><span class=\"line\"></span><br><span class=\"line\">arr.splice(2, 1);\t//\tindex 2번째 요소를 시작점으로 1개 원소 삭제</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(arr);\t//\t[1,2,4,5]</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"term프로젝트","date":"2017-11-09T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/9466>\n\n## 의문 \n\n- cycle 내의 개수를 셀 때 static 변수를 사용\n- 왜 파라미터로 넘기면 계속해서 0으로 초기화 될까?\n\n## 경우의 수 \n\n- 처음 방문\n- 두 번째 방문, 같은 cycle\n- 같은 cycle 내에서 이미 두 번을 방문 \n- 다른 cycle 내에서 이미 방문\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/28.png)\n\t\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/29.png)\n\n\n\t\n","source":"_posts/2017-11-10-term프로젝트.md","raw":"---\nlayout: post\ntitle:  \"term프로젝트\"\ndate:   2017-11-10\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/9466>\n\n## 의문 \n\n- cycle 내의 개수를 셀 때 static 변수를 사용\n- 왜 파라미터로 넘기면 계속해서 0으로 초기화 될까?\n\n## 경우의 수 \n\n- 처음 방문\n- 두 번째 방문, 같은 cycle\n- 같은 cycle 내에서 이미 두 번을 방문 \n- 다른 cycle 내에서 이미 방문\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/28.png)\n\t\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/29.png)\n\n\n\t\n","slug":"2017-11-10-term프로젝트","published":1,"updated":"2018-04-16T04:05:40.966Z","comments":1,"photos":[],"link":"","_id":"cjp6k6570003731x7yjby9xot","content":"<p><a href=\"https://www.acmicpc.net/problem/9466\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9466</a></p>\n<h2 id=\"의문\"><a href=\"#의문\" class=\"headerlink\" title=\"의문\"></a>의문</h2><ul>\n<li>cycle 내의 개수를 셀 때 static 변수를 사용</li>\n<li>왜 파라미터로 넘기면 계속해서 0으로 초기화 될까?</li>\n</ul>\n<h2 id=\"경우의-수\"><a href=\"#경우의-수\" class=\"headerlink\" title=\"경우의 수\"></a>경우의 수</h2><ul>\n<li>처음 방문</li>\n<li>두 번째 방문, 같은 cycle</li>\n<li>같은 cycle 내에서 이미 두 번을 방문 </li>\n<li>다른 cycle 내에서 이미 방문</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/28.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/29.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/9466\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9466</a></p>\n<h2 id=\"의문\"><a href=\"#의문\" class=\"headerlink\" title=\"의문\"></a>의문</h2><ul>\n<li>cycle 내의 개수를 셀 때 static 변수를 사용</li>\n<li>왜 파라미터로 넘기면 계속해서 0으로 초기화 될까?</li>\n</ul>\n<h2 id=\"경우의-수\"><a href=\"#경우의-수\" class=\"headerlink\" title=\"경우의 수\"></a>경우의 수</h2><ul>\n<li>처음 방문</li>\n<li>두 번째 방문, 같은 cycle</li>\n<li>같은 cycle 내에서 이미 두 번을 방문 </li>\n<li>다른 cycle 내에서 이미 방문</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/28.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/29.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"섬의 개수","date":"2017-11-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/4963>\n\n## 풀이\n\n* 아파트 단지 문제랑 유사\n* 그래프 문제이지만, 인접리스트 or 인접행렬 만들 필요 X\n* 왜냐하면, 어떤 칸과 연결되어 있는 칸 : 상하좌우 네 칸 중에 있기때문에.\n* 따러서, 모든 칸 마다 네 칸을 검사하면 됨\n\n1. d[i][j]\n\n\t````\n\ti,j 를 방문 X => d[i][j] = 0\n\ti,j 를 방문 O => d[i][j] = 1\n\t````\n\t\n2. 방문을 아직 안했고, 아파트가 있으면 \n\n\t````\n\tdfs탐색으로 상하좌우 조사\n\t````\n\t\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22.png)\n\n\n\n\n\n\n\n\t\n","source":"_posts/2017-11-13-섬의개수.md","raw":"---\nlayout: post\ntitle:  \"섬의 개수\"\ndate:   2017-11-13\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/4963>\n\n## 풀이\n\n* 아파트 단지 문제랑 유사\n* 그래프 문제이지만, 인접리스트 or 인접행렬 만들 필요 X\n* 왜냐하면, 어떤 칸과 연결되어 있는 칸 : 상하좌우 네 칸 중에 있기때문에.\n* 따러서, 모든 칸 마다 네 칸을 검사하면 됨\n\n1. d[i][j]\n\n\t````\n\ti,j 를 방문 X => d[i][j] = 0\n\ti,j 를 방문 O => d[i][j] = 1\n\t````\n\t\n2. 방문을 아직 안했고, 아파트가 있으면 \n\n\t````\n\tdfs탐색으로 상하좌우 조사\n\t````\n\t\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22.png)\n\n\n\n\n\n\n\n\t\n","slug":"2017-11-13-섬의개수","published":1,"updated":"2018-04-16T04:05:49.584Z","comments":1,"photos":[],"link":"","_id":"cjp6k6573003931x70yf7thwc","content":"<p><a href=\"https://www.acmicpc.net/problem/4963\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/4963</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>아파트 단지 문제랑 유사</li>\n<li>그래프 문제이지만, 인접리스트 or 인접행렬 만들 필요 X</li>\n<li>왜냐하면, 어떤 칸과 연결되어 있는 칸 : 상하좌우 네 칸 중에 있기때문에.</li>\n<li>따러서, 모든 칸 마다 네 칸을 검사하면 됨</li>\n</ul>\n<ol>\n<li><p>d[i][j]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i,j 를 방문 X =&gt; d[i][j] = 0</span><br><span class=\"line\">i,j 를 방문 O =&gt; d[i][j] = 1</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>방문을 아직 안했고, 아파트가 있으면 </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dfs탐색으로 상하좌우 조사</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/4963\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/4963</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>아파트 단지 문제랑 유사</li>\n<li>그래프 문제이지만, 인접리스트 or 인접행렬 만들 필요 X</li>\n<li>왜냐하면, 어떤 칸과 연결되어 있는 칸 : 상하좌우 네 칸 중에 있기때문에.</li>\n<li>따러서, 모든 칸 마다 네 칸을 검사하면 됨</li>\n</ul>\n<ol>\n<li><p>d[i][j]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i,j 를 방문 X =&gt; d[i][j] = 0</span><br><span class=\"line\">i,j 를 방문 O =&gt; d[i][j] = 1</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>방문을 아직 안했고, 아파트가 있으면 </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dfs탐색으로 상하좌우 조사</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"토마토","date":"2017-11-16T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/7576>\n\n## 풀이\n\n* BFS문제\n* 미로탐색 문제와 동일\n* 다른 점 : 출발점과 종료점이 정해진것이 X\n* 토마토 상태 입력할 때 1이면 큐에 넣기\n* \"다시 풀어보기\"\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/34.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/35.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/36.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/37.png)\n\n\n\n\n\n\t\n","source":"_posts/2017-11-17-토마토.md","raw":"---\nlayout: post\ntitle:  \"토마토\"\ndate:   2017-11-17\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/7576>\n\n## 풀이\n\n* BFS문제\n* 미로탐색 문제와 동일\n* 다른 점 : 출발점과 종료점이 정해진것이 X\n* 토마토 상태 입력할 때 1이면 큐에 넣기\n* \"다시 풀어보기\"\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/34.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/35.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/36.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/37.png)\n\n\n\n\n\n\t\n","slug":"2017-11-17-토마토","published":1,"updated":"2018-04-16T04:06:40.439Z","comments":1,"photos":[],"link":"","_id":"cjp6k6574003b31x7bmdm1wgh","content":"<p><a href=\"https://www.acmicpc.net/problem/7576\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/7576</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>BFS문제</li>\n<li>미로탐색 문제와 동일</li>\n<li>다른 점 : 출발점과 종료점이 정해진것이 X</li>\n<li>토마토 상태 입력할 때 1이면 큐에 넣기</li>\n<li>“다시 풀어보기”</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/34.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/35.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/36.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/37.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/7576\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/7576</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>BFS문제</li>\n<li>미로탐색 문제와 동일</li>\n<li>다른 점 : 출발점과 종료점이 정해진것이 X</li>\n<li>토마토 상태 입력할 때 1이면 큐에 넣기</li>\n<li>“다시 풀어보기”</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/34.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/35.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/36.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/37.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"팩토리얼 0의 개수","date":"2017-11-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1676>\n\n## 풀이\n\n* 하나하나 풀어보면서 규칙을 파악\n* 10! 은  0이 2개 <- 소인수분해를 해보면 알 수 있음\n* 2와 5의 개수가 몇개인지 세야함\n* 코드는 간단. 아이디어가 핵심\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/38.png)\n\n\n\n\n\n\t\n","source":"_posts/2017-11-20-팩토리얼0의개수.md","raw":"---\nlayout: post\ntitle:  \"팩토리얼 0의 개수\"\ndate:   2017-11-20\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1676>\n\n## 풀이\n\n* 하나하나 풀어보면서 규칙을 파악\n* 10! 은  0이 2개 <- 소인수분해를 해보면 알 수 있음\n* 2와 5의 개수가 몇개인지 세야함\n* 코드는 간단. 아이디어가 핵심\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/38.png)\n\n\n\n\n\n\t\n","slug":"2017-11-20-팩토리얼0의개수","published":1,"updated":"2018-04-16T04:06:44.142Z","comments":1,"photos":[],"link":"","_id":"cjp6k657m003d31x7wbnwqvvg","content":"<p><a href=\"https://www.acmicpc.net/problem/1676\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1676</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>하나하나 풀어보면서 규칙을 파악</li>\n<li>10! 은  0이 2개 &lt;- 소인수분해를 해보면 알 수 있음</li>\n<li>2와 5의 개수가 몇개인지 세야함</li>\n<li>코드는 간단. 아이디어가 핵심</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/38.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1676\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1676</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>하나하나 풀어보면서 규칙을 파악</li>\n<li>10! 은  0이 2개 &lt;- 소인수분해를 해보면 알 수 있음</li>\n<li>2와 5의 개수가 몇개인지 세야함</li>\n<li>코드는 간단. 아이디어가 핵심</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/38.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Swagger parameter 길이 문제","date":"2017-11-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n## Swagger parameter 많아 졌을 때\n\n* 옆 부분 짤리는 문제 발생\n* 다음과 같이 object로 묶어주자\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/39.png)\n\n\n\n\n\n\t\n","source":"_posts/2017-11-21-swagger parameter 길이문제.md","raw":"---\nlayout: post\ntitle:  \"Swagger parameter 길이 문제\"\ndate:   2017-11-21\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n## Swagger parameter 많아 졌을 때\n\n* 옆 부분 짤리는 문제 발생\n* 다음과 같이 object로 묶어주자\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/39.png)\n\n\n\n\n\n\t\n","slug":"2017-11-21-swagger parameter 길이문제","published":1,"updated":"2018-04-16T04:06:48.002Z","comments":1,"photos":[],"link":"","_id":"cjp6k657n003f31x7vt81i1r1","content":"<h2 id=\"Swagger-parameter-많아-졌을-때\"><a href=\"#Swagger-parameter-많아-졌을-때\" class=\"headerlink\" title=\"Swagger parameter 많아 졌을 때\"></a>Swagger parameter 많아 졌을 때</h2><ul>\n<li>옆 부분 짤리는 문제 발생</li>\n<li>다음과 같이 object로 묶어주자</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/39.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Swagger-parameter-많아-졌을-때\"><a href=\"#Swagger-parameter-많아-졌을-때\" class=\"headerlink\" title=\"Swagger parameter 많아 졌을 때\"></a>Swagger parameter 많아 졌을 때</h2><ul>\n<li>옆 부분 짤리는 문제 발생</li>\n<li>다음과 같이 object로 묶어주자</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/39.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"다리만들기","date":"2017-11-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1676>\n\n## 풀이\n\n* 단지번호 붙이기 + 토마토 문제\n* 먼저 '단지 번호 붙이기' 문제처럼 그룹별로 묶는다\n* 각각의 그룹에 대해 다른 섬까지 거리를 구한다\n* 거리의 최소값이 답\n* 매우 매우 어렵다. 그래프 감이 잘 안잡힌다\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/40.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/41.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/42.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/43.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/44.png)\n\n\n\n\n\n\t\n","source":"_posts/2017-11-21-다리만들기.md","raw":"---\nlayout: post\ntitle:  \"다리만들기\"\ndate:   2017-11-21\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1676>\n\n## 풀이\n\n* 단지번호 붙이기 + 토마토 문제\n* 먼저 '단지 번호 붙이기' 문제처럼 그룹별로 묶는다\n* 각각의 그룹에 대해 다른 섬까지 거리를 구한다\n* 거리의 최소값이 답\n* 매우 매우 어렵다. 그래프 감이 잘 안잡힌다\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/40.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/41.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/42.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/43.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/44.png)\n\n\n\n\n\n\t\n","slug":"2017-11-21-다리만들기","published":1,"updated":"2018-04-16T04:06:51.766Z","comments":1,"photos":[],"link":"","_id":"cjp6k657p003h31x7s0fd057n","content":"<p><a href=\"https://www.acmicpc.net/problem/1676\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1676</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>단지번호 붙이기 + 토마토 문제</li>\n<li>먼저 ‘단지 번호 붙이기’ 문제처럼 그룹별로 묶는다</li>\n<li>각각의 그룹에 대해 다른 섬까지 거리를 구한다</li>\n<li>거리의 최소값이 답</li>\n<li>매우 매우 어렵다. 그래프 감이 잘 안잡힌다</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/40.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/41.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/42.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/43.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/44.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1676\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1676</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>단지번호 붙이기 + 토마토 문제</li>\n<li>먼저 ‘단지 번호 붙이기’ 문제처럼 그룹별로 묶는다</li>\n<li>각각의 그룹에 대해 다른 섬까지 거리를 구한다</li>\n<li>거리의 최소값이 답</li>\n<li>매우 매우 어렵다. 그래프 감이 잘 안잡힌다</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/40.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/41.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/42.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/43.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/44.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"환경변수 설정","date":"2017-11-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n# config/index.js\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/45.png)\n\n# home directory\n\n- .bash_profile 을 열어서 object로 환경변수 설정\n\n- ```source .bash_profile``` \n\t- .bash_profile 파일을 수정 후 저장\n\t- 현재 터미널에 접속한 session은 수정 전 .bash_profile 파일을 가지고 있기 때문에\n\t- 수정 되었다는 것을 알려줘야함\n\n\n\n\n\n\n\n\t\n","source":"_posts/2017-11-22-환경변수설정.md","raw":"---\nlayout: post\ntitle:  \"환경변수 설정\"\ndate:   2017-11-22\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n# config/index.js\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/45.png)\n\n# home directory\n\n- .bash_profile 을 열어서 object로 환경변수 설정\n\n- ```source .bash_profile``` \n\t- .bash_profile 파일을 수정 후 저장\n\t- 현재 터미널에 접속한 session은 수정 전 .bash_profile 파일을 가지고 있기 때문에\n\t- 수정 되었다는 것을 알려줘야함\n\n\n\n\n\n\n\n\t\n","slug":"2017-11-22-환경변수설정","published":1,"updated":"2018-04-16T04:07:01.628Z","comments":1,"photos":[],"link":"","_id":"cjp6k657s003j31x7vgp0yhjz","content":"<h1 id=\"config-index-js\"><a href=\"#config-index-js\" class=\"headerlink\" title=\"config/index.js\"></a>config/index.js</h1><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/45.png\" alt=\"img\"></p>\n<h1 id=\"home-directory\"><a href=\"#home-directory\" class=\"headerlink\" title=\"home directory\"></a>home directory</h1><ul>\n<li><p>.bash_profile 을 열어서 object로 환경변수 설정</p>\n</li>\n<li><p><code>source .bash_profile</code> </p>\n<ul>\n<li>.bash_profile 파일을 수정 후 저장</li>\n<li>현재 터미널에 접속한 session은 수정 전 .bash_profile 파일을 가지고 있기 때문에</li>\n<li>수정 되었다는 것을 알려줘야함</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h1 id=\"config-index-js\"><a href=\"#config-index-js\" class=\"headerlink\" title=\"config/index.js\"></a>config/index.js</h1><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/45.png\" alt=\"img\"></p>\n<h1 id=\"home-directory\"><a href=\"#home-directory\" class=\"headerlink\" title=\"home directory\"></a>home directory</h1><ul>\n<li><p>.bash_profile 을 열어서 object로 환경변수 설정</p>\n</li>\n<li><p><code>source .bash_profile</code> </p>\n<ul>\n<li>.bash_profile 파일을 수정 후 저장</li>\n<li>현재 터미널에 접속한 session은 수정 전 .bash_profile 파일을 가지고 있기 때문에</li>\n<li>수정 되었다는 것을 알려줘야함</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"접미사배열","date":"2017-11-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/11656>\n\n# 풀이\n\n- 쉬운 문제 \n- 문자열의 index에 순차적 접근해서\n- substring\n- sorting \n\n# 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/47.png)\n\n\n\n\n\n\n\n\t\n","source":"_posts/2017-11-22-접미사배열.md","raw":"---\nlayout: post\ntitle:  \"접미사배열\"\ndate:   2017-11-22\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/11656>\n\n# 풀이\n\n- 쉬운 문제 \n- 문자열의 index에 순차적 접근해서\n- substring\n- sorting \n\n# 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/47.png)\n\n\n\n\n\n\n\n\t\n","slug":"2017-11-22-접미사배열","published":1,"updated":"2018-04-16T04:06:57.490Z","comments":1,"photos":[],"link":"","_id":"cjp6k657v003l31x7yrj0r19n","content":"<p><a href=\"https://www.acmicpc.net/problem/11656\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11656</a></p>\n<h1 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h1><ul>\n<li>쉬운 문제 </li>\n<li>문자열의 index에 순차적 접근해서</li>\n<li>substring</li>\n<li>sorting </li>\n</ul>\n<h1 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h1><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/47.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11656\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11656</a></p>\n<h1 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h1><ul>\n<li>쉬운 문제 </li>\n<li>문자열의 index에 순차적 접근해서</li>\n<li>substring</li>\n<li>sorting </li>\n</ul>\n<h1 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h1><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/47.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"문자열 분석","date":"2017-11-24T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n# 풀이\n\n- 매우 쉬운 문제 \n- 문제에서 요구하는 대로 풀기만 하면 됨\n- 문자, 숫자, 공백 문자형으로 구분\n\n\n# 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/46.png)\n","source":"_posts/2017-11-25-문자열 분석.md","raw":"---\nlayout: post\ntitle:  \"문자열 분석\"\ndate:   2017-11-25\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n# 풀이\n\n- 매우 쉬운 문제 \n- 문제에서 요구하는 대로 풀기만 하면 됨\n- 문자, 숫자, 공백 문자형으로 구분\n\n\n# 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/46.png)\n","slug":"2017-11-25-문자열 분석","published":1,"updated":"2018-04-16T04:07:05.698Z","comments":1,"photos":[],"link":"","_id":"cjp6k657x003n31x72c1bf23s","content":"<h1 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h1><ul>\n<li>매우 쉬운 문제 </li>\n<li>문제에서 요구하는 대로 풀기만 하면 됨</li>\n<li>문자, 숫자, 공백 문자형으로 구분</li>\n</ul>\n<h1 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h1><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/46.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h1 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h1><ul>\n<li>매우 쉬운 문제 </li>\n<li>문제에서 요구하는 대로 풀기만 하면 됨</li>\n<li>문자, 숫자, 공백 문자형으로 구분</li>\n</ul>\n<h1 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h1><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/46.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"원격 저장소 만들기","date":"2017-11-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png","_content":"\n# 작업하고 있던 것을 생성한 원격 저장소로 옮기기 \n\n```\nmkdir gitfth\nGit init\nVim f1.txt\nGit add f1.txt\nGit commit -m ‘1’\ngit remote add origin https://github.com/KoJunHee/gitfth.git\n\t// 현재 우리의 로컬 저장소에  원격저장소(remote repository)를 연결 시킨다\n\t// 그리고 그 원격저장소는 이 주소이다\n\t// 이 주소는 너무 기니까 origin 이라는 별명을 부여하겠다\n\t// 여러개의 원격저장소를 연결 시킬수 있음\n\t// ~add friend ~ 이런식으로도 가능\n\nGit remote \t\t//잘 되었는지 확인할수 있음.\nGit remote -v \t//상세 보기 가능\nGit remote remove friend \nGit remote -v\t//origin 만 남은걸 볼수 있음\ngit push -u origin master\t\n\t// 로컬 저장소의 master와 origin 연결\n\t// 유저네임 입력하고 \n\t// 비밀번호 입력\nVim f1.txt\t\t//변경\nGit commit -am 2\nGit push  \t\t// 이미 연결 시켰기 때문에 그 다음부터는 push만 하면 됨\n```\n\n\n## 존재하는 원격 저장소를 내 로컬 저장소로 복제하면 다른 컴퓨터에서도 똑같이 가능\n\n```\ngithub에서 clone or download에서 주소를 카피.\n새로운 컴퓨터라고 치고 새로운 디렉토리를 만들거임.\ncd ..\nMkdir gitfth2\nCd gitgth2\nGit clone https://github.com/KoJunHee/gitfth.git .     //.은 현재 디렉토리\n\nls -al \t\t\t//하면 동기화 확인 가능하고\nGit romote -v\t\t//하면 연결되어있다는 것을 확인\n```\n\n","source":"_posts/2017-11-26-원격저장소 만들기.md","raw":"---\nlayout: post\ntitle:  \"원격 저장소 만들기\"\ndate:   2017-11-26\ncategories: git\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png\n---\n\n# 작업하고 있던 것을 생성한 원격 저장소로 옮기기 \n\n```\nmkdir gitfth\nGit init\nVim f1.txt\nGit add f1.txt\nGit commit -m ‘1’\ngit remote add origin https://github.com/KoJunHee/gitfth.git\n\t// 현재 우리의 로컬 저장소에  원격저장소(remote repository)를 연결 시킨다\n\t// 그리고 그 원격저장소는 이 주소이다\n\t// 이 주소는 너무 기니까 origin 이라는 별명을 부여하겠다\n\t// 여러개의 원격저장소를 연결 시킬수 있음\n\t// ~add friend ~ 이런식으로도 가능\n\nGit remote \t\t//잘 되었는지 확인할수 있음.\nGit remote -v \t//상세 보기 가능\nGit remote remove friend \nGit remote -v\t//origin 만 남은걸 볼수 있음\ngit push -u origin master\t\n\t// 로컬 저장소의 master와 origin 연결\n\t// 유저네임 입력하고 \n\t// 비밀번호 입력\nVim f1.txt\t\t//변경\nGit commit -am 2\nGit push  \t\t// 이미 연결 시켰기 때문에 그 다음부터는 push만 하면 됨\n```\n\n\n## 존재하는 원격 저장소를 내 로컬 저장소로 복제하면 다른 컴퓨터에서도 똑같이 가능\n\n```\ngithub에서 clone or download에서 주소를 카피.\n새로운 컴퓨터라고 치고 새로운 디렉토리를 만들거임.\ncd ..\nMkdir gitfth2\nCd gitgth2\nGit clone https://github.com/KoJunHee/gitfth.git .     //.은 현재 디렉토리\n\nls -al \t\t\t//하면 동기화 확인 가능하고\nGit romote -v\t\t//하면 연결되어있다는 것을 확인\n```\n\n","slug":"2017-11-26-원격저장소 만들기","published":1,"updated":"2018-04-16T04:07:17.305Z","comments":1,"photos":[],"link":"","_id":"cjp6k657z003p31x7s2un5zo1","content":"<h1 id=\"작업하고-있던-것을-생성한-원격-저장소로-옮기기\"><a href=\"#작업하고-있던-것을-생성한-원격-저장소로-옮기기\" class=\"headerlink\" title=\"작업하고 있던 것을 생성한 원격 저장소로 옮기기\"></a>작업하고 있던 것을 생성한 원격 저장소로 옮기기</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir gitfth</span><br><span class=\"line\">Git init</span><br><span class=\"line\">Vim f1.txt</span><br><span class=\"line\">Git add f1.txt</span><br><span class=\"line\">Git commit -m ‘1’</span><br><span class=\"line\">git remote add origin https://github.com/KoJunHee/gitfth.git</span><br><span class=\"line\">\t// 현재 우리의 로컬 저장소에  원격저장소(remote repository)를 연결 시킨다</span><br><span class=\"line\">\t// 그리고 그 원격저장소는 이 주소이다</span><br><span class=\"line\">\t// 이 주소는 너무 기니까 origin 이라는 별명을 부여하겠다</span><br><span class=\"line\">\t// 여러개의 원격저장소를 연결 시킬수 있음</span><br><span class=\"line\">\t// ~add friend ~ 이런식으로도 가능</span><br><span class=\"line\"></span><br><span class=\"line\">Git remote \t\t//잘 되었는지 확인할수 있음.</span><br><span class=\"line\">Git remote -v \t//상세 보기 가능</span><br><span class=\"line\">Git remote remove friend </span><br><span class=\"line\">Git remote -v\t//origin 만 남은걸 볼수 있음</span><br><span class=\"line\">git push -u origin master\t</span><br><span class=\"line\">\t// 로컬 저장소의 master와 origin 연결</span><br><span class=\"line\">\t// 유저네임 입력하고 </span><br><span class=\"line\">\t// 비밀번호 입력</span><br><span class=\"line\">Vim f1.txt\t\t//변경</span><br><span class=\"line\">Git commit -am 2</span><br><span class=\"line\">Git push  \t\t// 이미 연결 시켰기 때문에 그 다음부터는 push만 하면 됨</span><br></pre></td></tr></table></figure>\n<h2 id=\"존재하는-원격-저장소를-내-로컬-저장소로-복제하면-다른-컴퓨터에서도-똑같이-가능\"><a href=\"#존재하는-원격-저장소를-내-로컬-저장소로-복제하면-다른-컴퓨터에서도-똑같이-가능\" class=\"headerlink\" title=\"존재하는 원격 저장소를 내 로컬 저장소로 복제하면 다른 컴퓨터에서도 똑같이 가능\"></a>존재하는 원격 저장소를 내 로컬 저장소로 복제하면 다른 컴퓨터에서도 똑같이 가능</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github에서 clone or download에서 주소를 카피.</span><br><span class=\"line\">새로운 컴퓨터라고 치고 새로운 디렉토리를 만들거임.</span><br><span class=\"line\">cd ..</span><br><span class=\"line\">Mkdir gitfth2</span><br><span class=\"line\">Cd gitgth2</span><br><span class=\"line\">Git clone https://github.com/KoJunHee/gitfth.git .     //.은 현재 디렉토리</span><br><span class=\"line\"></span><br><span class=\"line\">ls -al \t\t\t//하면 동기화 확인 가능하고</span><br><span class=\"line\">Git romote -v\t\t//하면 연결되어있다는 것을 확인</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h1 id=\"작업하고-있던-것을-생성한-원격-저장소로-옮기기\"><a href=\"#작업하고-있던-것을-생성한-원격-저장소로-옮기기\" class=\"headerlink\" title=\"작업하고 있던 것을 생성한 원격 저장소로 옮기기\"></a>작업하고 있던 것을 생성한 원격 저장소로 옮기기</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir gitfth</span><br><span class=\"line\">Git init</span><br><span class=\"line\">Vim f1.txt</span><br><span class=\"line\">Git add f1.txt</span><br><span class=\"line\">Git commit -m ‘1’</span><br><span class=\"line\">git remote add origin https://github.com/KoJunHee/gitfth.git</span><br><span class=\"line\">\t// 현재 우리의 로컬 저장소에  원격저장소(remote repository)를 연결 시킨다</span><br><span class=\"line\">\t// 그리고 그 원격저장소는 이 주소이다</span><br><span class=\"line\">\t// 이 주소는 너무 기니까 origin 이라는 별명을 부여하겠다</span><br><span class=\"line\">\t// 여러개의 원격저장소를 연결 시킬수 있음</span><br><span class=\"line\">\t// ~add friend ~ 이런식으로도 가능</span><br><span class=\"line\"></span><br><span class=\"line\">Git remote \t\t//잘 되었는지 확인할수 있음.</span><br><span class=\"line\">Git remote -v \t//상세 보기 가능</span><br><span class=\"line\">Git remote remove friend </span><br><span class=\"line\">Git remote -v\t//origin 만 남은걸 볼수 있음</span><br><span class=\"line\">git push -u origin master\t</span><br><span class=\"line\">\t// 로컬 저장소의 master와 origin 연결</span><br><span class=\"line\">\t// 유저네임 입력하고 </span><br><span class=\"line\">\t// 비밀번호 입력</span><br><span class=\"line\">Vim f1.txt\t\t//변경</span><br><span class=\"line\">Git commit -am 2</span><br><span class=\"line\">Git push  \t\t// 이미 연결 시켰기 때문에 그 다음부터는 push만 하면 됨</span><br></pre></td></tr></table></figure>\n<h2 id=\"존재하는-원격-저장소를-내-로컬-저장소로-복제하면-다른-컴퓨터에서도-똑같이-가능\"><a href=\"#존재하는-원격-저장소를-내-로컬-저장소로-복제하면-다른-컴퓨터에서도-똑같이-가능\" class=\"headerlink\" title=\"존재하는 원격 저장소를 내 로컬 저장소로 복제하면 다른 컴퓨터에서도 똑같이 가능\"></a>존재하는 원격 저장소를 내 로컬 저장소로 복제하면 다른 컴퓨터에서도 똑같이 가능</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github에서 clone or download에서 주소를 카피.</span><br><span class=\"line\">새로운 컴퓨터라고 치고 새로운 디렉토리를 만들거임.</span><br><span class=\"line\">cd ..</span><br><span class=\"line\">Mkdir gitfth2</span><br><span class=\"line\">Cd gitgth2</span><br><span class=\"line\">Git clone https://github.com/KoJunHee/gitfth.git .     //.은 현재 디렉토리</span><br><span class=\"line\"></span><br><span class=\"line\">ls -al \t\t\t//하면 동기화 확인 가능하고</span><br><span class=\"line\">Git romote -v\t\t//하면 연결되어있다는 것을 확인</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"조합 0의 개수","date":"2017-11-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1676>\n\n## 풀이\n\n- 팩토링러 문제와 비슷. 쉬운 문제.\n- 팩토리얼 : 2의 개수가 5의 개수보다 많음 => 5의 개수만 셈 \n- 조합 : 2와 5의 개수를 모두 셈\n\n\n\n\t\n\n\n","source":"_posts/2017-11-27-조합0의개수.md","raw":"---\nlayout: post\ntitle:  \"조합 0의 개수\"\ndate:   2017-11-26\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1676>\n\n## 풀이\n\n- 팩토링러 문제와 비슷. 쉬운 문제.\n- 팩토리얼 : 2의 개수가 5의 개수보다 많음 => 5의 개수만 셈 \n- 조합 : 2와 5의 개수를 모두 셈\n\n\n\n\t\n\n\n","slug":"2017-11-27-조합0의개수","published":1,"updated":"2018-04-16T04:07:27.506Z","comments":1,"photos":[],"link":"","_id":"cjp6k6580003r31x7ac3hvreb","content":"<p><a href=\"https://www.acmicpc.net/problem/1676\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1676</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>팩토링러 문제와 비슷. 쉬운 문제.</li>\n<li>팩토리얼 : 2의 개수가 5의 개수보다 많음 =&gt; 5의 개수만 셈 </li>\n<li>조합 : 2와 5의 개수를 모두 셈</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1676\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1676</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>팩토링러 문제와 비슷. 쉬운 문제.</li>\n<li>팩토리얼 : 2의 개수가 5의 개수보다 많음 =&gt; 5의 개수만 셈 </li>\n<li>조합 : 2와 5의 개수를 모두 셈</li>\n</ul>\n"},{"layout":"post","title":"git 핵싱 명령어","date":"2017-11-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png","_content":"\n# 핵심 명령어 \n\n- git init\n\t\n\t- 여기에 git을 적용시키겠다\n\n- git status\n\n\t- 변경된 파일 내용 확인 \n\n- git branch\n\n\t- 현재 branch 확인\n\t- 초기 commit 실행하지 않고 하면 아무것도 안나옴\n\n- git add \n\n\t- stage에 올리겠다\n\t- commit 전에 add 하는 이유는 commit하고 싶은 파일만 선별하고 싶어서.\n\n- git commit -m 'message'\n\n\t- message를 남기며 commit을 하겠다\n\t- 새로운 version이 생김\n\n- git remote add origin 'repository address'\n\n\t- 'repository address' 를 origin 이라는 이름으로 설정하겠다\n\n- git push origin master\n\n\t- master branch를 origin 이라는 repository에 push 하겠다\n\n\n\n\n\n","source":"_posts/2017-11-26-git 핵심 명령어.md","raw":"---\nlayout: post\ntitle:  \"git 핵싱 명령어\"\ndate:   2017-11-26\ncategories: git\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png\n---\n\n# 핵심 명령어 \n\n- git init\n\t\n\t- 여기에 git을 적용시키겠다\n\n- git status\n\n\t- 변경된 파일 내용 확인 \n\n- git branch\n\n\t- 현재 branch 확인\n\t- 초기 commit 실행하지 않고 하면 아무것도 안나옴\n\n- git add \n\n\t- stage에 올리겠다\n\t- commit 전에 add 하는 이유는 commit하고 싶은 파일만 선별하고 싶어서.\n\n- git commit -m 'message'\n\n\t- message를 남기며 commit을 하겠다\n\t- 새로운 version이 생김\n\n- git remote add origin 'repository address'\n\n\t- 'repository address' 를 origin 이라는 이름으로 설정하겠다\n\n- git push origin master\n\n\t- master branch를 origin 이라는 repository에 push 하겠다\n\n\n\n\n\n","slug":"2017-11-26-git 핵심 명령어","published":1,"updated":"2018-04-16T04:07:09.526Z","comments":1,"photos":[],"link":"","_id":"cjp6k6581003u31x7wtnlyyul","content":"<h1 id=\"핵심-명령어\"><a href=\"#핵심-명령어\" class=\"headerlink\" title=\"핵심 명령어\"></a>핵심 명령어</h1><ul>\n<li><p>git init</p>\n<ul>\n<li>여기에 git을 적용시키겠다</li>\n</ul>\n</li>\n<li><p>git status</p>\n<ul>\n<li>변경된 파일 내용 확인 </li>\n</ul>\n</li>\n<li><p>git branch</p>\n<ul>\n<li>현재 branch 확인</li>\n<li>초기 commit 실행하지 않고 하면 아무것도 안나옴</li>\n</ul>\n</li>\n<li><p>git add </p>\n<ul>\n<li>stage에 올리겠다</li>\n<li>commit 전에 add 하는 이유는 commit하고 싶은 파일만 선별하고 싶어서.</li>\n</ul>\n</li>\n<li><p>git commit -m ‘message’</p>\n<ul>\n<li>message를 남기며 commit을 하겠다</li>\n<li>새로운 version이 생김</li>\n</ul>\n</li>\n<li><p>git remote add origin ‘repository address’</p>\n<ul>\n<li>‘repository address’ 를 origin 이라는 이름으로 설정하겠다</li>\n</ul>\n</li>\n<li><p>git push origin master</p>\n<ul>\n<li>master branch를 origin 이라는 repository에 push 하겠다</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h1 id=\"핵심-명령어\"><a href=\"#핵심-명령어\" class=\"headerlink\" title=\"핵심 명령어\"></a>핵심 명령어</h1><ul>\n<li><p>git init</p>\n<ul>\n<li>여기에 git을 적용시키겠다</li>\n</ul>\n</li>\n<li><p>git status</p>\n<ul>\n<li>변경된 파일 내용 확인 </li>\n</ul>\n</li>\n<li><p>git branch</p>\n<ul>\n<li>현재 branch 확인</li>\n<li>초기 commit 실행하지 않고 하면 아무것도 안나옴</li>\n</ul>\n</li>\n<li><p>git add </p>\n<ul>\n<li>stage에 올리겠다</li>\n<li>commit 전에 add 하는 이유는 commit하고 싶은 파일만 선별하고 싶어서.</li>\n</ul>\n</li>\n<li><p>git commit -m ‘message’</p>\n<ul>\n<li>message를 남기며 commit을 하겠다</li>\n<li>새로운 version이 생김</li>\n</ul>\n</li>\n<li><p>git remote add origin ‘repository address’</p>\n<ul>\n<li>‘repository address’ 를 origin 이라는 이름으로 설정하겠다</li>\n</ul>\n</li>\n<li><p>git push origin master</p>\n<ul>\n<li>master branch를 origin 이라는 repository에 push 하겠다</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"how to merge","date":"2017-11-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png","_content":"\n- jay branch에서 작업완료. 커밋 완료\n\n- git checkout master\n\n- git pull origin master \n\t\n\t- git master에서 local master로  pull\n\n- conflict 해결\n\n- git merge jay\n\t\n\t- jay에 있는걸 master로  merge\n\n- conflic 해결\n\n\t- master와 jay가 합쳐진 상태 \n\n- git add .\n\n- git commit -m 'merge finish'\n\n- git push origin master\n\t\n\n\n","source":"_posts/2017-11-26-how to merge.md","raw":"---\nlayout: post\ntitle:  \"how to merge\"\ndate:   2017-11-26\ncategories: git\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png\n---\n\n- jay branch에서 작업완료. 커밋 완료\n\n- git checkout master\n\n- git pull origin master \n\t\n\t- git master에서 local master로  pull\n\n- conflict 해결\n\n- git merge jay\n\t\n\t- jay에 있는걸 master로  merge\n\n- conflic 해결\n\n\t- master와 jay가 합쳐진 상태 \n\n- git add .\n\n- git commit -m 'merge finish'\n\n- git push origin master\n\t\n\n\n","slug":"2017-11-26-how to merge","published":1,"updated":"2018-04-16T04:07:13.314Z","comments":1,"photos":[],"link":"","_id":"cjp6k6582003w31x7jgztn406","content":"<ul>\n<li><p>jay branch에서 작업완료. 커밋 완료</p>\n</li>\n<li><p>git checkout master</p>\n</li>\n<li><p>git pull origin master </p>\n<ul>\n<li>git master에서 local master로  pull</li>\n</ul>\n</li>\n<li><p>conflict 해결</p>\n</li>\n<li><p>git merge jay</p>\n<ul>\n<li>jay에 있는걸 master로  merge</li>\n</ul>\n</li>\n<li><p>conflic 해결</p>\n<ul>\n<li>master와 jay가 합쳐진 상태 </li>\n</ul>\n</li>\n<li><p>git add .</p>\n</li>\n<li><p>git commit -m ‘merge finish’</p>\n</li>\n<li><p>git push origin master</p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>jay branch에서 작업완료. 커밋 완료</p>\n</li>\n<li><p>git checkout master</p>\n</li>\n<li><p>git pull origin master </p>\n<ul>\n<li>git master에서 local master로  pull</li>\n</ul>\n</li>\n<li><p>conflict 해결</p>\n</li>\n<li><p>git merge jay</p>\n<ul>\n<li>jay에 있는걸 master로  merge</li>\n</ul>\n</li>\n<li><p>conflic 해결</p>\n<ul>\n<li>master와 jay가 합쳐진 상태 </li>\n</ul>\n</li>\n<li><p>git add .</p>\n</li>\n<li><p>git commit -m ‘merge finish’</p>\n</li>\n<li><p>git push origin master</p>\n</li>\n</ul>\n"},{"layout":"post","title":"object array","date":"2017-11-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n## array 에 object 를\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/49_re.png)\n\n\n\n\t\n\n\n","source":"_posts/2017-11-28-swagger object array.md","raw":"---\nlayout: post\ntitle:  \"object array\"\ndate:   2017-11-26\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n## array 에 object 를\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/49_re.png)\n\n\n\n\t\n\n\n","slug":"2017-11-28-swagger object array","published":1,"updated":"2018-04-16T04:07:31.604Z","comments":1,"photos":[],"link":"","_id":"cjp6k6584003y31x7ckvkxhkw","content":"<h2 id=\"array-에-object-를\"><a href=\"#array-에-object-를\" class=\"headerlink\" title=\"array 에 object 를\"></a>array 에 object 를</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/49_re.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"array-에-object-를\"><a href=\"#array-에-object-를\" class=\"headerlink\" title=\"array 에 object 를\"></a>array 에 object 를</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/49_re.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"트리순회","date":"2017-11-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1991>\n\n## 풀이\n\n- 존위 순회 / 중위 순회 / 후위 순회\n- 트리 그리기\n\t- [0] : 왼쪽 자식\n\t- [1] : 오른쪽 자식\n- 순회 : 재귀로 \n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/50.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/51.png)\n\n\n\t\n\n\n","source":"_posts/2017-11-28-트리순회.md","raw":"---\nlayout: post\ntitle:  \"트리순회\"\ndate:   2017-11-28\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1991>\n\n## 풀이\n\n- 존위 순회 / 중위 순회 / 후위 순회\n- 트리 그리기\n\t- [0] : 왼쪽 자식\n\t- [1] : 오른쪽 자식\n- 순회 : 재귀로 \n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/50.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/51.png)\n\n\n\t\n\n\n","slug":"2017-11-28-트리순회","published":1,"updated":"2018-04-16T04:07:35.305Z","comments":1,"photos":[],"link":"","_id":"cjp6k6587004131x7qfjovqrs","content":"<p><a href=\"https://www.acmicpc.net/problem/1991\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1991</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>존위 순회 / 중위 순회 / 후위 순회</li>\n<li>트리 그리기<ul>\n<li>[0] : 왼쪽 자식</li>\n<li>[1] : 오른쪽 자식</li>\n</ul>\n</li>\n<li>순회 : 재귀로 </li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/50.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/51.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1991\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1991</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>존위 순회 / 중위 순회 / 후위 순회</li>\n<li>트리 그리기<ul>\n<li>[0] : 왼쪽 자식</li>\n<li>[1] : 오른쪽 자식</li>\n</ul>\n</li>\n<li>순회 : 재귀로 </li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/50.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/51.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"원격 저장소와 지역 저장소의 동기화 ","date":"2017-11-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png","_content":"\n# 하나의 원격 저장소를 두 개의 지역 저장소가 동기화\n\n````\nGit clone 주소 git_home\t \t//그럼 git_home이라는 곳이 생김\nGit clone 주소 git_office\t \t//그럼 git_office이라는 곳이 생김\n\n\n- git_home 디렉토리에서\nVim f1.txt\t \t\t\t\t//내용   a b c\nGit commit -am 3\nGit push\n\n\n- git_office 디렉토리에서\nGit pull \nvim f1.txt\t\t\t\t\t//내용 a b c 에 d 추가\nGit commit -am ‘4’\nGit push\n\n\ngit_home 디렉토리에서\nGit pull\n\n```\n\n\n\n\n\n","source":"_posts/2017-11-26-원격저장소와 지역저장소의 동기화 .md","raw":"---\nlayout: post\ntitle:  \"원격 저장소와 지역 저장소의 동기화 \"\ndate:   2017-11-26\ncategories: git\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png\n---\n\n# 하나의 원격 저장소를 두 개의 지역 저장소가 동기화\n\n````\nGit clone 주소 git_home\t \t//그럼 git_home이라는 곳이 생김\nGit clone 주소 git_office\t \t//그럼 git_office이라는 곳이 생김\n\n\n- git_home 디렉토리에서\nVim f1.txt\t \t\t\t\t//내용   a b c\nGit commit -am 3\nGit push\n\n\n- git_office 디렉토리에서\nGit pull \nvim f1.txt\t\t\t\t\t//내용 a b c 에 d 추가\nGit commit -am ‘4’\nGit push\n\n\ngit_home 디렉토리에서\nGit pull\n\n```\n\n\n\n\n\n","slug":"2017-11-26-원격저장소와 지역저장소의 동기화 ","published":1,"updated":"2018-04-16T04:07:20.967Z","comments":1,"photos":[],"link":"","_id":"cjp6k6589004331x78gml4aa4","content":"<h1 id=\"하나의-원격-저장소를-두-개의-지역-저장소가-동기화\"><a href=\"#하나의-원격-저장소를-두-개의-지역-저장소가-동기화\" class=\"headerlink\" title=\"하나의 원격 저장소를 두 개의 지역 저장소가 동기화\"></a>하나의 원격 저장소를 두 개의 지역 저장소가 동기화</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git clone 주소 git_home\t \t//그럼 git_home이라는 곳이 생김</span><br><span class=\"line\">Git clone 주소 git_office\t \t//그럼 git_office이라는 곳이 생김</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- git_home 디렉토리에서</span><br><span class=\"line\">Vim f1.txt\t \t\t\t\t//내용   a b c</span><br><span class=\"line\">Git commit -am 3</span><br><span class=\"line\">Git push</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- git_office 디렉토리에서</span><br><span class=\"line\">Git pull </span><br><span class=\"line\">vim f1.txt\t\t\t\t\t//내용 a b c 에 d 추가</span><br><span class=\"line\">Git commit -am ‘4’</span><br><span class=\"line\">Git push</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git_home 디렉토리에서</span><br><span class=\"line\">Git pull</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h1 id=\"하나의-원격-저장소를-두-개의-지역-저장소가-동기화\"><a href=\"#하나의-원격-저장소를-두-개의-지역-저장소가-동기화\" class=\"headerlink\" title=\"하나의 원격 저장소를 두 개의 지역 저장소가 동기화\"></a>하나의 원격 저장소를 두 개의 지역 저장소가 동기화</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git clone 주소 git_home\t \t//그럼 git_home이라는 곳이 생김</span><br><span class=\"line\">Git clone 주소 git_office\t \t//그럼 git_office이라는 곳이 생김</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- git_home 디렉토리에서</span><br><span class=\"line\">Vim f1.txt\t \t\t\t\t//내용   a b c</span><br><span class=\"line\">Git commit -am 3</span><br><span class=\"line\">Git push</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- git_office 디렉토리에서</span><br><span class=\"line\">Git pull </span><br><span class=\"line\">vim f1.txt\t\t\t\t\t//내용 a b c 에 d 추가</span><br><span class=\"line\">Git commit -am ‘4’</span><br><span class=\"line\">Git push</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git_home 디렉토리에서</span><br><span class=\"line\">Git pull</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"국영수","date":"2017-11-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/10825>\n\n## 풀이\n\n- 매우 쉬운 문제\n- Person class 생성\n- 입력 값에 따라 Person에 저장\n- 정렬\n","source":"_posts/2017-11-30-국영수.md","raw":"---\nlayout: post\ntitle:  \"국영수\"\ndate:   2017-11-30\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/10825>\n\n## 풀이\n\n- 매우 쉬운 문제\n- Person class 생성\n- 입력 값에 따라 Person에 저장\n- 정렬\n","slug":"2017-11-30-국영수","published":1,"updated":"2018-04-16T04:07:44.122Z","comments":1,"photos":[],"link":"","_id":"cjp6k658a004531x7vgxhck6d","content":"<p><a href=\"https://www.acmicpc.net/problem/10825\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10825</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>매우 쉬운 문제</li>\n<li>Person class 생성</li>\n<li>입력 값에 따라 Person에 저장</li>\n<li>정렬</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/10825\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10825</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>매우 쉬운 문제</li>\n<li>Person class 생성</li>\n<li>입력 값에 따라 Person에 저장</li>\n<li>정렬</li>\n</ul>\n"},{"layout":"post","title":"트리의 지름02","date":"2017-12-01T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1967>\n\n## 풀이\n\n- bj_1167 과 동일한 문제\n- 1을 루트로 지정하고 가장 먼 위치에 있는 정점 찾고\n- 그 정점에서 모든 정점들 사이의 거리 찾아서\n- 가장 큰게 답\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/54.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/55.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/56.png)\n","source":"_posts/2017-12-02-트리의 지름02.md","raw":"---\nlayout: post\ntitle:  \"트리의 지름02\"\ndate:   2017-12-02\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1967>\n\n## 풀이\n\n- bj_1167 과 동일한 문제\n- 1을 루트로 지정하고 가장 먼 위치에 있는 정점 찾고\n- 그 정점에서 모든 정점들 사이의 거리 찾아서\n- 가장 큰게 답\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/54.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/55.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/56.png)\n","slug":"2017-12-02-트리의 지름02","published":1,"updated":"2018-04-16T04:07:51.845Z","comments":1,"photos":[],"link":"","_id":"cjp6k658c004731x780bwrfms","content":"<p><a href=\"https://www.acmicpc.net/problem/1967\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1967</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>bj_1167 과 동일한 문제</li>\n<li>1을 루트로 지정하고 가장 먼 위치에 있는 정점 찾고</li>\n<li>그 정점에서 모든 정점들 사이의 거리 찾아서</li>\n<li>가장 큰게 답</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/54.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/55.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/56.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1967\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1967</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>bj_1167 과 동일한 문제</li>\n<li>1을 루트로 지정하고 가장 먼 위치에 있는 정점 찾고</li>\n<li>그 정점에서 모든 정점들 사이의 거리 찾아서</li>\n<li>가장 큰게 답</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/54.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/55.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/56.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"트리의 지름","date":"2017-11-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1167>\n\n## 풀이\n\n- bfs로 탐색\n- 루트에서 모든 정점까리 거리 구함 \n- 가장 먼 거리 정점 : A\n- A는 이제 루트\n- 모든 정점까지 거리 구함 \n- 가장 먼 거리가 지름\n","source":"_posts/2017-12-01-트리의 지름.md","raw":"---\nlayout: post\ntitle:  \"트리의 지름\"\ndate:   2017-12-01\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1167>\n\n## 풀이\n\n- bfs로 탐색\n- 루트에서 모든 정점까리 거리 구함 \n- 가장 먼 거리 정점 : A\n- A는 이제 루트\n- 모든 정점까지 거리 구함 \n- 가장 먼 거리가 지름\n","slug":"2017-12-01-트리의 지름","published":1,"updated":"2018-04-16T04:07:47.977Z","comments":1,"photos":[],"link":"","_id":"cjp6k658d004931x7ec1id652","content":"<p><a href=\"https://www.acmicpc.net/problem/1167\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1167</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>bfs로 탐색</li>\n<li>루트에서 모든 정점까리 거리 구함 </li>\n<li>가장 먼 거리 정점 : A</li>\n<li>A는 이제 루트</li>\n<li>모든 정점까지 거리 구함 </li>\n<li>가장 먼 거리가 지름</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1167\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1167</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>bfs로 탐색</li>\n<li>루트에서 모든 정점까리 거리 구함 </li>\n<li>가장 먼 거리 정점 : A</li>\n<li>A는 이제 루트</li>\n<li>모든 정점까지 거리 구함 </li>\n<li>가장 먼 거리가 지름</li>\n</ul>\n"},{"layout":"post","title":"트리의 부모 찾기","date":"2017-11-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/11725>\n\n## 틀린 풀이\n\n- int a[][]= new int[n][3]\n\t\n\t- 왼쪽 자식, 오른쪽 자식, 부모를 저장 할 배열 생성 \n\n- 전위 순회\n\t\n\t- 트리에서 입력한 line의 첫 번째 수가 있는지 탐색\n\n-  찾았으면 왼쪽 자식이, 오른쪽 자식이 비었는지 확인\n\n- 못 찾았으면 입력한 line의 두번째 수가\n\n\t- 왼쪽 자식 비었는지, 오른쪽 자식 비었는지 확인\n\n- 이게 과연 효과적인 방법일까 ?\n\n## 옳은 풀이\n\n- \"도시가 n개 + 도로가 n-1개 + 두 도시 사이에 경로가 항상 존재 + 방향 X ==> 트리임\"\n\n- 트리의 탐색 : BFS / DFS 로 가능\n\n- 트리는 사이클이 없는 그래프\n\n- 따라서, 두 정점 사이 경로는 1개\n\n- now -> next로 가려면 \n\t\n\t- 간선이 있어야함\n\t \n\t- next를 아직 방문하지 않았어야함 => check[next] == false\n\n- 알게 되는 것\n\n\t- parent[next] = now\n\t\n\t- depth[next] =  depth[now] +1\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/52.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/53.png)\n","source":"_posts/2017-11-29-트리의 부모 찾기.md","raw":"---\nlayout: post\ntitle:  \"트리의 부모 찾기\"\ndate:   2017-11-29\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/11725>\n\n## 틀린 풀이\n\n- int a[][]= new int[n][3]\n\t\n\t- 왼쪽 자식, 오른쪽 자식, 부모를 저장 할 배열 생성 \n\n- 전위 순회\n\t\n\t- 트리에서 입력한 line의 첫 번째 수가 있는지 탐색\n\n-  찾았으면 왼쪽 자식이, 오른쪽 자식이 비었는지 확인\n\n- 못 찾았으면 입력한 line의 두번째 수가\n\n\t- 왼쪽 자식 비었는지, 오른쪽 자식 비었는지 확인\n\n- 이게 과연 효과적인 방법일까 ?\n\n## 옳은 풀이\n\n- \"도시가 n개 + 도로가 n-1개 + 두 도시 사이에 경로가 항상 존재 + 방향 X ==> 트리임\"\n\n- 트리의 탐색 : BFS / DFS 로 가능\n\n- 트리는 사이클이 없는 그래프\n\n- 따라서, 두 정점 사이 경로는 1개\n\n- now -> next로 가려면 \n\t\n\t- 간선이 있어야함\n\t \n\t- next를 아직 방문하지 않았어야함 => check[next] == false\n\n- 알게 되는 것\n\n\t- parent[next] = now\n\t\n\t- depth[next] =  depth[now] +1\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/52.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/53.png)\n","slug":"2017-11-29-트리의 부모 찾기","published":1,"updated":"2018-04-16T04:07:40.228Z","comments":1,"photos":[],"link":"","_id":"cjp6k658e004b31x7h3fwlgdd","content":"<p><a href=\"https://www.acmicpc.net/problem/11725\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11725</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li><p>int a[][]= new int[n][3]</p>\n<ul>\n<li>왼쪽 자식, 오른쪽 자식, 부모를 저장 할 배열 생성 </li>\n</ul>\n</li>\n<li><p>전위 순회</p>\n<ul>\n<li>트리에서 입력한 line의 첫 번째 수가 있는지 탐색</li>\n</ul>\n</li>\n<li><p>찾았으면 왼쪽 자식이, 오른쪽 자식이 비었는지 확인</p>\n</li>\n<li><p>못 찾았으면 입력한 line의 두번째 수가</p>\n<ul>\n<li>왼쪽 자식 비었는지, 오른쪽 자식 비었는지 확인</li>\n</ul>\n</li>\n<li><p>이게 과연 효과적인 방법일까 ?</p>\n</li>\n</ul>\n<h2 id=\"옳은-풀이\"><a href=\"#옳은-풀이\" class=\"headerlink\" title=\"옳은 풀이\"></a>옳은 풀이</h2><ul>\n<li><p>“도시가 n개 + 도로가 n-1개 + 두 도시 사이에 경로가 항상 존재 + 방향 X ==&gt; 트리임”</p>\n</li>\n<li><p>트리의 탐색 : BFS / DFS 로 가능</p>\n</li>\n<li><p>트리는 사이클이 없는 그래프</p>\n</li>\n<li><p>따라서, 두 정점 사이 경로는 1개</p>\n</li>\n<li><p>now -&gt; next로 가려면 </p>\n<ul>\n<li><p>간선이 있어야함</p>\n</li>\n<li><p>next를 아직 방문하지 않았어야함 =&gt; check[next] == false</p>\n</li>\n</ul>\n</li>\n<li><p>알게 되는 것</p>\n<ul>\n<li><p>parent[next] = now</p>\n</li>\n<li><p>depth[next] =  depth[now] +1</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/52.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/53.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11725\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11725</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li><p>int a[][]= new int[n][3]</p>\n<ul>\n<li>왼쪽 자식, 오른쪽 자식, 부모를 저장 할 배열 생성 </li>\n</ul>\n</li>\n<li><p>전위 순회</p>\n<ul>\n<li>트리에서 입력한 line의 첫 번째 수가 있는지 탐색</li>\n</ul>\n</li>\n<li><p>찾았으면 왼쪽 자식이, 오른쪽 자식이 비었는지 확인</p>\n</li>\n<li><p>못 찾았으면 입력한 line의 두번째 수가</p>\n<ul>\n<li>왼쪽 자식 비었는지, 오른쪽 자식 비었는지 확인</li>\n</ul>\n</li>\n<li><p>이게 과연 효과적인 방법일까 ?</p>\n</li>\n</ul>\n<h2 id=\"옳은-풀이\"><a href=\"#옳은-풀이\" class=\"headerlink\" title=\"옳은 풀이\"></a>옳은 풀이</h2><ul>\n<li><p>“도시가 n개 + 도로가 n-1개 + 두 도시 사이에 경로가 항상 존재 + 방향 X ==&gt; 트리임”</p>\n</li>\n<li><p>트리의 탐색 : BFS / DFS 로 가능</p>\n</li>\n<li><p>트리는 사이클이 없는 그래프</p>\n</li>\n<li><p>따라서, 두 정점 사이 경로는 1개</p>\n</li>\n<li><p>now -&gt; next로 가려면 </p>\n<ul>\n<li><p>간선이 있어야함</p>\n</li>\n<li><p>next를 아직 방문하지 않았어야함 =&gt; check[next] == false</p>\n</li>\n</ul>\n</li>\n<li><p>알게 되는 것</p>\n<ul>\n<li><p>parent[next] = now</p>\n</li>\n<li><p>depth[next] =  depth[now] +1</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/52.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/53.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"내리막길","date":"2017-12-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1520>\n\n## 풀이\n\n- 상하좌우 조사\n- 현재 위치를 상하좌우 조사한 위치에서 올 수 있는지 확인\n- 재귀\n- 계속 d\t 배열이 채워지질 않는다..\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/57.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/58.png)\n\n","source":"_posts/2017-12-04-내리막길.md","raw":"---\nlayout: post\ntitle:  \"내리막길\"\ndate:   2017-12-04\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1520>\n\n## 풀이\n\n- 상하좌우 조사\n- 현재 위치를 상하좌우 조사한 위치에서 올 수 있는지 확인\n- 재귀\n- 계속 d\t 배열이 채워지질 않는다..\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/57.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/58.png)\n\n","slug":"2017-12-04-내리막길","published":1,"updated":"2018-04-16T04:07:56.108Z","comments":1,"photos":[],"link":"","_id":"cjp6k658g004d31x740lxp40k","content":"<p><a href=\"https://www.acmicpc.net/problem/1520\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1520</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>상하좌우 조사</li>\n<li>현재 위치를 상하좌우 조사한 위치에서 올 수 있는지 확인</li>\n<li>재귀</li>\n<li>계속 d     배열이 채워지질 않는다..</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/57.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/58.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1520\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1520</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>상하좌우 조사</li>\n<li>현재 위치를 상하좌우 조사한 위치에서 올 수 있는지 확인</li>\n<li>재귀</li>\n<li>계속 d     배열이 채워지질 않는다..</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/57.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/58.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"네수","date":"2017-12-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/10824>\n\n## 풀이\n\n- 매우 쉬운 문제\n- string 으로 붙이면 됨\n- StringTokenizer\n- hasMoreTokens\n- 출력할 때 int로 하면 런타임에러\n- 그래서 long long 으로 했음\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/longlong.png)\n\n\n","source":"_posts/2017-12-05-네수.md","raw":"---\nlayout: post\ntitle:  \"네수\"\ndate:   2017-12-05\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/10824>\n\n## 풀이\n\n- 매우 쉬운 문제\n- string 으로 붙이면 됨\n- StringTokenizer\n- hasMoreTokens\n- 출력할 때 int로 하면 런타임에러\n- 그래서 long long 으로 했음\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/longlong.png)\n\n\n","slug":"2017-12-05-네수","published":1,"updated":"2018-04-16T04:08:00.289Z","comments":1,"photos":[],"link":"","_id":"cjp6k658i004f31x7lqc2pioe","content":"<p><a href=\"https://www.acmicpc.net/problem/10824\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10824</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>매우 쉬운 문제</li>\n<li>string 으로 붙이면 됨</li>\n<li>StringTokenizer</li>\n<li>hasMoreTokens</li>\n<li>출력할 때 int로 하면 런타임에러</li>\n<li>그래서 long long 으로 했음</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/longlong.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/10824\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10824</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>매우 쉬운 문제</li>\n<li>string 으로 붙이면 됨</li>\n<li>StringTokenizer</li>\n<li>hasMoreTokens</li>\n<li>출력할 때 int로 하면 런타임에러</li>\n<li>그래서 long long 으로 했음</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/longlong.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"2차원 배열의 합","date":"2017-12-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2167>\n\n## 풀이\n\n- dp\n- 그림으로 쉽게 풀림\n- 점화식\n\t\t\n\t\ts[i][j] = a[i][j] + s[i-1][j] +s[i][j-1] - s[i-1][j-1] \n\n- ( i,j,x,y 의 구간합 )\n\n\t\ts[x][y] -s[ i-1][y]  - s[x][j-1] + s[i-1][j-1 ]\n","source":"_posts/2017-12-07-2차원 배열의 합.md","raw":"---\nlayout: post\ntitle:  \"2차원 배열의 합\"\ndate:   2017-12-07\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2167>\n\n## 풀이\n\n- dp\n- 그림으로 쉽게 풀림\n- 점화식\n\t\t\n\t\ts[i][j] = a[i][j] + s[i-1][j] +s[i][j-1] - s[i-1][j-1] \n\n- ( i,j,x,y 의 구간합 )\n\n\t\ts[x][y] -s[ i-1][y]  - s[x][j-1] + s[i-1][j-1 ]\n","slug":"2017-12-07-2차원 배열의 합","published":1,"updated":"2018-04-16T04:08:08.453Z","comments":1,"photos":[],"link":"","_id":"cjp6k658k004h31x7x94ihbra","content":"<p><a href=\"https://www.acmicpc.net/problem/2167\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2167</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>그림으로 쉽게 풀림</li>\n<li><p>점화식</p>\n<pre><code>s[i][j] = a[i][j] + s[i-1][j] +s[i][j-1] - s[i-1][j-1] \n</code></pre></li>\n<li><p>( i,j,x,y 의 구간합 )</p>\n<pre><code>s[x][y] -s[ i-1][y]  - s[x][j-1] + s[i-1][j-1 ]\n</code></pre></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2167\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2167</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>그림으로 쉽게 풀림</li>\n<li><p>점화식</p>\n<pre><code>s[i][j] = a[i][j] + s[i-1][j] +s[i][j-1] - s[i-1][j-1] \n</code></pre></li>\n<li><p>( i,j,x,y 의 구간합 )</p>\n<pre><code>s[x][y] -s[ i-1][y]  - s[x][j-1] + s[i-1][j-1 ]\n</code></pre></li>\n</ul>\n"},{"layout":"post","title":"이동하기","date":"2017-12-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/11048>\n\n## 풀이\n\n- dp\n- 잘못된 접근 : 현재 위치에서, 갈 수 있는 곳만 생각했음 \n- 올바른 접근 : 현재 위치를, 올 수 있는 곳을 생각해야함\n\n\t````\n\t1 2\n\t3 4\n\t\n\t4를 올 수 있는 곳은 1, 2, 3\n\t````\n\n- d[i][j] : i,j 위치에서의 사탕 개수 최대값\n\n\t\tMax( \n\t\t\t[i-1][j-1]에서의 사탕개수 최대값, \n\t\t\t[i][j-1]에서의 사탕개수 최대값, \n\t\t\t[i-1][j]에서의 사탕개수 최대값) \t+ i,j에서의 사탕개수\n\n\t\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/move.png)\n\t\n","source":"_posts/2017-12-08-이동하기.md","raw":"---\nlayout: post\ntitle:  \"이동하기\"\ndate:   2017-12-08\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/11048>\n\n## 풀이\n\n- dp\n- 잘못된 접근 : 현재 위치에서, 갈 수 있는 곳만 생각했음 \n- 올바른 접근 : 현재 위치를, 올 수 있는 곳을 생각해야함\n\n\t````\n\t1 2\n\t3 4\n\t\n\t4를 올 수 있는 곳은 1, 2, 3\n\t````\n\n- d[i][j] : i,j 위치에서의 사탕 개수 최대값\n\n\t\tMax( \n\t\t\t[i-1][j-1]에서의 사탕개수 최대값, \n\t\t\t[i][j-1]에서의 사탕개수 최대값, \n\t\t\t[i-1][j]에서의 사탕개수 최대값) \t+ i,j에서의 사탕개수\n\n\t\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/move.png)\n\t\n","slug":"2017-12-08-이동하기","published":1,"updated":"2018-04-16T04:08:12.229Z","comments":1,"photos":[],"link":"","_id":"cjp6k658n004j31x778i1iwmx","content":"<p><a href=\"https://www.acmicpc.net/problem/11048\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11048</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>잘못된 접근 : 현재 위치에서, 갈 수 있는 곳만 생각했음 </li>\n<li><p>올바른 접근 : 현재 위치를, 올 수 있는 곳을 생각해야함</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2</span><br><span class=\"line\">3 4</span><br><span class=\"line\"></span><br><span class=\"line\">4를 올 수 있는 곳은 1, 2, 3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>d[i][j] : i,j 위치에서의 사탕 개수 최대값</p>\n<pre><code>Max( \n    [i-1][j-1]에서의 사탕개수 최대값, \n    [i][j-1]에서의 사탕개수 최대값, \n    [i-1][j]에서의 사탕개수 최대값)     + i,j에서의 사탕개수\n</code></pre></li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/move.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11048\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11048</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>잘못된 접근 : 현재 위치에서, 갈 수 있는 곳만 생각했음 </li>\n<li><p>올바른 접근 : 현재 위치를, 올 수 있는 곳을 생각해야함</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2</span><br><span class=\"line\">3 4</span><br><span class=\"line\"></span><br><span class=\"line\">4를 올 수 있는 곳은 1, 2, 3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>d[i][j] : i,j 위치에서의 사탕 개수 최대값</p>\n<pre><code>Max( \n    [i-1][j-1]에서의 사탕개수 최대값, \n    [i][j-1]에서의 사탕개수 최대값, \n    [i-1][j]에서의 사탕개수 최대값)     + i,j에서의 사탕개수\n</code></pre></li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/move.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Generations of Tribbles","date":"2017-12-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/9507>\n\n## 풀이\n\n- dp\n- 쉬운 문제\n- d[i]\n\n\t\td[i-2] + d[i-3] + d[i-4] + d[i-1]\n\t\n","source":"_posts/2017-12-09-Generations of Tribbles.md","raw":"---\nlayout: post\ntitle:  \"Generations of Tribbles\"\ndate:   2017-12-09\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/9507>\n\n## 풀이\n\n- dp\n- 쉬운 문제\n- d[i]\n\n\t\td[i-2] + d[i-3] + d[i-4] + d[i-1]\n\t\n","slug":"2017-12-09-Generations of Tribbles","published":1,"updated":"2018-04-16T04:08:16.102Z","comments":1,"photos":[],"link":"","_id":"cjp6k658q004l31x7wetq7nyr","content":"<p><a href=\"https://www.acmicpc.net/problem/9507\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9507</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>쉬운 문제</li>\n<li><p>d[i]</p>\n<pre><code>d[i-2] + d[i-3] + d[i-4] + d[i-1]\n</code></pre></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/9507\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9507</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>쉬운 문제</li>\n<li><p>d[i]</p>\n<pre><code>d[i-2] + d[i-3] + d[i-4] + d[i-1]\n</code></pre></li>\n</ul>\n"},{"layout":"post","title":"RGB 거리","date":"2017-12-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1149>\n\n## 풀이\n\n- dp\n- d[i][color]\n\t\n\t\ti 번째 집을 color 로 칠했을 때, 1 번째~ i 번째 까지 든 최소 비용\n\n- d[i+1][0] = i번째 집을 1번으로 칠했을 때 든 최소 비용과, 2번으로 칠했을 때 든 최소비용 중 작은 값\n- d[i+1][1] = i번째 집을 0번으로 칠했을 때 든 최소 비용과, 2번으로 칠했을 때 든 최소비용 중 작은 값\n- d[i+1][2] = i번째 집을 0번으로 칠했을 때 든 최소 비용과, 1번으로 칠했을 때 든 최소비용 중 작은 값\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/59.png)\n","source":"_posts/2017-12-06-RGB거리.md","raw":"---\nlayout: post\ntitle:  \"RGB 거리\"\ndate:   2017-12-06\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1149>\n\n## 풀이\n\n- dp\n- d[i][color]\n\t\n\t\ti 번째 집을 color 로 칠했을 때, 1 번째~ i 번째 까지 든 최소 비용\n\n- d[i+1][0] = i번째 집을 1번으로 칠했을 때 든 최소 비용과, 2번으로 칠했을 때 든 최소비용 중 작은 값\n- d[i+1][1] = i번째 집을 0번으로 칠했을 때 든 최소 비용과, 2번으로 칠했을 때 든 최소비용 중 작은 값\n- d[i+1][2] = i번째 집을 0번으로 칠했을 때 든 최소 비용과, 1번으로 칠했을 때 든 최소비용 중 작은 값\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/59.png)\n","slug":"2017-12-06-RGB거리","published":1,"updated":"2018-04-16T04:08:04.604Z","comments":1,"photos":[],"link":"","_id":"cjp6k658w004n31x7hsmwzmob","content":"<p><a href=\"https://www.acmicpc.net/problem/1149\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1149</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li><p>d[i][color]</p>\n<pre><code>i 번째 집을 color 로 칠했을 때, 1 번째~ i 번째 까지 든 최소 비용\n</code></pre></li>\n<li><p>d[i+1][0] = i번째 집을 1번으로 칠했을 때 든 최소 비용과, 2번으로 칠했을 때 든 최소비용 중 작은 값</p>\n</li>\n<li>d[i+1][1] = i번째 집을 0번으로 칠했을 때 든 최소 비용과, 2번으로 칠했을 때 든 최소비용 중 작은 값</li>\n<li>d[i+1][2] = i번째 집을 0번으로 칠했을 때 든 최소 비용과, 1번으로 칠했을 때 든 최소비용 중 작은 값</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/59.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1149\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1149</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li><p>d[i][color]</p>\n<pre><code>i 번째 집을 color 로 칠했을 때, 1 번째~ i 번째 까지 든 최소 비용\n</code></pre></li>\n<li><p>d[i+1][0] = i번째 집을 1번으로 칠했을 때 든 최소 비용과, 2번으로 칠했을 때 든 최소비용 중 작은 값</p>\n</li>\n<li>d[i+1][1] = i번째 집을 0번으로 칠했을 때 든 최소 비용과, 2번으로 칠했을 때 든 최소비용 중 작은 값</li>\n<li>d[i+1][2] = i번째 집을 0번으로 칠했을 때 든 최소 비용과, 1번으로 칠했을 때 든 최소비용 중 작은 값</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/59.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"에이한수","date":"2017-12-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1066>\n\n## 풀이\n\n- 단순 수학 문제\n- 문제에 주어진 대로 따라가면 쉬운 문제\n- 계속 틀렸다고 나옴 \n- 다시 풀어봐야 함\n\n\n\n\t\n","source":"_posts/2017-12-13-에이한수.md","raw":"---\nlayout: post\ntitle:  \"에이한수\"\ndate:   2017-12-13\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1066>\n\n## 풀이\n\n- 단순 수학 문제\n- 문제에 주어진 대로 따라가면 쉬운 문제\n- 계속 틀렸다고 나옴 \n- 다시 풀어봐야 함\n\n\n\n\t\n","slug":"2017-12-13-에이한수","published":1,"updated":"2018-04-16T04:08:29.717Z","comments":1,"photos":[],"link":"","_id":"cjp6k659e004p31x7r1hewefk","content":"<p><a href=\"https://www.acmicpc.net/problem/1066\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1066</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>단순 수학 문제</li>\n<li>문제에 주어진 대로 따라가면 쉬운 문제</li>\n<li>계속 틀렸다고 나옴 </li>\n<li>다시 풀어봐야 함</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1066\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1066</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>단순 수학 문제</li>\n<li>문제에 주어진 대로 따라가면 쉬운 문제</li>\n<li>계속 틀렸다고 나옴 </li>\n<li>다시 풀어봐야 함</li>\n</ul>\n"},{"layout":"post","title":"상자 넣기","date":"2017-12-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1965>\n\n## 풀이\n\n- dp\n- 가장 긴 증가하는 수열과 같은 문제 \n- d[i] : i 를 마지막으로 하는 가장 긴 증가하는 수열\n- d[i]\n\n\t\t0 번째 ~ i-1 번째까지 조사.\n\t\tk번째에서 i번째 수보다 작고, 더 긴 증가하는 부분수열이 된다면\n\t\td[i] = d[k] + 1\n\t\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/inc.png)\n\t\n","source":"_posts/2017-12-11-상자넣기.md","raw":"---\nlayout: post\ntitle:  \"상자 넣기\"\ndate:   2017-12-11\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1965>\n\n## 풀이\n\n- dp\n- 가장 긴 증가하는 수열과 같은 문제 \n- d[i] : i 를 마지막으로 하는 가장 긴 증가하는 수열\n- d[i]\n\n\t\t0 번째 ~ i-1 번째까지 조사.\n\t\tk번째에서 i번째 수보다 작고, 더 긴 증가하는 부분수열이 된다면\n\t\td[i] = d[k] + 1\n\t\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/inc.png)\n\t\n","slug":"2017-12-11-상자넣기","published":1,"updated":"2018-04-16T04:08:20.021Z","comments":1,"photos":[],"link":"","_id":"cjp6k659g004r31x7ui92eqfh","content":"<p><a href=\"https://www.acmicpc.net/problem/1965\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1965</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>가장 긴 증가하는 수열과 같은 문제 </li>\n<li>d[i] : i 를 마지막으로 하는 가장 긴 증가하는 수열</li>\n<li><p>d[i]</p>\n<pre><code>0 번째 ~ i-1 번째까지 조사.\nk번째에서 i번째 수보다 작고, 더 긴 증가하는 부분수열이 된다면\nd[i] = d[k] + 1\n</code></pre></li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/inc.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1965\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1965</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>가장 긴 증가하는 수열과 같은 문제 </li>\n<li>d[i] : i 를 마지막으로 하는 가장 긴 증가하는 수열</li>\n<li><p>d[i]</p>\n<pre><code>0 번째 ~ i-1 번째까지 조사.\nk번째에서 i번째 수보다 작고, 더 긴 증가하는 부분수열이 된다면\nd[i] = d[k] + 1\n</code></pre></li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/inc.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"동전1","date":"2017-12-13T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2293>\n\n## 풀이\n\n- dp\n- 정말 어렵다\n- 어떻게 풀어야할지 모르겠다\n\n\n\n\t","source":"_posts/2017-12-14-동전 1.md","raw":"---\nlayout: post\ntitle:  \"동전1\"\ndate:   2017-12-14\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2293>\n\n## 풀이\n\n- dp\n- 정말 어렵다\n- 어떻게 풀어야할지 모르겠다\n\n\n\n\t","slug":"2017-12-14-동전 1","published":1,"updated":"2018-04-16T04:08:36.738Z","comments":1,"photos":[],"link":"","_id":"cjp6k659h004t31x7li1ggx40","content":"<p><a href=\"https://www.acmicpc.net/problem/2293\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2293</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>정말 어렵다</li>\n<li>어떻게 풀어야할지 모르겠다</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2293\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2293</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>dp</li>\n<li>정말 어렵다</li>\n<li>어떻게 풀어야할지 모르겠다</li>\n</ul>\n"},{"layout":"post","title":"토너먼트","date":"2017-12-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n13일자 올리다가 겹침\n다시 올려야함\n\n\n\n\t\n","source":"_posts/2017-12-12-토너먼트.md","raw":"---\nlayout: post\ntitle:  \"토너먼트\"\ndate:   2017-12-12\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n13일자 올리다가 겹침\n다시 올려야함\n\n\n\n\t\n","slug":"2017-12-12-토너먼트","published":1,"updated":"2018-04-16T04:08:25.829Z","comments":1,"photos":[],"link":"","_id":"cjp6k659k004v31x7zb9xhhen","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>13일자 올리다가 겹침<br>다시 올려야함</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>13일자 올리다가 겹침<br>다시 올려야함</p>\n"},{"layout":"post","title":"동물원","date":"2017-12-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1309>\n\n## 틀린 풀이\n\n- 동물 수에 따라 식을 세우려고 함\n \n\t\td[1] : 동물 한 마리 들어갔을 때 경우의 수\n\t\td[2] : 동물 두 마리 들어갔을 때 경우의 수\n\t\t...\n\t\t\n- 이런식으로 하면 d[n-1] 과 d[n] 을 연결시키기가 어려움\n\n\n## 옳은 풀이\n\n- n-1 번째 줄 까지 우리에 맞게 들어갔다고 보고\n- n 번째 줄에 어떻게 올 수 있는지 고려해야함 \n\n\t- d[n][0] : n 번째 줄에 왼쪽만 사자가 들어감\n\t\t- n-1번째 줄에 오른쪽만 들어가거나, 아예 안들어감\n\t- d[n][1] : n 번째 줄에 오른쪽만 사자가 들어감\n\t\t- n-1번째 줄에 왼쪽만 들어가거나, 아예 안들어감\n\t- d[n][2] : n 번째 줄에 안들어감\n\t\t- n-1번째 줄에 오른쪽만 들어가거나, 왼쪽만 들어가거나, 아예 안들어감\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/동물원.png)","source":"_posts/2017-12-15-동물원.md","raw":"---\nlayout: post\ntitle:  \"동물원\"\ndate:   2017-12-15\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1309>\n\n## 틀린 풀이\n\n- 동물 수에 따라 식을 세우려고 함\n \n\t\td[1] : 동물 한 마리 들어갔을 때 경우의 수\n\t\td[2] : 동물 두 마리 들어갔을 때 경우의 수\n\t\t...\n\t\t\n- 이런식으로 하면 d[n-1] 과 d[n] 을 연결시키기가 어려움\n\n\n## 옳은 풀이\n\n- n-1 번째 줄 까지 우리에 맞게 들어갔다고 보고\n- n 번째 줄에 어떻게 올 수 있는지 고려해야함 \n\n\t- d[n][0] : n 번째 줄에 왼쪽만 사자가 들어감\n\t\t- n-1번째 줄에 오른쪽만 들어가거나, 아예 안들어감\n\t- d[n][1] : n 번째 줄에 오른쪽만 사자가 들어감\n\t\t- n-1번째 줄에 왼쪽만 들어가거나, 아예 안들어감\n\t- d[n][2] : n 번째 줄에 안들어감\n\t\t- n-1번째 줄에 오른쪽만 들어가거나, 왼쪽만 들어가거나, 아예 안들어감\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/동물원.png)","slug":"2017-12-15-동물원","published":1,"updated":"2018-04-16T04:08:43.839Z","comments":1,"photos":[],"link":"","_id":"cjp6k659o004x31x70vbeilxp","content":"<p><a href=\"https://www.acmicpc.net/problem/1309\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1309</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li><p>동물 수에 따라 식을 세우려고 함</p>\n<pre><code>d[1] : 동물 한 마리 들어갔을 때 경우의 수\nd[2] : 동물 두 마리 들어갔을 때 경우의 수\n...\n</code></pre></li>\n<li><p>이런식으로 하면 d[n-1] 과 d[n] 을 연결시키기가 어려움</p>\n</li>\n</ul>\n<h2 id=\"옳은-풀이\"><a href=\"#옳은-풀이\" class=\"headerlink\" title=\"옳은 풀이\"></a>옳은 풀이</h2><ul>\n<li>n-1 번째 줄 까지 우리에 맞게 들어갔다고 보고</li>\n<li><p>n 번째 줄에 어떻게 올 수 있는지 고려해야함 </p>\n<ul>\n<li>d[n][0] : n 번째 줄에 왼쪽만 사자가 들어감<ul>\n<li>n-1번째 줄에 오른쪽만 들어가거나, 아예 안들어감</li>\n</ul>\n</li>\n<li>d[n][1] : n 번째 줄에 오른쪽만 사자가 들어감<ul>\n<li>n-1번째 줄에 왼쪽만 들어가거나, 아예 안들어감</li>\n</ul>\n</li>\n<li>d[n][2] : n 번째 줄에 안들어감<ul>\n<li>n-1번째 줄에 오른쪽만 들어가거나, 왼쪽만 들어가거나, 아예 안들어감</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/동물원.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1309\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1309</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li><p>동물 수에 따라 식을 세우려고 함</p>\n<pre><code>d[1] : 동물 한 마리 들어갔을 때 경우의 수\nd[2] : 동물 두 마리 들어갔을 때 경우의 수\n...\n</code></pre></li>\n<li><p>이런식으로 하면 d[n-1] 과 d[n] 을 연결시키기가 어려움</p>\n</li>\n</ul>\n<h2 id=\"옳은-풀이\"><a href=\"#옳은-풀이\" class=\"headerlink\" title=\"옳은 풀이\"></a>옳은 풀이</h2><ul>\n<li>n-1 번째 줄 까지 우리에 맞게 들어갔다고 보고</li>\n<li><p>n 번째 줄에 어떻게 올 수 있는지 고려해야함 </p>\n<ul>\n<li>d[n][0] : n 번째 줄에 왼쪽만 사자가 들어감<ul>\n<li>n-1번째 줄에 오른쪽만 들어가거나, 아예 안들어감</li>\n</ul>\n</li>\n<li>d[n][1] : n 번째 줄에 오른쪽만 사자가 들어감<ul>\n<li>n-1번째 줄에 왼쪽만 들어가거나, 아예 안들어감</li>\n</ul>\n</li>\n<li>d[n][2] : n 번째 줄에 안들어감<ul>\n<li>n-1번째 줄에 오른쪽만 들어가거나, 왼쪽만 들어가거나, 아예 안들어감</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/동물원.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"유기농배추","date":"2017-12-18T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1012>\n\n## 풀이\n\ndfs 문제..\n그래프 개념 다시 복습 필요\ndp 문제만 풀다가 풀려니 어려움\n\n","source":"_posts/2017-12-19-유기농배추.md","raw":"---\nlayout: post\ntitle:  \"유기농배추\"\ndate:   2017-12-19\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1012>\n\n## 풀이\n\ndfs 문제..\n그래프 개념 다시 복습 필요\ndp 문제만 풀다가 풀려니 어려움\n\n","slug":"2017-12-19-유기농배추","published":1,"updated":"2018-04-16T04:08:59.198Z","comments":1,"photos":[],"link":"","_id":"cjp6k659u004z31x7s43q364r","content":"<p><a href=\"https://www.acmicpc.net/problem/1012\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1012</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>dfs 문제..<br>그래프 개념 다시 복습 필요<br>dp 문제만 풀다가 풀려니 어려움</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1012\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1012</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>dfs 문제..<br>그래프 개념 다시 복습 필요<br>dp 문제만 풀다가 풀려니 어려움</p>\n"},{"layout":"post","title":"나누기","date":"2017-12-15T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1075>\n\n## 틀린 풀이\n\n- n의 최고자리수를 제외하고 다 0으로 만들기\n\n\tex) n이 2031이면 => 2000으로\n\t\n- f로 나누어 떨어지는지 확인. 나누어 안 떨어지면 +1\n- 끝 두자리 출력\n- 계속 틀렸다고 뜸..\n\n## 옳은 풀이\n\n- 굳이 Math 안써도 됨\n- 100으로 나눈 몫에 100을 곱하면 됨\n\t\n## 틀린 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/나누기.png)\n\n## 옳은 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/나누기정답.png)2017-12-16-나누기.md","source":"_posts/2017-12-16-나누기.md","raw":"---\nlayout: post\ntitle:  \"나누기\"\ndate:   2017-12-16\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1075>\n\n## 틀린 풀이\n\n- n의 최고자리수를 제외하고 다 0으로 만들기\n\n\tex) n이 2031이면 => 2000으로\n\t\n- f로 나누어 떨어지는지 확인. 나누어 안 떨어지면 +1\n- 끝 두자리 출력\n- 계속 틀렸다고 뜸..\n\n## 옳은 풀이\n\n- 굳이 Math 안써도 됨\n- 100으로 나눈 몫에 100을 곱하면 됨\n\t\n## 틀린 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/나누기.png)\n\n## 옳은 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/나누기정답.png)2017-12-16-나누기.md","slug":"2017-12-16-나누기","published":1,"updated":"2018-04-16T04:08:49.462Z","comments":1,"photos":[],"link":"","_id":"cjp6k659v005131x7xfh33t6i","content":"<p><a href=\"https://www.acmicpc.net/problem/1075\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1075</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li><p>n의 최고자리수를 제외하고 다 0으로 만들기</p>\n<p>  ex) n이 2031이면 =&gt; 2000으로</p>\n</li>\n<li><p>f로 나누어 떨어지는지 확인. 나누어 안 떨어지면 +1</p>\n</li>\n<li>끝 두자리 출력</li>\n<li>계속 틀렸다고 뜸..</li>\n</ul>\n<h2 id=\"옳은-풀이\"><a href=\"#옳은-풀이\" class=\"headerlink\" title=\"옳은 풀이\"></a>옳은 풀이</h2><ul>\n<li>굳이 Math 안써도 됨</li>\n<li>100으로 나눈 몫에 100을 곱하면 됨</li>\n</ul>\n<h2 id=\"틀린-결과\"><a href=\"#틀린-결과\" class=\"headerlink\" title=\"틀린 결과\"></a>틀린 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/나누기.png\" alt=\"img\"></p>\n<h2 id=\"옳은-결과\"><a href=\"#옳은-결과\" class=\"headerlink\" title=\"옳은 결과\"></a>옳은 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/나누기정답.png\" alt=\"img\">2017-12-16-나누기.md</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1075\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1075</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li><p>n의 최고자리수를 제외하고 다 0으로 만들기</p>\n<p>  ex) n이 2031이면 =&gt; 2000으로</p>\n</li>\n<li><p>f로 나누어 떨어지는지 확인. 나누어 안 떨어지면 +1</p>\n</li>\n<li>끝 두자리 출력</li>\n<li>계속 틀렸다고 뜸..</li>\n</ul>\n<h2 id=\"옳은-풀이\"><a href=\"#옳은-풀이\" class=\"headerlink\" title=\"옳은 풀이\"></a>옳은 풀이</h2><ul>\n<li>굳이 Math 안써도 됨</li>\n<li>100으로 나눈 몫에 100을 곱하면 됨</li>\n</ul>\n<h2 id=\"틀린-결과\"><a href=\"#틀린-결과\" class=\"headerlink\" title=\"틀린 결과\"></a>틀린 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/나누기.png\" alt=\"img\"></p>\n<h2 id=\"옳은-결과\"><a href=\"#옳은-결과\" class=\"headerlink\" title=\"옳은 결과\"></a>옳은 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/나누기정답.png\" alt=\"img\">2017-12-16-나누기.md</p>\n"},{"layout":"post","title":"보물","date":"2017-12-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1026>\n\n## 풀이\n\n- A배열 내림차순 정렬\n- B배열 오름차순 정렬\n- 각 배열의 i 번째끼리 곱해서 더함\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/보물.png)","source":"_posts/2017-12-20-보물.md","raw":"---\nlayout: post\ntitle:  \"보물\"\ndate:   2017-12-20\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1026>\n\n## 풀이\n\n- A배열 내림차순 정렬\n- B배열 오름차순 정렬\n- 각 배열의 i 번째끼리 곱해서 더함\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/보물.png)","slug":"2017-12-20-보물","published":1,"updated":"2018-04-16T04:09:04.991Z","comments":1,"photos":[],"link":"","_id":"cjp6k659w005331x7x1wv3gei","content":"<p><a href=\"https://www.acmicpc.net/problem/1026\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1026</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>A배열 내림차순 정렬</li>\n<li>B배열 오름차순 정렬</li>\n<li>각 배열의 i 번째끼리 곱해서 더함</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/보물.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1026\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1026</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>A배열 내림차순 정렬</li>\n<li>B배열 오름차순 정렬</li>\n<li>각 배열의 i 번째끼리 곱해서 더함</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/보물.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"수열정렬","date":"2017-12-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1015>\n\n## 풀이\n\n- 어려웠음\n\n- i 번째 값과 \n\n- j 번쨰 (0번째 ~ i-1번째) 값을 비교하여\n\n- 큰 값의 index (i or j) 에 해당하는 위치의 배열 값을 ++\n\n- 쉽게 생각해서,\n\n- a배열의 값들이 동일선상에 위치하는데,\n\n- 비내림차순으로 정렬하기 위해 몇 번씩 뒤로 이동시켜야 하는지 카운트 \n\n- ex)\n\n\t\tB[p[0]] = A[0] = 7 <-\n\t\tB[p[1]] = A[1] = 4 <-\n\t\tB[p[2]] = A[2] = 2 <-\t\n\t\tB[p[3]] = A[3] = 3 <- 기준\n\t\tB[p[4]] = A[4] = 9\n\t\tB[p[5]] = A[5] = 10\n\t\t\n\t\t\n\t\t3을 기준으로 7, 4, 2 와 비교\n\t\t\n\t\t3과 7 => 7이 더 크다 => 7은 한 번뒤로 가야함 => B의 index 값 증가\n\t\t3과 4 => 4가 더 큼 => 4는 한 번뒤로 가야함 => B의 index 값 증가\n\t\t3과 2 => 3이 더 큼 => 3은 한 번뒤로 가야함 => B의 index 값 증가\n\n\n \n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/수열정렬.png)","source":"_posts/2017-12-22-수열정렬.md","raw":"---\nlayout: post\ntitle:  \"수열정렬\"\ndate:   2017-12-22\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1015>\n\n## 풀이\n\n- 어려웠음\n\n- i 번째 값과 \n\n- j 번쨰 (0번째 ~ i-1번째) 값을 비교하여\n\n- 큰 값의 index (i or j) 에 해당하는 위치의 배열 값을 ++\n\n- 쉽게 생각해서,\n\n- a배열의 값들이 동일선상에 위치하는데,\n\n- 비내림차순으로 정렬하기 위해 몇 번씩 뒤로 이동시켜야 하는지 카운트 \n\n- ex)\n\n\t\tB[p[0]] = A[0] = 7 <-\n\t\tB[p[1]] = A[1] = 4 <-\n\t\tB[p[2]] = A[2] = 2 <-\t\n\t\tB[p[3]] = A[3] = 3 <- 기준\n\t\tB[p[4]] = A[4] = 9\n\t\tB[p[5]] = A[5] = 10\n\t\t\n\t\t\n\t\t3을 기준으로 7, 4, 2 와 비교\n\t\t\n\t\t3과 7 => 7이 더 크다 => 7은 한 번뒤로 가야함 => B의 index 값 증가\n\t\t3과 4 => 4가 더 큼 => 4는 한 번뒤로 가야함 => B의 index 값 증가\n\t\t3과 2 => 3이 더 큼 => 3은 한 번뒤로 가야함 => B의 index 값 증가\n\n\n \n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/수열정렬.png)","slug":"2017-12-22-수열정렬","published":1,"updated":"2018-04-16T04:09:16.085Z","comments":1,"photos":[],"link":"","_id":"cjp6k659y005531x74adc583q","content":"<p><a href=\"https://www.acmicpc.net/problem/1015\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1015</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>어려웠음</p>\n</li>\n<li><p>i 번째 값과 </p>\n</li>\n<li><p>j 번쨰 (0번째 ~ i-1번째) 값을 비교하여</p>\n</li>\n<li><p>큰 값의 index (i or j) 에 해당하는 위치의 배열 값을 ++</p>\n</li>\n<li><p>쉽게 생각해서,</p>\n</li>\n<li><p>a배열의 값들이 동일선상에 위치하는데,</p>\n</li>\n<li><p>비내림차순으로 정렬하기 위해 몇 번씩 뒤로 이동시켜야 하는지 카운트 </p>\n</li>\n<li><p>ex)</p>\n<pre><code>B[p[0]] = A[0] = 7 &lt;-\nB[p[1]] = A[1] = 4 &lt;-\nB[p[2]] = A[2] = 2 &lt;-    \nB[p[3]] = A[3] = 3 &lt;- 기준\nB[p[4]] = A[4] = 9\nB[p[5]] = A[5] = 10\n</code></pre></li>\n</ul>\n<pre><code>3을 기준으로 7, 4, 2 와 비교\n\n3과 7 =&gt; 7이 더 크다 =&gt; 7은 한 번뒤로 가야함 =&gt; B의 index 값 증가\n3과 4 =&gt; 4가 더 큼 =&gt; 4는 한 번뒤로 가야함 =&gt; B의 index 값 증가\n3과 2 =&gt; 3이 더 큼 =&gt; 3은 한 번뒤로 가야함 =&gt; B의 index 값 증가\n</code></pre><h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/수열정렬.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1015\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1015</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>어려웠음</p>\n</li>\n<li><p>i 번째 값과 </p>\n</li>\n<li><p>j 번쨰 (0번째 ~ i-1번째) 값을 비교하여</p>\n</li>\n<li><p>큰 값의 index (i or j) 에 해당하는 위치의 배열 값을 ++</p>\n</li>\n<li><p>쉽게 생각해서,</p>\n</li>\n<li><p>a배열의 값들이 동일선상에 위치하는데,</p>\n</li>\n<li><p>비내림차순으로 정렬하기 위해 몇 번씩 뒤로 이동시켜야 하는지 카운트 </p>\n</li>\n<li><p>ex)</p>\n<pre><code>B[p[0]] = A[0] = 7 &lt;-\nB[p[1]] = A[1] = 4 &lt;-\nB[p[2]] = A[2] = 2 &lt;-    \nB[p[3]] = A[3] = 3 &lt;- 기준\nB[p[4]] = A[4] = 9\nB[p[5]] = A[5] = 10\n</code></pre></li>\n</ul>\n<pre><code>3을 기준으로 7, 4, 2 와 비교\n\n3과 7 =&gt; 7이 더 크다 =&gt; 7은 한 번뒤로 가야함 =&gt; B의 index 값 증가\n3과 4 =&gt; 4가 더 큼 =&gt; 4는 한 번뒤로 가야함 =&gt; B의 index 값 증가\n3과 2 =&gt; 3이 더 큼 =&gt; 3은 한 번뒤로 가야함 =&gt; B의 index 값 증가\n</code></pre><h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/수열정렬.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"인접한 비트의 개수","date":"2017-12-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2968>\n\n## 풀이\n\n- 어렵다\n\n- d[i][j][m] \n\n\t\t길이가 i인 수열, \n\t\t인접 비트 개수가 j,\n\t\t마지막 비트가 m인 ( m : 0 or 1 )\n\t\t수열의 경우의 수\n\t\t\n- 마지막 비트가 0\n\t\n\t- 이전 비트가 0 : 경우의 수에 영향 X\n\t- 이전 비트가 1 : 경우의 수에 영향 X\n\n- 마지막 비트가 1\n\n\t- 이전 비트가 0 : 경우의 수에 영향 X\n\t- 이전 비트가 1 : 경우의 수에 영향 O\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/인접비트.png)\n","source":"_posts/2017-12-21-인접한 비트의 개수.md","raw":"---\nlayout: post\ntitle:  \"인접한 비트의 개수\"\ndate:   2017-12-21\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2968>\n\n## 풀이\n\n- 어렵다\n\n- d[i][j][m] \n\n\t\t길이가 i인 수열, \n\t\t인접 비트 개수가 j,\n\t\t마지막 비트가 m인 ( m : 0 or 1 )\n\t\t수열의 경우의 수\n\t\t\n- 마지막 비트가 0\n\t\n\t- 이전 비트가 0 : 경우의 수에 영향 X\n\t- 이전 비트가 1 : 경우의 수에 영향 X\n\n- 마지막 비트가 1\n\n\t- 이전 비트가 0 : 경우의 수에 영향 X\n\t- 이전 비트가 1 : 경우의 수에 영향 O\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/인접비트.png)\n","slug":"2017-12-21-인접한 비트의 개수","published":1,"updated":"2018-04-16T04:09:10.232Z","comments":1,"photos":[],"link":"","_id":"cjp6k659z005731x7klvwhzvt","content":"<p><a href=\"https://www.acmicpc.net/problem/2968\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2968</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>어렵다</p>\n</li>\n<li><p>d[i][j][m] </p>\n<pre><code>길이가 i인 수열, \n인접 비트 개수가 j,\n마지막 비트가 m인 ( m : 0 or 1 )\n수열의 경우의 수\n</code></pre></li>\n<li><p>마지막 비트가 0</p>\n<ul>\n<li>이전 비트가 0 : 경우의 수에 영향 X</li>\n<li>이전 비트가 1 : 경우의 수에 영향 X</li>\n</ul>\n</li>\n<li><p>마지막 비트가 1</p>\n<ul>\n<li>이전 비트가 0 : 경우의 수에 영향 X</li>\n<li>이전 비트가 1 : 경우의 수에 영향 O</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/인접비트.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2968\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2968</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>어렵다</p>\n</li>\n<li><p>d[i][j][m] </p>\n<pre><code>길이가 i인 수열, \n인접 비트 개수가 j,\n마지막 비트가 m인 ( m : 0 or 1 )\n수열의 경우의 수\n</code></pre></li>\n<li><p>마지막 비트가 0</p>\n<ul>\n<li>이전 비트가 0 : 경우의 수에 영향 X</li>\n<li>이전 비트가 1 : 경우의 수에 영향 X</li>\n</ul>\n</li>\n<li><p>마지막 비트가 1</p>\n<ul>\n<li>이전 비트가 0 : 경우의 수에 영향 X</li>\n<li>이전 비트가 1 : 경우의 수에 영향 O</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/인접비트.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"유전자","date":"2017-12-22T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2306>\n\n## 풀이\n\n- 풀어본 DP 문제 중 제일 어려움\n\n- d[i, j] \n\n\t\ta[i..j] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이\n\t\t\n1. d[i, j] = 2\n\n\t- a[i..j] == \"at\"\n\t\n\t- a[i..j] == \"gc\"\n\n2. d[i, j] = d[i+1, j-1] + 2\n\n\t- a[i]==\"a\" , a[j]=\"t\"\n\t\n\t- a[i]==\"g\" , a[j]=\"c\"\n\n3. d[i, j] = d[i, k] + d[k+1, j]\n\n\n\t- a[i...k] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이 => d[i, k]\n\n\t- a[k+1...j] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이 => d[i, k]\n\t \n\n\n\n","source":"_posts/2017-12-23-유전자.md","raw":"---\nlayout: post\ntitle:  \"유전자\"\ndate:   2017-12-23\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2306>\n\n## 풀이\n\n- 풀어본 DP 문제 중 제일 어려움\n\n- d[i, j] \n\n\t\ta[i..j] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이\n\t\t\n1. d[i, j] = 2\n\n\t- a[i..j] == \"at\"\n\t\n\t- a[i..j] == \"gc\"\n\n2. d[i, j] = d[i+1, j-1] + 2\n\n\t- a[i]==\"a\" , a[j]=\"t\"\n\t\n\t- a[i]==\"g\" , a[j]=\"c\"\n\n3. d[i, j] = d[i, k] + d[k+1, j]\n\n\n\t- a[i...k] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이 => d[i, k]\n\n\t- a[k+1...j] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이 => d[i, k]\n\t \n\n\n\n","slug":"2017-12-23-유전자","published":1,"updated":"2018-04-16T04:10:14.351Z","comments":1,"photos":[],"link":"","_id":"cjp6k65a1005931x7wtpq6lgw","content":"<p><a href=\"https://www.acmicpc.net/problem/2306\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2306</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>풀어본 DP 문제 중 제일 어려움</p>\n</li>\n<li><p>d[i, j] </p>\n<pre><code>a[i..j] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이\n</code></pre></li>\n</ul>\n<ol>\n<li><p>d[i, j] = 2</p>\n<ul>\n<li><p>a[i..j] == “at”</p>\n</li>\n<li><p>a[i..j] == “gc”</p>\n</li>\n</ul>\n</li>\n<li><p>d[i, j] = d[i+1, j-1] + 2</p>\n<ul>\n<li><p>a[i]==”a” , a[j]=”t”</p>\n</li>\n<li><p>a[i]==”g” , a[j]=”c”</p>\n</li>\n</ul>\n</li>\n<li><p>d[i, j] = d[i, k] + d[k+1, j]</p>\n</li>\n</ol>\n<pre><code>- a[i...k] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이 =&gt; d[i, k]\n\n- a[k+1...j] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이 =&gt; d[i, k]\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2306\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2306</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>풀어본 DP 문제 중 제일 어려움</p>\n</li>\n<li><p>d[i, j] </p>\n<pre><code>a[i..j] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이\n</code></pre></li>\n</ul>\n<ol>\n<li><p>d[i, j] = 2</p>\n<ul>\n<li><p>a[i..j] == “at”</p>\n</li>\n<li><p>a[i..j] == “gc”</p>\n</li>\n</ul>\n</li>\n<li><p>d[i, j] = d[i+1, j-1] + 2</p>\n<ul>\n<li><p>a[i]==”a” , a[j]=”t”</p>\n</li>\n<li><p>a[i]==”g” , a[j]=”c”</p>\n</li>\n</ul>\n</li>\n<li><p>d[i, j] = d[i, k] + d[k+1, j]</p>\n</li>\n</ol>\n<pre><code>- a[i...k] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이 =&gt; d[i, k]\n\n- a[k+1...j] 의 부분 KOI 유전자 들 중 가장 긴 것의 길이 =&gt; d[i, k]\n</code></pre>"},{"layout":"post","title":"선물전달","date":"2017-12-24T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1947>\n\n## 풀이\n\n- 완전 순열의 개념을 알아야함\n\n\t\t완전 순열 : n명의 사람이 자신의 모자를 벗어두었다가, \n\t\t다시 쓰는데 모든 사람이 자기의 것이 아닌 모자를 쓰는 경우의 수\n\t\t\n- d[i]\n\n\t\ti 명이 선물을 나누는 경우의 수\n\n- a1 a2 a4 a4 .... aj ... ai\n\n- aj가 i 선물을, ai가 j 선물을 가지는 경우\n\n\t\t나머지 i-2 명이 선물을 나눠 가지면 된다 => d[i-2]\n\t\t그리고 aj는 ai를 제외한 명 수중 한 명 이므로 i-1\n\n- aj가 i 선물을 가지고, ai가 j 선물으 가지지 않는 경우\n\n\t\taj를 제외한 나머지 i-1명이 선물을 나눠 가지면 된다. => d[i-1]\n\t\t그리고 aj는 ai를 제외한 명 수중 한 명 이므로 i-1\n\n- 그런데, 계속해서 런타임 에러가 발생했음\n\n\t- 문제 \n\t\t\n\t\t\td[2]를 초기화할 때, 반복문 안에서 조건을 걸어서 하지 않고,\n\t\t\t반복문 밖에서 초기화하면 런타임 에러가 뜸.\n\t- 해결 \n\t\t\n\t\t\t반복문 안에서 초기화\n\t\t\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/선물전달.png)\n\n\t\t\n\t\n\n","source":"_posts/2017-12-25-선물전달.md","raw":"---\nlayout: post\ntitle:  \"선물전달\"\ndate:   2017-12-25\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1947>\n\n## 풀이\n\n- 완전 순열의 개념을 알아야함\n\n\t\t완전 순열 : n명의 사람이 자신의 모자를 벗어두었다가, \n\t\t다시 쓰는데 모든 사람이 자기의 것이 아닌 모자를 쓰는 경우의 수\n\t\t\n- d[i]\n\n\t\ti 명이 선물을 나누는 경우의 수\n\n- a1 a2 a4 a4 .... aj ... ai\n\n- aj가 i 선물을, ai가 j 선물을 가지는 경우\n\n\t\t나머지 i-2 명이 선물을 나눠 가지면 된다 => d[i-2]\n\t\t그리고 aj는 ai를 제외한 명 수중 한 명 이므로 i-1\n\n- aj가 i 선물을 가지고, ai가 j 선물으 가지지 않는 경우\n\n\t\taj를 제외한 나머지 i-1명이 선물을 나눠 가지면 된다. => d[i-1]\n\t\t그리고 aj는 ai를 제외한 명 수중 한 명 이므로 i-1\n\n- 그런데, 계속해서 런타임 에러가 발생했음\n\n\t- 문제 \n\t\t\n\t\t\td[2]를 초기화할 때, 반복문 안에서 조건을 걸어서 하지 않고,\n\t\t\t반복문 밖에서 초기화하면 런타임 에러가 뜸.\n\t- 해결 \n\t\t\n\t\t\t반복문 안에서 초기화\n\t\t\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/선물전달.png)\n\n\t\t\n\t\n\n","slug":"2017-12-25-선물전달","published":1,"updated":"2018-04-16T04:10:20.400Z","comments":1,"photos":[],"link":"","_id":"cjp6k65aa005b31x7l2rwhkmt","content":"<p><a href=\"https://www.acmicpc.net/problem/1947\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1947</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>완전 순열의 개념을 알아야함</p>\n<pre><code>완전 순열 : n명의 사람이 자신의 모자를 벗어두었다가, \n다시 쓰는데 모든 사람이 자기의 것이 아닌 모자를 쓰는 경우의 수\n</code></pre></li>\n<li><p>d[i]</p>\n<pre><code>i 명이 선물을 나누는 경우의 수\n</code></pre></li>\n<li><p>a1 a2 a4 a4 …. aj … ai</p>\n</li>\n<li><p>aj가 i 선물을, ai가 j 선물을 가지는 경우</p>\n<pre><code>나머지 i-2 명이 선물을 나눠 가지면 된다 =&gt; d[i-2]\n그리고 aj는 ai를 제외한 명 수중 한 명 이므로 i-1\n</code></pre></li>\n<li><p>aj가 i 선물을 가지고, ai가 j 선물으 가지지 않는 경우</p>\n<pre><code>aj를 제외한 나머지 i-1명이 선물을 나눠 가지면 된다. =&gt; d[i-1]\n그리고 aj는 ai를 제외한 명 수중 한 명 이므로 i-1\n</code></pre></li>\n<li><p>그런데, 계속해서 런타임 에러가 발생했음</p>\n<ul>\n<li><p>문제 </p>\n<pre><code>d[2]를 초기화할 때, 반복문 안에서 조건을 걸어서 하지 않고,\n반복문 밖에서 초기화하면 런타임 에러가 뜸.\n</code></pre></li>\n<li><p>해결 </p>\n<pre><code>반복문 안에서 초기화\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/선물전달.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1947\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1947</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>완전 순열의 개념을 알아야함</p>\n<pre><code>완전 순열 : n명의 사람이 자신의 모자를 벗어두었다가, \n다시 쓰는데 모든 사람이 자기의 것이 아닌 모자를 쓰는 경우의 수\n</code></pre></li>\n<li><p>d[i]</p>\n<pre><code>i 명이 선물을 나누는 경우의 수\n</code></pre></li>\n<li><p>a1 a2 a4 a4 …. aj … ai</p>\n</li>\n<li><p>aj가 i 선물을, ai가 j 선물을 가지는 경우</p>\n<pre><code>나머지 i-2 명이 선물을 나눠 가지면 된다 =&gt; d[i-2]\n그리고 aj는 ai를 제외한 명 수중 한 명 이므로 i-1\n</code></pre></li>\n<li><p>aj가 i 선물을 가지고, ai가 j 선물으 가지지 않는 경우</p>\n<pre><code>aj를 제외한 나머지 i-1명이 선물을 나눠 가지면 된다. =&gt; d[i-1]\n그리고 aj는 ai를 제외한 명 수중 한 명 이므로 i-1\n</code></pre></li>\n<li><p>그런데, 계속해서 런타임 에러가 발생했음</p>\n<ul>\n<li><p>문제 </p>\n<pre><code>d[2]를 초기화할 때, 반복문 안에서 조건을 걸어서 하지 않고,\n반복문 밖에서 초기화하면 런타임 에러가 뜸.\n</code></pre></li>\n<li><p>해결 </p>\n<pre><code>반복문 안에서 초기화\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/선물전달.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"직사각형에서 탈출","date":"2017-12-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1085>\n\n## 풀이\n\n- 쉬운 수학 문제\n\n- (x, y)에서 상 하 좌 우로 얼만큼 떨어져있는지 계산\n\n- 최소값 출력\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/탈출.png)\n\n\n\n\n\t\t\n\t\n\n","source":"_posts/2017-12-26-직사각형에서 탈출.md","raw":"---\nlayout: post\ntitle:  \"직사각형에서 탈출\"\ndate:   2017-12-26\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1085>\n\n## 풀이\n\n- 쉬운 수학 문제\n\n- (x, y)에서 상 하 좌 우로 얼만큼 떨어져있는지 계산\n\n- 최소값 출력\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/탈출.png)\n\n\n\n\n\t\t\n\t\n\n","slug":"2017-12-26-직사각형에서 탈출","published":1,"updated":"2018-04-16T04:10:25.898Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ab005d31x7xecrsq5a","content":"<p><a href=\"https://www.acmicpc.net/problem/1085\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1085</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>쉬운 수학 문제</p>\n</li>\n<li><p>(x, y)에서 상 하 좌 우로 얼만큼 떨어져있는지 계산</p>\n</li>\n<li><p>최소값 출력</p>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/탈출.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1085\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1085</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>쉬운 수학 문제</p>\n</li>\n<li><p>(x, y)에서 상 하 좌 우로 얼만큼 떨어져있는지 계산</p>\n</li>\n<li><p>최소값 출력</p>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/탈출.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"줄세우기","date":"2017-12-17T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2631>\n\n## 풀이\n\n- LIS를 먼저 구한다 (== 가장 긴 증가하는 부분 수열을 구한다)\n- 정답 : 수열의 길이 - LIS\n- 이유 : LIS를 기준으로 먼저 배치한뒤, 나머지 아이들을 옳기면 되므로\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/줄세우기.png)","source":"_posts/2017-12-18-줄세우기.md","raw":"---\nlayout: post\ntitle:  \"줄세우기\"\ndate:   2017-12-18\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2631>\n\n## 풀이\n\n- LIS를 먼저 구한다 (== 가장 긴 증가하는 부분 수열을 구한다)\n- 정답 : 수열의 길이 - LIS\n- 이유 : LIS를 기준으로 먼저 배치한뒤, 나머지 아이들을 옳기면 되므로\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/줄세우기.png)","slug":"2017-12-18-줄세우기","published":1,"updated":"2018-04-16T04:08:54.620Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ac005f31x7qjaxd7if","content":"<p><a href=\"https://www.acmicpc.net/problem/2631\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2631</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>LIS를 먼저 구한다 (== 가장 긴 증가하는 부분 수열을 구한다)</li>\n<li>정답 : 수열의 길이 - LIS</li>\n<li>이유 : LIS를 기준으로 먼저 배치한뒤, 나머지 아이들을 옳기면 되므로</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/줄세우기.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2631\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2631</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>LIS를 먼저 구한다 (== 가장 긴 증가하는 부분 수열을 구한다)</li>\n<li>정답 : 수열의 길이 - LIS</li>\n<li>이유 : LIS를 기준으로 먼저 배치한뒤, 나머지 아이들을 옳기면 되므로</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/줄세우기.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"2225:합분해","date":"2017-11-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n\n<https://www.acmicpc.net/problem/2225>\n\n## 틀린 풀이\n\n1. d[n][k]\n\n\t````\n\tk개 더해서 합이 n이 되는 경우의 수\n\t````\n2. d[n][k]\n\n\t````\n\td[0][k-1] + d[1][k-1] + d[2][k-1] + ... + d[n][k-1]\n\t````\n\n\t\n3. 결과 : 틀렸다고 나옴\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/6.png[]())\n\t\n\t\n## 맞는 풀이\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/8.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/7.png)\n\n\t\n\n\n","source":"_posts/2017-11-04-합분해.md","raw":"---\nlayout: post\ntitle:  \"2225:합분해\"\ndate:   2017-11-04\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n\n<https://www.acmicpc.net/problem/2225>\n\n## 틀린 풀이\n\n1. d[n][k]\n\n\t````\n\tk개 더해서 합이 n이 되는 경우의 수\n\t````\n2. d[n][k]\n\n\t````\n\td[0][k-1] + d[1][k-1] + d[2][k-1] + ... + d[n][k-1]\n\t````\n\n\t\n3. 결과 : 틀렸다고 나옴\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/6.png[]())\n\t\n\t\n## 맞는 풀이\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/8.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/7.png)\n\n\t\n\n\n","slug":"2017-11-04-합분해","published":1,"updated":"2018-04-16T04:05:11.303Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ae005h31x76e5h2ajv","content":"<p><a href=\"https://www.acmicpc.net/problem/2225\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2225</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>d[n][k]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k개 더해서 합이 n이 되는 경우의 수</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>d[n][k]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d[0][k-1] + d[1][k-1] + d[2][k-1] + ... + d[n][k-1]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li>결과 : 틀렸다고 나옴</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/6.png[](\" alt=\"img\">)</p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/8.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/7.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2225\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2225</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ol>\n<li><p>d[n][k]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k개 더해서 합이 n이 되는 경우의 수</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>d[n][k]</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d[0][k-1] + d[1][k-1] + d[2][k-1] + ... + d[n][k-1]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li>결과 : 틀렸다고 나옴</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/6.png[](\" alt=\"img\">)</p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/8.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/7.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"도미노","date":"2017-12-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1073>\n\n## 풀이\n\n- 수학문제\n- 오일러 회로 공부 필요\n- 어렵다\n\n\n\n\n\n\t\t\n\t\n\n","source":"_posts/2017-12-28-도미노.md","raw":"---\nlayout: post\ntitle:  \"도미노\"\ndate:   2017-12-28\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1073>\n\n## 풀이\n\n- 수학문제\n- 오일러 회로 공부 필요\n- 어렵다\n\n\n\n\n\n\t\t\n\t\n\n","slug":"2017-12-28-도미노","published":1,"updated":"2018-04-16T04:10:41.927Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ah005j31x782faea8o","content":"<p><a href=\"https://www.acmicpc.net/problem/1073\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1073</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>수학문제</li>\n<li>오일러 회로 공부 필요</li>\n<li>어렵다</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1073\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1073</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>수학문제</li>\n<li>오일러 회로 공부 필요</li>\n<li>어렵다</li>\n</ul>\n"},{"layout":"post","title":"만취한 상범","date":"2017-12-26T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/6359>\n\n## 풀이\n\n- 점화식을 세워서 DP로 풀지 않음\n- i번째 라운드에 i번째 방이 열려있는지 체크 \n- 열려있으면 닫고, 닫혀 있으면 열음\n- 점화식을 세워서 어떻게 풀까??\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/만취.png)\n\n\n\n\t\t\n\t\n\n","source":"_posts/2017-12-27-만취한 상범.md","raw":"---\nlayout: post\ntitle:  \"만취한 상범\"\ndate:   2017-12-27\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/6359>\n\n## 풀이\n\n- 점화식을 세워서 DP로 풀지 않음\n- i번째 라운드에 i번째 방이 열려있는지 체크 \n- 열려있으면 닫고, 닫혀 있으면 열음\n- 점화식을 세워서 어떻게 풀까??\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/만취.png)\n\n\n\n\t\t\n\t\n\n","slug":"2017-12-27-만취한 상범","published":1,"updated":"2018-04-16T04:10:30.922Z","comments":1,"photos":[],"link":"","_id":"cjp6k65aj005l31x7w451ino4","content":"<p><a href=\"https://www.acmicpc.net/problem/6359\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/6359</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>점화식을 세워서 DP로 풀지 않음</li>\n<li>i번째 라운드에 i번째 방이 열려있는지 체크 </li>\n<li>열려있으면 닫고, 닫혀 있으면 열음</li>\n<li>점화식을 세워서 어떻게 풀까??</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/만취.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/6359\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/6359</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>점화식을 세워서 DP로 풀지 않음</li>\n<li>i번째 라운드에 i번째 방이 열려있는지 체크 </li>\n<li>열려있으면 닫고, 닫혀 있으면 열음</li>\n<li>점화식을 세워서 어떻게 풀까??</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/만취.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"동전","date":"2017-12-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/9084>\n\n## 풀이\n\n- ex) 1원, 5원, 10원이 있다. 만들어야하는 동전은 100원\n\n- 1원을 이용해서\n\n\t\td[1] : 1원을 만드는 경우의 수 => 1원, d[0] => 1\n\t\td[2] : 2원을 만드는 경우의 수 => 1원, d[1] => 1\n\t\td[3] : 3원을 만드는 경우의 수 => 1원, d[2] => 1\n\t\t...\n\t\td[100] : 100원을 만드는 경우의 수 => 1원, d[99] => 1\n\t\t\n- 5원을 이용해서\n\n\t\td[5] : 5원을 만드는 경우의 수 => (1원, d[4]) + (5원, d[0]) => 1 + 1 => 2\n\t\td[6] : 6원을 만드는 경우의 수 => 1원, d[5] => 1\n\t\td[7] : 7원을 만드는 경우의 수 => 5원, d[2] => 1\n\t\t...\n\t\td[9] : 9원을 만드는 경우의 수 => (1원,d[8]) + (5원, d[5]) \n\t\t...\n\t\td[100]\n\n- 10원을 이용해서\n\t\t\n\t\td[10] : 10원을 만드는 경우의 수 => (1원,d[9]) + (5원, d[5]) + (10원, d[0])\n\t\t...\n\t\td[100]\n\n- 위와 같이 전 단계에 나온 결과값을 재사용할 수 있다. 때문에 DP 문제이다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/동전.png)\n\n\n\n\t\n\n\n\n\n\n\n\t\t\n\t\n\n","source":"_posts/2017-12-29-동전.md","raw":"---\nlayout: post\ntitle:  \"동전\"\ndate:   2017-12-29\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/9084>\n\n## 풀이\n\n- ex) 1원, 5원, 10원이 있다. 만들어야하는 동전은 100원\n\n- 1원을 이용해서\n\n\t\td[1] : 1원을 만드는 경우의 수 => 1원, d[0] => 1\n\t\td[2] : 2원을 만드는 경우의 수 => 1원, d[1] => 1\n\t\td[3] : 3원을 만드는 경우의 수 => 1원, d[2] => 1\n\t\t...\n\t\td[100] : 100원을 만드는 경우의 수 => 1원, d[99] => 1\n\t\t\n- 5원을 이용해서\n\n\t\td[5] : 5원을 만드는 경우의 수 => (1원, d[4]) + (5원, d[0]) => 1 + 1 => 2\n\t\td[6] : 6원을 만드는 경우의 수 => 1원, d[5] => 1\n\t\td[7] : 7원을 만드는 경우의 수 => 5원, d[2] => 1\n\t\t...\n\t\td[9] : 9원을 만드는 경우의 수 => (1원,d[8]) + (5원, d[5]) \n\t\t...\n\t\td[100]\n\n- 10원을 이용해서\n\t\t\n\t\td[10] : 10원을 만드는 경우의 수 => (1원,d[9]) + (5원, d[5]) + (10원, d[0])\n\t\t...\n\t\td[100]\n\n- 위와 같이 전 단계에 나온 결과값을 재사용할 수 있다. 때문에 DP 문제이다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/동전.png)\n\n\n\n\t\n\n\n\n\n\n\n\t\t\n\t\n\n","slug":"2017-12-29-동전","published":1,"updated":"2018-04-16T04:11:21.614Z","comments":1,"photos":[],"link":"","_id":"cjp6k65al005n31x7r2qqzodx","content":"<p><a href=\"https://www.acmicpc.net/problem/9084\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9084</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>ex) 1원, 5원, 10원이 있다. 만들어야하는 동전은 100원</p>\n</li>\n<li><p>1원을 이용해서</p>\n<pre><code>d[1] : 1원을 만드는 경우의 수 =&gt; 1원, d[0] =&gt; 1\nd[2] : 2원을 만드는 경우의 수 =&gt; 1원, d[1] =&gt; 1\nd[3] : 3원을 만드는 경우의 수 =&gt; 1원, d[2] =&gt; 1\n...\nd[100] : 100원을 만드는 경우의 수 =&gt; 1원, d[99] =&gt; 1\n</code></pre></li>\n<li><p>5원을 이용해서</p>\n<pre><code>d[5] : 5원을 만드는 경우의 수 =&gt; (1원, d[4]) + (5원, d[0]) =&gt; 1 + 1 =&gt; 2\nd[6] : 6원을 만드는 경우의 수 =&gt; 1원, d[5] =&gt; 1\nd[7] : 7원을 만드는 경우의 수 =&gt; 5원, d[2] =&gt; 1\n...\nd[9] : 9원을 만드는 경우의 수 =&gt; (1원,d[8]) + (5원, d[5]) \n...\nd[100]\n</code></pre></li>\n<li><p>10원을 이용해서</p>\n<pre><code>d[10] : 10원을 만드는 경우의 수 =&gt; (1원,d[9]) + (5원, d[5]) + (10원, d[0])\n...\nd[100]\n</code></pre></li>\n<li><p>위와 같이 전 단계에 나온 결과값을 재사용할 수 있다. 때문에 DP 문제이다.</p>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/동전.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/9084\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9084</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>ex) 1원, 5원, 10원이 있다. 만들어야하는 동전은 100원</p>\n</li>\n<li><p>1원을 이용해서</p>\n<pre><code>d[1] : 1원을 만드는 경우의 수 =&gt; 1원, d[0] =&gt; 1\nd[2] : 2원을 만드는 경우의 수 =&gt; 1원, d[1] =&gt; 1\nd[3] : 3원을 만드는 경우의 수 =&gt; 1원, d[2] =&gt; 1\n...\nd[100] : 100원을 만드는 경우의 수 =&gt; 1원, d[99] =&gt; 1\n</code></pre></li>\n<li><p>5원을 이용해서</p>\n<pre><code>d[5] : 5원을 만드는 경우의 수 =&gt; (1원, d[4]) + (5원, d[0]) =&gt; 1 + 1 =&gt; 2\nd[6] : 6원을 만드는 경우의 수 =&gt; 1원, d[5] =&gt; 1\nd[7] : 7원을 만드는 경우의 수 =&gt; 5원, d[2] =&gt; 1\n...\nd[9] : 9원을 만드는 경우의 수 =&gt; (1원,d[8]) + (5원, d[5]) \n...\nd[100]\n</code></pre></li>\n<li><p>10원을 이용해서</p>\n<pre><code>d[10] : 10원을 만드는 경우의 수 =&gt; (1원,d[9]) + (5원, d[5]) + (10원, d[0])\n...\nd[100]\n</code></pre></li>\n<li><p>위와 같이 전 단계에 나온 결과값을 재사용할 수 있다. 때문에 DP 문제이다.</p>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/동전.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"팰린드롬 분할","date":"2017-12-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1509>\n\n## 풀이\n\n- 1~roomSize-1 까지 검사\n- 펠린드 룸이 만들어 지는 경우가 있으면 그 뒤 펠린드 룸이 만들어지는 지점에 \n\t \t\n\t \tresult[i-1] +1\n\t \t\n- 이미 넣어진 값이 있으면 최소값을 비교해서 대입\n\n\n\n\n\n\n\n\t\t\n\t\n\n","source":"_posts/2017-12-30-팰린드롬 분할.md","raw":"---\nlayout: post\ntitle:  \"팰린드롬 분할\"\ndate:   2017-12-30\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1509>\n\n## 풀이\n\n- 1~roomSize-1 까지 검사\n- 펠린드 룸이 만들어 지는 경우가 있으면 그 뒤 펠린드 룸이 만들어지는 지점에 \n\t \t\n\t \tresult[i-1] +1\n\t \t\n- 이미 넣어진 값이 있으면 최소값을 비교해서 대입\n\n\n\n\n\n\n\n\t\t\n\t\n\n","slug":"2017-12-30-팰린드롬 분할","published":1,"updated":"2018-04-16T04:11:26.752Z","comments":1,"photos":[],"link":"","_id":"cjp6k65al005p31x7spi2zdz0","content":"<p><a href=\"https://www.acmicpc.net/problem/1509\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1509</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>1~roomSize-1 까지 검사</li>\n<li><p>펠린드 룸이 만들어 지는 경우가 있으면 그 뒤 펠린드 룸이 만들어지는 지점에 </p>\n<pre><code>result[i-1] +1\n</code></pre></li>\n<li><p>이미 넣어진 값이 있으면 최소값을 비교해서 대입</p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1509\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1509</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>1~roomSize-1 까지 검사</li>\n<li><p>펠린드 룸이 만들어 지는 경우가 있으면 그 뒤 펠린드 룸이 만들어지는 지점에 </p>\n<pre><code>result[i-1] +1\n</code></pre></li>\n<li><p>이미 넣어진 값이 있으면 최소값을 비교해서 대입</p>\n</li>\n</ul>\n"},{"layout":"post","title":"좋은단어","date":"2018-01-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/3986>\n\n## 풀이\n\n- stack문제\n- 스텍이 비었으면 push\n- 스텍에 문자가 있으면, top문자 비교\n- 같으면 pop\n- 다르면 push\n- 마지막에 stack이 비었으면 좋은 단어\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stack.png)\n","source":"_posts/2018-01-03-좋은단어.md","raw":"---\nlayout: post\ntitle:  \"좋은단어\"\ndate:   2018-01-03\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/3986>\n\n## 풀이\n\n- stack문제\n- 스텍이 비었으면 push\n- 스텍에 문자가 있으면, top문자 비교\n- 같으면 pop\n- 다르면 push\n- 마지막에 stack이 비었으면 좋은 단어\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stack.png)\n","slug":"2018-01-03-좋은단어","published":1,"updated":"2018-04-16T04:11:36.941Z","comments":1,"photos":[],"link":"","_id":"cjp6k65am005r31x7rfp1qmvr","content":"<p><a href=\"https://www.acmicpc.net/problem/3986\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3986</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>stack문제</li>\n<li>스텍이 비었으면 push</li>\n<li>스텍에 문자가 있으면, top문자 비교</li>\n<li>같으면 pop</li>\n<li>다르면 push</li>\n<li>마지막에 stack이 비었으면 좋은 단어</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stack.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/3986\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3986</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>stack문제</li>\n<li>스텍이 비었으면 push</li>\n<li>스텍에 문자가 있으면, top문자 비교</li>\n<li>같으면 pop</li>\n<li>다르면 push</li>\n<li>마지막에 stack이 비었으면 좋은 단어</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stack.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"설탕배달","date":"2017-12-31T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2839>\n\n## 풀이\n\n- d[i]\n\n\t\tikg을 담을 수 있는 최소 봉지 수\n\t\t\n- ex) 6kg\n\n\t\t0 + 6 => 6을 3kg짜리 봉지 2개로 담을 수 있음 => d[6] = 2\n\t\t1 + 5 => d[1]== -1 => X\n\t\t2 + 4 => d[2]== -1 => X\n\t\t3 + 3 => d[6] = d[3] + d[3] = 1\n\t\t\n- ex) 10kg\n\n\t\t0 + 10 => 10을 5kg짜리 봉지 2개로 담을 수 있음 => d[10] = 2 \n\t\t1 + 9 => d[1]== -1 => X\n\t\t2 + 8 => d[2]== -1 => X\n\t\t3 + 7 => d[7]== -1 => X\n\t\t4 + 6 => d[4]== -1 => X\n\t\t5 + 5 => d[5] == 1 => d[10] = d[5] + d[5] = 2\n\t\t\n- 위와 같이, 앞 단계에서 사용된 값이 재사용된다. 따라서 DP\n\n- 더 간결하게 어떻게 짤 수 있을까?\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕03.png)","source":"_posts/2018-01-01-설탕배달.md","raw":"---\nlayout: post\ntitle:  \"설탕배달\"\ndate:   2018-01-01\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2839>\n\n## 풀이\n\n- d[i]\n\n\t\tikg을 담을 수 있는 최소 봉지 수\n\t\t\n- ex) 6kg\n\n\t\t0 + 6 => 6을 3kg짜리 봉지 2개로 담을 수 있음 => d[6] = 2\n\t\t1 + 5 => d[1]== -1 => X\n\t\t2 + 4 => d[2]== -1 => X\n\t\t3 + 3 => d[6] = d[3] + d[3] = 1\n\t\t\n- ex) 10kg\n\n\t\t0 + 10 => 10을 5kg짜리 봉지 2개로 담을 수 있음 => d[10] = 2 \n\t\t1 + 9 => d[1]== -1 => X\n\t\t2 + 8 => d[2]== -1 => X\n\t\t3 + 7 => d[7]== -1 => X\n\t\t4 + 6 => d[4]== -1 => X\n\t\t5 + 5 => d[5] == 1 => d[10] = d[5] + d[5] = 2\n\t\t\n- 위와 같이, 앞 단계에서 사용된 값이 재사용된다. 따라서 DP\n\n- 더 간결하게 어떻게 짤 수 있을까?\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕03.png)","slug":"2018-01-01-설탕배달","published":1,"updated":"2018-04-16T04:11:31.990Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ap005t31x7iajj0y06","content":"<p><a href=\"https://www.acmicpc.net/problem/2839\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2839</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>d[i]</p>\n<pre><code>ikg을 담을 수 있는 최소 봉지 수\n</code></pre></li>\n<li><p>ex) 6kg</p>\n<pre><code>0 + 6 =&gt; 6을 3kg짜리 봉지 2개로 담을 수 있음 =&gt; d[6] = 2\n1 + 5 =&gt; d[1]== -1 =&gt; X\n2 + 4 =&gt; d[2]== -1 =&gt; X\n3 + 3 =&gt; d[6] = d[3] + d[3] = 1\n</code></pre></li>\n<li><p>ex) 10kg</p>\n<pre><code>0 + 10 =&gt; 10을 5kg짜리 봉지 2개로 담을 수 있음 =&gt; d[10] = 2 \n1 + 9 =&gt; d[1]== -1 =&gt; X\n2 + 8 =&gt; d[2]== -1 =&gt; X\n3 + 7 =&gt; d[7]== -1 =&gt; X\n4 + 6 =&gt; d[4]== -1 =&gt; X\n5 + 5 =&gt; d[5] == 1 =&gt; d[10] = d[5] + d[5] = 2\n</code></pre></li>\n<li><p>위와 같이, 앞 단계에서 사용된 값이 재사용된다. 따라서 DP</p>\n</li>\n<li><p>더 간결하게 어떻게 짤 수 있을까?</p>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2839\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2839</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>d[i]</p>\n<pre><code>ikg을 담을 수 있는 최소 봉지 수\n</code></pre></li>\n<li><p>ex) 6kg</p>\n<pre><code>0 + 6 =&gt; 6을 3kg짜리 봉지 2개로 담을 수 있음 =&gt; d[6] = 2\n1 + 5 =&gt; d[1]== -1 =&gt; X\n2 + 4 =&gt; d[2]== -1 =&gt; X\n3 + 3 =&gt; d[6] = d[3] + d[3] = 1\n</code></pre></li>\n<li><p>ex) 10kg</p>\n<pre><code>0 + 10 =&gt; 10을 5kg짜리 봉지 2개로 담을 수 있음 =&gt; d[10] = 2 \n1 + 9 =&gt; d[1]== -1 =&gt; X\n2 + 8 =&gt; d[2]== -1 =&gt; X\n3 + 7 =&gt; d[7]== -1 =&gt; X\n4 + 6 =&gt; d[4]== -1 =&gt; X\n5 + 5 =&gt; d[5] == 1 =&gt; d[10] = d[5] + d[5] = 2\n</code></pre></li>\n<li><p>위와 같이, 앞 단계에서 사용된 값이 재사용된다. 따라서 DP</p>\n</li>\n<li><p>더 간결하게 어떻게 짤 수 있을까?</p>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/설탕03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"수들의 합","date":"2018-01-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1789>\n\n## 풀이\n\n- 런타임 에러가 계속 났음\n- 원인 \n\t- 자료형. \n\t- 문제의 입력으로 자연수 S(1≤S≤4,294,967,295)가 주어진다.\n\t- int의 범위를 넘기 때문에 런타임 에러가 계속 났음\n- 해결 \n\t- long형으로 입력 받음\n\n- 쉬운 문제라도, 문제의 조건을 잘 확인해야함\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/수들의합.png)\n","source":"_posts/2018-01-04- 수들의합.md","raw":"---\nlayout: post\ntitle:  \"수들의 합\"\ndate:   2018-01-04\ncategories: algorithm\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1789>\n\n## 풀이\n\n- 런타임 에러가 계속 났음\n- 원인 \n\t- 자료형. \n\t- 문제의 입력으로 자연수 S(1≤S≤4,294,967,295)가 주어진다.\n\t- int의 범위를 넘기 때문에 런타임 에러가 계속 났음\n- 해결 \n\t- long형으로 입력 받음\n\n- 쉬운 문제라도, 문제의 조건을 잘 확인해야함\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/수들의합.png)\n","slug":"2018-01-04- 수들의합","published":1,"updated":"2018-04-16T04:11:41.470Z","comments":1,"photos":[],"link":"","_id":"cjp6k65aq005v31x7q1qdbuov","content":"<p><a href=\"https://www.acmicpc.net/problem/1789\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1789</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>런타임 에러가 계속 났음</li>\n<li>원인 <ul>\n<li>자료형. </li>\n<li>문제의 입력으로 자연수 S(1≤S≤4,294,967,295)가 주어진다.</li>\n<li>int의 범위를 넘기 때문에 런타임 에러가 계속 났음</li>\n</ul>\n</li>\n<li><p>해결 </p>\n<ul>\n<li>long형으로 입력 받음</li>\n</ul>\n</li>\n<li><p>쉬운 문제라도, 문제의 조건을 잘 확인해야함</p>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/수들의합.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1789\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1789</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>런타임 에러가 계속 났음</li>\n<li>원인 <ul>\n<li>자료형. </li>\n<li>문제의 입력으로 자연수 S(1≤S≤4,294,967,295)가 주어진다.</li>\n<li>int의 범위를 넘기 때문에 런타임 에러가 계속 났음</li>\n</ul>\n</li>\n<li><p>해결 </p>\n<ul>\n<li>long형으로 입력 받음</li>\n</ul>\n</li>\n<li><p>쉬운 문제라도, 문제의 조건을 잘 확인해야함</p>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/수들의합.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"exports","date":"2018-01-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\nreference by <https://opentutorials.org>\n\n## exports \n\n- 속성이나 메소드를 여러 개 정의 가능\n\n```\n// cicle.js\nvar PI = Math.PI;\n \nexports.area = function (r) {\n    return PI * r * r;\n};\n \nexports.circumference = function (r) {\n    return 2 * PI * r;\n};\n```\n\n```\n// foo.js\nvar circle = require('./circle.js');\nconsole.log( 'The area of a circle of radius 4 is '\n    + circle.area(4));\n```\n\n```\n$ node foo.js\nThe area of a circle of radius 4 is 50.26548245743669\n```\n\n## module.exports\n\n- 파일 자체를 속성이나 메소드로 사용\n\n```\n// square.js\nmodule.exports = function(width) {\n    return {\n        area: function() {\n            return width * width;\n        }\n    };\n}\n```\n\n```\n// bar.js\nvar square = require('./square.js');\nvar mySquare = square(2);\nconsole.log('The area of my square is ' + mySquare.area());\n```\n\n```\n$ node bar.js\nThe area of my square is 4\n```\n\n## index.js\n\n```\nvar module = require('./mymodule');\n```\n- 먼저 mymodule.js 파일을 찾음. \n\t- 있다면 => 그 파일 추출\n\t- 없다면 => mymodule 이라는 폴더를 찾음. 그리고 그 폴더의 index.js 파일을 찾아 추출\n\n\n\n\n\n\n\t \n","source":"_posts/2018-01-04-exports.md","raw":"---\nlayout: post\ntitle:  \"exports\"\ndate:   2018-01-04\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\nreference by <https://opentutorials.org>\n\n## exports \n\n- 속성이나 메소드를 여러 개 정의 가능\n\n```\n// cicle.js\nvar PI = Math.PI;\n \nexports.area = function (r) {\n    return PI * r * r;\n};\n \nexports.circumference = function (r) {\n    return 2 * PI * r;\n};\n```\n\n```\n// foo.js\nvar circle = require('./circle.js');\nconsole.log( 'The area of a circle of radius 4 is '\n    + circle.area(4));\n```\n\n```\n$ node foo.js\nThe area of a circle of radius 4 is 50.26548245743669\n```\n\n## module.exports\n\n- 파일 자체를 속성이나 메소드로 사용\n\n```\n// square.js\nmodule.exports = function(width) {\n    return {\n        area: function() {\n            return width * width;\n        }\n    };\n}\n```\n\n```\n// bar.js\nvar square = require('./square.js');\nvar mySquare = square(2);\nconsole.log('The area of my square is ' + mySquare.area());\n```\n\n```\n$ node bar.js\nThe area of my square is 4\n```\n\n## index.js\n\n```\nvar module = require('./mymodule');\n```\n- 먼저 mymodule.js 파일을 찾음. \n\t- 있다면 => 그 파일 추출\n\t- 없다면 => mymodule 이라는 폴더를 찾음. 그리고 그 폴더의 index.js 파일을 찾아 추출\n\n\n\n\n\n\n\t \n","slug":"2018-01-04-exports","published":1,"updated":"2018-04-16T04:11:46.459Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ar005x31x7vke2uu6d","content":"<p>reference by <a href=\"https://opentutorials.org\" target=\"_blank\" rel=\"noopener\">https://opentutorials.org</a></p>\n<h2 id=\"exports\"><a href=\"#exports\" class=\"headerlink\" title=\"exports\"></a>exports</h2><ul>\n<li>속성이나 메소드를 여러 개 정의 가능</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// cicle.js</span><br><span class=\"line\">var PI = Math.PI;</span><br><span class=\"line\"> </span><br><span class=\"line\">exports.area = function (r) &#123;</span><br><span class=\"line\">    return PI * r * r;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">exports.circumference = function (r) &#123;</span><br><span class=\"line\">    return 2 * PI * r;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// foo.js</span><br><span class=\"line\">var circle = require(&apos;./circle.js&apos;);</span><br><span class=\"line\">console.log( &apos;The area of a circle of radius 4 is &apos;</span><br><span class=\"line\">    + circle.area(4));</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node foo.js</span><br><span class=\"line\">The area of a circle of radius 4 is 50.26548245743669</span><br></pre></td></tr></table></figure>\n<h2 id=\"module-exports\"><a href=\"#module-exports\" class=\"headerlink\" title=\"module.exports\"></a>module.exports</h2><ul>\n<li>파일 자체를 속성이나 메소드로 사용</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// square.js</span><br><span class=\"line\">module.exports = function(width) &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        area: function() &#123;</span><br><span class=\"line\">            return width * width;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bar.js</span><br><span class=\"line\">var square = require(&apos;./square.js&apos;);</span><br><span class=\"line\">var mySquare = square(2);</span><br><span class=\"line\">console.log(&apos;The area of my square is &apos; + mySquare.area());</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node bar.js</span><br><span class=\"line\">The area of my square is 4</span><br></pre></td></tr></table></figure>\n<h2 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var module = require(&apos;./mymodule&apos;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>먼저 mymodule.js 파일을 찾음. <ul>\n<li>있다면 =&gt; 그 파일 추출</li>\n<li>없다면 =&gt; mymodule 이라는 폴더를 찾음. 그리고 그 폴더의 index.js 파일을 찾아 추출</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>reference by <a href=\"https://opentutorials.org\" target=\"_blank\" rel=\"noopener\">https://opentutorials.org</a></p>\n<h2 id=\"exports\"><a href=\"#exports\" class=\"headerlink\" title=\"exports\"></a>exports</h2><ul>\n<li>속성이나 메소드를 여러 개 정의 가능</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// cicle.js</span><br><span class=\"line\">var PI = Math.PI;</span><br><span class=\"line\"> </span><br><span class=\"line\">exports.area = function (r) &#123;</span><br><span class=\"line\">    return PI * r * r;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">exports.circumference = function (r) &#123;</span><br><span class=\"line\">    return 2 * PI * r;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// foo.js</span><br><span class=\"line\">var circle = require(&apos;./circle.js&apos;);</span><br><span class=\"line\">console.log( &apos;The area of a circle of radius 4 is &apos;</span><br><span class=\"line\">    + circle.area(4));</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node foo.js</span><br><span class=\"line\">The area of a circle of radius 4 is 50.26548245743669</span><br></pre></td></tr></table></figure>\n<h2 id=\"module-exports\"><a href=\"#module-exports\" class=\"headerlink\" title=\"module.exports\"></a>module.exports</h2><ul>\n<li>파일 자체를 속성이나 메소드로 사용</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// square.js</span><br><span class=\"line\">module.exports = function(width) &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        area: function() &#123;</span><br><span class=\"line\">            return width * width;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bar.js</span><br><span class=\"line\">var square = require(&apos;./square.js&apos;);</span><br><span class=\"line\">var mySquare = square(2);</span><br><span class=\"line\">console.log(&apos;The area of my square is &apos; + mySquare.area());</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node bar.js</span><br><span class=\"line\">The area of my square is 4</span><br></pre></td></tr></table></figure>\n<h2 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var module = require(&apos;./mymodule&apos;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>먼저 mymodule.js 파일을 찾음. <ul>\n<li>있다면 =&gt; 그 파일 추출</li>\n<li>없다면 =&gt; mymodule 이라는 폴더를 찾음. 그리고 그 폴더의 index.js 파일을 찾아 추출</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"if else VS switch","date":"2018-01-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## compare\n\n- 5개 이하 비교\n\n\t- 차이 무\n\n- 5개 이상 비교\n\n\t- switch\n\n\t\t- 해쉬 테이블 룩업 테이블을 구현해서 아이템에 접근\n\t\t- 어떤 아이템이든지 접손 시간 같음 => O(1)\n\t\n\t- if else\n\n\t\t- 조건에 맞을 때까지 비교\n\t\t- 최대 아이템 갯수만큼의 비교 시간이 걸릴 수 있음 => O(N)\n\n\n\n\n\n\n\n\n\n\t \n","source":"_posts/2018-01-04-if else VS switch.md","raw":"---\nlayout: post\ntitle:  \"if else VS switch\"\ndate:   2018-01-04\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## compare\n\n- 5개 이하 비교\n\n\t- 차이 무\n\n- 5개 이상 비교\n\n\t- switch\n\n\t\t- 해쉬 테이블 룩업 테이블을 구현해서 아이템에 접근\n\t\t- 어떤 아이템이든지 접손 시간 같음 => O(1)\n\t\n\t- if else\n\n\t\t- 조건에 맞을 때까지 비교\n\t\t- 최대 아이템 갯수만큼의 비교 시간이 걸릴 수 있음 => O(N)\n\n\n\n\n\n\n\n\n\n\t \n","slug":"2018-01-04-if else VS switch","published":1,"updated":"2018-04-16T04:11:51.387Z","comments":1,"photos":[],"link":"","_id":"cjp6k65as005z31x747xf3a3m","content":"<h2 id=\"compare\"><a href=\"#compare\" class=\"headerlink\" title=\"compare\"></a>compare</h2><ul>\n<li><p>5개 이하 비교</p>\n<ul>\n<li>차이 무</li>\n</ul>\n</li>\n<li><p>5개 이상 비교</p>\n<ul>\n<li><p>switch</p>\n<ul>\n<li>해쉬 테이블 룩업 테이블을 구현해서 아이템에 접근</li>\n<li>어떤 아이템이든지 접손 시간 같음 =&gt; O(1)</li>\n</ul>\n</li>\n<li><p>if else</p>\n<ul>\n<li>조건에 맞을 때까지 비교</li>\n<li>최대 아이템 갯수만큼의 비교 시간이 걸릴 수 있음 =&gt; O(N)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"compare\"><a href=\"#compare\" class=\"headerlink\" title=\"compare\"></a>compare</h2><ul>\n<li><p>5개 이하 비교</p>\n<ul>\n<li>차이 무</li>\n</ul>\n</li>\n<li><p>5개 이상 비교</p>\n<ul>\n<li><p>switch</p>\n<ul>\n<li>해쉬 테이블 룩업 테이블을 구현해서 아이템에 접근</li>\n<li>어떤 아이템이든지 접손 시간 같음 =&gt; O(1)</li>\n</ul>\n</li>\n<li><p>if else</p>\n<ul>\n<li>조건에 맞을 때까지 비교</li>\n<li>최대 아이템 갯수만큼의 비교 시간이 걸릴 수 있음 =&gt; O(N)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"PM2","date":"2018-01-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newpm2.png","_content":"\n## PM2 \n\n- Node.js 프로세스 관리 도구\n\n- PM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks. ((https://github.com/Unitech/pm2))\n\n\n## start\n\n\t\tpm2 start app.js\n\t\t\n## Listing all running processes\n\n\t\tpm2 list\n\t\t\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/processmanagemnet.png)\n\t\t\n## Managing processes \n\n\t\t$ pm2 stop     <app_name|id|'all'|json_conf>\n\t\t$ pm2 restart  <app_name|id|'all'|json_conf>\n\t\t$ pm2 delete   <app_name|id|'all'|json_conf>\n\n## Logs\n\n\t\t$ pm2 logs ['all'|app_name|app_id] [--json] [--format] [--raw]\n\t\t\n\t\t$ pm2 logs APP-NAME       # Display APP-NAME logs\n\t\t$ pm2 logs --json         # JSON output\n\t\t$ pm2 logs --format       # Formated output\n\t\t$ pm2 flush               # Flush all logs\n\t\t$ pm2 reloadLogs          # Reload all logs\t\t\n\n\n\n\n\n\t \n","source":"_posts/2018-01-04-pm2.md","raw":"---\nlayout: post\ntitle:  \"PM2\"\ndate:   2018-01-04\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newpm2.png\n---\n\n## PM2 \n\n- Node.js 프로세스 관리 도구\n\n- PM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks. ((https://github.com/Unitech/pm2))\n\n\n## start\n\n\t\tpm2 start app.js\n\t\t\n## Listing all running processes\n\n\t\tpm2 list\n\t\t\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/processmanagemnet.png)\n\t\t\n## Managing processes \n\n\t\t$ pm2 stop     <app_name|id|'all'|json_conf>\n\t\t$ pm2 restart  <app_name|id|'all'|json_conf>\n\t\t$ pm2 delete   <app_name|id|'all'|json_conf>\n\n## Logs\n\n\t\t$ pm2 logs ['all'|app_name|app_id] [--json] [--format] [--raw]\n\t\t\n\t\t$ pm2 logs APP-NAME       # Display APP-NAME logs\n\t\t$ pm2 logs --json         # JSON output\n\t\t$ pm2 logs --format       # Formated output\n\t\t$ pm2 flush               # Flush all logs\n\t\t$ pm2 reloadLogs          # Reload all logs\t\t\n\n\n\n\n\n\t \n","slug":"2018-01-04-pm2","published":1,"updated":"2018-04-16T04:11:55.934Z","comments":1,"photos":[],"link":"","_id":"cjp6k65at006131x78m56d1vc","content":"<h2 id=\"PM2\"><a href=\"#PM2\" class=\"headerlink\" title=\"PM2\"></a>PM2</h2><ul>\n<li><p>Node.js 프로세스 관리 도구</p>\n</li>\n<li><p>PM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks. ((<a href=\"https://github.com/Unitech/pm2)\" target=\"_blank\" rel=\"noopener\">https://github.com/Unitech/pm2)</a>)</p>\n</li>\n</ul>\n<h2 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h2><pre><code>pm2 start app.js\n</code></pre><h2 id=\"Listing-all-running-processes\"><a href=\"#Listing-all-running-processes\" class=\"headerlink\" title=\"Listing all running processes\"></a>Listing all running processes</h2><pre><code>pm2 list\n</code></pre><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/processmanagemnet.png\" alt=\"img\"></p>\n<h2 id=\"Managing-processes\"><a href=\"#Managing-processes\" class=\"headerlink\" title=\"Managing processes\"></a>Managing processes</h2><pre><code>$ pm2 stop     &lt;app_name|id|&apos;all&apos;|json_conf&gt;\n$ pm2 restart  &lt;app_name|id|&apos;all&apos;|json_conf&gt;\n$ pm2 delete   &lt;app_name|id|&apos;all&apos;|json_conf&gt;\n</code></pre><h2 id=\"Logs\"><a href=\"#Logs\" class=\"headerlink\" title=\"Logs\"></a>Logs</h2><pre><code>$ pm2 logs [&apos;all&apos;|app_name|app_id] [--json] [--format] [--raw]\n\n$ pm2 logs APP-NAME       # Display APP-NAME logs\n$ pm2 logs --json         # JSON output\n$ pm2 logs --format       # Formated output\n$ pm2 flush               # Flush all logs\n$ pm2 reloadLogs          # Reload all logs        \n</code></pre>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"PM2\"><a href=\"#PM2\" class=\"headerlink\" title=\"PM2\"></a>PM2</h2><ul>\n<li><p>Node.js 프로세스 관리 도구</p>\n</li>\n<li><p>PM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks. ((<a href=\"https://github.com/Unitech/pm2)\" target=\"_blank\" rel=\"noopener\">https://github.com/Unitech/pm2)</a>)</p>\n</li>\n</ul>\n<h2 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h2><pre><code>pm2 start app.js\n</code></pre><h2 id=\"Listing-all-running-processes\"><a href=\"#Listing-all-running-processes\" class=\"headerlink\" title=\"Listing all running processes\"></a>Listing all running processes</h2><pre><code>pm2 list\n</code></pre><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/processmanagemnet.png\" alt=\"img\"></p>\n<h2 id=\"Managing-processes\"><a href=\"#Managing-processes\" class=\"headerlink\" title=\"Managing processes\"></a>Managing processes</h2><pre><code>$ pm2 stop     &lt;app_name|id|&apos;all&apos;|json_conf&gt;\n$ pm2 restart  &lt;app_name|id|&apos;all&apos;|json_conf&gt;\n$ pm2 delete   &lt;app_name|id|&apos;all&apos;|json_conf&gt;\n</code></pre><h2 id=\"Logs\"><a href=\"#Logs\" class=\"headerlink\" title=\"Logs\"></a>Logs</h2><pre><code>$ pm2 logs [&apos;all&apos;|app_name|app_id] [--json] [--format] [--raw]\n\n$ pm2 logs APP-NAME       # Display APP-NAME logs\n$ pm2 logs --json         # JSON output\n$ pm2 logs --format       # Formated output\n$ pm2 flush               # Flush all logs\n$ pm2 reloadLogs          # Reload all logs        \n</code></pre>"},{"layout":"post","title":"파일합치기","date":"2018-01-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/11066>\n\n## 풀이\n\n- dp[i][j] \n\t\t\n\t\t수열에서 i번째~j번째 수까지 합치는데 필요한 최소 비용\n\t\tmin(dp[i][k] + dp[k+1][j]) + (i~j 수열의 합) (i <= k < j) 일 때\n\n\t\ti _ _ _ k k+1 _ _ _ j\n\t\t\t\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/file.png)\n\n\n\n\n\n\t \n","source":"_posts/2018-01-05-파일합치기.md","raw":"---\nlayout: post\ntitle:  \"파일합치기\"\ndate:   2018-01-05\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/11066>\n\n## 풀이\n\n- dp[i][j] \n\t\t\n\t\t수열에서 i번째~j번째 수까지 합치는데 필요한 최소 비용\n\t\tmin(dp[i][k] + dp[k+1][j]) + (i~j 수열의 합) (i <= k < j) 일 때\n\n\t\ti _ _ _ k k+1 _ _ _ j\n\t\t\t\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/file.png)\n\n\n\n\n\n\t \n","slug":"2018-01-05-파일합치기","published":1,"updated":"2018-04-16T04:12:01.042Z","comments":1,"photos":[],"link":"","_id":"cjp6k65av006331x7pdj8jzgj","content":"<p><a href=\"https://www.acmicpc.net/problem/11066\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11066</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>dp[i][j] </p>\n<pre><code>수열에서 i번째~j번째 수까지 합치는데 필요한 최소 비용\nmin(dp[i][k] + dp[k+1][j]) + (i~j 수열의 합) (i &lt;= k &lt; j) 일 때\n\ni _ _ _ k k+1 _ _ _ j\n</code></pre></li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/file.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11066\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11066</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>dp[i][j] </p>\n<pre><code>수열에서 i번째~j번째 수까지 합치는데 필요한 최소 비용\nmin(dp[i][k] + dp[k+1][j]) + (i~j 수열의 합) (i &lt;= k &lt; j) 일 때\n\ni _ _ _ k k+1 _ _ _ j\n</code></pre></li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/file.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"RecyclerView","date":"2018-01-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png","_content":"\n<https://developer.android.com/training/material/lists-cards.html>\n\n## RecyclerView\n\n- ListView의 더욱 향상되고 유연해진 버전\n- 한정된 수의 뷰를 유지함으로써 매우 효율적으로 스크롤할 수 있는 큰 데이터 집합을 표시하기 위한 컨테이너\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rc.png)\t\n\n## LayoutManager\n\n- 항목 뷰를 RecyclerView 내에 배치\n- 사용자에게 더 이상 보이지 않는 항목 뷰를 언제 재사용할지 결정\n- 뷰를 재사용 (또는 재활용)하기 위해, Adapter에게 뷰의 콘텐츠를 데이터 집합의 다른 요소로 교체하도록 요청\n- 이런 방식으로 뷰를 재활용하면 불필요한 뷰 생성이나 리소스를 많이 소모하는 findViewById()를 수행하지 않아도 되므로 성능이 개선\n\n\t- LinearLayoutManager : 항목을 가로 또는 세로 스크롤 목록으로 표시\n\t- GridLayoutManager : 그리드 형식으로 항목을 표시\n\t- StaggeredGridLayoutManager : 지그재그형의 그리드 형식으로 항목을 표시\n\n## 사용방법\n- RecyclerView 위젯을 레이아웃에 추가\n\n```\n<!-- A RecyclerView with some commonly used attributes -->\n<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/my_recycler_view\"\n    android:scrollbars=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"/>\n```\n\n- 객체 핸들을 얻어 LayoutManager에 연결\n- 표시할 데이터의 어댑터를 첨부\n\n````\npublic class MyActivity extends Activity {\n    private RecyclerView mRecyclerView;\n    private RecyclerView.Adapter mAdapter;\n    private RecyclerView.LayoutManager mLayoutManager;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.my_activity);\n        mRecyclerView = (RecyclerView) findViewById(R.id.my_recycler_view);\n\n        // use this setting to improve performance if you know that changes\n        // in content do not change the layout size of the RecyclerView\n        mRecyclerView.setHasFixedSize(true);\n\n        // use a linear layout manager\n        //객체 핸들을 얻어 LayoutManager에 연결\n        mLayoutManager = new LinearLayoutManager(this);\n        mRecyclerView.setLayoutManager(mLayoutManager);\n\n        // specify an adapter (see also next example)\n        // 표시할 데이터의 어댑터를 첨부\n        mAdapter = new MyAdapter(myDataset);\n        mRecyclerView.setAdapter(mAdapter);\n    }\n    ...\n}\n```\n\n## Adapter\n\n- 데이터 집합의 항목에 액세스할 수 있게 해주고,\n- 항목 뷰를 생성하고, \n- 원래의 항목이 더 이상 보이지 않을 경우 일부 뷰의 콘텐츠를 새 데이터 항목으로 교체\n\n```\npublic class MyAdapter extends RecyclerView.Adapter<MyAdapter.ViewHolder> {\n    private String[] mDataset;\n\n    // Provide a reference to the views for each data item\n    // Complex data items may need more than one view per item, and\n    // you provide access to all the views for a data item in a view holder\n    public static class ViewHolder extends RecyclerView.ViewHolder {\n        // each data item is just a string in this case\n        public TextView mTextView;\n        public ViewHolder(TextView v) {\n            super(v);\n            mTextView = v;\n        }\n    }\n\n    // Provide a suitable constructor (depends on the kind of dataset)\n    public MyAdapter(String[] myDataset) {\n        mDataset = myDataset;\n    }\n\n    // Create new views (invoked by the layout manager)\n    @Override\n    public MyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent,\n                                                   int viewType) {\n        // create a new view\n        View v = LayoutInflater.from(parent.getContext())\n                               .inflate(R.layout.my_text_view, parent, false);\n        // set the view's size, margins, paddings and layout parameters\n        ...\n        ViewHolder vh = new ViewHolder(v);\n        return vh;\n    }\n\n    // Replace the contents of a view (invoked by the layout manager)\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n        // - get element from your dataset at this position\n        // - replace the contents of the view with that element\n        holder.mTextView.setText(mDataset[position]);\n\n    }\n\n    // Return the size of your dataset (invoked by the layout manager)\n    @Override\n    public int getItemCount() {\n        return mDataset.length;\n    }\n}\n\n```\n\n\t\n\n","source":"_posts/2018-01-07-RecyclerView.md","raw":"---\nlayout: post\ntitle:  \"RecyclerView\"\ndate:   2018-01-07\ncategories: android\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png\n---\n\n<https://developer.android.com/training/material/lists-cards.html>\n\n## RecyclerView\n\n- ListView의 더욱 향상되고 유연해진 버전\n- 한정된 수의 뷰를 유지함으로써 매우 효율적으로 스크롤할 수 있는 큰 데이터 집합을 표시하기 위한 컨테이너\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rc.png)\t\n\n## LayoutManager\n\n- 항목 뷰를 RecyclerView 내에 배치\n- 사용자에게 더 이상 보이지 않는 항목 뷰를 언제 재사용할지 결정\n- 뷰를 재사용 (또는 재활용)하기 위해, Adapter에게 뷰의 콘텐츠를 데이터 집합의 다른 요소로 교체하도록 요청\n- 이런 방식으로 뷰를 재활용하면 불필요한 뷰 생성이나 리소스를 많이 소모하는 findViewById()를 수행하지 않아도 되므로 성능이 개선\n\n\t- LinearLayoutManager : 항목을 가로 또는 세로 스크롤 목록으로 표시\n\t- GridLayoutManager : 그리드 형식으로 항목을 표시\n\t- StaggeredGridLayoutManager : 지그재그형의 그리드 형식으로 항목을 표시\n\n## 사용방법\n- RecyclerView 위젯을 레이아웃에 추가\n\n```\n<!-- A RecyclerView with some commonly used attributes -->\n<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/my_recycler_view\"\n    android:scrollbars=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"/>\n```\n\n- 객체 핸들을 얻어 LayoutManager에 연결\n- 표시할 데이터의 어댑터를 첨부\n\n````\npublic class MyActivity extends Activity {\n    private RecyclerView mRecyclerView;\n    private RecyclerView.Adapter mAdapter;\n    private RecyclerView.LayoutManager mLayoutManager;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.my_activity);\n        mRecyclerView = (RecyclerView) findViewById(R.id.my_recycler_view);\n\n        // use this setting to improve performance if you know that changes\n        // in content do not change the layout size of the RecyclerView\n        mRecyclerView.setHasFixedSize(true);\n\n        // use a linear layout manager\n        //객체 핸들을 얻어 LayoutManager에 연결\n        mLayoutManager = new LinearLayoutManager(this);\n        mRecyclerView.setLayoutManager(mLayoutManager);\n\n        // specify an adapter (see also next example)\n        // 표시할 데이터의 어댑터를 첨부\n        mAdapter = new MyAdapter(myDataset);\n        mRecyclerView.setAdapter(mAdapter);\n    }\n    ...\n}\n```\n\n## Adapter\n\n- 데이터 집합의 항목에 액세스할 수 있게 해주고,\n- 항목 뷰를 생성하고, \n- 원래의 항목이 더 이상 보이지 않을 경우 일부 뷰의 콘텐츠를 새 데이터 항목으로 교체\n\n```\npublic class MyAdapter extends RecyclerView.Adapter<MyAdapter.ViewHolder> {\n    private String[] mDataset;\n\n    // Provide a reference to the views for each data item\n    // Complex data items may need more than one view per item, and\n    // you provide access to all the views for a data item in a view holder\n    public static class ViewHolder extends RecyclerView.ViewHolder {\n        // each data item is just a string in this case\n        public TextView mTextView;\n        public ViewHolder(TextView v) {\n            super(v);\n            mTextView = v;\n        }\n    }\n\n    // Provide a suitable constructor (depends on the kind of dataset)\n    public MyAdapter(String[] myDataset) {\n        mDataset = myDataset;\n    }\n\n    // Create new views (invoked by the layout manager)\n    @Override\n    public MyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent,\n                                                   int viewType) {\n        // create a new view\n        View v = LayoutInflater.from(parent.getContext())\n                               .inflate(R.layout.my_text_view, parent, false);\n        // set the view's size, margins, paddings and layout parameters\n        ...\n        ViewHolder vh = new ViewHolder(v);\n        return vh;\n    }\n\n    // Replace the contents of a view (invoked by the layout manager)\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n        // - get element from your dataset at this position\n        // - replace the contents of the view with that element\n        holder.mTextView.setText(mDataset[position]);\n\n    }\n\n    // Return the size of your dataset (invoked by the layout manager)\n    @Override\n    public int getItemCount() {\n        return mDataset.length;\n    }\n}\n\n```\n\n\t\n\n","slug":"2018-01-07-RecyclerView","published":1,"updated":"2018-04-16T04:12:49.764Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ax006531x77vao8n2c","content":"<p><a href=\"https://developer.android.com/training/material/lists-cards.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/training/material/lists-cards.html</a></p>\n<h2 id=\"RecyclerView\"><a href=\"#RecyclerView\" class=\"headerlink\" title=\"RecyclerView\"></a>RecyclerView</h2><ul>\n<li>ListView의 더욱 향상되고 유연해진 버전</li>\n<li>한정된 수의 뷰를 유지함으로써 매우 효율적으로 스크롤할 수 있는 큰 데이터 집합을 표시하기 위한 컨테이너</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rc.png\" alt=\"img\">    </p>\n<h2 id=\"LayoutManager\"><a href=\"#LayoutManager\" class=\"headerlink\" title=\"LayoutManager\"></a>LayoutManager</h2><ul>\n<li>항목 뷰를 RecyclerView 내에 배치</li>\n<li>사용자에게 더 이상 보이지 않는 항목 뷰를 언제 재사용할지 결정</li>\n<li>뷰를 재사용 (또는 재활용)하기 위해, Adapter에게 뷰의 콘텐츠를 데이터 집합의 다른 요소로 교체하도록 요청</li>\n<li><p>이런 방식으로 뷰를 재활용하면 불필요한 뷰 생성이나 리소스를 많이 소모하는 findViewById()를 수행하지 않아도 되므로 성능이 개선</p>\n<ul>\n<li>LinearLayoutManager : 항목을 가로 또는 세로 스크롤 목록으로 표시</li>\n<li>GridLayoutManager : 그리드 형식으로 항목을 표시</li>\n<li>StaggeredGridLayoutManager : 지그재그형의 그리드 형식으로 항목을 표시</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"사용방법\"><a href=\"#사용방법\" class=\"headerlink\" title=\"사용방법\"></a>사용방법</h2><ul>\n<li>RecyclerView 위젯을 레이아웃에 추가</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- A RecyclerView with some commonly used attributes --&gt;</span><br><span class=\"line\">&lt;android.support.v7.widget.RecyclerView</span><br><span class=\"line\">    android:id=&quot;@+id/my_recycler_view&quot;</span><br><span class=\"line\">    android:scrollbars=&quot;vertical&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>객체 핸들을 얻어 LayoutManager에 연결</li>\n<li>표시할 데이터의 어댑터를 첨부</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyActivity extends Activity &#123;</span><br><span class=\"line\">    private RecyclerView mRecyclerView;</span><br><span class=\"line\">    private RecyclerView.Adapter mAdapter;</span><br><span class=\"line\">    private RecyclerView.LayoutManager mLayoutManager;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.my_activity);</span><br><span class=\"line\">        mRecyclerView = (RecyclerView) findViewById(R.id.my_recycler_view);</span><br><span class=\"line\"></span><br><span class=\"line\">        // use this setting to improve performance if you know that changes</span><br><span class=\"line\">        // in content do not change the layout size of the RecyclerView</span><br><span class=\"line\">        mRecyclerView.setHasFixedSize(true);</span><br><span class=\"line\"></span><br><span class=\"line\">        // use a linear layout manager</span><br><span class=\"line\">        //객체 핸들을 얻어 LayoutManager에 연결</span><br><span class=\"line\">        mLayoutManager = new LinearLayoutManager(this);</span><br><span class=\"line\">        mRecyclerView.setLayoutManager(mLayoutManager);</span><br><span class=\"line\"></span><br><span class=\"line\">        // specify an adapter (see also next example)</span><br><span class=\"line\">        // 표시할 데이터의 어댑터를 첨부</span><br><span class=\"line\">        mAdapter = new MyAdapter(myDataset);</span><br><span class=\"line\">        mRecyclerView.setAdapter(mAdapter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Adapter\"><a href=\"#Adapter\" class=\"headerlink\" title=\"Adapter\"></a>Adapter</h2><ul>\n<li>데이터 집합의 항목에 액세스할 수 있게 해주고,</li>\n<li>항목 뷰를 생성하고, </li>\n<li>원래의 항목이 더 이상 보이지 않을 경우 일부 뷰의 콘텐츠를 새 데이터 항목으로 교체</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyAdapter extends RecyclerView.Adapter&lt;MyAdapter.ViewHolder&gt; &#123;</span><br><span class=\"line\">    private String[] mDataset;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Provide a reference to the views for each data item</span><br><span class=\"line\">    // Complex data items may need more than one view per item, and</span><br><span class=\"line\">    // you provide access to all the views for a data item in a view holder</span><br><span class=\"line\">    public static class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class=\"line\">        // each data item is just a string in this case</span><br><span class=\"line\">        public TextView mTextView;</span><br><span class=\"line\">        public ViewHolder(TextView v) &#123;</span><br><span class=\"line\">            super(v);</span><br><span class=\"line\">            mTextView = v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Provide a suitable constructor (depends on the kind of dataset)</span><br><span class=\"line\">    public MyAdapter(String[] myDataset) &#123;</span><br><span class=\"line\">        mDataset = myDataset;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Create new views (invoked by the layout manager)</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public MyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent,</span><br><span class=\"line\">                                                   int viewType) &#123;</span><br><span class=\"line\">        // create a new view</span><br><span class=\"line\">        View v = LayoutInflater.from(parent.getContext())</span><br><span class=\"line\">                               .inflate(R.layout.my_text_view, parent, false);</span><br><span class=\"line\">        // set the view&apos;s size, margins, paddings and layout parameters</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        ViewHolder vh = new ViewHolder(v);</span><br><span class=\"line\">        return vh;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Replace the contents of a view (invoked by the layout manager)</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void onBindViewHolder(ViewHolder holder, int position) &#123;</span><br><span class=\"line\">        // - get element from your dataset at this position</span><br><span class=\"line\">        // - replace the contents of the view with that element</span><br><span class=\"line\">        holder.mTextView.setText(mDataset[position]);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Return the size of your dataset (invoked by the layout manager)</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public int getItemCount() &#123;</span><br><span class=\"line\">        return mDataset.length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.android.com/training/material/lists-cards.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/training/material/lists-cards.html</a></p>\n<h2 id=\"RecyclerView\"><a href=\"#RecyclerView\" class=\"headerlink\" title=\"RecyclerView\"></a>RecyclerView</h2><ul>\n<li>ListView의 더욱 향상되고 유연해진 버전</li>\n<li>한정된 수의 뷰를 유지함으로써 매우 효율적으로 스크롤할 수 있는 큰 데이터 집합을 표시하기 위한 컨테이너</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rc.png\" alt=\"img\">    </p>\n<h2 id=\"LayoutManager\"><a href=\"#LayoutManager\" class=\"headerlink\" title=\"LayoutManager\"></a>LayoutManager</h2><ul>\n<li>항목 뷰를 RecyclerView 내에 배치</li>\n<li>사용자에게 더 이상 보이지 않는 항목 뷰를 언제 재사용할지 결정</li>\n<li>뷰를 재사용 (또는 재활용)하기 위해, Adapter에게 뷰의 콘텐츠를 데이터 집합의 다른 요소로 교체하도록 요청</li>\n<li><p>이런 방식으로 뷰를 재활용하면 불필요한 뷰 생성이나 리소스를 많이 소모하는 findViewById()를 수행하지 않아도 되므로 성능이 개선</p>\n<ul>\n<li>LinearLayoutManager : 항목을 가로 또는 세로 스크롤 목록으로 표시</li>\n<li>GridLayoutManager : 그리드 형식으로 항목을 표시</li>\n<li>StaggeredGridLayoutManager : 지그재그형의 그리드 형식으로 항목을 표시</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"사용방법\"><a href=\"#사용방법\" class=\"headerlink\" title=\"사용방법\"></a>사용방법</h2><ul>\n<li>RecyclerView 위젯을 레이아웃에 추가</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- A RecyclerView with some commonly used attributes --&gt;</span><br><span class=\"line\">&lt;android.support.v7.widget.RecyclerView</span><br><span class=\"line\">    android:id=&quot;@+id/my_recycler_view&quot;</span><br><span class=\"line\">    android:scrollbars=&quot;vertical&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>객체 핸들을 얻어 LayoutManager에 연결</li>\n<li>표시할 데이터의 어댑터를 첨부</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyActivity extends Activity &#123;</span><br><span class=\"line\">    private RecyclerView mRecyclerView;</span><br><span class=\"line\">    private RecyclerView.Adapter mAdapter;</span><br><span class=\"line\">    private RecyclerView.LayoutManager mLayoutManager;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.my_activity);</span><br><span class=\"line\">        mRecyclerView = (RecyclerView) findViewById(R.id.my_recycler_view);</span><br><span class=\"line\"></span><br><span class=\"line\">        // use this setting to improve performance if you know that changes</span><br><span class=\"line\">        // in content do not change the layout size of the RecyclerView</span><br><span class=\"line\">        mRecyclerView.setHasFixedSize(true);</span><br><span class=\"line\"></span><br><span class=\"line\">        // use a linear layout manager</span><br><span class=\"line\">        //객체 핸들을 얻어 LayoutManager에 연결</span><br><span class=\"line\">        mLayoutManager = new LinearLayoutManager(this);</span><br><span class=\"line\">        mRecyclerView.setLayoutManager(mLayoutManager);</span><br><span class=\"line\"></span><br><span class=\"line\">        // specify an adapter (see also next example)</span><br><span class=\"line\">        // 표시할 데이터의 어댑터를 첨부</span><br><span class=\"line\">        mAdapter = new MyAdapter(myDataset);</span><br><span class=\"line\">        mRecyclerView.setAdapter(mAdapter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Adapter\"><a href=\"#Adapter\" class=\"headerlink\" title=\"Adapter\"></a>Adapter</h2><ul>\n<li>데이터 집합의 항목에 액세스할 수 있게 해주고,</li>\n<li>항목 뷰를 생성하고, </li>\n<li>원래의 항목이 더 이상 보이지 않을 경우 일부 뷰의 콘텐츠를 새 데이터 항목으로 교체</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyAdapter extends RecyclerView.Adapter&lt;MyAdapter.ViewHolder&gt; &#123;</span><br><span class=\"line\">    private String[] mDataset;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Provide a reference to the views for each data item</span><br><span class=\"line\">    // Complex data items may need more than one view per item, and</span><br><span class=\"line\">    // you provide access to all the views for a data item in a view holder</span><br><span class=\"line\">    public static class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class=\"line\">        // each data item is just a string in this case</span><br><span class=\"line\">        public TextView mTextView;</span><br><span class=\"line\">        public ViewHolder(TextView v) &#123;</span><br><span class=\"line\">            super(v);</span><br><span class=\"line\">            mTextView = v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Provide a suitable constructor (depends on the kind of dataset)</span><br><span class=\"line\">    public MyAdapter(String[] myDataset) &#123;</span><br><span class=\"line\">        mDataset = myDataset;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Create new views (invoked by the layout manager)</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public MyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent,</span><br><span class=\"line\">                                                   int viewType) &#123;</span><br><span class=\"line\">        // create a new view</span><br><span class=\"line\">        View v = LayoutInflater.from(parent.getContext())</span><br><span class=\"line\">                               .inflate(R.layout.my_text_view, parent, false);</span><br><span class=\"line\">        // set the view&apos;s size, margins, paddings and layout parameters</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        ViewHolder vh = new ViewHolder(v);</span><br><span class=\"line\">        return vh;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Replace the contents of a view (invoked by the layout manager)</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void onBindViewHolder(ViewHolder holder, int position) &#123;</span><br><span class=\"line\">        // - get element from your dataset at this position</span><br><span class=\"line\">        // - replace the contents of the view with that element</span><br><span class=\"line\">        holder.mTextView.setText(mDataset[position]);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Return the size of your dataset (invoked by the layout manager)</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public int getItemCount() &#123;</span><br><span class=\"line\">        return mDataset.length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"functional programming","date":"2018-01-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n## 회고\n\nonoffmix 통해서 알게된 강의에 참여하게 되었다. 함수형 자바스크립트에 대한 강의였다.\n강의자는 마플 개발자 유인동님이였다. 이 강의를 신청한 이유는, 개발자스러운 코드를 짜고 싶었기때문이다. 개발자라면 구조적이고 체계적이고, 누가 봐도 읽기 쉽고, 간결한 코드를 짜고 싶은 욕심이 있다고\n생각한다. 단 기간에 결과물을 만들어내야 하는 회사에서 일하기 때문에, javascript, node 개발을 처음하기 때문에 라는 핑계를 대며 '잘' 짠 코드를 만들어내지 못하고 있었던 와중에, 이 강의를 알게 되어 신청하게 되었다. 다시 한 번 개발 공부에 대해 각성을 받은 유의미한 강의였다. 밑의 내용은 유인님의 강의를 들으면 핵심 단어, 내용만 정리한 것이다. \n\n## 성공적인 프로그래밍\n\n- 사용성, 성능, 확장성, 기획 변경에 대한 대응력\n\t- 시장에 빨리 내놓고 피드백 받아서 빨리 변경... 효율적으로 이루어 내는일..\n\n## 함수형 프로그래밍 \n\n- 부수 효과를 멀리한다 == 순수 함수를 만듦\n\t- 로직을 만들어내는 과정에서는 부수효과를 멀리하고\n\t- 마지막에 최종적으로 부수효과를 나타냄(화면을 바꾸던지, 디비에 row를 추가하던지..)\n- 모듈화 수준을 높임 => 중요 (생산성이 높아짐, 팀웍이 좋아짐, 기능에 대한 대응력이 좋아짐)\n- 함수형 사고 방식 \n\t- 문제 해결방식을 동사들로 구성\n\t- 먼저 기능을 만들고, 그 기능에 맞게 데이터 구성\n\n## 함수의 특징\n\n- 일급함수 \n\t- 함수를 값으로 다룰 수 있음\n\t- 함수 자체도 값으로 쓸 수 있음\n\t- 함수를 인자로 전달하던지, 리턴하던지, 변수에 저장하던지..\n- 클로저 \n\t\n## 함수의 종류 심화, 그리고 6가지\n\n- 순수함수\n- 부수효과\n- 꼭 필요한 부수 효과\n- 값을 변경하는 순수함수\n- 함수를 리턴하는 함수\n- 함수가 함수를 인자로 받아서 실행하는 함수\n\n## 함수형 프로그래밍 하는 방법\n\n- 문보다는 표현식 위주 코딩\n- 변수 사용 줄이고, 값을 변경하지 않음\n- 꼭 필요한 부수효과 함수 제외하고 부수효과를 이용하지 않음\n\n## map, filter 함수\n\n- map : 수집\n- filter: 거르는\n\n## reduce 함수\n\n- reduce : 축약 , 접는 함수\n\n## pipe\n\n- 함수만 값으로 받는 함수\n\n## go\n\n## 커링\n\n## get\n\n## 비동기 상황을 잘 다루기 위해서는\n\n- 리턴 값으로 소통하기\n- 원하는 순서대로 함수 실행을 나열하는 법 연습\n- 표현식 만으로 코딩하는 연습\n- 재귀 함수 연습 \n\n\n## promise\n\n- 핵심 : 필요할때 값을 리턴받아서 쓸 수 있다는 것\n\n## 표현식으로 코드 조각들을 가두면 \n\n- ==함수로 코드 조각들을 가두면\n- ==클로저로 코드 조각들을 가두면\n- 어느 시점에 실행해도 상관 없기 때문에\n- 미리 만들어준 함수가 코드 조각을 다룰 수 있어 \n\n## 기타\n- while 문 많이 쓰면 재귀 함수 잘 쓰게됨. while 문 많이 쓰는거 추천함\n- http1,2\n- 브라우저가 화면을 그리는 방식 : 콜 스텍이 비어졌을 떄 렌더링을 하는 브라우저..!\n\n\n\n​\t\n\n","source":"_posts/2018-01-06-functional programming.md","raw":"---\nlayout: post\ntitle:  \"functional programming\"\ndate:   2018-01-06\ncategories: node\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n## 회고\n\nonoffmix 통해서 알게된 강의에 참여하게 되었다. 함수형 자바스크립트에 대한 강의였다.\n강의자는 마플 개발자 유인동님이였다. 이 강의를 신청한 이유는, 개발자스러운 코드를 짜고 싶었기때문이다. 개발자라면 구조적이고 체계적이고, 누가 봐도 읽기 쉽고, 간결한 코드를 짜고 싶은 욕심이 있다고\n생각한다. 단 기간에 결과물을 만들어내야 하는 회사에서 일하기 때문에, javascript, node 개발을 처음하기 때문에 라는 핑계를 대며 '잘' 짠 코드를 만들어내지 못하고 있었던 와중에, 이 강의를 알게 되어 신청하게 되었다. 다시 한 번 개발 공부에 대해 각성을 받은 유의미한 강의였다. 밑의 내용은 유인님의 강의를 들으면 핵심 단어, 내용만 정리한 것이다. \n\n## 성공적인 프로그래밍\n\n- 사용성, 성능, 확장성, 기획 변경에 대한 대응력\n\t- 시장에 빨리 내놓고 피드백 받아서 빨리 변경... 효율적으로 이루어 내는일..\n\n## 함수형 프로그래밍 \n\n- 부수 효과를 멀리한다 == 순수 함수를 만듦\n\t- 로직을 만들어내는 과정에서는 부수효과를 멀리하고\n\t- 마지막에 최종적으로 부수효과를 나타냄(화면을 바꾸던지, 디비에 row를 추가하던지..)\n- 모듈화 수준을 높임 => 중요 (생산성이 높아짐, 팀웍이 좋아짐, 기능에 대한 대응력이 좋아짐)\n- 함수형 사고 방식 \n\t- 문제 해결방식을 동사들로 구성\n\t- 먼저 기능을 만들고, 그 기능에 맞게 데이터 구성\n\n## 함수의 특징\n\n- 일급함수 \n\t- 함수를 값으로 다룰 수 있음\n\t- 함수 자체도 값으로 쓸 수 있음\n\t- 함수를 인자로 전달하던지, 리턴하던지, 변수에 저장하던지..\n- 클로저 \n\t\n## 함수의 종류 심화, 그리고 6가지\n\n- 순수함수\n- 부수효과\n- 꼭 필요한 부수 효과\n- 값을 변경하는 순수함수\n- 함수를 리턴하는 함수\n- 함수가 함수를 인자로 받아서 실행하는 함수\n\n## 함수형 프로그래밍 하는 방법\n\n- 문보다는 표현식 위주 코딩\n- 변수 사용 줄이고, 값을 변경하지 않음\n- 꼭 필요한 부수효과 함수 제외하고 부수효과를 이용하지 않음\n\n## map, filter 함수\n\n- map : 수집\n- filter: 거르는\n\n## reduce 함수\n\n- reduce : 축약 , 접는 함수\n\n## pipe\n\n- 함수만 값으로 받는 함수\n\n## go\n\n## 커링\n\n## get\n\n## 비동기 상황을 잘 다루기 위해서는\n\n- 리턴 값으로 소통하기\n- 원하는 순서대로 함수 실행을 나열하는 법 연습\n- 표현식 만으로 코딩하는 연습\n- 재귀 함수 연습 \n\n\n## promise\n\n- 핵심 : 필요할때 값을 리턴받아서 쓸 수 있다는 것\n\n## 표현식으로 코드 조각들을 가두면 \n\n- ==함수로 코드 조각들을 가두면\n- ==클로저로 코드 조각들을 가두면\n- 어느 시점에 실행해도 상관 없기 때문에\n- 미리 만들어준 함수가 코드 조각을 다룰 수 있어 \n\n## 기타\n- while 문 많이 쓰면 재귀 함수 잘 쓰게됨. while 문 많이 쓰는거 추천함\n- http1,2\n- 브라우저가 화면을 그리는 방식 : 콜 스텍이 비어졌을 떄 렌더링을 하는 브라우저..!\n\n\n\n​\t\n\n","slug":"2018-01-06-functional programming","published":1,"updated":"2018-04-16T04:12:22.036Z","comments":1,"photos":[],"link":"","_id":"cjp6k65az006731x7iaa3prxh","content":"<h2 id=\"회고\"><a href=\"#회고\" class=\"headerlink\" title=\"회고\"></a>회고</h2><p>onoffmix 통해서 알게된 강의에 참여하게 되었다. 함수형 자바스크립트에 대한 강의였다.<br>강의자는 마플 개발자 유인동님이였다. 이 강의를 신청한 이유는, 개발자스러운 코드를 짜고 싶었기때문이다. 개발자라면 구조적이고 체계적이고, 누가 봐도 읽기 쉽고, 간결한 코드를 짜고 싶은 욕심이 있다고<br>생각한다. 단 기간에 결과물을 만들어내야 하는 회사에서 일하기 때문에, javascript, node 개발을 처음하기 때문에 라는 핑계를 대며 ‘잘’ 짠 코드를 만들어내지 못하고 있었던 와중에, 이 강의를 알게 되어 신청하게 되었다. 다시 한 번 개발 공부에 대해 각성을 받은 유의미한 강의였다. 밑의 내용은 유인님의 강의를 들으면 핵심 단어, 내용만 정리한 것이다. </p>\n<h2 id=\"성공적인-프로그래밍\"><a href=\"#성공적인-프로그래밍\" class=\"headerlink\" title=\"성공적인 프로그래밍\"></a>성공적인 프로그래밍</h2><ul>\n<li>사용성, 성능, 확장성, 기획 변경에 대한 대응력<ul>\n<li>시장에 빨리 내놓고 피드백 받아서 빨리 변경… 효율적으로 이루어 내는일..</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"함수형-프로그래밍\"><a href=\"#함수형-프로그래밍\" class=\"headerlink\" title=\"함수형 프로그래밍\"></a>함수형 프로그래밍</h2><ul>\n<li>부수 효과를 멀리한다 == 순수 함수를 만듦<ul>\n<li>로직을 만들어내는 과정에서는 부수효과를 멀리하고</li>\n<li>마지막에 최종적으로 부수효과를 나타냄(화면을 바꾸던지, 디비에 row를 추가하던지..)</li>\n</ul>\n</li>\n<li>모듈화 수준을 높임 =&gt; 중요 (생산성이 높아짐, 팀웍이 좋아짐, 기능에 대한 대응력이 좋아짐)</li>\n<li>함수형 사고 방식 <ul>\n<li>문제 해결방식을 동사들로 구성</li>\n<li>먼저 기능을 만들고, 그 기능에 맞게 데이터 구성</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"함수의-특징\"><a href=\"#함수의-특징\" class=\"headerlink\" title=\"함수의 특징\"></a>함수의 특징</h2><ul>\n<li>일급함수 <ul>\n<li>함수를 값으로 다룰 수 있음</li>\n<li>함수 자체도 값으로 쓸 수 있음</li>\n<li>함수를 인자로 전달하던지, 리턴하던지, 변수에 저장하던지..</li>\n</ul>\n</li>\n<li>클로저 </li>\n</ul>\n<h2 id=\"함수의-종류-심화-그리고-6가지\"><a href=\"#함수의-종류-심화-그리고-6가지\" class=\"headerlink\" title=\"함수의 종류 심화, 그리고 6가지\"></a>함수의 종류 심화, 그리고 6가지</h2><ul>\n<li>순수함수</li>\n<li>부수효과</li>\n<li>꼭 필요한 부수 효과</li>\n<li>값을 변경하는 순수함수</li>\n<li>함수를 리턴하는 함수</li>\n<li>함수가 함수를 인자로 받아서 실행하는 함수</li>\n</ul>\n<h2 id=\"함수형-프로그래밍-하는-방법\"><a href=\"#함수형-프로그래밍-하는-방법\" class=\"headerlink\" title=\"함수형 프로그래밍 하는 방법\"></a>함수형 프로그래밍 하는 방법</h2><ul>\n<li>문보다는 표현식 위주 코딩</li>\n<li>변수 사용 줄이고, 값을 변경하지 않음</li>\n<li>꼭 필요한 부수효과 함수 제외하고 부수효과를 이용하지 않음</li>\n</ul>\n<h2 id=\"map-filter-함수\"><a href=\"#map-filter-함수\" class=\"headerlink\" title=\"map, filter 함수\"></a>map, filter 함수</h2><ul>\n<li>map : 수집</li>\n<li>filter: 거르는</li>\n</ul>\n<h2 id=\"reduce-함수\"><a href=\"#reduce-함수\" class=\"headerlink\" title=\"reduce 함수\"></a>reduce 함수</h2><ul>\n<li>reduce : 축약 , 접는 함수</li>\n</ul>\n<h2 id=\"pipe\"><a href=\"#pipe\" class=\"headerlink\" title=\"pipe\"></a>pipe</h2><ul>\n<li>함수만 값으로 받는 함수</li>\n</ul>\n<h2 id=\"go\"><a href=\"#go\" class=\"headerlink\" title=\"go\"></a>go</h2><h2 id=\"커링\"><a href=\"#커링\" class=\"headerlink\" title=\"커링\"></a>커링</h2><h2 id=\"get\"><a href=\"#get\" class=\"headerlink\" title=\"get\"></a>get</h2><h2 id=\"비동기-상황을-잘-다루기-위해서는\"><a href=\"#비동기-상황을-잘-다루기-위해서는\" class=\"headerlink\" title=\"비동기 상황을 잘 다루기 위해서는\"></a>비동기 상황을 잘 다루기 위해서는</h2><ul>\n<li>리턴 값으로 소통하기</li>\n<li>원하는 순서대로 함수 실행을 나열하는 법 연습</li>\n<li>표현식 만으로 코딩하는 연습</li>\n<li>재귀 함수 연습 </li>\n</ul>\n<h2 id=\"promise\"><a href=\"#promise\" class=\"headerlink\" title=\"promise\"></a>promise</h2><ul>\n<li>핵심 : 필요할때 값을 리턴받아서 쓸 수 있다는 것</li>\n</ul>\n<h2 id=\"표현식으로-코드-조각들을-가두면\"><a href=\"#표현식으로-코드-조각들을-가두면\" class=\"headerlink\" title=\"표현식으로 코드 조각들을 가두면\"></a>표현식으로 코드 조각들을 가두면</h2><ul>\n<li>==함수로 코드 조각들을 가두면</li>\n<li>==클로저로 코드 조각들을 가두면</li>\n<li>어느 시점에 실행해도 상관 없기 때문에</li>\n<li>미리 만들어준 함수가 코드 조각을 다룰 수 있어 </li>\n</ul>\n<h2 id=\"기타\"><a href=\"#기타\" class=\"headerlink\" title=\"기타\"></a>기타</h2><ul>\n<li>while 문 많이 쓰면 재귀 함수 잘 쓰게됨. while 문 많이 쓰는거 추천함</li>\n<li>http1,2</li>\n<li>브라우저가 화면을 그리는 방식 : 콜 스텍이 비어졌을 떄 렌더링을 하는 브라우저..!</li>\n</ul>\n<p>​    </p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"회고\"><a href=\"#회고\" class=\"headerlink\" title=\"회고\"></a>회고</h2><p>onoffmix 통해서 알게된 강의에 참여하게 되었다. 함수형 자바스크립트에 대한 강의였다.<br>강의자는 마플 개발자 유인동님이였다. 이 강의를 신청한 이유는, 개발자스러운 코드를 짜고 싶었기때문이다. 개발자라면 구조적이고 체계적이고, 누가 봐도 읽기 쉽고, 간결한 코드를 짜고 싶은 욕심이 있다고<br>생각한다. 단 기간에 결과물을 만들어내야 하는 회사에서 일하기 때문에, javascript, node 개발을 처음하기 때문에 라는 핑계를 대며 ‘잘’ 짠 코드를 만들어내지 못하고 있었던 와중에, 이 강의를 알게 되어 신청하게 되었다. 다시 한 번 개발 공부에 대해 각성을 받은 유의미한 강의였다. 밑의 내용은 유인님의 강의를 들으면 핵심 단어, 내용만 정리한 것이다. </p>\n<h2 id=\"성공적인-프로그래밍\"><a href=\"#성공적인-프로그래밍\" class=\"headerlink\" title=\"성공적인 프로그래밍\"></a>성공적인 프로그래밍</h2><ul>\n<li>사용성, 성능, 확장성, 기획 변경에 대한 대응력<ul>\n<li>시장에 빨리 내놓고 피드백 받아서 빨리 변경… 효율적으로 이루어 내는일..</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"함수형-프로그래밍\"><a href=\"#함수형-프로그래밍\" class=\"headerlink\" title=\"함수형 프로그래밍\"></a>함수형 프로그래밍</h2><ul>\n<li>부수 효과를 멀리한다 == 순수 함수를 만듦<ul>\n<li>로직을 만들어내는 과정에서는 부수효과를 멀리하고</li>\n<li>마지막에 최종적으로 부수효과를 나타냄(화면을 바꾸던지, 디비에 row를 추가하던지..)</li>\n</ul>\n</li>\n<li>모듈화 수준을 높임 =&gt; 중요 (생산성이 높아짐, 팀웍이 좋아짐, 기능에 대한 대응력이 좋아짐)</li>\n<li>함수형 사고 방식 <ul>\n<li>문제 해결방식을 동사들로 구성</li>\n<li>먼저 기능을 만들고, 그 기능에 맞게 데이터 구성</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"함수의-특징\"><a href=\"#함수의-특징\" class=\"headerlink\" title=\"함수의 특징\"></a>함수의 특징</h2><ul>\n<li>일급함수 <ul>\n<li>함수를 값으로 다룰 수 있음</li>\n<li>함수 자체도 값으로 쓸 수 있음</li>\n<li>함수를 인자로 전달하던지, 리턴하던지, 변수에 저장하던지..</li>\n</ul>\n</li>\n<li>클로저 </li>\n</ul>\n<h2 id=\"함수의-종류-심화-그리고-6가지\"><a href=\"#함수의-종류-심화-그리고-6가지\" class=\"headerlink\" title=\"함수의 종류 심화, 그리고 6가지\"></a>함수의 종류 심화, 그리고 6가지</h2><ul>\n<li>순수함수</li>\n<li>부수효과</li>\n<li>꼭 필요한 부수 효과</li>\n<li>값을 변경하는 순수함수</li>\n<li>함수를 리턴하는 함수</li>\n<li>함수가 함수를 인자로 받아서 실행하는 함수</li>\n</ul>\n<h2 id=\"함수형-프로그래밍-하는-방법\"><a href=\"#함수형-프로그래밍-하는-방법\" class=\"headerlink\" title=\"함수형 프로그래밍 하는 방법\"></a>함수형 프로그래밍 하는 방법</h2><ul>\n<li>문보다는 표현식 위주 코딩</li>\n<li>변수 사용 줄이고, 값을 변경하지 않음</li>\n<li>꼭 필요한 부수효과 함수 제외하고 부수효과를 이용하지 않음</li>\n</ul>\n<h2 id=\"map-filter-함수\"><a href=\"#map-filter-함수\" class=\"headerlink\" title=\"map, filter 함수\"></a>map, filter 함수</h2><ul>\n<li>map : 수집</li>\n<li>filter: 거르는</li>\n</ul>\n<h2 id=\"reduce-함수\"><a href=\"#reduce-함수\" class=\"headerlink\" title=\"reduce 함수\"></a>reduce 함수</h2><ul>\n<li>reduce : 축약 , 접는 함수</li>\n</ul>\n<h2 id=\"pipe\"><a href=\"#pipe\" class=\"headerlink\" title=\"pipe\"></a>pipe</h2><ul>\n<li>함수만 값으로 받는 함수</li>\n</ul>\n<h2 id=\"go\"><a href=\"#go\" class=\"headerlink\" title=\"go\"></a>go</h2><h2 id=\"커링\"><a href=\"#커링\" class=\"headerlink\" title=\"커링\"></a>커링</h2><h2 id=\"get\"><a href=\"#get\" class=\"headerlink\" title=\"get\"></a>get</h2><h2 id=\"비동기-상황을-잘-다루기-위해서는\"><a href=\"#비동기-상황을-잘-다루기-위해서는\" class=\"headerlink\" title=\"비동기 상황을 잘 다루기 위해서는\"></a>비동기 상황을 잘 다루기 위해서는</h2><ul>\n<li>리턴 값으로 소통하기</li>\n<li>원하는 순서대로 함수 실행을 나열하는 법 연습</li>\n<li>표현식 만으로 코딩하는 연습</li>\n<li>재귀 함수 연습 </li>\n</ul>\n<h2 id=\"promise\"><a href=\"#promise\" class=\"headerlink\" title=\"promise\"></a>promise</h2><ul>\n<li>핵심 : 필요할때 값을 리턴받아서 쓸 수 있다는 것</li>\n</ul>\n<h2 id=\"표현식으로-코드-조각들을-가두면\"><a href=\"#표현식으로-코드-조각들을-가두면\" class=\"headerlink\" title=\"표현식으로 코드 조각들을 가두면\"></a>표현식으로 코드 조각들을 가두면</h2><ul>\n<li>==함수로 코드 조각들을 가두면</li>\n<li>==클로저로 코드 조각들을 가두면</li>\n<li>어느 시점에 실행해도 상관 없기 때문에</li>\n<li>미리 만들어준 함수가 코드 조각을 다룰 수 있어 </li>\n</ul>\n<h2 id=\"기타\"><a href=\"#기타\" class=\"headerlink\" title=\"기타\"></a>기타</h2><ul>\n<li>while 문 많이 쓰면 재귀 함수 잘 쓰게됨. while 문 많이 쓰는거 추천함</li>\n<li>http1,2</li>\n<li>브라우저가 화면을 그리는 방식 : 콜 스텍이 비어졌을 떄 렌더링을 하는 브라우저..!</li>\n</ul>\n<p>​    </p>\n"},{"layout":"post","title":"ViewPager","date":"2018-01-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png","_content":"\n<https://developer.android.com/training/animation/screen-slide.html>\n\n## Create the Views\n\n- 프레그먼트의 내용물로서 사용될 레이아웃\n\n```\n<!-- fragment_screen_slide_page.xml -->\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/content\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" >\n\n    <TextView style=\"?android:textAppearanceMedium\"\n        android:padding=\"16dp\"\n        android:lineSpacingMultiplier=\"1.2\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/lorem_ipsum\" />\n</ScrollView>\n```\n\n## Create the Fragment\n\n- 부모 엑티비티에서 사용자에게 보여줄 새로운 페이지가 필요할 때마다, 이 프레그먼트의 인스턴스를  생성 할 수 있다. \n\n```\nimport android.support.v4.app.Fragment;\n...\npublic class ScreenSlidePageFragment extends Fragment {\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n            Bundle savedInstanceState) {\n        ViewGroup rootView = (ViewGroup) inflater.inflate(\n                R.layout.fragment_screen_slide_page, container, false);\n\n        return rootView;\n    }\n}\n```\n\n## Add a ViewPager\n\n- ViewPager는 새로운 페이지를 보여주기 위해 PagerAdapters를 사용한다. \n- PagerAdapter 는 앞서 만든 프레그먼트 클래스를 사용한다.\n\n```\n<!-- activity_screen_slide.xml -->\n<android.support.v4.view.ViewPager\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/pager\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" />\n```\n\n## Create an Activity\n\n```\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\n...\npublic class ScreenSlidePagerActivity extends FragmentActivity {\n    /**\n     * The number of pages (wizard steps) to show in this demo.\n     */\n    private static final int NUM_PAGES = 5;\n\n    /**\n     * The pager widget, which handles animation and allows swiping horizontally to access previous\n     * and next wizard steps.\n     */\n    private ViewPager mPager;\n\n    /**\n     * The pager adapter, which provides the pages to the view pager widget.\n     */\n    private PagerAdapter mPagerAdapter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_screen_slide);\n\n        // Instantiate a ViewPager and a PagerAdapter.\n        mPager = (ViewPager) findViewById(R.id.pager);\n        mPagerAdapter = new ScreenSlidePagerAdapter(getSupportFragmentManager());\n        mPager.setAdapter(mPagerAdapter);\n    }\n\n    @Override\n    public void onBackPressed() {\n        if (mPager.getCurrentItem() == 0) {\n            // If the user is currently looking at the first step, allow the system to handle the\n            // Back button. This calls finish() on this activity and pops the back stack.\n            super.onBackPressed();\n        } else {\n            // Otherwise, select the previous step.\n            mPager.setCurrentItem(mPager.getCurrentItem() - 1);\n        }\n    }\n\n    /**\n     * A simple pager adapter that represents 5 ScreenSlidePageFragment objects, in\n     * sequence.\n     */\n    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {\n        public ScreenSlidePagerAdapter(FragmentManager fm) {\n            super(fm);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            return new ScreenSlidePageFragment();\n        }\n\n        @Override\n        public int getCount() {\n            return NUM_PAGES;\n        }\n    }\n}\n```\n\n","source":"_posts/2018-01-07-ViewPager.md","raw":"---\nlayout: post\ntitle:  \"ViewPager\"\ndate:   2018-01-07\ncategories: android\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png\n---\n\n<https://developer.android.com/training/animation/screen-slide.html>\n\n## Create the Views\n\n- 프레그먼트의 내용물로서 사용될 레이아웃\n\n```\n<!-- fragment_screen_slide_page.xml -->\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/content\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" >\n\n    <TextView style=\"?android:textAppearanceMedium\"\n        android:padding=\"16dp\"\n        android:lineSpacingMultiplier=\"1.2\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/lorem_ipsum\" />\n</ScrollView>\n```\n\n## Create the Fragment\n\n- 부모 엑티비티에서 사용자에게 보여줄 새로운 페이지가 필요할 때마다, 이 프레그먼트의 인스턴스를  생성 할 수 있다. \n\n```\nimport android.support.v4.app.Fragment;\n...\npublic class ScreenSlidePageFragment extends Fragment {\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n            Bundle savedInstanceState) {\n        ViewGroup rootView = (ViewGroup) inflater.inflate(\n                R.layout.fragment_screen_slide_page, container, false);\n\n        return rootView;\n    }\n}\n```\n\n## Add a ViewPager\n\n- ViewPager는 새로운 페이지를 보여주기 위해 PagerAdapters를 사용한다. \n- PagerAdapter 는 앞서 만든 프레그먼트 클래스를 사용한다.\n\n```\n<!-- activity_screen_slide.xml -->\n<android.support.v4.view.ViewPager\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/pager\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" />\n```\n\n## Create an Activity\n\n```\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\n...\npublic class ScreenSlidePagerActivity extends FragmentActivity {\n    /**\n     * The number of pages (wizard steps) to show in this demo.\n     */\n    private static final int NUM_PAGES = 5;\n\n    /**\n     * The pager widget, which handles animation and allows swiping horizontally to access previous\n     * and next wizard steps.\n     */\n    private ViewPager mPager;\n\n    /**\n     * The pager adapter, which provides the pages to the view pager widget.\n     */\n    private PagerAdapter mPagerAdapter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_screen_slide);\n\n        // Instantiate a ViewPager and a PagerAdapter.\n        mPager = (ViewPager) findViewById(R.id.pager);\n        mPagerAdapter = new ScreenSlidePagerAdapter(getSupportFragmentManager());\n        mPager.setAdapter(mPagerAdapter);\n    }\n\n    @Override\n    public void onBackPressed() {\n        if (mPager.getCurrentItem() == 0) {\n            // If the user is currently looking at the first step, allow the system to handle the\n            // Back button. This calls finish() on this activity and pops the back stack.\n            super.onBackPressed();\n        } else {\n            // Otherwise, select the previous step.\n            mPager.setCurrentItem(mPager.getCurrentItem() - 1);\n        }\n    }\n\n    /**\n     * A simple pager adapter that represents 5 ScreenSlidePageFragment objects, in\n     * sequence.\n     */\n    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {\n        public ScreenSlidePagerAdapter(FragmentManager fm) {\n            super(fm);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            return new ScreenSlidePageFragment();\n        }\n\n        @Override\n        public int getCount() {\n            return NUM_PAGES;\n        }\n    }\n}\n```\n\n","slug":"2018-01-07-ViewPager","published":1,"updated":"2018-04-16T04:12:59.038Z","comments":1,"photos":[],"link":"","_id":"cjp6k65b2006a31x7lv1gkeax","content":"<p><a href=\"https://developer.android.com/training/animation/screen-slide.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/training/animation/screen-slide.html</a></p>\n<h2 id=\"Create-the-Views\"><a href=\"#Create-the-Views\" class=\"headerlink\" title=\"Create the Views\"></a>Create the Views</h2><ul>\n<li>프레그먼트의 내용물로서 사용될 레이아웃</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- fragment_screen_slide_page.xml --&gt;</span><br><span class=\"line\">&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/content&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot; &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView style=&quot;?android:textAppearanceMedium&quot;</span><br><span class=\"line\">        android:padding=&quot;16dp&quot;</span><br><span class=\"line\">        android:lineSpacingMultiplier=&quot;1.2&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;@string/lorem_ipsum&quot; /&gt;</span><br><span class=\"line\">&lt;/ScrollView&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Create-the-Fragment\"><a href=\"#Create-the-Fragment\" class=\"headerlink\" title=\"Create the Fragment\"></a>Create the Fragment</h2><ul>\n<li>부모 엑티비티에서 사용자에게 보여줄 새로운 페이지가 필요할 때마다, 이 프레그먼트의 인스턴스를  생성 할 수 있다. </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import android.support.v4.app.Fragment;</span><br><span class=\"line\">...</span><br><span class=\"line\">public class ScreenSlidePageFragment extends Fragment &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public View onCreateView(LayoutInflater inflater, ViewGroup container,</span><br><span class=\"line\">            Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        ViewGroup rootView = (ViewGroup) inflater.inflate(</span><br><span class=\"line\">                R.layout.fragment_screen_slide_page, container, false);</span><br><span class=\"line\"></span><br><span class=\"line\">        return rootView;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Add-a-ViewPager\"><a href=\"#Add-a-ViewPager\" class=\"headerlink\" title=\"Add a ViewPager\"></a>Add a ViewPager</h2><ul>\n<li>ViewPager는 새로운 페이지를 보여주기 위해 PagerAdapters를 사용한다. </li>\n<li>PagerAdapter 는 앞서 만든 프레그먼트 클래스를 사용한다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- activity_screen_slide.xml --&gt;</span><br><span class=\"line\">&lt;android.support.v4.view.ViewPager</span><br><span class=\"line\">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/pager&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot; /&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Create-an-Activity\"><a href=\"#Create-an-Activity\" class=\"headerlink\" title=\"Create an Activity\"></a>Create an Activity</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import android.support.v4.app.Fragment;</span><br><span class=\"line\">import android.support.v4.app.FragmentManager;</span><br><span class=\"line\">...</span><br><span class=\"line\">public class ScreenSlidePagerActivity extends FragmentActivity &#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * The number of pages (wizard steps) to show in this demo.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static final int NUM_PAGES = 5;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * The pager widget, which handles animation and allows swiping horizontally to access previous</span><br><span class=\"line\">     * and next wizard steps.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private ViewPager mPager;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * The pager adapter, which provides the pages to the view pager widget.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private PagerAdapter mPagerAdapter;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_screen_slide);</span><br><span class=\"line\"></span><br><span class=\"line\">        // Instantiate a ViewPager and a PagerAdapter.</span><br><span class=\"line\">        mPager = (ViewPager) findViewById(R.id.pager);</span><br><span class=\"line\">        mPagerAdapter = new ScreenSlidePagerAdapter(getSupportFragmentManager());</span><br><span class=\"line\">        mPager.setAdapter(mPagerAdapter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void onBackPressed() &#123;</span><br><span class=\"line\">        if (mPager.getCurrentItem() == 0) &#123;</span><br><span class=\"line\">            // If the user is currently looking at the first step, allow the system to handle the</span><br><span class=\"line\">            // Back button. This calls finish() on this activity and pops the back stack.</span><br><span class=\"line\">            super.onBackPressed();</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            // Otherwise, select the previous step.</span><br><span class=\"line\">            mPager.setCurrentItem(mPager.getCurrentItem() - 1);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * A simple pager adapter that represents 5 ScreenSlidePageFragment objects, in</span><br><span class=\"line\">     * sequence.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter &#123;</span><br><span class=\"line\">        public ScreenSlidePagerAdapter(FragmentManager fm) &#123;</span><br><span class=\"line\">            super(fm);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public Fragment getItem(int position) &#123;</span><br><span class=\"line\">            return new ScreenSlidePageFragment();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public int getCount() &#123;</span><br><span class=\"line\">            return NUM_PAGES;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.android.com/training/animation/screen-slide.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/training/animation/screen-slide.html</a></p>\n<h2 id=\"Create-the-Views\"><a href=\"#Create-the-Views\" class=\"headerlink\" title=\"Create the Views\"></a>Create the Views</h2><ul>\n<li>프레그먼트의 내용물로서 사용될 레이아웃</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- fragment_screen_slide_page.xml --&gt;</span><br><span class=\"line\">&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/content&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot; &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView style=&quot;?android:textAppearanceMedium&quot;</span><br><span class=\"line\">        android:padding=&quot;16dp&quot;</span><br><span class=\"line\">        android:lineSpacingMultiplier=&quot;1.2&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;@string/lorem_ipsum&quot; /&gt;</span><br><span class=\"line\">&lt;/ScrollView&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Create-the-Fragment\"><a href=\"#Create-the-Fragment\" class=\"headerlink\" title=\"Create the Fragment\"></a>Create the Fragment</h2><ul>\n<li>부모 엑티비티에서 사용자에게 보여줄 새로운 페이지가 필요할 때마다, 이 프레그먼트의 인스턴스를  생성 할 수 있다. </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import android.support.v4.app.Fragment;</span><br><span class=\"line\">...</span><br><span class=\"line\">public class ScreenSlidePageFragment extends Fragment &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public View onCreateView(LayoutInflater inflater, ViewGroup container,</span><br><span class=\"line\">            Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        ViewGroup rootView = (ViewGroup) inflater.inflate(</span><br><span class=\"line\">                R.layout.fragment_screen_slide_page, container, false);</span><br><span class=\"line\"></span><br><span class=\"line\">        return rootView;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Add-a-ViewPager\"><a href=\"#Add-a-ViewPager\" class=\"headerlink\" title=\"Add a ViewPager\"></a>Add a ViewPager</h2><ul>\n<li>ViewPager는 새로운 페이지를 보여주기 위해 PagerAdapters를 사용한다. </li>\n<li>PagerAdapter 는 앞서 만든 프레그먼트 클래스를 사용한다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- activity_screen_slide.xml --&gt;</span><br><span class=\"line\">&lt;android.support.v4.view.ViewPager</span><br><span class=\"line\">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/pager&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot; /&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Create-an-Activity\"><a href=\"#Create-an-Activity\" class=\"headerlink\" title=\"Create an Activity\"></a>Create an Activity</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import android.support.v4.app.Fragment;</span><br><span class=\"line\">import android.support.v4.app.FragmentManager;</span><br><span class=\"line\">...</span><br><span class=\"line\">public class ScreenSlidePagerActivity extends FragmentActivity &#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * The number of pages (wizard steps) to show in this demo.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static final int NUM_PAGES = 5;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * The pager widget, which handles animation and allows swiping horizontally to access previous</span><br><span class=\"line\">     * and next wizard steps.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private ViewPager mPager;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * The pager adapter, which provides the pages to the view pager widget.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private PagerAdapter mPagerAdapter;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_screen_slide);</span><br><span class=\"line\"></span><br><span class=\"line\">        // Instantiate a ViewPager and a PagerAdapter.</span><br><span class=\"line\">        mPager = (ViewPager) findViewById(R.id.pager);</span><br><span class=\"line\">        mPagerAdapter = new ScreenSlidePagerAdapter(getSupportFragmentManager());</span><br><span class=\"line\">        mPager.setAdapter(mPagerAdapter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void onBackPressed() &#123;</span><br><span class=\"line\">        if (mPager.getCurrentItem() == 0) &#123;</span><br><span class=\"line\">            // If the user is currently looking at the first step, allow the system to handle the</span><br><span class=\"line\">            // Back button. This calls finish() on this activity and pops the back stack.</span><br><span class=\"line\">            super.onBackPressed();</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            // Otherwise, select the previous step.</span><br><span class=\"line\">            mPager.setCurrentItem(mPager.getCurrentItem() - 1);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * A simple pager adapter that represents 5 ScreenSlidePageFragment objects, in</span><br><span class=\"line\">     * sequence.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter &#123;</span><br><span class=\"line\">        public ScreenSlidePagerAdapter(FragmentManager fm) &#123;</span><br><span class=\"line\">            super(fm);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public Fragment getItem(int position) &#123;</span><br><span class=\"line\">            return new ScreenSlidePageFragment();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public int getCount() &#123;</span><br><span class=\"line\">            return NUM_PAGES;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"개근상","date":"2018-01-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1563>\n\n## 풀이\n\n- 어렵다\n- D[i][j][k] \n\n```\ni일, 지각 j번, 연속 결석 k번\n```\n\n- 오늘 출석 \n\t- 전날에 출석, 지각, 결석 중에 하나\n\t- D[i][j][0] += D[i-1][j][k] (0 ≤ k ≤ 2)\n\n- 오늘 지각\n\t- j 가 1\n\t- D[i][1][0] += d[i-1][0][k]\n\n- 오늘 결석\n\t- k < 2\n\t- D[i][j][k+1] += D[i-1][j][k]\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prize.png)\n\n\n\n\t \n","source":"_posts/2018-01-06-개근상.md","raw":"---\nlayout: post\ntitle:  \"개근상\"\ndate:   2018-01-06\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1563>\n\n## 풀이\n\n- 어렵다\n- D[i][j][k] \n\n```\ni일, 지각 j번, 연속 결석 k번\n```\n\n- 오늘 출석 \n\t- 전날에 출석, 지각, 결석 중에 하나\n\t- D[i][j][0] += D[i-1][j][k] (0 ≤ k ≤ 2)\n\n- 오늘 지각\n\t- j 가 1\n\t- D[i][1][0] += d[i-1][0][k]\n\n- 오늘 결석\n\t- k < 2\n\t- D[i][j][k+1] += D[i-1][j][k]\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prize.png)\n\n\n\n\t \n","slug":"2018-01-06-개근상","published":1,"updated":"2018-04-16T04:12:05.704Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ba006c31x7ebup1aji","content":"<p><a href=\"https://www.acmicpc.net/problem/1563\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1563</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>어렵다</li>\n<li>D[i][j][k] </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i일, 지각 j번, 연속 결석 k번</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>오늘 출석 </p>\n<ul>\n<li>전날에 출석, 지각, 결석 중에 하나</li>\n<li>D[i][j][0] += D[i-1][j][k] (0 ≤ k ≤ 2)</li>\n</ul>\n</li>\n<li><p>오늘 지각</p>\n<ul>\n<li>j 가 1</li>\n<li>D[i][1][0] += d[i-1][0][k]</li>\n</ul>\n</li>\n<li><p>오늘 결석</p>\n<ul>\n<li>k &lt; 2</li>\n<li>D[i][j][k+1] += D[i-1][j][k]</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prize.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1563\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1563</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>어렵다</li>\n<li>D[i][j][k] </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i일, 지각 j번, 연속 결석 k번</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>오늘 출석 </p>\n<ul>\n<li>전날에 출석, 지각, 결석 중에 하나</li>\n<li>D[i][j][0] += D[i-1][j][k] (0 ≤ k ≤ 2)</li>\n</ul>\n</li>\n<li><p>오늘 지각</p>\n<ul>\n<li>j 가 1</li>\n<li>D[i][1][0] += d[i-1][0][k]</li>\n</ul>\n</li>\n<li><p>오늘 결석</p>\n<ul>\n<li>k &lt; 2</li>\n<li>D[i][j][k+1] += D[i-1][j][k]</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prize.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"retrofit","date":"2018-01-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png","_content":"\n<http://devflow.github.io/retrofit-kr/>\n\n- retrofit\n\t- 안드로이드와 자바를 위한 type-safe HTTP client \n- REST API를 구현해놓았음 \n\t-  GET, POST, PUT, DELETED 등을 전달하면 \n\t-  서버에서 처리 후 \n\t-  xml, json, text, rss 등으로 응답을 제공받을 수 있는 형태\n-  build.gradle에 다음을 추가\n\n\t```\n\tcompile 'com.squareup.retrofit2:retrofit:(insert latest version)'\n\t```\n- retrofi 사용방법\n\t- interface 정의\n\t- 이 interface class를 retrofit에 초기화\n\t- HTTP 통신을 할 준비 완료\n\n- interface 정의\n\n\t```\n\tpublic interface GitHubService {\n  \t@GET(\"/users/{user}/repos\")\n  \tCall<List<Repo>> listRepos(@Path(\"user\") String user);\n\t}\n\t```\n\n- 이 interface class를 retrofit에 초기화\n\n\t```\n\tRetrofit retrofit = new Retrofit.Builder()\n    .baseUrl(\"https://api.github.com\")\n    .build();\n\n\tGitHubService service = retrofit.create(GitHubService.class);\n\t```\n\n\n\n\t\n\n","source":"_posts/2018-01-07-retrofit.md","raw":"---\nlayout: post\ntitle:  \"retrofit\"\ndate:   2018-01-07\ncategories: android\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png\n---\n\n<http://devflow.github.io/retrofit-kr/>\n\n- retrofit\n\t- 안드로이드와 자바를 위한 type-safe HTTP client \n- REST API를 구현해놓았음 \n\t-  GET, POST, PUT, DELETED 등을 전달하면 \n\t-  서버에서 처리 후 \n\t-  xml, json, text, rss 등으로 응답을 제공받을 수 있는 형태\n-  build.gradle에 다음을 추가\n\n\t```\n\tcompile 'com.squareup.retrofit2:retrofit:(insert latest version)'\n\t```\n- retrofi 사용방법\n\t- interface 정의\n\t- 이 interface class를 retrofit에 초기화\n\t- HTTP 통신을 할 준비 완료\n\n- interface 정의\n\n\t```\n\tpublic interface GitHubService {\n  \t@GET(\"/users/{user}/repos\")\n  \tCall<List<Repo>> listRepos(@Path(\"user\") String user);\n\t}\n\t```\n\n- 이 interface class를 retrofit에 초기화\n\n\t```\n\tRetrofit retrofit = new Retrofit.Builder()\n    .baseUrl(\"https://api.github.com\")\n    .build();\n\n\tGitHubService service = retrofit.create(GitHubService.class);\n\t```\n\n\n\n\t\n\n","slug":"2018-01-07-retrofit","published":1,"updated":"2018-04-16T04:12:54.685Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bc006e31x726wabgau","content":"<p><a href=\"http://devflow.github.io/retrofit-kr/\" target=\"_blank\" rel=\"noopener\">http://devflow.github.io/retrofit-kr/</a></p>\n<ul>\n<li>retrofit<ul>\n<li>안드로이드와 자바를 위한 type-safe HTTP client </li>\n</ul>\n</li>\n<li>REST API를 구현해놓았음 <ul>\n<li>GET, POST, PUT, DELETED 등을 전달하면 </li>\n<li>서버에서 처리 후 </li>\n<li>xml, json, text, rss 등으로 응답을 제공받을 수 있는 형태</li>\n</ul>\n</li>\n<li><p>build.gradle에 다음을 추가</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compile &apos;com.squareup.retrofit2:retrofit:(insert latest version)&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>retrofi 사용방법</p>\n<ul>\n<li>interface 정의</li>\n<li>이 interface class를 retrofit에 초기화</li>\n<li>HTTP 통신을 할 준비 완료</li>\n</ul>\n</li>\n<li><p>interface 정의</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface GitHubService &#123;</span><br><span class=\"line\"> \t@GET(&quot;/users/&#123;user&#125;/repos&quot;)</span><br><span class=\"line\"> \tCall&lt;List&lt;Repo&gt;&gt; listRepos(@Path(&quot;user&quot;) String user);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>이 interface class를 retrofit에 초기화</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Retrofit retrofit = new Retrofit.Builder()</span><br><span class=\"line\">   .baseUrl(&quot;https://api.github.com&quot;)</span><br><span class=\"line\">   .build();</span><br><span class=\"line\"></span><br><span class=\"line\">GitHubService service = retrofit.create(GitHubService.class);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"http://devflow.github.io/retrofit-kr/\" target=\"_blank\" rel=\"noopener\">http://devflow.github.io/retrofit-kr/</a></p>\n<ul>\n<li>retrofit<ul>\n<li>안드로이드와 자바를 위한 type-safe HTTP client </li>\n</ul>\n</li>\n<li>REST API를 구현해놓았음 <ul>\n<li>GET, POST, PUT, DELETED 등을 전달하면 </li>\n<li>서버에서 처리 후 </li>\n<li>xml, json, text, rss 등으로 응답을 제공받을 수 있는 형태</li>\n</ul>\n</li>\n<li><p>build.gradle에 다음을 추가</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compile &apos;com.squareup.retrofit2:retrofit:(insert latest version)&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>retrofi 사용방법</p>\n<ul>\n<li>interface 정의</li>\n<li>이 interface class를 retrofit에 초기화</li>\n<li>HTTP 통신을 할 준비 완료</li>\n</ul>\n</li>\n<li><p>interface 정의</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface GitHubService &#123;</span><br><span class=\"line\"> \t@GET(&quot;/users/&#123;user&#125;/repos&quot;)</span><br><span class=\"line\"> \tCall&lt;List&lt;Repo&gt;&gt; listRepos(@Path(&quot;user&quot;) String user);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>이 interface class를 retrofit에 초기화</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Retrofit retrofit = new Retrofit.Builder()</span><br><span class=\"line\">   .baseUrl(&quot;https://api.github.com&quot;)</span><br><span class=\"line\">   .build();</span><br><span class=\"line\"></span><br><span class=\"line\">GitHubService service = retrofit.create(GitHubService.class);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"layout":"post","title":"activity life cycle","date":"2018-01-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png","_content":"\n<https://developer.android.com/guide/components/activities/activity-lifecycle.html>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/life.png)\t\n\n- 엑티비티가 새로운 상태에 들어갈때, 시스템은 콜백을 호출한다.\n\n- 엑티비티의 복잡성에 따라서, 반드시 라이프 사이클 매소드를 실행할 필요는 없다. 하지만 유저 익스페트에 따라 앱이 동작하기 위해서는 라이프사이클을 이해하고 실행해야한다.\n\n##  onCreate()\n\n- 시스템이 처음으로 엑티비티를 생성할 때 실행하는 콜백\n- 리스트에 데이터를 바인딩, 백그라운드 스레드를 초기화, 클레스 스코프 변수를 인스터스화\n- savedInstanceState를 파라미터로 받음. savedInstanceState는 Bundle object.\n- Bundle object는 엑티비티의 예전에 저장된 상태를 contain. 그러므로, 엑티비티가 예전에 존재한적이 없다면, 즉 처음으로 만들어졌다면 Bundle object의 값은 null.\n- onCreate() 메소드가 실행을 마친후에, 엑티비티는 Started state에 들어감\n- 그리고 시스템은  onStart() 메소드를 실행\n\n## onStart()\n\n- 엑티비티가  Started state에 들어갈때, 시스템은 이 콜백을 호출\n- 유저에게 엑티비티를 보여지게 만듦\n- 즉, 엑티비티가 foreground에 들어가기 위한 준비단계, interactive 되게 하는 준비단계.\n- UI에 반영되는 변화들을 monitor 하는 BroadcastReceiver을 등록\n- onStart() 메소드가 실행을 마친후에, 엑티비티는 Resumed state에 들어감\n- 그리고 onResume() 메소드를 실행\n\n## onResume()\n\n- 엑티비티가 Resumed state에 들어갈때, 엑티비티는 foreground에 온다.\n- 그리고 onResume() 콜백을 호출\n- Resumed state 에서 앱은 사용자와 상호작용한다.\n- 앱의 포커스를 잃을 때까지 계속 이 상태 유지. \n- 예를 들면, 전화 오기전까지, 다른 엑티비티로 이동하기 전까지, 디바이스의 화면이 off 되기 전까지.\n- 이와 같은  interruptive event 가 발생하면,  Paused state에 들어가고\n- onPause() 콜백을 호출\n- 다시 엑티비티가 Paused state에서 Resumed state에 들어오면, 시스템은 다시  onResume() 메소드를 호출\n\n## onPause()\n\n- 유저가 엑티비티를 떠난다는 표시로서 이 콜백을 호출.\n- brief하다. 그러므로, 저장 operations 을 수행하기 위한 시간이 부족\n- 따라서, 유저 데이터를 저장하고 database transactions 와 같은 작업을 onPause()가 끝나기 전에 모두 완수를 할 수 없다.\n- onStop()에서 이런 작업을 함\n\n## onStop()\n\n- 엑티비티가 사용자에게 더이상 보여이지 않을 때 Stopped state에 들어가고 onStop() callback을 호출\n- 예를들면,  새로 launched 된 엑티비티가 전체 화면을 덮을 때.\n- 엑티비티가 running을 마치고 terminated 되려고 할때\n- 앱은 거의 모든 자원을 release해야함\n- 예를 들면,  UI에 영향을 끼치는 변화들을 listen하기 위해 등록한 BroadcastReceiver을 onStart() 에서 등록했다면, onStop()에서 unregister 할 수 있다.\n- 또한 메모리를 누수할지도 모르는 자원들을 release\n- 또한 cpu 사용량이 많은 shutdown operations을 수행하기 위해 onStop()을 사용\n- 예를들면, database에 정보를 저장하기 위한 시간이 충분하지 않을때, onStop()에서 가능\n- Stopped state에 들어가도, 메모리에 아직 엑티비티 객체가 남아있음.\n- 모든 상태와 맴버 정보를 가지고 있지만, window manager에 붙어있지는 않음\n- Stopped state 에서 엑티비티는 사용자와 상호작용하기위해 돌아오거나, 아예 running을 멈추고 사라진다.\n- 다시 돌아오면  onRestart() 호출, 사라지면 onDestroy()  호출\n\n## onDestroy()\n\n- finish()를 호출하거나, 시스템이 임시적으로 프로세스를 destroy 시킬때 이 콜백을 호출 \n- onStop()에서 아직 releases되지 않은 모든 자원들을 releases\n\n\n\n\n\t\n\n","source":"_posts/2018-01-07-activity life cycle.md","raw":"---\nlayout: post\ntitle:  \"activity life cycle\"\ndate:   2018-01-07\ncategories: android\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png\n---\n\n<https://developer.android.com/guide/components/activities/activity-lifecycle.html>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/life.png)\t\n\n- 엑티비티가 새로운 상태에 들어갈때, 시스템은 콜백을 호출한다.\n\n- 엑티비티의 복잡성에 따라서, 반드시 라이프 사이클 매소드를 실행할 필요는 없다. 하지만 유저 익스페트에 따라 앱이 동작하기 위해서는 라이프사이클을 이해하고 실행해야한다.\n\n##  onCreate()\n\n- 시스템이 처음으로 엑티비티를 생성할 때 실행하는 콜백\n- 리스트에 데이터를 바인딩, 백그라운드 스레드를 초기화, 클레스 스코프 변수를 인스터스화\n- savedInstanceState를 파라미터로 받음. savedInstanceState는 Bundle object.\n- Bundle object는 엑티비티의 예전에 저장된 상태를 contain. 그러므로, 엑티비티가 예전에 존재한적이 없다면, 즉 처음으로 만들어졌다면 Bundle object의 값은 null.\n- onCreate() 메소드가 실행을 마친후에, 엑티비티는 Started state에 들어감\n- 그리고 시스템은  onStart() 메소드를 실행\n\n## onStart()\n\n- 엑티비티가  Started state에 들어갈때, 시스템은 이 콜백을 호출\n- 유저에게 엑티비티를 보여지게 만듦\n- 즉, 엑티비티가 foreground에 들어가기 위한 준비단계, interactive 되게 하는 준비단계.\n- UI에 반영되는 변화들을 monitor 하는 BroadcastReceiver을 등록\n- onStart() 메소드가 실행을 마친후에, 엑티비티는 Resumed state에 들어감\n- 그리고 onResume() 메소드를 실행\n\n## onResume()\n\n- 엑티비티가 Resumed state에 들어갈때, 엑티비티는 foreground에 온다.\n- 그리고 onResume() 콜백을 호출\n- Resumed state 에서 앱은 사용자와 상호작용한다.\n- 앱의 포커스를 잃을 때까지 계속 이 상태 유지. \n- 예를 들면, 전화 오기전까지, 다른 엑티비티로 이동하기 전까지, 디바이스의 화면이 off 되기 전까지.\n- 이와 같은  interruptive event 가 발생하면,  Paused state에 들어가고\n- onPause() 콜백을 호출\n- 다시 엑티비티가 Paused state에서 Resumed state에 들어오면, 시스템은 다시  onResume() 메소드를 호출\n\n## onPause()\n\n- 유저가 엑티비티를 떠난다는 표시로서 이 콜백을 호출.\n- brief하다. 그러므로, 저장 operations 을 수행하기 위한 시간이 부족\n- 따라서, 유저 데이터를 저장하고 database transactions 와 같은 작업을 onPause()가 끝나기 전에 모두 완수를 할 수 없다.\n- onStop()에서 이런 작업을 함\n\n## onStop()\n\n- 엑티비티가 사용자에게 더이상 보여이지 않을 때 Stopped state에 들어가고 onStop() callback을 호출\n- 예를들면,  새로 launched 된 엑티비티가 전체 화면을 덮을 때.\n- 엑티비티가 running을 마치고 terminated 되려고 할때\n- 앱은 거의 모든 자원을 release해야함\n- 예를 들면,  UI에 영향을 끼치는 변화들을 listen하기 위해 등록한 BroadcastReceiver을 onStart() 에서 등록했다면, onStop()에서 unregister 할 수 있다.\n- 또한 메모리를 누수할지도 모르는 자원들을 release\n- 또한 cpu 사용량이 많은 shutdown operations을 수행하기 위해 onStop()을 사용\n- 예를들면, database에 정보를 저장하기 위한 시간이 충분하지 않을때, onStop()에서 가능\n- Stopped state에 들어가도, 메모리에 아직 엑티비티 객체가 남아있음.\n- 모든 상태와 맴버 정보를 가지고 있지만, window manager에 붙어있지는 않음\n- Stopped state 에서 엑티비티는 사용자와 상호작용하기위해 돌아오거나, 아예 running을 멈추고 사라진다.\n- 다시 돌아오면  onRestart() 호출, 사라지면 onDestroy()  호출\n\n## onDestroy()\n\n- finish()를 호출하거나, 시스템이 임시적으로 프로세스를 destroy 시킬때 이 콜백을 호출 \n- onStop()에서 아직 releases되지 않은 모든 자원들을 releases\n\n\n\n\n\t\n\n","slug":"2018-01-07-activity life cycle","published":1,"updated":"2018-04-16T04:12:45.396Z","comments":1,"photos":[],"link":"","_id":"cjp6k65be006h31x7e60g3ywd","content":"<p><a href=\"https://developer.android.com/guide/components/activities/activity-lifecycle.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/guide/components/activities/activity-lifecycle.html</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/life.png\" alt=\"img\">    </p>\n<ul>\n<li><p>엑티비티가 새로운 상태에 들어갈때, 시스템은 콜백을 호출한다.</p>\n</li>\n<li><p>엑티비티의 복잡성에 따라서, 반드시 라이프 사이클 매소드를 실행할 필요는 없다. 하지만 유저 익스페트에 따라 앱이 동작하기 위해서는 라이프사이클을 이해하고 실행해야한다.</p>\n</li>\n</ul>\n<h2 id=\"onCreate\"><a href=\"#onCreate\" class=\"headerlink\" title=\"onCreate()\"></a>onCreate()</h2><ul>\n<li>시스템이 처음으로 엑티비티를 생성할 때 실행하는 콜백</li>\n<li>리스트에 데이터를 바인딩, 백그라운드 스레드를 초기화, 클레스 스코프 변수를 인스터스화</li>\n<li>savedInstanceState를 파라미터로 받음. savedInstanceState는 Bundle object.</li>\n<li>Bundle object는 엑티비티의 예전에 저장된 상태를 contain. 그러므로, 엑티비티가 예전에 존재한적이 없다면, 즉 처음으로 만들어졌다면 Bundle object의 값은 null.</li>\n<li>onCreate() 메소드가 실행을 마친후에, 엑티비티는 Started state에 들어감</li>\n<li>그리고 시스템은  onStart() 메소드를 실행</li>\n</ul>\n<h2 id=\"onStart\"><a href=\"#onStart\" class=\"headerlink\" title=\"onStart()\"></a>onStart()</h2><ul>\n<li>엑티비티가  Started state에 들어갈때, 시스템은 이 콜백을 호출</li>\n<li>유저에게 엑티비티를 보여지게 만듦</li>\n<li>즉, 엑티비티가 foreground에 들어가기 위한 준비단계, interactive 되게 하는 준비단계.</li>\n<li>UI에 반영되는 변화들을 monitor 하는 BroadcastReceiver을 등록</li>\n<li>onStart() 메소드가 실행을 마친후에, 엑티비티는 Resumed state에 들어감</li>\n<li>그리고 onResume() 메소드를 실행</li>\n</ul>\n<h2 id=\"onResume\"><a href=\"#onResume\" class=\"headerlink\" title=\"onResume()\"></a>onResume()</h2><ul>\n<li>엑티비티가 Resumed state에 들어갈때, 엑티비티는 foreground에 온다.</li>\n<li>그리고 onResume() 콜백을 호출</li>\n<li>Resumed state 에서 앱은 사용자와 상호작용한다.</li>\n<li>앱의 포커스를 잃을 때까지 계속 이 상태 유지. </li>\n<li>예를 들면, 전화 오기전까지, 다른 엑티비티로 이동하기 전까지, 디바이스의 화면이 off 되기 전까지.</li>\n<li>이와 같은  interruptive event 가 발생하면,  Paused state에 들어가고</li>\n<li>onPause() 콜백을 호출</li>\n<li>다시 엑티비티가 Paused state에서 Resumed state에 들어오면, 시스템은 다시  onResume() 메소드를 호출</li>\n</ul>\n<h2 id=\"onPause\"><a href=\"#onPause\" class=\"headerlink\" title=\"onPause()\"></a>onPause()</h2><ul>\n<li>유저가 엑티비티를 떠난다는 표시로서 이 콜백을 호출.</li>\n<li>brief하다. 그러므로, 저장 operations 을 수행하기 위한 시간이 부족</li>\n<li>따라서, 유저 데이터를 저장하고 database transactions 와 같은 작업을 onPause()가 끝나기 전에 모두 완수를 할 수 없다.</li>\n<li>onStop()에서 이런 작업을 함</li>\n</ul>\n<h2 id=\"onStop\"><a href=\"#onStop\" class=\"headerlink\" title=\"onStop()\"></a>onStop()</h2><ul>\n<li>엑티비티가 사용자에게 더이상 보여이지 않을 때 Stopped state에 들어가고 onStop() callback을 호출</li>\n<li>예를들면,  새로 launched 된 엑티비티가 전체 화면을 덮을 때.</li>\n<li>엑티비티가 running을 마치고 terminated 되려고 할때</li>\n<li>앱은 거의 모든 자원을 release해야함</li>\n<li>예를 들면,  UI에 영향을 끼치는 변화들을 listen하기 위해 등록한 BroadcastReceiver을 onStart() 에서 등록했다면, onStop()에서 unregister 할 수 있다.</li>\n<li>또한 메모리를 누수할지도 모르는 자원들을 release</li>\n<li>또한 cpu 사용량이 많은 shutdown operations을 수행하기 위해 onStop()을 사용</li>\n<li>예를들면, database에 정보를 저장하기 위한 시간이 충분하지 않을때, onStop()에서 가능</li>\n<li>Stopped state에 들어가도, 메모리에 아직 엑티비티 객체가 남아있음.</li>\n<li>모든 상태와 맴버 정보를 가지고 있지만, window manager에 붙어있지는 않음</li>\n<li>Stopped state 에서 엑티비티는 사용자와 상호작용하기위해 돌아오거나, 아예 running을 멈추고 사라진다.</li>\n<li>다시 돌아오면  onRestart() 호출, 사라지면 onDestroy()  호출</li>\n</ul>\n<h2 id=\"onDestroy\"><a href=\"#onDestroy\" class=\"headerlink\" title=\"onDestroy()\"></a>onDestroy()</h2><ul>\n<li>finish()를 호출하거나, 시스템이 임시적으로 프로세스를 destroy 시킬때 이 콜백을 호출 </li>\n<li>onStop()에서 아직 releases되지 않은 모든 자원들을 releases</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.android.com/guide/components/activities/activity-lifecycle.html\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/guide/components/activities/activity-lifecycle.html</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/life.png\" alt=\"img\">    </p>\n<ul>\n<li><p>엑티비티가 새로운 상태에 들어갈때, 시스템은 콜백을 호출한다.</p>\n</li>\n<li><p>엑티비티의 복잡성에 따라서, 반드시 라이프 사이클 매소드를 실행할 필요는 없다. 하지만 유저 익스페트에 따라 앱이 동작하기 위해서는 라이프사이클을 이해하고 실행해야한다.</p>\n</li>\n</ul>\n<h2 id=\"onCreate\"><a href=\"#onCreate\" class=\"headerlink\" title=\"onCreate()\"></a>onCreate()</h2><ul>\n<li>시스템이 처음으로 엑티비티를 생성할 때 실행하는 콜백</li>\n<li>리스트에 데이터를 바인딩, 백그라운드 스레드를 초기화, 클레스 스코프 변수를 인스터스화</li>\n<li>savedInstanceState를 파라미터로 받음. savedInstanceState는 Bundle object.</li>\n<li>Bundle object는 엑티비티의 예전에 저장된 상태를 contain. 그러므로, 엑티비티가 예전에 존재한적이 없다면, 즉 처음으로 만들어졌다면 Bundle object의 값은 null.</li>\n<li>onCreate() 메소드가 실행을 마친후에, 엑티비티는 Started state에 들어감</li>\n<li>그리고 시스템은  onStart() 메소드를 실행</li>\n</ul>\n<h2 id=\"onStart\"><a href=\"#onStart\" class=\"headerlink\" title=\"onStart()\"></a>onStart()</h2><ul>\n<li>엑티비티가  Started state에 들어갈때, 시스템은 이 콜백을 호출</li>\n<li>유저에게 엑티비티를 보여지게 만듦</li>\n<li>즉, 엑티비티가 foreground에 들어가기 위한 준비단계, interactive 되게 하는 준비단계.</li>\n<li>UI에 반영되는 변화들을 monitor 하는 BroadcastReceiver을 등록</li>\n<li>onStart() 메소드가 실행을 마친후에, 엑티비티는 Resumed state에 들어감</li>\n<li>그리고 onResume() 메소드를 실행</li>\n</ul>\n<h2 id=\"onResume\"><a href=\"#onResume\" class=\"headerlink\" title=\"onResume()\"></a>onResume()</h2><ul>\n<li>엑티비티가 Resumed state에 들어갈때, 엑티비티는 foreground에 온다.</li>\n<li>그리고 onResume() 콜백을 호출</li>\n<li>Resumed state 에서 앱은 사용자와 상호작용한다.</li>\n<li>앱의 포커스를 잃을 때까지 계속 이 상태 유지. </li>\n<li>예를 들면, 전화 오기전까지, 다른 엑티비티로 이동하기 전까지, 디바이스의 화면이 off 되기 전까지.</li>\n<li>이와 같은  interruptive event 가 발생하면,  Paused state에 들어가고</li>\n<li>onPause() 콜백을 호출</li>\n<li>다시 엑티비티가 Paused state에서 Resumed state에 들어오면, 시스템은 다시  onResume() 메소드를 호출</li>\n</ul>\n<h2 id=\"onPause\"><a href=\"#onPause\" class=\"headerlink\" title=\"onPause()\"></a>onPause()</h2><ul>\n<li>유저가 엑티비티를 떠난다는 표시로서 이 콜백을 호출.</li>\n<li>brief하다. 그러므로, 저장 operations 을 수행하기 위한 시간이 부족</li>\n<li>따라서, 유저 데이터를 저장하고 database transactions 와 같은 작업을 onPause()가 끝나기 전에 모두 완수를 할 수 없다.</li>\n<li>onStop()에서 이런 작업을 함</li>\n</ul>\n<h2 id=\"onStop\"><a href=\"#onStop\" class=\"headerlink\" title=\"onStop()\"></a>onStop()</h2><ul>\n<li>엑티비티가 사용자에게 더이상 보여이지 않을 때 Stopped state에 들어가고 onStop() callback을 호출</li>\n<li>예를들면,  새로 launched 된 엑티비티가 전체 화면을 덮을 때.</li>\n<li>엑티비티가 running을 마치고 terminated 되려고 할때</li>\n<li>앱은 거의 모든 자원을 release해야함</li>\n<li>예를 들면,  UI에 영향을 끼치는 변화들을 listen하기 위해 등록한 BroadcastReceiver을 onStart() 에서 등록했다면, onStop()에서 unregister 할 수 있다.</li>\n<li>또한 메모리를 누수할지도 모르는 자원들을 release</li>\n<li>또한 cpu 사용량이 많은 shutdown operations을 수행하기 위해 onStop()을 사용</li>\n<li>예를들면, database에 정보를 저장하기 위한 시간이 충분하지 않을때, onStop()에서 가능</li>\n<li>Stopped state에 들어가도, 메모리에 아직 엑티비티 객체가 남아있음.</li>\n<li>모든 상태와 맴버 정보를 가지고 있지만, window manager에 붙어있지는 않음</li>\n<li>Stopped state 에서 엑티비티는 사용자와 상호작용하기위해 돌아오거나, 아예 running을 멈추고 사라진다.</li>\n<li>다시 돌아오면  onRestart() 호출, 사라지면 onDestroy()  호출</li>\n</ul>\n<h2 id=\"onDestroy\"><a href=\"#onDestroy\" class=\"headerlink\" title=\"onDestroy()\"></a>onDestroy()</h2><ul>\n<li>finish()를 호출하거나, 시스템이 임시적으로 프로세스를 destroy 시킬때 이 콜백을 호출 </li>\n<li>onStop()에서 아직 releases되지 않은 모든 자원들을 releases</li>\n</ul>\n"},{"layout":"post","title":"조짜기","date":"2018-01-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2229>\n\n## 풀이\n\n- d[i]\n\n\t- max(j<=i)(dp[j-1]+max(a[j...i])-min(a[j...i]))\n\n- 뒤에 min을 왜 빼야하는 걸까?\n","source":"_posts/2018-01-08-조짜기.md","raw":"---\nlayout: post\ntitle:  \"조짜기\"\ndate:   2018-01-08\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2229>\n\n## 풀이\n\n- d[i]\n\n\t- max(j<=i)(dp[j-1]+max(a[j...i])-min(a[j...i]))\n\n- 뒤에 min을 왜 빼야하는 걸까?\n","slug":"2018-01-08-조짜기","published":1,"updated":"2018-04-16T04:13:02.977Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bg006j31x7i7xr7b07","content":"<p><a href=\"https://www.acmicpc.net/problem/2229\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2229</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>d[i]</p>\n<ul>\n<li>max(j&lt;=i)(dp[j-1]+max(a[j…i])-min(a[j…i]))</li>\n</ul>\n</li>\n<li><p>뒤에 min을 왜 빼야하는 걸까?</p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2229\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2229</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>d[i]</p>\n<ul>\n<li>max(j&lt;=i)(dp[j-1]+max(a[j…i])-min(a[j…i]))</li>\n</ul>\n</li>\n<li><p>뒤에 min을 왜 빼야하는 걸까?</p>\n</li>\n</ul>\n"},{"layout":"post","title":"택시기하학","date":"2018-01-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/3053>\n\n## 풀이\n\n- 단순 수학\n- T1(x1,y1), T2(x2,y2) 사이의 거리\n\t- D(T1,T2) = |x1-x2| + |y1-y2|\n\n\n\n","source":"_posts/2018-01-12-택시 기하학.md","raw":"---\nlayout: post\ntitle:  \"택시기하학\"\ndate:   2018-01-12\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/3053>\n\n## 풀이\n\n- 단순 수학\n- T1(x1,y1), T2(x2,y2) 사이의 거리\n\t- D(T1,T2) = |x1-x2| + |y1-y2|\n\n\n\n","slug":"2018-01-12-택시 기하학","published":1,"updated":"2018-04-16T04:13:24.765Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bh006l31x74abvt6jl","content":"<p><a href=\"https://www.acmicpc.net/problem/3053\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3053</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>단순 수학</li>\n<li>T1(x1,y1), T2(x2,y2) 사이의 거리<ul>\n<li>D(T1,T2) = |x1-x2| + |y1-y2|</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/3053\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3053</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>단순 수학</li>\n<li>T1(x1,y1), T2(x2,y2) 사이의 거리<ul>\n<li>D(T1,T2) = |x1-x2| + |y1-y2|</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"컵홀더","date":"2018-01-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2810>\n\n## 틀린 풀이\n\n- 가능한 컵홀더의 개수를 count\n- S L 사이에, LL LL 사이에\n\n## 틀린 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/holder.png)\n\n## 맞는 풀이\n\n- 커플의 수 만큼 홀더를 사용하지 못하는 사람이 생김\n- 하지만 양 끝에 홀더가 있기 때문에, \n- 커플이 있으면\n- 커플수 - 1 만큼 홀더를 사용하지 못함\n\n## 맞는 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cHolder.png)\n","source":"_posts/2018-01-09-컵홀더.md","raw":"---\nlayout: post\ntitle:  \"컵홀더\"\ndate:   2018-01-09\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2810>\n\n## 틀린 풀이\n\n- 가능한 컵홀더의 개수를 count\n- S L 사이에, LL LL 사이에\n\n## 틀린 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/holder.png)\n\n## 맞는 풀이\n\n- 커플의 수 만큼 홀더를 사용하지 못하는 사람이 생김\n- 하지만 양 끝에 홀더가 있기 때문에, \n- 커플이 있으면\n- 커플수 - 1 만큼 홀더를 사용하지 못함\n\n## 맞는 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cHolder.png)\n","slug":"2018-01-09-컵홀더","published":1,"updated":"2018-04-16T04:13:06.937Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bi006n31x7ie4l3lr2","content":"<p><a href=\"https://www.acmicpc.net/problem/2810\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2810</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>가능한 컵홀더의 개수를 count</li>\n<li>S L 사이에, LL LL 사이에</li>\n</ul>\n<h2 id=\"틀린-결과\"><a href=\"#틀린-결과\" class=\"headerlink\" title=\"틀린 결과\"></a>틀린 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/holder.png\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ul>\n<li>커플의 수 만큼 홀더를 사용하지 못하는 사람이 생김</li>\n<li>하지만 양 끝에 홀더가 있기 때문에, </li>\n<li>커플이 있으면</li>\n<li>커플수 - 1 만큼 홀더를 사용하지 못함</li>\n</ul>\n<h2 id=\"맞는-결과\"><a href=\"#맞는-결과\" class=\"headerlink\" title=\"맞는 결과\"></a>맞는 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cHolder.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2810\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2810</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>가능한 컵홀더의 개수를 count</li>\n<li>S L 사이에, LL LL 사이에</li>\n</ul>\n<h2 id=\"틀린-결과\"><a href=\"#틀린-결과\" class=\"headerlink\" title=\"틀린 결과\"></a>틀린 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/holder.png\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ul>\n<li>커플의 수 만큼 홀더를 사용하지 못하는 사람이 생김</li>\n<li>하지만 양 끝에 홀더가 있기 때문에, </li>\n<li>커플이 있으면</li>\n<li>커플수 - 1 만큼 홀더를 사용하지 못함</li>\n</ul>\n<h2 id=\"맞는-결과\"><a href=\"#맞는-결과\" class=\"headerlink\" title=\"맞는 결과\"></a>맞는 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cHolder.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"소음","date":"2018-01-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2935>\n\n## 풀이\n\n- 처음에 런타임에러 나옴\n- 런타임 에러 이유 \n\t- 수를 단순 입력 후에 단순 출력했음\n\t- 문제의 조건에 숫자는 최대 100자리\n\t- 하지만, \n\t- int 의 범위 : –2,147,483,648 ~ 2,147,483,647\n\t- long long 의 범위 : –9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807\n\t- 따라서 단순 입력을 하면 100자리를 모두 담을 수 없음\n- 해결\n\t- 문자로 입력받고 문자를 출력\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/noise.png)\n","source":"_posts/2018-01-11-소음.md","raw":"---\nlayout: post\ntitle:  \"소음\"\ndate:   2018-01-11\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2935>\n\n## 풀이\n\n- 처음에 런타임에러 나옴\n- 런타임 에러 이유 \n\t- 수를 단순 입력 후에 단순 출력했음\n\t- 문제의 조건에 숫자는 최대 100자리\n\t- 하지만, \n\t- int 의 범위 : –2,147,483,648 ~ 2,147,483,647\n\t- long long 의 범위 : –9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807\n\t- 따라서 단순 입력을 하면 100자리를 모두 담을 수 없음\n- 해결\n\t- 문자로 입력받고 문자를 출력\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/noise.png)\n","slug":"2018-01-11-소음","published":1,"updated":"2018-04-16T04:13:20.492Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bj006p31x7pfeummu5","content":"<p><a href=\"https://www.acmicpc.net/problem/2935\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2935</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>처음에 런타임에러 나옴</li>\n<li>런타임 에러 이유 <ul>\n<li>수를 단순 입력 후에 단순 출력했음</li>\n<li>문제의 조건에 숫자는 최대 100자리</li>\n<li>하지만, </li>\n<li>int 의 범위 : –2,147,483,648 ~ 2,147,483,647</li>\n<li>long long 의 범위 : –9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807</li>\n<li>따라서 단순 입력을 하면 100자리를 모두 담을 수 없음</li>\n</ul>\n</li>\n<li>해결<ul>\n<li>문자로 입력받고 문자를 출력</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/noise.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2935\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2935</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>처음에 런타임에러 나옴</li>\n<li>런타임 에러 이유 <ul>\n<li>수를 단순 입력 후에 단순 출력했음</li>\n<li>문제의 조건에 숫자는 최대 100자리</li>\n<li>하지만, </li>\n<li>int 의 범위 : –2,147,483,648 ~ 2,147,483,647</li>\n<li>long long 의 범위 : –9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807</li>\n<li>따라서 단순 입력을 하면 100자리를 모두 담을 수 없음</li>\n</ul>\n</li>\n<li>해결<ul>\n<li>문자로 입력받고 문자를 출력</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/noise.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"듣보잡","date":"2018-01-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1764>\n\n## 풀이\n\n- 퀵정렬로 사전순으로 정렬\n- m개 이분탐색\n- 중복된 명단을 퀵정렬 후 출력\n\n\n\n","source":"_posts/2018-01-13-듣보잡.md","raw":"---\nlayout: post\ntitle:  \"듣보잡\"\ndate:   2018-01-13\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1764>\n\n## 풀이\n\n- 퀵정렬로 사전순으로 정렬\n- m개 이분탐색\n- 중복된 명단을 퀵정렬 후 출력\n\n\n\n","slug":"2018-01-13-듣보잡","published":1,"updated":"2018-04-16T04:13:28.884Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bk006r31x7bd3t5iur","content":"<p><a href=\"https://www.acmicpc.net/problem/1764\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1764</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>퀵정렬로 사전순으로 정렬</li>\n<li>m개 이분탐색</li>\n<li>중복된 명단을 퀵정렬 후 출력</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1764\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1764</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>퀵정렬로 사전순으로 정렬</li>\n<li>m개 이분탐색</li>\n<li>중복된 명단을 퀵정렬 후 출력</li>\n</ul>\n"},{"layout":"post","title":"2007년","date":"2018-01-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1924>\n\n## 풀이\n\n- 이전 월 까지의 일수 + 현재 월의 날짜 \n- 일주일로 나눔\n- ex) 3월 15일\n\t- 1월(30) + 2월(28) + 3월(15) = 73\n\t- 73 % 7 = 3\n\t- 따라서, 수요일\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cal.png)\n\n","source":"_posts/2018-01-15-2007년.md","raw":"---\nlayout: post\ntitle:  \"2007년\"\ndate:   2018-01-15\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1924>\n\n## 풀이\n\n- 이전 월 까지의 일수 + 현재 월의 날짜 \n- 일주일로 나눔\n- ex) 3월 15일\n\t- 1월(30) + 2월(28) + 3월(15) = 73\n\t- 73 % 7 = 3\n\t- 따라서, 수요일\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cal.png)\n\n","slug":"2018-01-15-2007년","published":1,"updated":"2018-04-16T04:13:34.126Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bl006t31x7bln0hd08","content":"<p><a href=\"https://www.acmicpc.net/problem/1924\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1924</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>이전 월 까지의 일수 + 현재 월의 날짜 </li>\n<li>일주일로 나눔</li>\n<li>ex) 3월 15일<ul>\n<li>1월(30) + 2월(28) + 3월(15) = 73</li>\n<li>73 % 7 = 3</li>\n<li>따라서, 수요일</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cal.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1924\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1924</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>이전 월 까지의 일수 + 현재 월의 날짜 </li>\n<li>일주일로 나눔</li>\n<li>ex) 3월 15일<ul>\n<li>1월(30) + 2월(28) + 3월(15) = 73</li>\n<li>73 % 7 = 3</li>\n<li>따라서, 수요일</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cal.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"줄어들지않아","date":"2018-01-15T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2688>\n\n## 풀이\n\n- 처음에 계속 틀렸다고 나옴\n\n\t- 원인 : int로 변수를 설정했음\n\t- 해결 : long으로 바꿈\n\n- d[i][j]\n\n\t- i자리인 수가 j로 끝날때, 줄어들지 않는 수의 개수\n\n- ex\n\n\t- d[3][4] : 세 자리인 수가 4로 끝날때, 줄어들지 않는 수의 개수\n\t\t\n\t\t- d[3][0] : _ _ 0\n\t\t- d[3][1] : _ _ 1 \n\t\t- d[3][2] : _ _ 2 \n\t\t- d[3][3] : _ _ 3 => d[2][3] + d[2][2] + d[2][1] + d[2][0]\n\t\t- d[3][4] : _ _ 4\n\n\t\t\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fff.png)\n","source":"_posts/2018-01-16-줄어들지않아.md","raw":"---\nlayout: post\ntitle:  \"줄어들지않아\"\ndate:   2018-01-16\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2688>\n\n## 풀이\n\n- 처음에 계속 틀렸다고 나옴\n\n\t- 원인 : int로 변수를 설정했음\n\t- 해결 : long으로 바꿈\n\n- d[i][j]\n\n\t- i자리인 수가 j로 끝날때, 줄어들지 않는 수의 개수\n\n- ex\n\n\t- d[3][4] : 세 자리인 수가 4로 끝날때, 줄어들지 않는 수의 개수\n\t\t\n\t\t- d[3][0] : _ _ 0\n\t\t- d[3][1] : _ _ 1 \n\t\t- d[3][2] : _ _ 2 \n\t\t- d[3][3] : _ _ 3 => d[2][3] + d[2][2] + d[2][1] + d[2][0]\n\t\t- d[3][4] : _ _ 4\n\n\t\t\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fff.png)\n","slug":"2018-01-16-줄어들지않아","published":1,"updated":"2018-04-16T04:13:40.887Z","comments":1,"photos":[],"link":"","_id":"cjp6k65br006v31x77cprgjog","content":"<p><a href=\"https://www.acmicpc.net/problem/2688\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2688</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>처음에 계속 틀렸다고 나옴</p>\n<ul>\n<li>원인 : int로 변수를 설정했음</li>\n<li>해결 : long으로 바꿈</li>\n</ul>\n</li>\n<li><p>d[i][j]</p>\n<ul>\n<li>i자리인 수가 j로 끝날때, 줄어들지 않는 수의 개수</li>\n</ul>\n</li>\n<li><p>ex</p>\n<ul>\n<li><p>d[3][4] : 세 자리인 수가 4로 끝날때, 줄어들지 않는 수의 개수</p>\n<ul>\n<li>d[3][0] : _ _ 0</li>\n<li>d[3][1] : _ _ 1 </li>\n<li>d[3][2] : _ _ 2 </li>\n<li>d[3][3] : _ _ 3 =&gt; d[2][3] + d[2][2] + d[2][1] + d[2][0]</li>\n<li>d[3][4] : _ _ 4</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fff.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2688\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2688</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>처음에 계속 틀렸다고 나옴</p>\n<ul>\n<li>원인 : int로 변수를 설정했음</li>\n<li>해결 : long으로 바꿈</li>\n</ul>\n</li>\n<li><p>d[i][j]</p>\n<ul>\n<li>i자리인 수가 j로 끝날때, 줄어들지 않는 수의 개수</li>\n</ul>\n</li>\n<li><p>ex</p>\n<ul>\n<li><p>d[3][4] : 세 자리인 수가 4로 끝날때, 줄어들지 않는 수의 개수</p>\n<ul>\n<li>d[3][0] : _ _ 0</li>\n<li>d[3][1] : _ _ 1 </li>\n<li>d[3][2] : _ _ 2 </li>\n<li>d[3][3] : _ _ 3 =&gt; d[2][3] + d[2][2] + d[2][1] + d[2][0]</li>\n<li>d[3][4] : _ _ 4</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fff.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"01타일","date":"2018-01-16T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1904>\n\n## 틀린 풀이\n\n- 계속 런타임 에러\n- dp가 아니라, 수학적으로 풀었음\n- 팩토리얼로 풀었음\n\t\t\n## 틀린 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tile.png)\n\n## 맞는 풀이\n\n- d[i] \n\t- 길이가 i 일때, 만들 수 있는 수열의 개수\n\t- d[i-2] + d[i-1]\n\n- 길이가 i인 수에는 \n\t- 길이가 i-1인 수에\n\t- 00을 붙이거나\n\t- 1을 붙여서 만들 수 있다.\n\t- 하지만 00은 길이가 2 이기때문에, 붙일 수 없다.\n\n- 따라서\n\t- i-2번째에 00을 붙이거나\n\t- i-1번째에 1을 붙인다\n\n- 여기서 문제,\n\t- i-2번쨰에 11을 붙여서 만들 수 있지 않나? \n\t- 중복의 문제가 발생한다\n\n- 따라서,\n\t- i-2번째 수열에, 00을 맨 뒤에 붙이고\n\t- i-1번째 수열에, 1을 맨 앞에 붙인다\n\n## 맞는 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/01pro.png)\n\n\t\n\t\n","source":"_posts/2018-01-17-01타일.md","raw":"---\nlayout: post\ntitle:  \"01타일\"\ndate:   2018-01-17\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1904>\n\n## 틀린 풀이\n\n- 계속 런타임 에러\n- dp가 아니라, 수학적으로 풀었음\n- 팩토리얼로 풀었음\n\t\t\n## 틀린 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tile.png)\n\n## 맞는 풀이\n\n- d[i] \n\t- 길이가 i 일때, 만들 수 있는 수열의 개수\n\t- d[i-2] + d[i-1]\n\n- 길이가 i인 수에는 \n\t- 길이가 i-1인 수에\n\t- 00을 붙이거나\n\t- 1을 붙여서 만들 수 있다.\n\t- 하지만 00은 길이가 2 이기때문에, 붙일 수 없다.\n\n- 따라서\n\t- i-2번째에 00을 붙이거나\n\t- i-1번째에 1을 붙인다\n\n- 여기서 문제,\n\t- i-2번쨰에 11을 붙여서 만들 수 있지 않나? \n\t- 중복의 문제가 발생한다\n\n- 따라서,\n\t- i-2번째 수열에, 00을 맨 뒤에 붙이고\n\t- i-1번째 수열에, 1을 맨 앞에 붙인다\n\n## 맞는 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/01pro.png)\n\n\t\n\t\n","slug":"2018-01-17-01타일","published":1,"updated":"2018-04-16T04:13:46.509Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bt006x31x7gad66nx2","content":"<p><a href=\"https://www.acmicpc.net/problem/1904\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1904</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>계속 런타임 에러</li>\n<li>dp가 아니라, 수학적으로 풀었음</li>\n<li>팩토리얼로 풀었음</li>\n</ul>\n<h2 id=\"틀린-결과\"><a href=\"#틀린-결과\" class=\"headerlink\" title=\"틀린 결과\"></a>틀린 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tile.png\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ul>\n<li><p>d[i] </p>\n<ul>\n<li>길이가 i 일때, 만들 수 있는 수열의 개수</li>\n<li>d[i-2] + d[i-1]</li>\n</ul>\n</li>\n<li><p>길이가 i인 수에는 </p>\n<ul>\n<li>길이가 i-1인 수에</li>\n<li>00을 붙이거나</li>\n<li>1을 붙여서 만들 수 있다.</li>\n<li>하지만 00은 길이가 2 이기때문에, 붙일 수 없다.</li>\n</ul>\n</li>\n<li><p>따라서</p>\n<ul>\n<li>i-2번째에 00을 붙이거나</li>\n<li>i-1번째에 1을 붙인다</li>\n</ul>\n</li>\n<li><p>여기서 문제,</p>\n<ul>\n<li>i-2번쨰에 11을 붙여서 만들 수 있지 않나? </li>\n<li>중복의 문제가 발생한다</li>\n</ul>\n</li>\n<li><p>따라서,</p>\n<ul>\n<li>i-2번째 수열에, 00을 맨 뒤에 붙이고</li>\n<li>i-1번째 수열에, 1을 맨 앞에 붙인다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"맞는-결과\"><a href=\"#맞는-결과\" class=\"headerlink\" title=\"맞는 결과\"></a>맞는 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/01pro.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1904\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1904</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>계속 런타임 에러</li>\n<li>dp가 아니라, 수학적으로 풀었음</li>\n<li>팩토리얼로 풀었음</li>\n</ul>\n<h2 id=\"틀린-결과\"><a href=\"#틀린-결과\" class=\"headerlink\" title=\"틀린 결과\"></a>틀린 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tile.png\" alt=\"img\"></p>\n<h2 id=\"맞는-풀이\"><a href=\"#맞는-풀이\" class=\"headerlink\" title=\"맞는 풀이\"></a>맞는 풀이</h2><ul>\n<li><p>d[i] </p>\n<ul>\n<li>길이가 i 일때, 만들 수 있는 수열의 개수</li>\n<li>d[i-2] + d[i-1]</li>\n</ul>\n</li>\n<li><p>길이가 i인 수에는 </p>\n<ul>\n<li>길이가 i-1인 수에</li>\n<li>00을 붙이거나</li>\n<li>1을 붙여서 만들 수 있다.</li>\n<li>하지만 00은 길이가 2 이기때문에, 붙일 수 없다.</li>\n</ul>\n</li>\n<li><p>따라서</p>\n<ul>\n<li>i-2번째에 00을 붙이거나</li>\n<li>i-1번째에 1을 붙인다</li>\n</ul>\n</li>\n<li><p>여기서 문제,</p>\n<ul>\n<li>i-2번쨰에 11을 붙여서 만들 수 있지 않나? </li>\n<li>중복의 문제가 발생한다</li>\n</ul>\n</li>\n<li><p>따라서,</p>\n<ul>\n<li>i-2번째 수열에, 00을 맨 뒤에 붙이고</li>\n<li>i-1번째 수열에, 1을 맨 앞에 붙인다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"맞는-결과\"><a href=\"#맞는-결과\" class=\"headerlink\" title=\"맞는 결과\"></a>맞는 결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/01pro.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"올림픽","date":"2018-01-17T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/8979>\n\n## 풀이\n\n- 금메달, 은메달, 동메달 개수를 비교하여 정렬\n- 등수 매기기에서 막혔음\n","source":"_posts/2018-01-18-올림픽.md","raw":"---\nlayout: post\ntitle:  \"올림픽\"\ndate:   2018-01-18\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/8979>\n\n## 풀이\n\n- 금메달, 은메달, 동메달 개수를 비교하여 정렬\n- 등수 매기기에서 막혔음\n","slug":"2018-01-18-올림픽","published":1,"updated":"2018-04-16T04:13:51.167Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bu006z31x7icqfnbuy","content":"<p><a href=\"https://www.acmicpc.net/problem/8979\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/8979</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>금메달, 은메달, 동메달 개수를 비교하여 정렬</li>\n<li>등수 매기기에서 막혔음</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/8979\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/8979</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>금메달, 은메달, 동메달 개수를 비교하여 정렬</li>\n<li>등수 매기기에서 막혔음</li>\n</ul>\n"},{"layout":"post","title":"슈퍼마리오","date":"2018-01-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2851>\n\n## 풀이\n\n- 처음에 틀렸다고 나옴\n\t- 이유 : 반복문의 if-else 구문에서 else문에 걸렸을 때, 바로 출력하고 return\n\t- 해결 : break 걸고, 반복문 밖에서 정답 출력\n- 100과의 차이는 계속해서 감소하거나 같음\n- ex)\n\t- 100과의 차이가 \n\t- 90 70 30 1 1 ...\n\t- 인 경우가 있을 수 있으니\n\t- 현재 index에서의 차이가 \n\t- 전 index에서의 차이보다 커지면\n\t- stop\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mario.png)\n","source":"_posts/2018-01-20-슈퍼마리오.md","raw":"---\nlayout: post\ntitle:  \"슈퍼마리오\"\ndate:   2018-01-20\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2851>\n\n## 풀이\n\n- 처음에 틀렸다고 나옴\n\t- 이유 : 반복문의 if-else 구문에서 else문에 걸렸을 때, 바로 출력하고 return\n\t- 해결 : break 걸고, 반복문 밖에서 정답 출력\n- 100과의 차이는 계속해서 감소하거나 같음\n- ex)\n\t- 100과의 차이가 \n\t- 90 70 30 1 1 ...\n\t- 인 경우가 있을 수 있으니\n\t- 현재 index에서의 차이가 \n\t- 전 index에서의 차이보다 커지면\n\t- stop\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mario.png)\n","slug":"2018-01-20-슈퍼마리오","published":1,"updated":"2018-04-16T04:13:59.669Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bw007131x7mjq46wzr","content":"<p><a href=\"https://www.acmicpc.net/problem/2851\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2851</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>처음에 틀렸다고 나옴<ul>\n<li>이유 : 반복문의 if-else 구문에서 else문에 걸렸을 때, 바로 출력하고 return</li>\n<li>해결 : break 걸고, 반복문 밖에서 정답 출력</li>\n</ul>\n</li>\n<li>100과의 차이는 계속해서 감소하거나 같음</li>\n<li>ex)<ul>\n<li>100과의 차이가 </li>\n<li>90 70 30 1 1 …</li>\n<li>인 경우가 있을 수 있으니</li>\n<li>현재 index에서의 차이가 </li>\n<li>전 index에서의 차이보다 커지면</li>\n<li>stop</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mario.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2851\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2851</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>처음에 틀렸다고 나옴<ul>\n<li>이유 : 반복문의 if-else 구문에서 else문에 걸렸을 때, 바로 출력하고 return</li>\n<li>해결 : break 걸고, 반복문 밖에서 정답 출력</li>\n</ul>\n</li>\n<li>100과의 차이는 계속해서 감소하거나 같음</li>\n<li>ex)<ul>\n<li>100과의 차이가 </li>\n<li>90 70 30 1 1 …</li>\n<li>인 경우가 있을 수 있으니</li>\n<li>현재 index에서의 차이가 </li>\n<li>전 index에서의 차이보다 커지면</li>\n<li>stop</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mario.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"타일","date":"2018-01-23T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1720>\n\n## 풀이\n\n# 중복을 고려하지 않고\n\n- d[i]\n\t- d[i-2] * 2 + d[i-1]\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/picture.png)\n\n# 중복을 고려하여\n\n- 전체 타일 수 = A + 2B \n\t- A : 중복되지 않는 수\n\t- B : 중복되는 수\n- 중복을 제거한 타일 수 = A + B = (A + 2B + A) / 2\n\n- A 개수 구하기\n\t- i가 홀수인 경우 \n\t\t- 가운데 2*1을 두고, 남은 좌우 채움\n\t\t- s[i] = d[i/2]\n\n\t- i가 짝수인 경우\n\t\t- s[i] = d[i/2-1] * 2 + d[i/2]\n\t\t- 가운데, 1*2를 주고, 남은 좌우 채움\n\t\t\t- d[i/2-1]\n\t\t- 가운데, 2*2를 주고, 남은 좌우 채움\n\t\t\t- d[i/2-1]\n\t\t- 반반 나눠서 채움\n\t\t\t- d[i/2]\n\n## 결과 \n\n- 런타임 에러가 뜸\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/error.png)\n\n- 해결 : 배열 31로 고정\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/solve.png) \n","source":"_posts/2018-01-24-타일.md","raw":"---\nlayout: post\ntitle:  \"타일\"\ndate:   2018-01-24\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1720>\n\n## 풀이\n\n# 중복을 고려하지 않고\n\n- d[i]\n\t- d[i-2] * 2 + d[i-1]\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/picture.png)\n\n# 중복을 고려하여\n\n- 전체 타일 수 = A + 2B \n\t- A : 중복되지 않는 수\n\t- B : 중복되는 수\n- 중복을 제거한 타일 수 = A + B = (A + 2B + A) / 2\n\n- A 개수 구하기\n\t- i가 홀수인 경우 \n\t\t- 가운데 2*1을 두고, 남은 좌우 채움\n\t\t- s[i] = d[i/2]\n\n\t- i가 짝수인 경우\n\t\t- s[i] = d[i/2-1] * 2 + d[i/2]\n\t\t- 가운데, 1*2를 주고, 남은 좌우 채움\n\t\t\t- d[i/2-1]\n\t\t- 가운데, 2*2를 주고, 남은 좌우 채움\n\t\t\t- d[i/2-1]\n\t\t- 반반 나눠서 채움\n\t\t\t- d[i/2]\n\n## 결과 \n\n- 런타임 에러가 뜸\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/error.png)\n\n- 해결 : 배열 31로 고정\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/solve.png) \n","slug":"2018-01-24-타일","published":1,"updated":"2018-04-16T04:14:05.105Z","comments":1,"photos":[],"link":"","_id":"cjp6k65bx007331x7dcclearr","content":"<p><a href=\"https://www.acmicpc.net/problem/1720\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1720</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><h1 id=\"중복을-고려하지-않고\"><a href=\"#중복을-고려하지-않고\" class=\"headerlink\" title=\"중복을 고려하지 않고\"></a>중복을 고려하지 않고</h1><ul>\n<li>d[i]<ul>\n<li>d[i-2] * 2 + d[i-1]</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/picture.png\" alt=\"img\"></p>\n<h1 id=\"중복을-고려하여\"><a href=\"#중복을-고려하여\" class=\"headerlink\" title=\"중복을 고려하여\"></a>중복을 고려하여</h1><ul>\n<li>전체 타일 수 = A + 2B <ul>\n<li>A : 중복되지 않는 수</li>\n<li>B : 중복되는 수</li>\n</ul>\n</li>\n<li><p>중복을 제거한 타일 수 = A + B = (A + 2B + A) / 2</p>\n</li>\n<li><p>A 개수 구하기</p>\n<ul>\n<li><p>i가 홀수인 경우 </p>\n<ul>\n<li>가운데 2*1을 두고, 남은 좌우 채움</li>\n<li>s[i] = d[i/2]</li>\n</ul>\n</li>\n<li><p>i가 짝수인 경우</p>\n<ul>\n<li>s[i] = d[i/2-1] * 2 + d[i/2]</li>\n<li>가운데, 1*2를 주고, 남은 좌우 채움<ul>\n<li>d[i/2-1]</li>\n</ul>\n</li>\n<li>가운데, 2*2를 주고, 남은 좌우 채움<ul>\n<li>d[i/2-1]</li>\n</ul>\n</li>\n<li>반반 나눠서 채움<ul>\n<li>d[i/2]</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><ul>\n<li>런타임 에러가 뜸</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/error.png\" alt=\"img\"></p>\n<ul>\n<li>해결 : 배열 31로 고정</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/solve.png\" alt=\"img\"> </p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1720\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1720</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><h1 id=\"중복을-고려하지-않고\"><a href=\"#중복을-고려하지-않고\" class=\"headerlink\" title=\"중복을 고려하지 않고\"></a>중복을 고려하지 않고</h1><ul>\n<li>d[i]<ul>\n<li>d[i-2] * 2 + d[i-1]</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/picture.png\" alt=\"img\"></p>\n<h1 id=\"중복을-고려하여\"><a href=\"#중복을-고려하여\" class=\"headerlink\" title=\"중복을 고려하여\"></a>중복을 고려하여</h1><ul>\n<li>전체 타일 수 = A + 2B <ul>\n<li>A : 중복되지 않는 수</li>\n<li>B : 중복되는 수</li>\n</ul>\n</li>\n<li><p>중복을 제거한 타일 수 = A + B = (A + 2B + A) / 2</p>\n</li>\n<li><p>A 개수 구하기</p>\n<ul>\n<li><p>i가 홀수인 경우 </p>\n<ul>\n<li>가운데 2*1을 두고, 남은 좌우 채움</li>\n<li>s[i] = d[i/2]</li>\n</ul>\n</li>\n<li><p>i가 짝수인 경우</p>\n<ul>\n<li>s[i] = d[i/2-1] * 2 + d[i/2]</li>\n<li>가운데, 1*2를 주고, 남은 좌우 채움<ul>\n<li>d[i/2-1]</li>\n</ul>\n</li>\n<li>가운데, 2*2를 주고, 남은 좌우 채움<ul>\n<li>d[i/2-1]</li>\n</ul>\n</li>\n<li>반반 나눠서 채움<ul>\n<li>d[i/2]</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><ul>\n<li>런타임 에러가 뜸</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/error.png\" alt=\"img\"></p>\n<ul>\n<li>해결 : 배열 31로 고정</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/solve.png\" alt=\"img\"> </p>\n"},{"layout":"post","title":"수이어쓰기1","date":"2018-01-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1748>\n\n## 풀이\n\n- 각 자리마다 쓰이는 개수를 구해서 합한다\n","source":"_posts/2018-01-26-수이어쓰기.md","raw":"---\nlayout: post\ntitle:  \"수이어쓰기1\"\ndate:   2018-01-26\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1748>\n\n## 풀이\n\n- 각 자리마다 쓰이는 개수를 구해서 합한다\n","slug":"2018-01-26-수이어쓰기","published":1,"updated":"2018-04-16T04:14:09.107Z","comments":1,"photos":[],"link":"","_id":"cjp6k65by007531x7xpzmkcvg","content":"<p><a href=\"https://www.acmicpc.net/problem/1748\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1748</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>각 자리마다 쓰이는 개수를 구해서 합한다</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1748\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1748</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>각 자리마다 쓰이는 개수를 구해서 합한다</li>\n</ul>\n"},{"layout":"post","title":"swift 처음 시작하기","date":"2018-01-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309>\n\n## Naming Constants and Variables\n\n- can contain almost any character, including Unicode characters\n \n- can’t contain \n\t- whitespace characters, \n\t- mathematical symbols, \n\t- arrows, \n\t- private-use (or invalid) Unicode code points,\n\t- or line- and box-drawing characters.\n\t \n- can't begin with a number\n\n- Once you’ve declared a constant or variable of a certain type, \n\t- you can’t declare it again with the same name, \n\t- or change it to store values of a different type. \n\t- can't change a constant into a variable or a variable into a constant.\n\n- can change the value of an existing variable to another value of a compatible type\n\n\t``` \n\tvar friendlyWelcome = \"Hello!\"\n\tfriendlyWelcome = \"Bonjour!\"\n\t```\n\t\n- the value of a constant can’t be changed after it’s set.\n\n\t```\n\tlet languageName = \"Swift\"\n\tlanguageName = \"Swift++\"\n\t// This is a compile-time error: languageName cannot be changed.\n\t```\n\n## Printing Constants and Variables\n\n- print(_:separator:terminator:) \n\n\t- The separator and terminator parameter have default values,\n\t- so you can omit them when you call this function\n\n- string interpolation\n\n\t```\n\tprint(\"The current value of friendlyWelcome is \\(friendlyWelcome)\")\n\t```\n\t\n\t- result => The current value of friendlyWelcome is Bonjour!\n\n## Comments\n\n- // this is comment\n- /* this is comment */\n\n\n## Semicolons\n\n- doesn’t require you to write a semicolon (;) \n\n","source":"_posts/2018-01-29-swift 처음 시작하기.md","raw":"---\nlayout: post\ntitle:  \"swift 처음 시작하기\"\ndate:   2018-01-29\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309>\n\n## Naming Constants and Variables\n\n- can contain almost any character, including Unicode characters\n \n- can’t contain \n\t- whitespace characters, \n\t- mathematical symbols, \n\t- arrows, \n\t- private-use (or invalid) Unicode code points,\n\t- or line- and box-drawing characters.\n\t \n- can't begin with a number\n\n- Once you’ve declared a constant or variable of a certain type, \n\t- you can’t declare it again with the same name, \n\t- or change it to store values of a different type. \n\t- can't change a constant into a variable or a variable into a constant.\n\n- can change the value of an existing variable to another value of a compatible type\n\n\t``` \n\tvar friendlyWelcome = \"Hello!\"\n\tfriendlyWelcome = \"Bonjour!\"\n\t```\n\t\n- the value of a constant can’t be changed after it’s set.\n\n\t```\n\tlet languageName = \"Swift\"\n\tlanguageName = \"Swift++\"\n\t// This is a compile-time error: languageName cannot be changed.\n\t```\n\n## Printing Constants and Variables\n\n- print(_:separator:terminator:) \n\n\t- The separator and terminator parameter have default values,\n\t- so you can omit them when you call this function\n\n- string interpolation\n\n\t```\n\tprint(\"The current value of friendlyWelcome is \\(friendlyWelcome)\")\n\t```\n\t\n\t- result => The current value of friendlyWelcome is Bonjour!\n\n## Comments\n\n- // this is comment\n- /* this is comment */\n\n\n## Semicolons\n\n- doesn’t require you to write a semicolon (;) \n\n","slug":"2018-01-29-swift 처음 시작하기","published":1,"updated":"2018-04-16T04:14:17.649Z","comments":1,"photos":[],"link":"","_id":"cjp6k65c0007731x7pj37pvtf","content":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309</a></p>\n<h2 id=\"Naming-Constants-and-Variables\"><a href=\"#Naming-Constants-and-Variables\" class=\"headerlink\" title=\"Naming Constants and Variables\"></a>Naming Constants and Variables</h2><ul>\n<li><p>can contain almost any character, including Unicode characters</p>\n</li>\n<li><p>can’t contain </p>\n<ul>\n<li>whitespace characters, </li>\n<li>mathematical symbols, </li>\n<li>arrows, </li>\n<li>private-use (or invalid) Unicode code points,</li>\n<li>or line- and box-drawing characters.</li>\n</ul>\n</li>\n<li><p>can’t begin with a number</p>\n</li>\n<li><p>Once you’ve declared a constant or variable of a certain type, </p>\n<ul>\n<li>you can’t declare it again with the same name, </li>\n<li>or change it to store values of a different type. </li>\n<li>can’t change a constant into a variable or a variable into a constant.</li>\n</ul>\n</li>\n<li><p>can change the value of an existing variable to another value of a compatible type</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var friendlyWelcome = &quot;Hello!&quot;</span><br><span class=\"line\">friendlyWelcome = &quot;Bonjour!&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>the value of a constant can’t be changed after it’s set.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let languageName = &quot;Swift&quot;</span><br><span class=\"line\">languageName = &quot;Swift++&quot;</span><br><span class=\"line\">// This is a compile-time error: languageName cannot be changed.</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Printing-Constants-and-Variables\"><a href=\"#Printing-Constants-and-Variables\" class=\"headerlink\" title=\"Printing Constants and Variables\"></a>Printing Constants and Variables</h2><ul>\n<li><p>print(_:separator:terminator:) </p>\n<ul>\n<li>The separator and terminator parameter have default values,</li>\n<li>so you can omit them when you call this function</li>\n</ul>\n</li>\n<li><p>string interpolation</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;The current value of friendlyWelcome is \\(friendlyWelcome)&quot;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code>- result =&gt; The current value of friendlyWelcome is Bonjour!\n</code></pre><h2 id=\"Comments\"><a href=\"#Comments\" class=\"headerlink\" title=\"Comments\"></a>Comments</h2><ul>\n<li>// this is comment</li>\n<li>/<em> this is comment </em>/</li>\n</ul>\n<h2 id=\"Semicolons\"><a href=\"#Semicolons\" class=\"headerlink\" title=\"Semicolons\"></a>Semicolons</h2><ul>\n<li>doesn’t require you to write a semicolon (;) </li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309</a></p>\n<h2 id=\"Naming-Constants-and-Variables\"><a href=\"#Naming-Constants-and-Variables\" class=\"headerlink\" title=\"Naming Constants and Variables\"></a>Naming Constants and Variables</h2><ul>\n<li><p>can contain almost any character, including Unicode characters</p>\n</li>\n<li><p>can’t contain </p>\n<ul>\n<li>whitespace characters, </li>\n<li>mathematical symbols, </li>\n<li>arrows, </li>\n<li>private-use (or invalid) Unicode code points,</li>\n<li>or line- and box-drawing characters.</li>\n</ul>\n</li>\n<li><p>can’t begin with a number</p>\n</li>\n<li><p>Once you’ve declared a constant or variable of a certain type, </p>\n<ul>\n<li>you can’t declare it again with the same name, </li>\n<li>or change it to store values of a different type. </li>\n<li>can’t change a constant into a variable or a variable into a constant.</li>\n</ul>\n</li>\n<li><p>can change the value of an existing variable to another value of a compatible type</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var friendlyWelcome = &quot;Hello!&quot;</span><br><span class=\"line\">friendlyWelcome = &quot;Bonjour!&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>the value of a constant can’t be changed after it’s set.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let languageName = &quot;Swift&quot;</span><br><span class=\"line\">languageName = &quot;Swift++&quot;</span><br><span class=\"line\">// This is a compile-time error: languageName cannot be changed.</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Printing-Constants-and-Variables\"><a href=\"#Printing-Constants-and-Variables\" class=\"headerlink\" title=\"Printing Constants and Variables\"></a>Printing Constants and Variables</h2><ul>\n<li><p>print(_:separator:terminator:) </p>\n<ul>\n<li>The separator and terminator parameter have default values,</li>\n<li>so you can omit them when you call this function</li>\n</ul>\n</li>\n<li><p>string interpolation</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;The current value of friendlyWelcome is \\(friendlyWelcome)&quot;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code>- result =&gt; The current value of friendlyWelcome is Bonjour!\n</code></pre><h2 id=\"Comments\"><a href=\"#Comments\" class=\"headerlink\" title=\"Comments\"></a>Comments</h2><ul>\n<li>// this is comment</li>\n<li>/<em> this is comment </em>/</li>\n</ul>\n<h2 id=\"Semicolons\"><a href=\"#Semicolons\" class=\"headerlink\" title=\"Semicolons\"></a>Semicolons</h2><ul>\n<li>doesn’t require you to write a semicolon (;) </li>\n</ul>\n"},{"layout":"post","title":"Centralized Workflow","date":"2018-01-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png","_content":"\n## concept \n\n- Clone the central repository\n\n\t```\n\tgit clone ssh://user@host/path/to/repo.git\n\t```\n\n- Make changes and commit\n\n\n\t```\n\tgit status # View the state of the repo\n\tgit add <some-file> # Stage a file\n\tgit commit # Commit a file</some-file>\n\t```\n\t\n- Push new commits to central repository\n\n\t```\n\tgit push origin master\n\t```\n\t\n- Managing conflicts\n\n\n## example\n\n- John works on his feature\n\n\t-  edit, stage, and commit.\n\n- Mary works on her feature\n\n\t- edit, stage, and commit.\n\n- John publishes his feature\n\n\t```\n\tgit push origin master\n\t```\n\t\n- Mary tries to publish her feature\n\n\t```\n\tgit push origin master\n\t```\n\t\n\t- error\n\t- Mary needs to pull John’s updates into her repository\n\n- Mary rebases on top of John’s commit(s)\n\n\n\t```\n\tgit pull --rebase origin master\n\t```\n\n- Mary resolves a merge conflict\n\n\t- 충돌이 발생하면 다음과 같은 에러\n\n\t```\n\tCONFLICT (content): Merge conflict in <some-file>\n\t```\n\t\n\t- Unmerged paths section에서 conflict file이 무엇인지 확인 가능\n\t\n\t```\n\tgit status \n\t```\n\t\n\t```\n\t# Unmerged paths:\n\t# (use \"git reset HEAD <some-file>...\" to unstage)\n\t# (use \"git add/rm <some-file>...\" as appropriate to mark resolution)\n\t#\n\t# both modified: <some-file>\n\t```\n\t\n\t- 파일 수정 후\n\n\t```\n\tgit add <some-file>\n\tgit rebase --continue\n\tgit rebase --abort\n\tgit push origin master\n\t```\n\t\n\t\n\t\t\n","source":"_posts/2018-01-29-Centralized Workflow .md","raw":"---\nlayout: post\ntitle:  \"Centralized Workflow\"\ndate:   2018-01-29\ncategories: git\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/48.png\n---\n\n## concept \n\n- Clone the central repository\n\n\t```\n\tgit clone ssh://user@host/path/to/repo.git\n\t```\n\n- Make changes and commit\n\n\n\t```\n\tgit status # View the state of the repo\n\tgit add <some-file> # Stage a file\n\tgit commit # Commit a file</some-file>\n\t```\n\t\n- Push new commits to central repository\n\n\t```\n\tgit push origin master\n\t```\n\t\n- Managing conflicts\n\n\n## example\n\n- John works on his feature\n\n\t-  edit, stage, and commit.\n\n- Mary works on her feature\n\n\t- edit, stage, and commit.\n\n- John publishes his feature\n\n\t```\n\tgit push origin master\n\t```\n\t\n- Mary tries to publish her feature\n\n\t```\n\tgit push origin master\n\t```\n\t\n\t- error\n\t- Mary needs to pull John’s updates into her repository\n\n- Mary rebases on top of John’s commit(s)\n\n\n\t```\n\tgit pull --rebase origin master\n\t```\n\n- Mary resolves a merge conflict\n\n\t- 충돌이 발생하면 다음과 같은 에러\n\n\t```\n\tCONFLICT (content): Merge conflict in <some-file>\n\t```\n\t\n\t- Unmerged paths section에서 conflict file이 무엇인지 확인 가능\n\t\n\t```\n\tgit status \n\t```\n\t\n\t```\n\t# Unmerged paths:\n\t# (use \"git reset HEAD <some-file>...\" to unstage)\n\t# (use \"git add/rm <some-file>...\" as appropriate to mark resolution)\n\t#\n\t# both modified: <some-file>\n\t```\n\t\n\t- 파일 수정 후\n\n\t```\n\tgit add <some-file>\n\tgit rebase --continue\n\tgit rebase --abort\n\tgit push origin master\n\t```\n\t\n\t\n\t\t\n","slug":"2018-01-29-Centralized Workflow ","published":1,"updated":"2018-04-16T04:14:12.907Z","comments":1,"photos":[],"link":"","_id":"cjp6k65c1007931x73290sfn8","content":"<h2 id=\"concept\"><a href=\"#concept\" class=\"headerlink\" title=\"concept\"></a>concept</h2><ul>\n<li><p>Clone the central repository</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone ssh://user@host/path/to/repo.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Make changes and commit</p>\n</li>\n</ul>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status # View the state of the repo</span><br><span class=\"line\">git add &lt;some-file&gt; # Stage a file</span><br><span class=\"line\">git commit # Commit a file&lt;/some-file&gt;</span><br></pre></td></tr></table></figure>\n</code></pre><ul>\n<li><p>Push new commits to central repository</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>Managing conflicts</li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li><p>John works on his feature</p>\n<ul>\n<li>edit, stage, and commit.</li>\n</ul>\n</li>\n<li><p>Mary works on her feature</p>\n<ul>\n<li>edit, stage, and commit.</li>\n</ul>\n</li>\n<li><p>John publishes his feature</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Mary tries to publish her feature</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code>- error\n- Mary needs to pull John’s updates into her repository\n</code></pre><ul>\n<li>Mary rebases on top of John’s commit(s)</li>\n</ul>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase origin master</span><br></pre></td></tr></table></figure>\n</code></pre><ul>\n<li><p>Mary resolves a merge conflict</p>\n<ul>\n<li><p>충돌이 발생하면 다음과 같은 에러</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONFLICT (content): Merge conflict in &lt;some-file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>- Unmerged paths section에서 conflict file이 무엇인지 확인 가능\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Unmerged paths:</span><br><span class=\"line\"># (use &quot;git reset HEAD &lt;some-file&gt;...&quot; to unstage)</span><br><span class=\"line\"># (use &quot;git add/rm &lt;some-file&gt;...&quot; as appropriate to mark resolution)</span><br><span class=\"line\">#</span><br><span class=\"line\"># both modified: &lt;some-file&gt;</span><br></pre></td></tr></table></figure>\n\n\n- 파일 수정 후\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add &lt;some-file&gt;</span><br><span class=\"line\">git rebase --continue</span><br><span class=\"line\">git rebase --abort</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"concept\"><a href=\"#concept\" class=\"headerlink\" title=\"concept\"></a>concept</h2><ul>\n<li><p>Clone the central repository</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone ssh://user@host/path/to/repo.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Make changes and commit</p>\n</li>\n</ul>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status # View the state of the repo</span><br><span class=\"line\">git add &lt;some-file&gt; # Stage a file</span><br><span class=\"line\">git commit # Commit a file&lt;/some-file&gt;</span><br></pre></td></tr></table></figure>\n</code></pre><ul>\n<li><p>Push new commits to central repository</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>Managing conflicts</li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li><p>John works on his feature</p>\n<ul>\n<li>edit, stage, and commit.</li>\n</ul>\n</li>\n<li><p>Mary works on her feature</p>\n<ul>\n<li>edit, stage, and commit.</li>\n</ul>\n</li>\n<li><p>John publishes his feature</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Mary tries to publish her feature</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code>- error\n- Mary needs to pull John’s updates into her repository\n</code></pre><ul>\n<li>Mary rebases on top of John’s commit(s)</li>\n</ul>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase origin master</span><br></pre></td></tr></table></figure>\n</code></pre><ul>\n<li><p>Mary resolves a merge conflict</p>\n<ul>\n<li><p>충돌이 발생하면 다음과 같은 에러</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONFLICT (content): Merge conflict in &lt;some-file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>- Unmerged paths section에서 conflict file이 무엇인지 확인 가능\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Unmerged paths:</span><br><span class=\"line\"># (use &quot;git reset HEAD &lt;some-file&gt;...&quot; to unstage)</span><br><span class=\"line\"># (use &quot;git add/rm &lt;some-file&gt;...&quot; as appropriate to mark resolution)</span><br><span class=\"line\">#</span><br><span class=\"line\"># both modified: &lt;some-file&gt;</span><br></pre></td></tr></table></figure>\n\n\n- 파일 수정 후\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add &lt;some-file&gt;</span><br><span class=\"line\">git rebase --continue</span><br><span class=\"line\">git rebase --abort</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</code></pre>"},{"layout":"post","title":"swift","date":"2018-01-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n## features\n\n<https://developer.apple.com/swift/>\n\n- Playgrounds and REPL in Xcode\n\n\t-  Type a line of code and the result appears immediately.\n\t-  The result view can display graphics, lists of results, or graphs of a value over time\n\n- Read-Eval-Print-Loop (REPL)\n\n\t- Read – 유저의 값을 입력 받아 메모리에 저장\n\t- Eval – 데이터를 처리(Evaluate)\n\t- Print – 결과값을 출력\n\t- Loop – Read, Eval, Print 를 유저가 Ctrl+C를 두번 눌러 종료할때까지 반복\n\n\t- Available from within the Xcode console or in Terminal.\n\n- Package Manager\n\n\t- A cross-platform tool for building Swift libraries and executables, making it easy to create and manage dependencies.\n\n- Fast and Powerful\n\n\t- low-level primitives such as types, flow control, and operators\n\t- object-oriented features\n\n- Designed for Safety\n\n\t- Variables are always initialized before use, \n\t- arrays and integers are checked for overflow, \n\t- and memory is managed automatically.\n\t- Swift objects can never be nil\n\t- optionals : there are cases where nil is valid and appropriate\n\n- Objective-C Interoperability\n","source":"_posts/2018-01-29-swift.md","raw":"---\nlayout: post\ntitle:  \"swift\"\ndate:   2018-01-29\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n## features\n\n<https://developer.apple.com/swift/>\n\n- Playgrounds and REPL in Xcode\n\n\t-  Type a line of code and the result appears immediately.\n\t-  The result view can display graphics, lists of results, or graphs of a value over time\n\n- Read-Eval-Print-Loop (REPL)\n\n\t- Read – 유저의 값을 입력 받아 메모리에 저장\n\t- Eval – 데이터를 처리(Evaluate)\n\t- Print – 결과값을 출력\n\t- Loop – Read, Eval, Print 를 유저가 Ctrl+C를 두번 눌러 종료할때까지 반복\n\n\t- Available from within the Xcode console or in Terminal.\n\n- Package Manager\n\n\t- A cross-platform tool for building Swift libraries and executables, making it easy to create and manage dependencies.\n\n- Fast and Powerful\n\n\t- low-level primitives such as types, flow control, and operators\n\t- object-oriented features\n\n- Designed for Safety\n\n\t- Variables are always initialized before use, \n\t- arrays and integers are checked for overflow, \n\t- and memory is managed automatically.\n\t- Swift objects can never be nil\n\t- optionals : there are cases where nil is valid and appropriate\n\n- Objective-C Interoperability\n","slug":"2018-01-29-swift","published":1,"updated":"2018-04-16T04:14:21.719Z","comments":1,"photos":[],"link":"","_id":"cjp6k65c2007c31x74ukaaqok","content":"<h2 id=\"features\"><a href=\"#features\" class=\"headerlink\" title=\"features\"></a>features</h2><p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<ul>\n<li><p>Playgrounds and REPL in Xcode</p>\n<ul>\n<li>Type a line of code and the result appears immediately.</li>\n<li>The result view can display graphics, lists of results, or graphs of a value over time</li>\n</ul>\n</li>\n<li><p>Read-Eval-Print-Loop (REPL)</p>\n<ul>\n<li>Read – 유저의 값을 입력 받아 메모리에 저장</li>\n<li>Eval – 데이터를 처리(Evaluate)</li>\n<li>Print – 결과값을 출력</li>\n<li><p>Loop – Read, Eval, Print 를 유저가 Ctrl+C를 두번 눌러 종료할때까지 반복</p>\n</li>\n<li><p>Available from within the Xcode console or in Terminal.</p>\n</li>\n</ul>\n</li>\n<li><p>Package Manager</p>\n<ul>\n<li>A cross-platform tool for building Swift libraries and executables, making it easy to create and manage dependencies.</li>\n</ul>\n</li>\n<li><p>Fast and Powerful</p>\n<ul>\n<li>low-level primitives such as types, flow control, and operators</li>\n<li>object-oriented features</li>\n</ul>\n</li>\n<li><p>Designed for Safety</p>\n<ul>\n<li>Variables are always initialized before use, </li>\n<li>arrays and integers are checked for overflow, </li>\n<li>and memory is managed automatically.</li>\n<li>Swift objects can never be nil</li>\n<li>optionals : there are cases where nil is valid and appropriate</li>\n</ul>\n</li>\n<li><p>Objective-C Interoperability</p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"features\"><a href=\"#features\" class=\"headerlink\" title=\"features\"></a>features</h2><p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<ul>\n<li><p>Playgrounds and REPL in Xcode</p>\n<ul>\n<li>Type a line of code and the result appears immediately.</li>\n<li>The result view can display graphics, lists of results, or graphs of a value over time</li>\n</ul>\n</li>\n<li><p>Read-Eval-Print-Loop (REPL)</p>\n<ul>\n<li>Read – 유저의 값을 입력 받아 메모리에 저장</li>\n<li>Eval – 데이터를 처리(Evaluate)</li>\n<li>Print – 결과값을 출력</li>\n<li><p>Loop – Read, Eval, Print 를 유저가 Ctrl+C를 두번 눌러 종료할때까지 반복</p>\n</li>\n<li><p>Available from within the Xcode console or in Terminal.</p>\n</li>\n</ul>\n</li>\n<li><p>Package Manager</p>\n<ul>\n<li>A cross-platform tool for building Swift libraries and executables, making it easy to create and manage dependencies.</li>\n</ul>\n</li>\n<li><p>Fast and Powerful</p>\n<ul>\n<li>low-level primitives such as types, flow control, and operators</li>\n<li>object-oriented features</li>\n</ul>\n</li>\n<li><p>Designed for Safety</p>\n<ul>\n<li>Variables are always initialized before use, </li>\n<li>arrays and integers are checked for overflow, </li>\n<li>and memory is managed automatically.</li>\n<li>Swift objects can never be nil</li>\n<li>optionals : there are cases where nil is valid and appropriate</li>\n</ul>\n</li>\n<li><p>Objective-C Interoperability</p>\n</li>\n</ul>\n"},{"layout":"post","title":"데이터 타입 기본","date":"2018-01-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309>\n\n## Integers\n\n-  signed (positive, zero, or negative)\n-  unsigned (positive or zero)\n\t\n\t-  8-bit unsigned integer : UInt8\n\t-  32-bit signed integer : Int32\n\n- Int\n\n\t- On a 32-bit platform, Int is the same size as Int32.\n\t- On a 64-bit platform, Int is the same size as Int64.\n\n\t- always use Int for integer values in your code\n\n- UInt\n\n\t- On a 32-bit platform, UInt is the same size as UInt32.\n\t- On a 64-bit platform, UInt is the same size as UInt64.\n\n\t- Int is preferred, even when the values to be stored are known to be nonnegative\n\n## Booleans\n\n\t```\n\tlet orangesAreOrange = true\n\tlet turnipsAreDelicious = false\n\t\n\tif turnipsAreDelicious {\n\t    print(\"Mmm, tasty turnips!\")\n\t} else {\n\t    print(\"Eww, turnips are horrible.\")\n\t}\n\t\n\t// Prints \"Eww, turnips are horrible.\"\n\t```\n\n- Swift’s type safety prevents non-Boolean values from being substituted for Bool\n\n\t```\n\tlet i = 1\n\tif i {\n\t    // this example will not compile, and will report an error\n\t}\n\t```\n\n- The result of the i == 1 comparison is of type Bool,\n- and so this second example passes the type-check. \n\n\t```\n\tlet i = 1\n\tif i == 1 {\n\t    // this example will compile successfully\n\t}\n\t```\n\n## Floating-Point Numbers\n\n- Double represents a 64-bit floating-point number.\n- Float represents a 32-bit floating-point number.\n\n\t- In situations where either type would be appropriate, Double is preferred.\n\n## Strings and Characters\n\n- String Literals\n\t\n\t- A literal value is a value that appears directly in your source code\n\t- Swift infers a type of String for the someString constant \n\t- because it’s initialized with a string literal value.\n\t\n\t\t```\n\t\tlet someString = \"Some string literal value\"\n\t\t```\t\n\n- Initializing an Empty String\n\t\n\t```\n\tvar emptyString = \"\"               // empty string literal\n\tvar anotherEmptyString = String()  // initializer syntax\n\t// these two strings are both empty, and are equivalent to each other\n\t```\n\t\n- String Mutability\n\t\n\t```\n\tvar variableString = \"Horse\"\n\tvariableString += \" and carriage\"\n\t// variableString is now \"Horse and carriage\"\n\t \n\tlet constantString = \"Highlander\"\n\tconstantString += \" and another Highlander\"\n\t// this reports a compile-time error - a constant string cannot be modified\n\t```\n\t\n\t\n\t\n\t\n","source":"_posts/2018-01-29-데이터 타입 기본.md","raw":"---\nlayout: post\ntitle:  \"데이터 타입 기본\"\ndate:   2018-01-29\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309>\n\n## Integers\n\n-  signed (positive, zero, or negative)\n-  unsigned (positive or zero)\n\t\n\t-  8-bit unsigned integer : UInt8\n\t-  32-bit signed integer : Int32\n\n- Int\n\n\t- On a 32-bit platform, Int is the same size as Int32.\n\t- On a 64-bit platform, Int is the same size as Int64.\n\n\t- always use Int for integer values in your code\n\n- UInt\n\n\t- On a 32-bit platform, UInt is the same size as UInt32.\n\t- On a 64-bit platform, UInt is the same size as UInt64.\n\n\t- Int is preferred, even when the values to be stored are known to be nonnegative\n\n## Booleans\n\n\t```\n\tlet orangesAreOrange = true\n\tlet turnipsAreDelicious = false\n\t\n\tif turnipsAreDelicious {\n\t    print(\"Mmm, tasty turnips!\")\n\t} else {\n\t    print(\"Eww, turnips are horrible.\")\n\t}\n\t\n\t// Prints \"Eww, turnips are horrible.\"\n\t```\n\n- Swift’s type safety prevents non-Boolean values from being substituted for Bool\n\n\t```\n\tlet i = 1\n\tif i {\n\t    // this example will not compile, and will report an error\n\t}\n\t```\n\n- The result of the i == 1 comparison is of type Bool,\n- and so this second example passes the type-check. \n\n\t```\n\tlet i = 1\n\tif i == 1 {\n\t    // this example will compile successfully\n\t}\n\t```\n\n## Floating-Point Numbers\n\n- Double represents a 64-bit floating-point number.\n- Float represents a 32-bit floating-point number.\n\n\t- In situations where either type would be appropriate, Double is preferred.\n\n## Strings and Characters\n\n- String Literals\n\t\n\t- A literal value is a value that appears directly in your source code\n\t- Swift infers a type of String for the someString constant \n\t- because it’s initialized with a string literal value.\n\t\n\t\t```\n\t\tlet someString = \"Some string literal value\"\n\t\t```\t\n\n- Initializing an Empty String\n\t\n\t```\n\tvar emptyString = \"\"               // empty string literal\n\tvar anotherEmptyString = String()  // initializer syntax\n\t// these two strings are both empty, and are equivalent to each other\n\t```\n\t\n- String Mutability\n\t\n\t```\n\tvar variableString = \"Horse\"\n\tvariableString += \" and carriage\"\n\t// variableString is now \"Horse and carriage\"\n\t \n\tlet constantString = \"Highlander\"\n\tconstantString += \" and another Highlander\"\n\t// this reports a compile-time error - a constant string cannot be modified\n\t```\n\t\n\t\n\t\n\t\n","slug":"2018-01-29-데이터 타입 기본","published":1,"updated":"2018-04-16T04:14:29.348Z","comments":1,"photos":[],"link":"","_id":"cjp6k65c4007e31x71qm1hiq2","content":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309</a></p>\n<h2 id=\"Integers\"><a href=\"#Integers\" class=\"headerlink\" title=\"Integers\"></a>Integers</h2><ul>\n<li>signed (positive, zero, or negative)</li>\n<li><p>unsigned (positive or zero)</p>\n<ul>\n<li>8-bit unsigned integer : UInt8</li>\n<li>32-bit signed integer : Int32</li>\n</ul>\n</li>\n<li><p>Int</p>\n<ul>\n<li>On a 32-bit platform, Int is the same size as Int32.</li>\n<li><p>On a 64-bit platform, Int is the same size as Int64.</p>\n</li>\n<li><p>always use Int for integer values in your code</p>\n</li>\n</ul>\n</li>\n<li><p>UInt</p>\n<ul>\n<li>On a 32-bit platform, UInt is the same size as UInt32.</li>\n<li><p>On a 64-bit platform, UInt is the same size as UInt64.</p>\n</li>\n<li><p>Int is preferred, even when the values to be stored are known to be nonnegative</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Booleans\"><a href=\"#Booleans\" class=\"headerlink\" title=\"Booleans\"></a>Booleans</h2><pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let orangesAreOrange = true</span><br><span class=\"line\">let turnipsAreDelicious = false</span><br><span class=\"line\"></span><br><span class=\"line\">if turnipsAreDelicious &#123;</span><br><span class=\"line\">    print(&quot;Mmm, tasty turnips!&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;Eww, turnips are horrible.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Prints &quot;Eww, turnips are horrible.&quot;</span><br></pre></td></tr></table></figure>\n</code></pre><ul>\n<li><p>Swift’s type safety prevents non-Boolean values from being substituted for Bool</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let i = 1</span><br><span class=\"line\">if i &#123;</span><br><span class=\"line\">    // this example will not compile, and will report an error</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>The result of the i == 1 comparison is of type Bool,</p>\n</li>\n<li><p>and so this second example passes the type-check. </p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let i = 1</span><br><span class=\"line\">if i == 1 &#123;</span><br><span class=\"line\">    // this example will compile successfully</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Floating-Point-Numbers\"><a href=\"#Floating-Point-Numbers\" class=\"headerlink\" title=\"Floating-Point Numbers\"></a>Floating-Point Numbers</h2><ul>\n<li>Double represents a 64-bit floating-point number.</li>\n<li><p>Float represents a 32-bit floating-point number.</p>\n<ul>\n<li>In situations where either type would be appropriate, Double is preferred.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Strings-and-Characters\"><a href=\"#Strings-and-Characters\" class=\"headerlink\" title=\"Strings and Characters\"></a>Strings and Characters</h2><ul>\n<li><p>String Literals</p>\n<ul>\n<li>A literal value is a value that appears directly in your source code</li>\n<li>Swift infers a type of String for the someString constant </li>\n<li><p>because it’s initialized with a string literal value.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\tlet someString = &quot;Some string literal value&quot;</span><br><span class=\"line\">\t\t```\t</span><br><span class=\"line\"></span><br><span class=\"line\">- Initializing an Empty String</span><br></pre></td></tr></table></figure>\n<p>var emptyString = “”               // empty string literal<br>var anotherEmptyString = String()  // initializer syntax<br>// these two strings are both empty, and are equivalent to each other</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br><span class=\"line\">- String Mutability</span><br></pre></td></tr></table></figure>\n<p>var variableString = “Horse”<br>variableString += “ and carriage”<br>// variableString is now “Horse and carriage”</p>\n<p>let constantString = “Highlander”<br>constantString += “ and another Highlander”<br>// this reports a compile-time error - a constant string cannot be modified<br><code>`</code></p>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309</a></p>\n<h2 id=\"Integers\"><a href=\"#Integers\" class=\"headerlink\" title=\"Integers\"></a>Integers</h2><ul>\n<li>signed (positive, zero, or negative)</li>\n<li><p>unsigned (positive or zero)</p>\n<ul>\n<li>8-bit unsigned integer : UInt8</li>\n<li>32-bit signed integer : Int32</li>\n</ul>\n</li>\n<li><p>Int</p>\n<ul>\n<li>On a 32-bit platform, Int is the same size as Int32.</li>\n<li><p>On a 64-bit platform, Int is the same size as Int64.</p>\n</li>\n<li><p>always use Int for integer values in your code</p>\n</li>\n</ul>\n</li>\n<li><p>UInt</p>\n<ul>\n<li>On a 32-bit platform, UInt is the same size as UInt32.</li>\n<li><p>On a 64-bit platform, UInt is the same size as UInt64.</p>\n</li>\n<li><p>Int is preferred, even when the values to be stored are known to be nonnegative</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Booleans\"><a href=\"#Booleans\" class=\"headerlink\" title=\"Booleans\"></a>Booleans</h2><pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let orangesAreOrange = true</span><br><span class=\"line\">let turnipsAreDelicious = false</span><br><span class=\"line\"></span><br><span class=\"line\">if turnipsAreDelicious &#123;</span><br><span class=\"line\">    print(&quot;Mmm, tasty turnips!&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;Eww, turnips are horrible.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Prints &quot;Eww, turnips are horrible.&quot;</span><br></pre></td></tr></table></figure>\n</code></pre><ul>\n<li><p>Swift’s type safety prevents non-Boolean values from being substituted for Bool</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let i = 1</span><br><span class=\"line\">if i &#123;</span><br><span class=\"line\">    // this example will not compile, and will report an error</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>The result of the i == 1 comparison is of type Bool,</p>\n</li>\n<li><p>and so this second example passes the type-check. </p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let i = 1</span><br><span class=\"line\">if i == 1 &#123;</span><br><span class=\"line\">    // this example will compile successfully</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Floating-Point-Numbers\"><a href=\"#Floating-Point-Numbers\" class=\"headerlink\" title=\"Floating-Point Numbers\"></a>Floating-Point Numbers</h2><ul>\n<li>Double represents a 64-bit floating-point number.</li>\n<li><p>Float represents a 32-bit floating-point number.</p>\n<ul>\n<li>In situations where either type would be appropriate, Double is preferred.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Strings-and-Characters\"><a href=\"#Strings-and-Characters\" class=\"headerlink\" title=\"Strings and Characters\"></a>Strings and Characters</h2><ul>\n<li><p>String Literals</p>\n<ul>\n<li>A literal value is a value that appears directly in your source code</li>\n<li>Swift infers a type of String for the someString constant </li>\n<li><p>because it’s initialized with a string literal value.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\tlet someString = &quot;Some string literal value&quot;</span><br><span class=\"line\">\t\t```\t</span><br><span class=\"line\"></span><br><span class=\"line\">- Initializing an Empty String</span><br></pre></td></tr></table></figure>\n<p>var emptyString = “”               // empty string literal<br>var anotherEmptyString = String()  // initializer syntax<br>// these two strings are both empty, and are equivalent to each other</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br><span class=\"line\">- String Mutability</span><br></pre></td></tr></table></figure>\n<p>var variableString = “Horse”<br>variableString += “ and carriage”<br>// variableString is now “Horse and carriage”</p>\n<p>let constantString = “Highlander”<br>constantString += “ and another Highlander”<br>// this reports a compile-time error - a constant string cannot be modified<br><code>`</code></p>\n</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"연산자","date":"2018-01-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60>\n\n- Unary Minus Operator\n\n\t```\n\tlet three = 3\n\tlet minusThree = -three       // minusThree equals -3\n\tlet plusThree = -minusThree   // plusThree equals 3, or \"minus minus three\"\n\t```\n\n- Unary Plus Operator\n\n\t```\n\tlet minusSix = -6\n\tlet alsoMinusSix = +minusSix  // alsoMinusSix equals -6\n\t```\n\t\n- Comparison Operators\n\n\t```\n\t(1, \"zebra\") < (2, \"apple\")   // true because 1 is less than 2; \"zebra\" and \"apple\" are not compared\n\t(3, \"apple\") < (3, \"bird\")    // true because 3 is equal to 3, and \"apple\" is less than \"bird\"\n\t(4, \"dog\") == (4, \"dog\")      // true because 4 is equal to 4, and \"dog\" is equal to \"dog\"\n\t\n\t(\"blue\", -1) < (\"purple\", 1)        // OK, evaluates to true\n\t(\"blue\", false) < (\"purple\", true)  // Error because < can't compare Boolean values\n\t```\n\t\n- Range Operators\n\n\t```\n\tfor index in 1...5 {\n\t    print(\"\\(index) times 5 is \\(index * 5)\")\n\t}\n\t// 1 times 5 is 5\n\t// 2 times 5 is 10\n\t// 3 times 5 is 15\n\t// 4 times 5 is 20\n\t// 5 times 5 is 25\n\t\n\tlet names = [\"Anna\", \"Alex\", \"Brian\", \"Jack\"]\n\tlet count = names.count\n\tfor i in 0..<count {\n\t    print(\"Person \\(i + 1) is called \\(names[i])\")\n\t}\n\t// Person 1 is called Anna\n\t// Person 2 is called Alex\n\t// Person 3 is called Brian\n\t// Person 4 is called Jack\n\t\n\tfor name in names[2...] {\n\t    print(name)\n\t}\n\t// Brian\n\t// Jack\n\t \n\tfor name in names[...2] {\n\t    print(name)\n\t}\n\t// Anna\n\t// Alex\n\t// Brian\n\t\n\tfor name in names[..<2] {\n\t    print(name)\n\t}\n\t// Anna\n\t// Alex\n\t\n\tlet range = ...5\n\trange.contains(7)   // false\n\trange.contains(4)   // true\n\trange.contains(-1)  // true\n\t```\n\n\t\n\t\n\n\n\t\n\n\n\t\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n","source":"_posts/2018-01-30-연산자.md","raw":"---\nlayout: post\ntitle:  \"연산자\"\ndate:   2018-01-30\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60>\n\n- Unary Minus Operator\n\n\t```\n\tlet three = 3\n\tlet minusThree = -three       // minusThree equals -3\n\tlet plusThree = -minusThree   // plusThree equals 3, or \"minus minus three\"\n\t```\n\n- Unary Plus Operator\n\n\t```\n\tlet minusSix = -6\n\tlet alsoMinusSix = +minusSix  // alsoMinusSix equals -6\n\t```\n\t\n- Comparison Operators\n\n\t```\n\t(1, \"zebra\") < (2, \"apple\")   // true because 1 is less than 2; \"zebra\" and \"apple\" are not compared\n\t(3, \"apple\") < (3, \"bird\")    // true because 3 is equal to 3, and \"apple\" is less than \"bird\"\n\t(4, \"dog\") == (4, \"dog\")      // true because 4 is equal to 4, and \"dog\" is equal to \"dog\"\n\t\n\t(\"blue\", -1) < (\"purple\", 1)        // OK, evaluates to true\n\t(\"blue\", false) < (\"purple\", true)  // Error because < can't compare Boolean values\n\t```\n\t\n- Range Operators\n\n\t```\n\tfor index in 1...5 {\n\t    print(\"\\(index) times 5 is \\(index * 5)\")\n\t}\n\t// 1 times 5 is 5\n\t// 2 times 5 is 10\n\t// 3 times 5 is 15\n\t// 4 times 5 is 20\n\t// 5 times 5 is 25\n\t\n\tlet names = [\"Anna\", \"Alex\", \"Brian\", \"Jack\"]\n\tlet count = names.count\n\tfor i in 0..<count {\n\t    print(\"Person \\(i + 1) is called \\(names[i])\")\n\t}\n\t// Person 1 is called Anna\n\t// Person 2 is called Alex\n\t// Person 3 is called Brian\n\t// Person 4 is called Jack\n\t\n\tfor name in names[2...] {\n\t    print(name)\n\t}\n\t// Brian\n\t// Jack\n\t \n\tfor name in names[...2] {\n\t    print(name)\n\t}\n\t// Anna\n\t// Alex\n\t// Brian\n\t\n\tfor name in names[..<2] {\n\t    print(name)\n\t}\n\t// Anna\n\t// Alex\n\t\n\tlet range = ...5\n\trange.contains(7)   // false\n\trange.contains(4)   // true\n\trange.contains(-1)  // true\n\t```\n\n\t\n\t\n\n\n\t\n\n\n\t\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n","slug":"2018-01-30-연산자","published":1,"updated":"2018-04-16T04:14:33.665Z","comments":1,"photos":[],"link":"","_id":"cjp6k65c6007g31x7rnhbdurr","content":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60</a></p>\n<ul>\n<li><p>Unary Minus Operator</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let three = 3</span><br><span class=\"line\">let minusThree = -three       // minusThree equals -3</span><br><span class=\"line\">let plusThree = -minusThree   // plusThree equals 3, or &quot;minus minus three&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Unary Plus Operator</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let minusSix = -6</span><br><span class=\"line\">let alsoMinusSix = +minusSix  // alsoMinusSix equals -6</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Comparison Operators</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1, &quot;zebra&quot;) &lt; (2, &quot;apple&quot;)   // true because 1 is less than 2; &quot;zebra&quot; and &quot;apple&quot; are not compared</span><br><span class=\"line\">(3, &quot;apple&quot;) &lt; (3, &quot;bird&quot;)    // true because 3 is equal to 3, and &quot;apple&quot; is less than &quot;bird&quot;</span><br><span class=\"line\">(4, &quot;dog&quot;) == (4, &quot;dog&quot;)      // true because 4 is equal to 4, and &quot;dog&quot; is equal to &quot;dog&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">(&quot;blue&quot;, -1) &lt; (&quot;purple&quot;, 1)        // OK, evaluates to true</span><br><span class=\"line\">(&quot;blue&quot;, false) &lt; (&quot;purple&quot;, true)  // Error because &lt; can&apos;t compare Boolean values</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Range Operators</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for index in 1...5 &#123;</span><br><span class=\"line\">    print(&quot;\\(index) times 5 is \\(index * 5)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 1 times 5 is 5</span><br><span class=\"line\">// 2 times 5 is 10</span><br><span class=\"line\">// 3 times 5 is 15</span><br><span class=\"line\">// 4 times 5 is 20</span><br><span class=\"line\">// 5 times 5 is 25</span><br><span class=\"line\"></span><br><span class=\"line\">let names = [&quot;Anna&quot;, &quot;Alex&quot;, &quot;Brian&quot;, &quot;Jack&quot;]</span><br><span class=\"line\">let count = names.count</span><br><span class=\"line\">for i in 0..&lt;count &#123;</span><br><span class=\"line\">    print(&quot;Person \\(i + 1) is called \\(names[i])&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Person 1 is called Anna</span><br><span class=\"line\">// Person 2 is called Alex</span><br><span class=\"line\">// Person 3 is called Brian</span><br><span class=\"line\">// Person 4 is called Jack</span><br><span class=\"line\"></span><br><span class=\"line\">for name in names[2...] &#123;</span><br><span class=\"line\">    print(name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Brian</span><br><span class=\"line\">// Jack</span><br><span class=\"line\"> </span><br><span class=\"line\">for name in names[...2] &#123;</span><br><span class=\"line\">    print(name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Anna</span><br><span class=\"line\">// Alex</span><br><span class=\"line\">// Brian</span><br><span class=\"line\"></span><br><span class=\"line\">for name in names[..&lt;2] &#123;</span><br><span class=\"line\">    print(name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Anna</span><br><span class=\"line\">// Alex</span><br><span class=\"line\"></span><br><span class=\"line\">let range = ...5</span><br><span class=\"line\">range.contains(7)   // false</span><br><span class=\"line\">range.contains(4)   // true</span><br><span class=\"line\">range.contains(-1)  // true</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60</a></p>\n<ul>\n<li><p>Unary Minus Operator</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let three = 3</span><br><span class=\"line\">let minusThree = -three       // minusThree equals -3</span><br><span class=\"line\">let plusThree = -minusThree   // plusThree equals 3, or &quot;minus minus three&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Unary Plus Operator</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let minusSix = -6</span><br><span class=\"line\">let alsoMinusSix = +minusSix  // alsoMinusSix equals -6</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Comparison Operators</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1, &quot;zebra&quot;) &lt; (2, &quot;apple&quot;)   // true because 1 is less than 2; &quot;zebra&quot; and &quot;apple&quot; are not compared</span><br><span class=\"line\">(3, &quot;apple&quot;) &lt; (3, &quot;bird&quot;)    // true because 3 is equal to 3, and &quot;apple&quot; is less than &quot;bird&quot;</span><br><span class=\"line\">(4, &quot;dog&quot;) == (4, &quot;dog&quot;)      // true because 4 is equal to 4, and &quot;dog&quot; is equal to &quot;dog&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">(&quot;blue&quot;, -1) &lt; (&quot;purple&quot;, 1)        // OK, evaluates to true</span><br><span class=\"line\">(&quot;blue&quot;, false) &lt; (&quot;purple&quot;, true)  // Error because &lt; can&apos;t compare Boolean values</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Range Operators</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for index in 1...5 &#123;</span><br><span class=\"line\">    print(&quot;\\(index) times 5 is \\(index * 5)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 1 times 5 is 5</span><br><span class=\"line\">// 2 times 5 is 10</span><br><span class=\"line\">// 3 times 5 is 15</span><br><span class=\"line\">// 4 times 5 is 20</span><br><span class=\"line\">// 5 times 5 is 25</span><br><span class=\"line\"></span><br><span class=\"line\">let names = [&quot;Anna&quot;, &quot;Alex&quot;, &quot;Brian&quot;, &quot;Jack&quot;]</span><br><span class=\"line\">let count = names.count</span><br><span class=\"line\">for i in 0..&lt;count &#123;</span><br><span class=\"line\">    print(&quot;Person \\(i + 1) is called \\(names[i])&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Person 1 is called Anna</span><br><span class=\"line\">// Person 2 is called Alex</span><br><span class=\"line\">// Person 3 is called Brian</span><br><span class=\"line\">// Person 4 is called Jack</span><br><span class=\"line\"></span><br><span class=\"line\">for name in names[2...] &#123;</span><br><span class=\"line\">    print(name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Brian</span><br><span class=\"line\">// Jack</span><br><span class=\"line\"> </span><br><span class=\"line\">for name in names[...2] &#123;</span><br><span class=\"line\">    print(name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Anna</span><br><span class=\"line\">// Alex</span><br><span class=\"line\">// Brian</span><br><span class=\"line\"></span><br><span class=\"line\">for name in names[..&lt;2] &#123;</span><br><span class=\"line\">    print(name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Anna</span><br><span class=\"line\">// Alex</span><br><span class=\"line\"></span><br><span class=\"line\">let range = ...5</span><br><span class=\"line\">range.contains(7)   // false</span><br><span class=\"line\">range.contains(4)   // true</span><br><span class=\"line\">range.contains(-1)  // true</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"layout":"post","title":"벽장문의 이동","date":"2018-01-18T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2666>\n\n## 틀린 풀이\n\n- 어렵다\n- 재귀 사용\n- 문이 있는지 없는지 체크 \n\t- 문이 없으면 옮기기\n\t- 문이 있으면 좌우 확인 -> 다시 문이 있는지 없는지 체크\n\t\n\t\n","source":"_posts/2018-01-19-벽장문의 이동.md","raw":"---\nlayout: post\ntitle:  \"벽장문의 이동\"\ndate:   2018-01-19\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2666>\n\n## 틀린 풀이\n\n- 어렵다\n- 재귀 사용\n- 문이 있는지 없는지 체크 \n\t- 문이 없으면 옮기기\n\t- 문이 있으면 좌우 확인 -> 다시 문이 있는지 없는지 체크\n\t\n\t\n","slug":"2018-01-19-벽장문의 이동","published":1,"updated":"2018-04-16T04:13:55.477Z","comments":1,"photos":[],"link":"","_id":"cjp6k65c7007j31x7atar3h1u","content":"<p><a href=\"https://www.acmicpc.net/problem/2666\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2666</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>어렵다</li>\n<li>재귀 사용</li>\n<li>문이 있는지 없는지 체크 <ul>\n<li>문이 없으면 옮기기</li>\n<li>문이 있으면 좌우 확인 -&gt; 다시 문이 있는지 없는지 체크</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2666\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2666</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>어렵다</li>\n<li>재귀 사용</li>\n<li>문이 있는지 없는지 체크 <ul>\n<li>문이 없으면 옮기기</li>\n<li>문이 있으면 좌우 확인 -&gt; 다시 문이 있는지 없는지 체크</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"흐름제어","date":"2018-01-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60>\n\n## For-In Loops\n\n-  to iterate over the items in an array:\n\n```\nlet names = [\"Anna\", \"Alex\", \"Brian\", \"Jack\"]\nfor name in names {\n    print(\"Hello, \\(name)!\")\n}\n// Hello, Anna!\n// Hello, Alex!\n// Hello, Brian!\n// Hello, Jack!\n```\n\n- The contents of a Dictionary are inherently unordered, and iterating over them does not guarantee the order in which they will be retrieved\n\n```\nlet numberOfLegs = [\"spider\": 8, \"ant\": 6, \"cat\": 4]\nfor (animalName, legCount) in numberOfLegs {\n    print(\"\\(animalName)s have \\(legCount) legs\")\n}\n// ants have 6 legs\n// spiders have 8 legs\n// cats have 4 legs\n\n//\n```\n\n- for-in loops with numeric ranges.\n\n```\nfor index in 1...5 {\n    print(\"\\(index) times 5 is \\(index * 5)\")\n}\n// 1 times 5 is 5\n// 2 times 5 is 10\n// 3 times 5 is 15\n// 4 times 5 is 20\n// 5 times 5 is 25\n```\n\n- If you don’t need each value from a sequence\n\n```\nlet base = 3\nlet power = 10\nvar answer = 1\nfor _ in 1...power {\n    answer *= base\n}\nprint(\"\\(base) to the power of \\(power) is \\(answer)\")\n// Prints \"3 to the power of 10 is 59049\"\n```\n\n-  to include the lower bound but not the upper bound\n\n```\nlet minutes = 60\nfor tickMark in 0..<minutes {\n    // render the tick mark each minute (60 times)\n}\n```\n\n- stride(from:to:by:)\n\n```\nlet minuteInterval = 5\nfor tickMark in stride(from: 0, to: minutes, by: minuteInterval) {\n    // render the tick mark every 5 minutes (0, 5, 10, 15 ... 45, 50, 55)\n}\n```\n\n- stride(from:through:by:)\n\n```\nlet hours = 12\nlet hourInterval = 3\nfor tickMark in stride(from: 3, through: hours, by: hourInterval) {\n    // render the tick mark every 3 hours (3, 6, 9, 12)\n}\n```\n\n## Repeat-While\n\n```\nrepeat {\n    statements\n} while condition\n```\n\n## Switch\n\n```\nswitch some value to consider {\ncase value 1:\n    respond to value 1\ncase value 2,\n     value 3:\n    respond to value 2 or 3\ndefault:\n    otherwise, do something else\n}\n```\n\n\n\n\n\n\t\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n","source":"_posts/2018-01-30-흐름제어.md","raw":"---\nlayout: post\ntitle:  \"흐름제어\"\ndate:   2018-01-30\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60>\n\n## For-In Loops\n\n-  to iterate over the items in an array:\n\n```\nlet names = [\"Anna\", \"Alex\", \"Brian\", \"Jack\"]\nfor name in names {\n    print(\"Hello, \\(name)!\")\n}\n// Hello, Anna!\n// Hello, Alex!\n// Hello, Brian!\n// Hello, Jack!\n```\n\n- The contents of a Dictionary are inherently unordered, and iterating over them does not guarantee the order in which they will be retrieved\n\n```\nlet numberOfLegs = [\"spider\": 8, \"ant\": 6, \"cat\": 4]\nfor (animalName, legCount) in numberOfLegs {\n    print(\"\\(animalName)s have \\(legCount) legs\")\n}\n// ants have 6 legs\n// spiders have 8 legs\n// cats have 4 legs\n\n//\n```\n\n- for-in loops with numeric ranges.\n\n```\nfor index in 1...5 {\n    print(\"\\(index) times 5 is \\(index * 5)\")\n}\n// 1 times 5 is 5\n// 2 times 5 is 10\n// 3 times 5 is 15\n// 4 times 5 is 20\n// 5 times 5 is 25\n```\n\n- If you don’t need each value from a sequence\n\n```\nlet base = 3\nlet power = 10\nvar answer = 1\nfor _ in 1...power {\n    answer *= base\n}\nprint(\"\\(base) to the power of \\(power) is \\(answer)\")\n// Prints \"3 to the power of 10 is 59049\"\n```\n\n-  to include the lower bound but not the upper bound\n\n```\nlet minutes = 60\nfor tickMark in 0..<minutes {\n    // render the tick mark each minute (60 times)\n}\n```\n\n- stride(from:to:by:)\n\n```\nlet minuteInterval = 5\nfor tickMark in stride(from: 0, to: minutes, by: minuteInterval) {\n    // render the tick mark every 5 minutes (0, 5, 10, 15 ... 45, 50, 55)\n}\n```\n\n- stride(from:through:by:)\n\n```\nlet hours = 12\nlet hourInterval = 3\nfor tickMark in stride(from: 3, through: hours, by: hourInterval) {\n    // render the tick mark every 3 hours (3, 6, 9, 12)\n}\n```\n\n## Repeat-While\n\n```\nrepeat {\n    statements\n} while condition\n```\n\n## Switch\n\n```\nswitch some value to consider {\ncase value 1:\n    respond to value 1\ncase value 2,\n     value 3:\n    respond to value 2 or 3\ndefault:\n    otherwise, do something else\n}\n```\n\n\n\n\n\n\t\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n","slug":"2018-01-30-흐름제어","published":1,"updated":"2018-04-16T04:14:42.530Z","comments":1,"photos":[],"link":"","_id":"cjp6k65c8007l31x76ub02evh","content":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60</a></p>\n<h2 id=\"For-In-Loops\"><a href=\"#For-In-Loops\" class=\"headerlink\" title=\"For-In Loops\"></a>For-In Loops</h2><ul>\n<li>to iterate over the items in an array:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let names = [&quot;Anna&quot;, &quot;Alex&quot;, &quot;Brian&quot;, &quot;Jack&quot;]</span><br><span class=\"line\">for name in names &#123;</span><br><span class=\"line\">    print(&quot;Hello, \\(name)!&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Hello, Anna!</span><br><span class=\"line\">// Hello, Alex!</span><br><span class=\"line\">// Hello, Brian!</span><br><span class=\"line\">// Hello, Jack!</span><br></pre></td></tr></table></figure>\n<ul>\n<li>The contents of a Dictionary are inherently unordered, and iterating over them does not guarantee the order in which they will be retrieved</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let numberOfLegs = [&quot;spider&quot;: 8, &quot;ant&quot;: 6, &quot;cat&quot;: 4]</span><br><span class=\"line\">for (animalName, legCount) in numberOfLegs &#123;</span><br><span class=\"line\">    print(&quot;\\(animalName)s have \\(legCount) legs&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// ants have 6 legs</span><br><span class=\"line\">// spiders have 8 legs</span><br><span class=\"line\">// cats have 4 legs</span><br><span class=\"line\"></span><br><span class=\"line\">//</span><br></pre></td></tr></table></figure>\n<ul>\n<li>for-in loops with numeric ranges.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for index in 1...5 &#123;</span><br><span class=\"line\">    print(&quot;\\(index) times 5 is \\(index * 5)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 1 times 5 is 5</span><br><span class=\"line\">// 2 times 5 is 10</span><br><span class=\"line\">// 3 times 5 is 15</span><br><span class=\"line\">// 4 times 5 is 20</span><br><span class=\"line\">// 5 times 5 is 25</span><br></pre></td></tr></table></figure>\n<ul>\n<li>If you don’t need each value from a sequence</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let base = 3</span><br><span class=\"line\">let power = 10</span><br><span class=\"line\">var answer = 1</span><br><span class=\"line\">for _ in 1...power &#123;</span><br><span class=\"line\">    answer *= base</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">print(&quot;\\(base) to the power of \\(power) is \\(answer)&quot;)</span><br><span class=\"line\">// Prints &quot;3 to the power of 10 is 59049&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>to include the lower bound but not the upper bound</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let minutes = 60</span><br><span class=\"line\">for tickMark in 0..&lt;minutes &#123;</span><br><span class=\"line\">    // render the tick mark each minute (60 times)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>stride(from:to:by:)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let minuteInterval = 5</span><br><span class=\"line\">for tickMark in stride(from: 0, to: minutes, by: minuteInterval) &#123;</span><br><span class=\"line\">    // render the tick mark every 5 minutes (0, 5, 10, 15 ... 45, 50, 55)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>stride(from:through:by:)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let hours = 12</span><br><span class=\"line\">let hourInterval = 3</span><br><span class=\"line\">for tickMark in stride(from: 3, through: hours, by: hourInterval) &#123;</span><br><span class=\"line\">    // render the tick mark every 3 hours (3, 6, 9, 12)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Repeat-While\"><a href=\"#Repeat-While\" class=\"headerlink\" title=\"Repeat-While\"></a>Repeat-While</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repeat &#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">&#125; while condition</span><br></pre></td></tr></table></figure>\n<h2 id=\"Switch\"><a href=\"#Switch\" class=\"headerlink\" title=\"Switch\"></a>Switch</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switch some value to consider &#123;</span><br><span class=\"line\">case value 1:</span><br><span class=\"line\">    respond to value 1</span><br><span class=\"line\">case value 2,</span><br><span class=\"line\">     value 3:</span><br><span class=\"line\">    respond to value 2 or 3</span><br><span class=\"line\">default:</span><br><span class=\"line\">    otherwise, do something else</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60</a></p>\n<h2 id=\"For-In-Loops\"><a href=\"#For-In-Loops\" class=\"headerlink\" title=\"For-In Loops\"></a>For-In Loops</h2><ul>\n<li>to iterate over the items in an array:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let names = [&quot;Anna&quot;, &quot;Alex&quot;, &quot;Brian&quot;, &quot;Jack&quot;]</span><br><span class=\"line\">for name in names &#123;</span><br><span class=\"line\">    print(&quot;Hello, \\(name)!&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Hello, Anna!</span><br><span class=\"line\">// Hello, Alex!</span><br><span class=\"line\">// Hello, Brian!</span><br><span class=\"line\">// Hello, Jack!</span><br></pre></td></tr></table></figure>\n<ul>\n<li>The contents of a Dictionary are inherently unordered, and iterating over them does not guarantee the order in which they will be retrieved</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let numberOfLegs = [&quot;spider&quot;: 8, &quot;ant&quot;: 6, &quot;cat&quot;: 4]</span><br><span class=\"line\">for (animalName, legCount) in numberOfLegs &#123;</span><br><span class=\"line\">    print(&quot;\\(animalName)s have \\(legCount) legs&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// ants have 6 legs</span><br><span class=\"line\">// spiders have 8 legs</span><br><span class=\"line\">// cats have 4 legs</span><br><span class=\"line\"></span><br><span class=\"line\">//</span><br></pre></td></tr></table></figure>\n<ul>\n<li>for-in loops with numeric ranges.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for index in 1...5 &#123;</span><br><span class=\"line\">    print(&quot;\\(index) times 5 is \\(index * 5)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 1 times 5 is 5</span><br><span class=\"line\">// 2 times 5 is 10</span><br><span class=\"line\">// 3 times 5 is 15</span><br><span class=\"line\">// 4 times 5 is 20</span><br><span class=\"line\">// 5 times 5 is 25</span><br></pre></td></tr></table></figure>\n<ul>\n<li>If you don’t need each value from a sequence</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let base = 3</span><br><span class=\"line\">let power = 10</span><br><span class=\"line\">var answer = 1</span><br><span class=\"line\">for _ in 1...power &#123;</span><br><span class=\"line\">    answer *= base</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">print(&quot;\\(base) to the power of \\(power) is \\(answer)&quot;)</span><br><span class=\"line\">// Prints &quot;3 to the power of 10 is 59049&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>to include the lower bound but not the upper bound</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let minutes = 60</span><br><span class=\"line\">for tickMark in 0..&lt;minutes &#123;</span><br><span class=\"line\">    // render the tick mark each minute (60 times)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>stride(from:to:by:)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let minuteInterval = 5</span><br><span class=\"line\">for tickMark in stride(from: 0, to: minutes, by: minuteInterval) &#123;</span><br><span class=\"line\">    // render the tick mark every 5 minutes (0, 5, 10, 15 ... 45, 50, 55)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>stride(from:through:by:)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let hours = 12</span><br><span class=\"line\">let hourInterval = 3</span><br><span class=\"line\">for tickMark in stride(from: 3, through: hours, by: hourInterval) &#123;</span><br><span class=\"line\">    // render the tick mark every 3 hours (3, 6, 9, 12)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Repeat-While\"><a href=\"#Repeat-While\" class=\"headerlink\" title=\"Repeat-While\"></a>Repeat-While</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repeat &#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">&#125; while condition</span><br></pre></td></tr></table></figure>\n<h2 id=\"Switch\"><a href=\"#Switch\" class=\"headerlink\" title=\"Switch\"></a>Switch</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switch some value to consider &#123;</span><br><span class=\"line\">case value 1:</span><br><span class=\"line\">    respond to value 1</span><br><span class=\"line\">case value 2,</span><br><span class=\"line\">     value 3:</span><br><span class=\"line\">    respond to value 2 or 3</span><br><span class=\"line\">default:</span><br><span class=\"line\">    otherwise, do something else</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"함수","date":"2018-01-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158>\n\n- Defining and Calling Functions\n\n```\nfunc greet(person: String) -> String {\n    let greeting = \"Hello, \" + person + \"!\"\n    return greeting\n}\n```\n\n```\nprint(greet(person: \"Anna\"))\n// Prints \"Hello, Anna!\"\nprint(greet(person: \"Brian\"))\n// Prints \"Hello, Brian!\"\n```\n\n- Functions with Multiple Return Values\n\n```\nfunc minMax(array: [Int]) -> (min: Int, max: Int) {\n    var currentMin = array[0]\n    var currentMax = array[0]\n    for value in array[1..<array.count] {\n        if value < currentMin {\n            currentMin = value\n        } else if value > currentMax {\n            currentMax = value\n        }\n    }\n    return (currentMin, currentMax)\n}\n```\n\n- Function Argument Labels and Parameter Names\n\n```\nfunc greet(person: String, from hometown: String) -> String {\n    return \"Hello \\(person)!  Glad you could visit from \\(hometown).\"\n}\nprint(greet(person: \"Bill\", from: \"Cupertino\"))\n// Prints \"Hello Bill!  Glad you could visit from Cupertino.\"\n```\n\n- Variadic Parameters\n\n\t- A variadic parameter accepts zero or more values of a specified type\n\n```\nfunc arithmeticMean(_ numbers: Double...) -> Double {\n    var total: Double = 0\n    for number in numbers {\n        total += number\n    }\n    return total / Double(numbers.count)\n}\narithmeticMean(1, 2, 3, 4, 5)\n// returns 3.0, which is the arithmetic mean of these five numbers\narithmeticMean(3, 8.25, 18.75)\n// returns 10.0, which is the arithmetic mean of these three numbers\n```\n\n- In-Out Parameters\n\n\t- If you want a function to modify a parameter’s value, and you want those changes to persist after the function call has ended, define that parameter as an in-out parameter instead.\n\n```\nfunc swapTwoInts(_ a: inout Int, _ b: inout Int) {\n    let temporaryA = a\n    a = b\n    b = temporaryA\n}\n\nvar someInt = 3\nvar anotherInt = 107\nswapTwoInts(&someInt, &anotherInt)\nprint(\"someInt is now \\(someInt), and anotherInt is now \\(anotherInt)\")\n// Prints \"someInt is now 107, and anotherInt is now 3\"\n```\n\n\n\t\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n","source":"_posts/2018-01-30-함수.md","raw":"---\nlayout: post\ntitle:  \"함수\"\ndate:   2018-01-30\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158>\n\n- Defining and Calling Functions\n\n```\nfunc greet(person: String) -> String {\n    let greeting = \"Hello, \" + person + \"!\"\n    return greeting\n}\n```\n\n```\nprint(greet(person: \"Anna\"))\n// Prints \"Hello, Anna!\"\nprint(greet(person: \"Brian\"))\n// Prints \"Hello, Brian!\"\n```\n\n- Functions with Multiple Return Values\n\n```\nfunc minMax(array: [Int]) -> (min: Int, max: Int) {\n    var currentMin = array[0]\n    var currentMax = array[0]\n    for value in array[1..<array.count] {\n        if value < currentMin {\n            currentMin = value\n        } else if value > currentMax {\n            currentMax = value\n        }\n    }\n    return (currentMin, currentMax)\n}\n```\n\n- Function Argument Labels and Parameter Names\n\n```\nfunc greet(person: String, from hometown: String) -> String {\n    return \"Hello \\(person)!  Glad you could visit from \\(hometown).\"\n}\nprint(greet(person: \"Bill\", from: \"Cupertino\"))\n// Prints \"Hello Bill!  Glad you could visit from Cupertino.\"\n```\n\n- Variadic Parameters\n\n\t- A variadic parameter accepts zero or more values of a specified type\n\n```\nfunc arithmeticMean(_ numbers: Double...) -> Double {\n    var total: Double = 0\n    for number in numbers {\n        total += number\n    }\n    return total / Double(numbers.count)\n}\narithmeticMean(1, 2, 3, 4, 5)\n// returns 3.0, which is the arithmetic mean of these five numbers\narithmeticMean(3, 8.25, 18.75)\n// returns 10.0, which is the arithmetic mean of these three numbers\n```\n\n- In-Out Parameters\n\n\t- If you want a function to modify a parameter’s value, and you want those changes to persist after the function call has ended, define that parameter as an in-out parameter instead.\n\n```\nfunc swapTwoInts(_ a: inout Int, _ b: inout Int) {\n    let temporaryA = a\n    a = b\n    b = temporaryA\n}\n\nvar someInt = 3\nvar anotherInt = 107\nswapTwoInts(&someInt, &anotherInt)\nprint(\"someInt is now \\(someInt), and anotherInt is now \\(anotherInt)\")\n// Prints \"someInt is now 107, and anotherInt is now 3\"\n```\n\n\n\t\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n","slug":"2018-01-30-함수","published":1,"updated":"2018-04-16T04:14:38.388Z","comments":1,"photos":[],"link":"","_id":"cjp6k65c9007n31x7s0idpmsu","content":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158</a></p>\n<ul>\n<li>Defining and Calling Functions</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func greet(person: String) -&gt; String &#123;</span><br><span class=\"line\">    let greeting = &quot;Hello, &quot; + person + &quot;!&quot;</span><br><span class=\"line\">    return greeting</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(greet(person: &quot;Anna&quot;))</span><br><span class=\"line\">// Prints &quot;Hello, Anna!&quot;</span><br><span class=\"line\">print(greet(person: &quot;Brian&quot;))</span><br><span class=\"line\">// Prints &quot;Hello, Brian!&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Functions with Multiple Return Values</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func minMax(array: [Int]) -&gt; (min: Int, max: Int) &#123;</span><br><span class=\"line\">    var currentMin = array[0]</span><br><span class=\"line\">    var currentMax = array[0]</span><br><span class=\"line\">    for value in array[1..&lt;array.count] &#123;</span><br><span class=\"line\">        if value &lt; currentMin &#123;</span><br><span class=\"line\">            currentMin = value</span><br><span class=\"line\">        &#125; else if value &gt; currentMax &#123;</span><br><span class=\"line\">            currentMax = value</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return (currentMin, currentMax)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Function Argument Labels and Parameter Names</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func greet(person: String, from hometown: String) -&gt; String &#123;</span><br><span class=\"line\">    return &quot;Hello \\(person)!  Glad you could visit from \\(hometown).&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">print(greet(person: &quot;Bill&quot;, from: &quot;Cupertino&quot;))</span><br><span class=\"line\">// Prints &quot;Hello Bill!  Glad you could visit from Cupertino.&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Variadic Parameters</p>\n<ul>\n<li>A variadic parameter accepts zero or more values of a specified type</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func arithmeticMean(_ numbers: Double...) -&gt; Double &#123;</span><br><span class=\"line\">    var total: Double = 0</span><br><span class=\"line\">    for number in numbers &#123;</span><br><span class=\"line\">        total += number</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return total / Double(numbers.count)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arithmeticMean(1, 2, 3, 4, 5)</span><br><span class=\"line\">// returns 3.0, which is the arithmetic mean of these five numbers</span><br><span class=\"line\">arithmeticMean(3, 8.25, 18.75)</span><br><span class=\"line\">// returns 10.0, which is the arithmetic mean of these three numbers</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>In-Out Parameters</p>\n<ul>\n<li>If you want a function to modify a parameter’s value, and you want those changes to persist after the function call has ended, define that parameter as an in-out parameter instead.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func swapTwoInts(_ a: inout Int, _ b: inout Int) &#123;</span><br><span class=\"line\">    let temporaryA = a</span><br><span class=\"line\">    a = b</span><br><span class=\"line\">    b = temporaryA</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var someInt = 3</span><br><span class=\"line\">var anotherInt = 107</span><br><span class=\"line\">swapTwoInts(&amp;someInt, &amp;anotherInt)</span><br><span class=\"line\">print(&quot;someInt is now \\(someInt), and anotherInt is now \\(anotherInt)&quot;)</span><br><span class=\"line\">// Prints &quot;someInt is now 107, and anotherInt is now 3&quot;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158</a></p>\n<ul>\n<li>Defining and Calling Functions</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func greet(person: String) -&gt; String &#123;</span><br><span class=\"line\">    let greeting = &quot;Hello, &quot; + person + &quot;!&quot;</span><br><span class=\"line\">    return greeting</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(greet(person: &quot;Anna&quot;))</span><br><span class=\"line\">// Prints &quot;Hello, Anna!&quot;</span><br><span class=\"line\">print(greet(person: &quot;Brian&quot;))</span><br><span class=\"line\">// Prints &quot;Hello, Brian!&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Functions with Multiple Return Values</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func minMax(array: [Int]) -&gt; (min: Int, max: Int) &#123;</span><br><span class=\"line\">    var currentMin = array[0]</span><br><span class=\"line\">    var currentMax = array[0]</span><br><span class=\"line\">    for value in array[1..&lt;array.count] &#123;</span><br><span class=\"line\">        if value &lt; currentMin &#123;</span><br><span class=\"line\">            currentMin = value</span><br><span class=\"line\">        &#125; else if value &gt; currentMax &#123;</span><br><span class=\"line\">            currentMax = value</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return (currentMin, currentMax)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Function Argument Labels and Parameter Names</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func greet(person: String, from hometown: String) -&gt; String &#123;</span><br><span class=\"line\">    return &quot;Hello \\(person)!  Glad you could visit from \\(hometown).&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">print(greet(person: &quot;Bill&quot;, from: &quot;Cupertino&quot;))</span><br><span class=\"line\">// Prints &quot;Hello Bill!  Glad you could visit from Cupertino.&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Variadic Parameters</p>\n<ul>\n<li>A variadic parameter accepts zero or more values of a specified type</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func arithmeticMean(_ numbers: Double...) -&gt; Double &#123;</span><br><span class=\"line\">    var total: Double = 0</span><br><span class=\"line\">    for number in numbers &#123;</span><br><span class=\"line\">        total += number</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return total / Double(numbers.count)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arithmeticMean(1, 2, 3, 4, 5)</span><br><span class=\"line\">// returns 3.0, which is the arithmetic mean of these five numbers</span><br><span class=\"line\">arithmeticMean(3, 8.25, 18.75)</span><br><span class=\"line\">// returns 10.0, which is the arithmetic mean of these three numbers</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>In-Out Parameters</p>\n<ul>\n<li>If you want a function to modify a parameter’s value, and you want those changes to persist after the function call has ended, define that parameter as an in-out parameter instead.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func swapTwoInts(_ a: inout Int, _ b: inout Int) &#123;</span><br><span class=\"line\">    let temporaryA = a</span><br><span class=\"line\">    a = b</span><br><span class=\"line\">    b = temporaryA</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var someInt = 3</span><br><span class=\"line\">var anotherInt = 107</span><br><span class=\"line\">swapTwoInts(&amp;someInt, &amp;anotherInt)</span><br><span class=\"line\">print(&quot;someInt is now \\(someInt), and anotherInt is now \\(anotherInt)&quot;)</span><br><span class=\"line\">// Prints &quot;someInt is now 107, and anotherInt is now 3&quot;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"단어수학","date":"2018-02-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1339>\n\n## 풀이\n\n- 백트렉킹 문제\n- 어렵다, 다시 풀어야함\n","source":"_posts/2018-02-03-단어수학.md","raw":"---\nlayout: post\ntitle:  \"단어수학\"\ndate:   2018-02-03\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1339>\n\n## 풀이\n\n- 백트렉킹 문제\n- 어렵다, 다시 풀어야함\n","slug":"2018-02-03-단어수학","published":1,"updated":"2018-04-16T04:14:50.177Z","comments":1,"photos":[],"link":"","_id":"cjp6k65cb007p31x7n8sauonz","content":"<p><a href=\"https://www.acmicpc.net/problem/1339\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1339</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>백트렉킹 문제</li>\n<li>어렵다, 다시 풀어야함</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1339\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1339</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>백트렉킹 문제</li>\n<li>어렵다, 다시 풀어야함</li>\n</ul>\n"},{"layout":"post","title":"책페이지","date":"2018-02-01T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1019>\n\n## 틀린 풀이\n\n- 각 페이지마다 접근해서 각 숫자가 몇개씩 있나 체크\n- ex)\n\n\t- 1~12 페이지가 있으면 \n\t- 1, 2, 3, 4,,,,12 차례로 접근\n\t- cnt[0] ~ cnt[9] 짜리 배열 ++\n\t- 10페이지 : cnt[1]++, cnt[0]++\n\n- 이렇게 접근하면 시간 초과 \n- 규칙 필요\n","source":"_posts/2018-02-02-책페이지.md","raw":"---\nlayout: post\ntitle:  \"책페이지\"\ndate:   2018-02-02\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1019>\n\n## 틀린 풀이\n\n- 각 페이지마다 접근해서 각 숫자가 몇개씩 있나 체크\n- ex)\n\n\t- 1~12 페이지가 있으면 \n\t- 1, 2, 3, 4,,,,12 차례로 접근\n\t- cnt[0] ~ cnt[9] 짜리 배열 ++\n\t- 10페이지 : cnt[1]++, cnt[0]++\n\n- 이렇게 접근하면 시간 초과 \n- 규칙 필요\n","slug":"2018-02-02-책페이지","published":1,"updated":"2018-04-16T04:14:46.729Z","comments":1,"photos":[],"link":"","_id":"cjp6k65cj007r31x7cer6v13o","content":"<p><a href=\"https://www.acmicpc.net/problem/1019\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1019</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>각 페이지마다 접근해서 각 숫자가 몇개씩 있나 체크</li>\n<li><p>ex)</p>\n<ul>\n<li>1~12 페이지가 있으면 </li>\n<li>1, 2, 3, 4,,,,12 차례로 접근</li>\n<li>cnt[0] ~ cnt[9] 짜리 배열 ++</li>\n<li>10페이지 : cnt[1]++, cnt[0]++</li>\n</ul>\n</li>\n<li><p>이렇게 접근하면 시간 초과 </p>\n</li>\n<li>규칙 필요</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1019\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1019</a></p>\n<h2 id=\"틀린-풀이\"><a href=\"#틀린-풀이\" class=\"headerlink\" title=\"틀린 풀이\"></a>틀린 풀이</h2><ul>\n<li>각 페이지마다 접근해서 각 숫자가 몇개씩 있나 체크</li>\n<li><p>ex)</p>\n<ul>\n<li>1~12 페이지가 있으면 </li>\n<li>1, 2, 3, 4,,,,12 차례로 접근</li>\n<li>cnt[0] ~ cnt[9] 짜리 배열 ++</li>\n<li>10페이지 : cnt[1]++, cnt[0]++</li>\n</ul>\n</li>\n<li><p>이렇게 접근하면 시간 초과 </p>\n</li>\n<li>규칙 필요</li>\n</ul>\n"},{"layout":"post","title":"TV크기","date":"2018-01-09T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1297>\n\n## 풀이\n\n- 대각선 = 루트 (가로의 제곱 + 세로의 제곱) \n- 루트 : Math.sqrt\n- (int) double : double to int \n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/math.png)\n","source":"_posts/2018-01-10-TV크기.md","raw":"---\nlayout: post\ntitle:  \"TV크기\"\ndate:   2018-01-10\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1297>\n\n## 풀이\n\n- 대각선 = 루트 (가로의 제곱 + 세로의 제곱) \n- 루트 : Math.sqrt\n- (int) double : double to int \n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/math.png)\n","slug":"2018-01-10-TV크기","published":1,"updated":"2018-04-16T04:13:12.073Z","comments":1,"photos":[],"link":"","_id":"cjp6k65d7007t31x79arc5str","content":"<p><a href=\"https://www.acmicpc.net/problem/1297\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1297</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>대각선 = 루트 (가로의 제곱 + 세로의 제곱) </li>\n<li>루트 : Math.sqrt</li>\n<li>(int) double : double to int </li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/math.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1297\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1297</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>대각선 = 루트 (가로의 제곱 + 세로의 제곱) </li>\n<li>루트 : Math.sqrt</li>\n<li>(int) double : double to int </li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/math.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"옵셔널","date":"2018-02-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/swift/>\n\n- You use optionals in situations where a value may be absen\n\n-  An optional represents two possibilities: \n\n\t- Either there is a value, and you can unwrap the optional to access that value, \n\t- or there isn’t a value at all.\n\n- The example below uses the initializer to try to convert a String into an Int:\n\n```\nlet possibleNumber = \"123\"\nlet convertedNumber = Int(possibleNumber)\n// convertedNumber is inferred to be of type \"Int?\", or \"optional Int\"\n```\n\n- Because the initializer might fail, it returns an optional Int, rather than an Int. \n- An optional Int is written as Int?, not Int. \n- The question mark indicates that the value it contains is optional, \n- meaning that it might contain some Int value, \n- or it might contain no value at all. \n- (It can’t contain anything else, such as a Bool value or a String value. It’s either an Int, or it’s nothing at all.)\n\n","source":"_posts/2018-02-06-옵셔널.md","raw":"---\nlayout: post\ntitle:  \"옵셔널\"\ndate:   2018-02-06\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/swift/>\n\n- You use optionals in situations where a value may be absen\n\n-  An optional represents two possibilities: \n\n\t- Either there is a value, and you can unwrap the optional to access that value, \n\t- or there isn’t a value at all.\n\n- The example below uses the initializer to try to convert a String into an Int:\n\n```\nlet possibleNumber = \"123\"\nlet convertedNumber = Int(possibleNumber)\n// convertedNumber is inferred to be of type \"Int?\", or \"optional Int\"\n```\n\n- Because the initializer might fail, it returns an optional Int, rather than an Int. \n- An optional Int is written as Int?, not Int. \n- The question mark indicates that the value it contains is optional, \n- meaning that it might contain some Int value, \n- or it might contain no value at all. \n- (It can’t contain anything else, such as a Bool value or a String value. It’s either an Int, or it’s nothing at all.)\n\n","slug":"2018-02-06-옵셔널","published":1,"updated":"2018-04-16T04:01:16.699Z","comments":1,"photos":[],"link":"","_id":"cjp6k65da007v31x7y5r4sbeh","content":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<ul>\n<li><p>You use optionals in situations where a value may be absen</p>\n</li>\n<li><p>An optional represents two possibilities: </p>\n<ul>\n<li>Either there is a value, and you can unwrap the optional to access that value, </li>\n<li>or there isn’t a value at all.</li>\n</ul>\n</li>\n<li><p>The example below uses the initializer to try to convert a String into an Int:</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let possibleNumber = &quot;123&quot;</span><br><span class=\"line\">let convertedNumber = Int(possibleNumber)</span><br><span class=\"line\">// convertedNumber is inferred to be of type &quot;Int?&quot;, or &quot;optional Int&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Because the initializer might fail, it returns an optional Int, rather than an Int. </li>\n<li>An optional Int is written as Int?, not Int. </li>\n<li>The question mark indicates that the value it contains is optional, </li>\n<li>meaning that it might contain some Int value, </li>\n<li>or it might contain no value at all. </li>\n<li>(It can’t contain anything else, such as a Bool value or a String value. It’s either an Int, or it’s nothing at all.)</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<ul>\n<li><p>You use optionals in situations where a value may be absen</p>\n</li>\n<li><p>An optional represents two possibilities: </p>\n<ul>\n<li>Either there is a value, and you can unwrap the optional to access that value, </li>\n<li>or there isn’t a value at all.</li>\n</ul>\n</li>\n<li><p>The example below uses the initializer to try to convert a String into an Int:</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let possibleNumber = &quot;123&quot;</span><br><span class=\"line\">let convertedNumber = Int(possibleNumber)</span><br><span class=\"line\">// convertedNumber is inferred to be of type &quot;Int?&quot;, or &quot;optional Int&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Because the initializer might fail, it returns an optional Int, rather than an Int. </li>\n<li>An optional Int is written as Int?, not Int. </li>\n<li>The question mark indicates that the value it contains is optional, </li>\n<li>meaning that it might contain some Int value, </li>\n<li>or it might contain no value at all. </li>\n<li>(It can’t contain anything else, such as a Bool value or a String value. It’s either an Int, or it’s nothing at all.)</li>\n</ul>\n"},{"layout":"post","title":"인스턴스 생성 및 소멸","date":"2018-02-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/swift/>\n\n## Initialization\n\n- Initialization is the process of preparing an instance of a class, structure, or enumeration for use. - This process involves setting an initial value for each stored property on that instance \n- and performing any other setup or initialization that is required before the new instance is ready for use.\n- You implement this initialization process by defining initializers, \n- which are like special methods that can be called to create a new instance of a particular type. \n- Unlike Objective-C initializers, Swift initializers do not return a value. \n- Their primary role is to ensure that new instances of a type are correctly initialized before they are used for the first time.\n\n```\nstruct Fahrenheit {\n    var temperature: Double\n    init() {\n        temperature = 32.0\n    }\n}\nvar f = Fahrenheit()\nprint(\"The default temperature is \\(f.temperature)° Fahrenheit\")\n// Prints \"The default temperature is 32.0° Fahrenheit\"\n```\n\n## Deinitialization\n\n- A deinitializer is called immediately before a class instance is deallocated. \n- You write deinitializers with the deinit keyword, \n- similar to how initializers are written with the init keyword. \n- Deinitializers are only available on class types.\n\n```\nclass Player {\n    var coinsInPurse: Int\n    init(coins: Int) {\n        coinsInPurse = Bank.distribute(coins: coins)\n    }\n    func win(coins: Int) {\n        coinsInPurse += Bank.distribute(coins: coins)\n    }\n    deinit {\n        Bank.receive(coins: coinsInPurse)\n    }\n}\n```\n\n","source":"_posts/2018-02-06-인스턴스 생성 및 소멸.md","raw":"---\nlayout: post\ntitle:  \"인스턴스 생성 및 소멸\"\ndate:   2018-02-06\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/swift/>\n\n## Initialization\n\n- Initialization is the process of preparing an instance of a class, structure, or enumeration for use. - This process involves setting an initial value for each stored property on that instance \n- and performing any other setup or initialization that is required before the new instance is ready for use.\n- You implement this initialization process by defining initializers, \n- which are like special methods that can be called to create a new instance of a particular type. \n- Unlike Objective-C initializers, Swift initializers do not return a value. \n- Their primary role is to ensure that new instances of a type are correctly initialized before they are used for the first time.\n\n```\nstruct Fahrenheit {\n    var temperature: Double\n    init() {\n        temperature = 32.0\n    }\n}\nvar f = Fahrenheit()\nprint(\"The default temperature is \\(f.temperature)° Fahrenheit\")\n// Prints \"The default temperature is 32.0° Fahrenheit\"\n```\n\n## Deinitialization\n\n- A deinitializer is called immediately before a class instance is deallocated. \n- You write deinitializers with the deinit keyword, \n- similar to how initializers are written with the init keyword. \n- Deinitializers are only available on class types.\n\n```\nclass Player {\n    var coinsInPurse: Int\n    init(coins: Int) {\n        coinsInPurse = Bank.distribute(coins: coins)\n    }\n    func win(coins: Int) {\n        coinsInPurse += Bank.distribute(coins: coins)\n    }\n    deinit {\n        Bank.receive(coins: coinsInPurse)\n    }\n}\n```\n\n","slug":"2018-02-06-인스턴스 생성 및 소멸","published":1,"updated":"2018-04-16T04:01:13.336Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dd007x31x7mn142n5e","content":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<h2 id=\"Initialization\"><a href=\"#Initialization\" class=\"headerlink\" title=\"Initialization\"></a>Initialization</h2><ul>\n<li>Initialization is the process of preparing an instance of a class, structure, or enumeration for use. - This process involves setting an initial value for each stored property on that instance </li>\n<li>and performing any other setup or initialization that is required before the new instance is ready for use.</li>\n<li>You implement this initialization process by defining initializers, </li>\n<li>which are like special methods that can be called to create a new instance of a particular type. </li>\n<li>Unlike Objective-C initializers, Swift initializers do not return a value. </li>\n<li>Their primary role is to ensure that new instances of a type are correctly initialized before they are used for the first time.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct Fahrenheit &#123;</span><br><span class=\"line\">    var temperature: Double</span><br><span class=\"line\">    init() &#123;</span><br><span class=\"line\">        temperature = 32.0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var f = Fahrenheit()</span><br><span class=\"line\">print(&quot;The default temperature is \\(f.temperature)° Fahrenheit&quot;)</span><br><span class=\"line\">// Prints &quot;The default temperature is 32.0° Fahrenheit&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Deinitialization\"><a href=\"#Deinitialization\" class=\"headerlink\" title=\"Deinitialization\"></a>Deinitialization</h2><ul>\n<li>A deinitializer is called immediately before a class instance is deallocated. </li>\n<li>You write deinitializers with the deinit keyword, </li>\n<li>similar to how initializers are written with the init keyword. </li>\n<li>Deinitializers are only available on class types.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Player &#123;</span><br><span class=\"line\">    var coinsInPurse: Int</span><br><span class=\"line\">    init(coins: Int) &#123;</span><br><span class=\"line\">        coinsInPurse = Bank.distribute(coins: coins)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    func win(coins: Int) &#123;</span><br><span class=\"line\">        coinsInPurse += Bank.distribute(coins: coins)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    deinit &#123;</span><br><span class=\"line\">        Bank.receive(coins: coinsInPurse)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<h2 id=\"Initialization\"><a href=\"#Initialization\" class=\"headerlink\" title=\"Initialization\"></a>Initialization</h2><ul>\n<li>Initialization is the process of preparing an instance of a class, structure, or enumeration for use. - This process involves setting an initial value for each stored property on that instance </li>\n<li>and performing any other setup or initialization that is required before the new instance is ready for use.</li>\n<li>You implement this initialization process by defining initializers, </li>\n<li>which are like special methods that can be called to create a new instance of a particular type. </li>\n<li>Unlike Objective-C initializers, Swift initializers do not return a value. </li>\n<li>Their primary role is to ensure that new instances of a type are correctly initialized before they are used for the first time.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct Fahrenheit &#123;</span><br><span class=\"line\">    var temperature: Double</span><br><span class=\"line\">    init() &#123;</span><br><span class=\"line\">        temperature = 32.0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var f = Fahrenheit()</span><br><span class=\"line\">print(&quot;The default temperature is \\(f.temperature)° Fahrenheit&quot;)</span><br><span class=\"line\">// Prints &quot;The default temperature is 32.0° Fahrenheit&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Deinitialization\"><a href=\"#Deinitialization\" class=\"headerlink\" title=\"Deinitialization\"></a>Deinitialization</h2><ul>\n<li>A deinitializer is called immediately before a class instance is deallocated. </li>\n<li>You write deinitializers with the deinit keyword, </li>\n<li>similar to how initializers are written with the init keyword. </li>\n<li>Deinitializers are only available on class types.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Player &#123;</span><br><span class=\"line\">    var coinsInPurse: Int</span><br><span class=\"line\">    init(coins: Int) &#123;</span><br><span class=\"line\">        coinsInPurse = Bank.distribute(coins: coins)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    func win(coins: Int) &#123;</span><br><span class=\"line\">        coinsInPurse += Bank.distribute(coins: coins)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    deinit &#123;</span><br><span class=\"line\">        Bank.receive(coins: coinsInPurse)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"구조체,클래스","date":"2018-02-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/swift/>\n\n- Unlike other programming languages, \n- Swift does not require you to create separate interface and implementation files for custom classes and structures. \n- In Swift, you define a class or a structure in a single file, \n- and the external interface to that class or structure is automatically made available for other code to use.\n- example of a structure definition and a class definition:\n\n```\nstruct Resolution {\n    var width = 0\n    var height = 0\n}\nclass VideoMode {\n    var resolution = Resolution()\n    var interlaced = false\n    var frameRate = 0.0\n    var name: String?\n}\n```\n\n","source":"_posts/2018-02-06-구조체,클래스.md","raw":"---\nlayout: post\ntitle:  \"구조체,클래스\"\ndate:   2018-02-06\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/swift/>\n\n- Unlike other programming languages, \n- Swift does not require you to create separate interface and implementation files for custom classes and structures. \n- In Swift, you define a class or a structure in a single file, \n- and the external interface to that class or structure is automatically made available for other code to use.\n- example of a structure definition and a class definition:\n\n```\nstruct Resolution {\n    var width = 0\n    var height = 0\n}\nclass VideoMode {\n    var resolution = Resolution()\n    var interlaced = false\n    var frameRate = 0.0\n    var name: String?\n}\n```\n\n","slug":"2018-02-06-구조체,클래스","published":1,"updated":"2018-10-27T09:46:00.162Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dg007z31x7bacgcpn8","content":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<ul>\n<li>Unlike other programming languages, </li>\n<li>Swift does not require you to create separate interface and implementation files for custom classes and structures. </li>\n<li>In Swift, you define a class or a structure in a single file, </li>\n<li>and the external interface to that class or structure is automatically made available for other code to use.</li>\n<li>example of a structure definition and a class definition:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct Resolution &#123;</span><br><span class=\"line\">    var width = 0</span><br><span class=\"line\">    var height = 0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class VideoMode &#123;</span><br><span class=\"line\">    var resolution = Resolution()</span><br><span class=\"line\">    var interlaced = false</span><br><span class=\"line\">    var frameRate = 0.0</span><br><span class=\"line\">    var name: String?</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<ul>\n<li>Unlike other programming languages, </li>\n<li>Swift does not require you to create separate interface and implementation files for custom classes and structures. </li>\n<li>In Swift, you define a class or a structure in a single file, </li>\n<li>and the external interface to that class or structure is automatically made available for other code to use.</li>\n<li>example of a structure definition and a class definition:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct Resolution &#123;</span><br><span class=\"line\">    var width = 0</span><br><span class=\"line\">    var height = 0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class VideoMode &#123;</span><br><span class=\"line\">    var resolution = Resolution()</span><br><span class=\"line\">    var interlaced = false</span><br><span class=\"line\">    var frameRate = 0.0</span><br><span class=\"line\">    var name: String?</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"프로퍼티와 메서드","date":"2018-02-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/swift/>\n\n## Properties\n\n- Properties associate values with a particular class, structure, or enumeration. \n\t- Stored properties store constant and variable values as part of an instance. Stored properties are provided only by classes and structures.\n\t- computed properties calculate (rather than store) a value. Computed properties are provided by classes, structures, and enumerations. \n\n## Methods\n\n- Methods are functions that are associated with a particular type. \n- Classes, structures, and enumerations can all define instance methods, \n\t- which encapsulate specific tasks and functionality for working with an instance of a given type. - Classes, structures, and enumerations can also define type methods, \n\t- which are associated with the type itself. Type methods are similar to class methods in Objective-C.\n\n- Instance methods are functions \n- that belong to instances of a particular class, structure, or enumeration. \n\n```\nclass Counter {\n    var count = 0\n    func increment() {\n        count += 1\n    }\n    func increment(by amount: Int) {\n        count += amount\n    }\n    func reset() {\n        count = 0\n    }\n}\n```\n\n- The Counter class defines three instance methods:\n\n```\nincrement() increments the counter by 1.\nincrement(by: Int) increments the counter by a specified integer amount.\nreset() resets the counter to zero.\n```\n\n- can also define methods that are called on the type itself. These kinds of methods are called type methods\n- You indicate type methods by writing the static keyword before the method’s func keyword. \n- Classes may also use the class keyword to allow subclasses to override the superclass’s implementation of that method\n\n```\nstruct LevelTracker {\n    static var highestUnlockedLevel = 1\n    var currentLevel = 1\n    \n    static func unlock(_ level: Int) {\n        if level > highestUnlockedLevel { highestUnlockedLevel = level }\n    }\n    \n    static func isUnlocked(_ level: Int) -> Bool {\n        return level <= highestUnlockedLevel\n    }\n    \n    @discardableResult\n    mutating func advance(to level: Int) -> Bool {\n        if LevelTracker.isUnlocked(level) {\n            currentLevel = level\n            return true\n        } else {\n            return false\n        }\n    }\n}\n```\n\n","source":"_posts/2018-02-06-프로퍼티와 메서드.md","raw":"---\nlayout: post\ntitle:  \"프로퍼티와 메서드\"\ndate:   2018-02-06\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/swift/>\n\n## Properties\n\n- Properties associate values with a particular class, structure, or enumeration. \n\t- Stored properties store constant and variable values as part of an instance. Stored properties are provided only by classes and structures.\n\t- computed properties calculate (rather than store) a value. Computed properties are provided by classes, structures, and enumerations. \n\n## Methods\n\n- Methods are functions that are associated with a particular type. \n- Classes, structures, and enumerations can all define instance methods, \n\t- which encapsulate specific tasks and functionality for working with an instance of a given type. - Classes, structures, and enumerations can also define type methods, \n\t- which are associated with the type itself. Type methods are similar to class methods in Objective-C.\n\n- Instance methods are functions \n- that belong to instances of a particular class, structure, or enumeration. \n\n```\nclass Counter {\n    var count = 0\n    func increment() {\n        count += 1\n    }\n    func increment(by amount: Int) {\n        count += amount\n    }\n    func reset() {\n        count = 0\n    }\n}\n```\n\n- The Counter class defines three instance methods:\n\n```\nincrement() increments the counter by 1.\nincrement(by: Int) increments the counter by a specified integer amount.\nreset() resets the counter to zero.\n```\n\n- can also define methods that are called on the type itself. These kinds of methods are called type methods\n- You indicate type methods by writing the static keyword before the method’s func keyword. \n- Classes may also use the class keyword to allow subclasses to override the superclass’s implementation of that method\n\n```\nstruct LevelTracker {\n    static var highestUnlockedLevel = 1\n    var currentLevel = 1\n    \n    static func unlock(_ level: Int) {\n        if level > highestUnlockedLevel { highestUnlockedLevel = level }\n    }\n    \n    static func isUnlocked(_ level: Int) -> Bool {\n        return level <= highestUnlockedLevel\n    }\n    \n    @discardableResult\n    mutating func advance(to level: Int) -> Bool {\n        if LevelTracker.isUnlocked(level) {\n            currentLevel = level\n            return true\n        } else {\n            return false\n        }\n    }\n}\n```\n\n","slug":"2018-02-06-프로퍼티와 메서드","published":1,"updated":"2018-04-16T04:01:03.306Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dj008131x7l6zj0fsg","content":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<h2 id=\"Properties\"><a href=\"#Properties\" class=\"headerlink\" title=\"Properties\"></a>Properties</h2><ul>\n<li>Properties associate values with a particular class, structure, or enumeration. <ul>\n<li>Stored properties store constant and variable values as part of an instance. Stored properties are provided only by classes and structures.</li>\n<li>computed properties calculate (rather than store) a value. Computed properties are provided by classes, structures, and enumerations. </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Methods\"><a href=\"#Methods\" class=\"headerlink\" title=\"Methods\"></a>Methods</h2><ul>\n<li>Methods are functions that are associated with a particular type. </li>\n<li><p>Classes, structures, and enumerations can all define instance methods, </p>\n<ul>\n<li>which encapsulate specific tasks and functionality for working with an instance of a given type. - Classes, structures, and enumerations can also define type methods, </li>\n<li>which are associated with the type itself. Type methods are similar to class methods in Objective-C.</li>\n</ul>\n</li>\n<li><p>Instance methods are functions </p>\n</li>\n<li>that belong to instances of a particular class, structure, or enumeration. </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Counter &#123;</span><br><span class=\"line\">    var count = 0</span><br><span class=\"line\">    func increment() &#123;</span><br><span class=\"line\">        count += 1</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    func increment(by amount: Int) &#123;</span><br><span class=\"line\">        count += amount</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    func reset() &#123;</span><br><span class=\"line\">        count = 0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>The Counter class defines three instance methods:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">increment() increments the counter by 1.</span><br><span class=\"line\">increment(by: Int) increments the counter by a specified integer amount.</span><br><span class=\"line\">reset() resets the counter to zero.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>can also define methods that are called on the type itself. These kinds of methods are called type methods</li>\n<li>You indicate type methods by writing the static keyword before the method’s func keyword. </li>\n<li>Classes may also use the class keyword to allow subclasses to override the superclass’s implementation of that method</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct LevelTracker &#123;</span><br><span class=\"line\">    static var highestUnlockedLevel = 1</span><br><span class=\"line\">    var currentLevel = 1</span><br><span class=\"line\">    </span><br><span class=\"line\">    static func unlock(_ level: Int) &#123;</span><br><span class=\"line\">        if level &gt; highestUnlockedLevel &#123; highestUnlockedLevel = level &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    static func isUnlocked(_ level: Int) -&gt; Bool &#123;</span><br><span class=\"line\">        return level &lt;= highestUnlockedLevel</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @discardableResult</span><br><span class=\"line\">    mutating func advance(to level: Int) -&gt; Bool &#123;</span><br><span class=\"line\">        if LevelTracker.isUnlocked(level) &#123;</span><br><span class=\"line\">            currentLevel = level</span><br><span class=\"line\">            return true</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            return false</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<h2 id=\"Properties\"><a href=\"#Properties\" class=\"headerlink\" title=\"Properties\"></a>Properties</h2><ul>\n<li>Properties associate values with a particular class, structure, or enumeration. <ul>\n<li>Stored properties store constant and variable values as part of an instance. Stored properties are provided only by classes and structures.</li>\n<li>computed properties calculate (rather than store) a value. Computed properties are provided by classes, structures, and enumerations. </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Methods\"><a href=\"#Methods\" class=\"headerlink\" title=\"Methods\"></a>Methods</h2><ul>\n<li>Methods are functions that are associated with a particular type. </li>\n<li><p>Classes, structures, and enumerations can all define instance methods, </p>\n<ul>\n<li>which encapsulate specific tasks and functionality for working with an instance of a given type. - Classes, structures, and enumerations can also define type methods, </li>\n<li>which are associated with the type itself. Type methods are similar to class methods in Objective-C.</li>\n</ul>\n</li>\n<li><p>Instance methods are functions </p>\n</li>\n<li>that belong to instances of a particular class, structure, or enumeration. </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Counter &#123;</span><br><span class=\"line\">    var count = 0</span><br><span class=\"line\">    func increment() &#123;</span><br><span class=\"line\">        count += 1</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    func increment(by amount: Int) &#123;</span><br><span class=\"line\">        count += amount</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    func reset() &#123;</span><br><span class=\"line\">        count = 0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>The Counter class defines three instance methods:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">increment() increments the counter by 1.</span><br><span class=\"line\">increment(by: Int) increments the counter by a specified integer amount.</span><br><span class=\"line\">reset() resets the counter to zero.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>can also define methods that are called on the type itself. These kinds of methods are called type methods</li>\n<li>You indicate type methods by writing the static keyword before the method’s func keyword. </li>\n<li>Classes may also use the class keyword to allow subclasses to override the superclass’s implementation of that method</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct LevelTracker &#123;</span><br><span class=\"line\">    static var highestUnlockedLevel = 1</span><br><span class=\"line\">    var currentLevel = 1</span><br><span class=\"line\">    </span><br><span class=\"line\">    static func unlock(_ level: Int) &#123;</span><br><span class=\"line\">        if level &gt; highestUnlockedLevel &#123; highestUnlockedLevel = level &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    static func isUnlocked(_ level: Int) -&gt; Bool &#123;</span><br><span class=\"line\">        return level &lt;= highestUnlockedLevel</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @discardableResult</span><br><span class=\"line\">    mutating func advance(to level: Int) -&gt; Bool &#123;</span><br><span class=\"line\">        if LevelTracker.isUnlocked(level) &#123;</span><br><span class=\"line\">            currentLevel = level</span><br><span class=\"line\">            return true</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            return false</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"접근제어","date":"2018-02-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/swift/>\n\n- Access control restricts access to parts of your code from code in other source files and modules.\n- This feature enables you to hide the implementation details of your code, and to specify a preferred interface through which that code can be accessed and used.\n\n- You can assign specific access levels to individual types (classes, structures, and enumerations), \n- as well as to properties, methods, initializers, and subscripts belonging to those types. \n- Protocols can be restricted to a certain context, as can global constants, variables, and functions.\n\n- In addition to offering various levels of access control, Swift reduces the need to specify explicit access control levels by providing default access levels for typical scenarios. \n- Indeed, if you are writing a single-target app, you may not need to specify explicit access control levels at all.\n\n```\npublic class SomePublicClass {}\ninternal class SomeInternalClass {}\nfileprivate class SomeFilePrivateClass {}\nprivate class SomePrivateClass {}\n \npublic var somePublicVariable = 0\ninternal let someInternalConstant = 0\nfileprivate func someFilePrivateFunction() {}\nprivate func somePrivateFunction() {}\n```\n\n- Unless otherwise specified, the default access level is internal, \n- This means that \n- SomeInternalClass and someInternalConstant can be written without an explicit access-level modifier,\n- and will still have an access level of internal:\n\n```\nclass SomeInternalClass {}              // implicitly internal\nlet someInternalConstant = 0            // implicitly internal\n```\n","source":"_posts/2018-02-06-접근제어.md","raw":"---\nlayout: post\ntitle:  \"접근제어\"\ndate:   2018-02-06\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/swift/>\n\n- Access control restricts access to parts of your code from code in other source files and modules.\n- This feature enables you to hide the implementation details of your code, and to specify a preferred interface through which that code can be accessed and used.\n\n- You can assign specific access levels to individual types (classes, structures, and enumerations), \n- as well as to properties, methods, initializers, and subscripts belonging to those types. \n- Protocols can be restricted to a certain context, as can global constants, variables, and functions.\n\n- In addition to offering various levels of access control, Swift reduces the need to specify explicit access control levels by providing default access levels for typical scenarios. \n- Indeed, if you are writing a single-target app, you may not need to specify explicit access control levels at all.\n\n```\npublic class SomePublicClass {}\ninternal class SomeInternalClass {}\nfileprivate class SomeFilePrivateClass {}\nprivate class SomePrivateClass {}\n \npublic var somePublicVariable = 0\ninternal let someInternalConstant = 0\nfileprivate func someFilePrivateFunction() {}\nprivate func somePrivateFunction() {}\n```\n\n- Unless otherwise specified, the default access level is internal, \n- This means that \n- SomeInternalClass and someInternalConstant can be written without an explicit access-level modifier,\n- and will still have an access level of internal:\n\n```\nclass SomeInternalClass {}              // implicitly internal\nlet someInternalConstant = 0            // implicitly internal\n```\n","slug":"2018-02-06-접근제어","published":1,"updated":"2018-04-16T04:01:08.453Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dm008331x78w1groxj","content":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<ul>\n<li>Access control restricts access to parts of your code from code in other source files and modules.</li>\n<li><p>This feature enables you to hide the implementation details of your code, and to specify a preferred interface through which that code can be accessed and used.</p>\n</li>\n<li><p>You can assign specific access levels to individual types (classes, structures, and enumerations), </p>\n</li>\n<li>as well as to properties, methods, initializers, and subscripts belonging to those types. </li>\n<li><p>Protocols can be restricted to a certain context, as can global constants, variables, and functions.</p>\n</li>\n<li><p>In addition to offering various levels of access control, Swift reduces the need to specify explicit access control levels by providing default access levels for typical scenarios. </p>\n</li>\n<li>Indeed, if you are writing a single-target app, you may not need to specify explicit access control levels at all.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SomePublicClass &#123;&#125;</span><br><span class=\"line\">internal class SomeInternalClass &#123;&#125;</span><br><span class=\"line\">fileprivate class SomeFilePrivateClass &#123;&#125;</span><br><span class=\"line\">private class SomePrivateClass &#123;&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">public var somePublicVariable = 0</span><br><span class=\"line\">internal let someInternalConstant = 0</span><br><span class=\"line\">fileprivate func someFilePrivateFunction() &#123;&#125;</span><br><span class=\"line\">private func somePrivateFunction() &#123;&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Unless otherwise specified, the default access level is internal, </li>\n<li>This means that </li>\n<li>SomeInternalClass and someInternalConstant can be written without an explicit access-level modifier,</li>\n<li>and will still have an access level of internal:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class SomeInternalClass &#123;&#125;              // implicitly internal</span><br><span class=\"line\">let someInternalConstant = 0            // implicitly internal</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/swift/</a></p>\n<ul>\n<li>Access control restricts access to parts of your code from code in other source files and modules.</li>\n<li><p>This feature enables you to hide the implementation details of your code, and to specify a preferred interface through which that code can be accessed and used.</p>\n</li>\n<li><p>You can assign specific access levels to individual types (classes, structures, and enumerations), </p>\n</li>\n<li>as well as to properties, methods, initializers, and subscripts belonging to those types. </li>\n<li><p>Protocols can be restricted to a certain context, as can global constants, variables, and functions.</p>\n</li>\n<li><p>In addition to offering various levels of access control, Swift reduces the need to specify explicit access control levels by providing default access levels for typical scenarios. </p>\n</li>\n<li>Indeed, if you are writing a single-target app, you may not need to specify explicit access control levels at all.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SomePublicClass &#123;&#125;</span><br><span class=\"line\">internal class SomeInternalClass &#123;&#125;</span><br><span class=\"line\">fileprivate class SomeFilePrivateClass &#123;&#125;</span><br><span class=\"line\">private class SomePrivateClass &#123;&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">public var somePublicVariable = 0</span><br><span class=\"line\">internal let someInternalConstant = 0</span><br><span class=\"line\">fileprivate func someFilePrivateFunction() &#123;&#125;</span><br><span class=\"line\">private func somePrivateFunction() &#123;&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Unless otherwise specified, the default access level is internal, </li>\n<li>This means that </li>\n<li>SomeInternalClass and someInternalConstant can be written without an explicit access-level modifier,</li>\n<li>and will still have an access level of internal:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class SomeInternalClass &#123;&#125;              // implicitly internal</span><br><span class=\"line\">let someInternalConstant = 0            // implicitly internal</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"class,struct","date":"2018-02-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cs_img.jpg","_content":"\n### type\n\n- class \n\t- reference type\n- struct \n\t- value type\n\n### allocation\n\n- class \n\t-  are allocated on the heap and garbage-collected\n- struct\n\t- are allocated either on the stack or inline in containing types \n\t- and deallocated when the stack unwinds or when their containing type gets deallocated.\n\t- allocations and deallocations are in general cheaper than reference types.\n\n### arrays\n\n- class\n\t- arrays of reference types are allocated out-of-line, \n\t- meaning the array elements are just references to instances of the reference type residing on the heap\n- struct\n\t - Value type arrays are allocated inline, meaning that the array elements are the actual instances of the value type.\n\t - allocations and deallocations of value type arrays are much cheaper than reference type arrays. \n\n### memory usage\n\n- class\n\t- no boxing occurs as reference types are cast.\n- struct\n\t -  get boxed when cast to a reference type or one of the interfaces they implement.\n\t -  get unboxed when cast back to the value type\n\t -  Because boxes are objects that are allocated on the heap and are garbage-collected, \n\t -  too much boxing and unboxing can have a negative impact on the heap, the garbage collector, and ultimately the performance of the application\n\n### copy\n\n- class\n\t- reference type assignments copy the reference\n\t- assignments of large reference types are cheaper than assignments of large value types.\n- struct \n\t- value type assignments copy the entire value\n\n### pass\n\n- class\n\t- reference types are passed by reference\n\t- Changes to an instance of a reference type affect all references pointing to the instance\n- struct\n\t- value types are passed by value\n\t- Value type instances are copied when they are passed by value.\n\t- When an instance of a value type is changed, it of course does not affect any of its copies. \n\t- Because the copies are not created explicitly by the user but are implicitly created when arguments are passed or return values are returned, value types that can be changed can be confusing to many users. \n\t- Therefore, value types should be immutable.\n\n\n​\t\n","source":"_posts/2018-02-09-class,struct.md","raw":"---\nlayout: post\ntitle:  \"class,struct\"\ndate:   2018-02-06\ncategories: cs\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cs_img.jpg\n---\n\n### type\n\n- class \n\t- reference type\n- struct \n\t- value type\n\n### allocation\n\n- class \n\t-  are allocated on the heap and garbage-collected\n- struct\n\t- are allocated either on the stack or inline in containing types \n\t- and deallocated when the stack unwinds or when their containing type gets deallocated.\n\t- allocations and deallocations are in general cheaper than reference types.\n\n### arrays\n\n- class\n\t- arrays of reference types are allocated out-of-line, \n\t- meaning the array elements are just references to instances of the reference type residing on the heap\n- struct\n\t - Value type arrays are allocated inline, meaning that the array elements are the actual instances of the value type.\n\t - allocations and deallocations of value type arrays are much cheaper than reference type arrays. \n\n### memory usage\n\n- class\n\t- no boxing occurs as reference types are cast.\n- struct\n\t -  get boxed when cast to a reference type or one of the interfaces they implement.\n\t -  get unboxed when cast back to the value type\n\t -  Because boxes are objects that are allocated on the heap and are garbage-collected, \n\t -  too much boxing and unboxing can have a negative impact on the heap, the garbage collector, and ultimately the performance of the application\n\n### copy\n\n- class\n\t- reference type assignments copy the reference\n\t- assignments of large reference types are cheaper than assignments of large value types.\n- struct \n\t- value type assignments copy the entire value\n\n### pass\n\n- class\n\t- reference types are passed by reference\n\t- Changes to an instance of a reference type affect all references pointing to the instance\n- struct\n\t- value types are passed by value\n\t- Value type instances are copied when they are passed by value.\n\t- When an instance of a value type is changed, it of course does not affect any of its copies. \n\t- Because the copies are not created explicitly by the user but are implicitly created when arguments are passed or return values are returned, value types that can be changed can be confusing to many users. \n\t- Therefore, value types should be immutable.\n\n\n​\t\n","slug":"2018-02-09-class,struct","published":1,"updated":"2018-10-27T09:51:56.164Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dp008531x7tq3cljxr","content":"<h3 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h3><ul>\n<li>class <ul>\n<li>reference type</li>\n</ul>\n</li>\n<li>struct <ul>\n<li>value type</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"allocation\"><a href=\"#allocation\" class=\"headerlink\" title=\"allocation\"></a>allocation</h3><ul>\n<li>class <ul>\n<li>are allocated on the heap and garbage-collected</li>\n</ul>\n</li>\n<li>struct<ul>\n<li>are allocated either on the stack or inline in containing types </li>\n<li>and deallocated when the stack unwinds or when their containing type gets deallocated.</li>\n<li>allocations and deallocations are in general cheaper than reference types.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"arrays\"><a href=\"#arrays\" class=\"headerlink\" title=\"arrays\"></a>arrays</h3><ul>\n<li>class<ul>\n<li>arrays of reference types are allocated out-of-line, </li>\n<li>meaning the array elements are just references to instances of the reference type residing on the heap</li>\n</ul>\n</li>\n<li>struct<ul>\n<li>Value type arrays are allocated inline, meaning that the array elements are the actual instances of the value type.</li>\n<li>allocations and deallocations of value type arrays are much cheaper than reference type arrays. </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"memory-usage\"><a href=\"#memory-usage\" class=\"headerlink\" title=\"memory usage\"></a>memory usage</h3><ul>\n<li>class<ul>\n<li>no boxing occurs as reference types are cast.</li>\n</ul>\n</li>\n<li>struct<ul>\n<li>get boxed when cast to a reference type or one of the interfaces they implement.</li>\n<li>get unboxed when cast back to the value type</li>\n<li>Because boxes are objects that are allocated on the heap and are garbage-collected, </li>\n<li>too much boxing and unboxing can have a negative impact on the heap, the garbage collector, and ultimately the performance of the application</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"copy\"><a href=\"#copy\" class=\"headerlink\" title=\"copy\"></a>copy</h3><ul>\n<li>class<ul>\n<li>reference type assignments copy the reference</li>\n<li>assignments of large reference types are cheaper than assignments of large value types.</li>\n</ul>\n</li>\n<li>struct <ul>\n<li>value type assignments copy the entire value</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"pass\"><a href=\"#pass\" class=\"headerlink\" title=\"pass\"></a>pass</h3><ul>\n<li>class<ul>\n<li>reference types are passed by reference</li>\n<li>Changes to an instance of a reference type affect all references pointing to the instance</li>\n</ul>\n</li>\n<li>struct<ul>\n<li>value types are passed by value</li>\n<li>Value type instances are copied when they are passed by value.</li>\n<li>When an instance of a value type is changed, it of course does not affect any of its copies. </li>\n<li>Because the copies are not created explicitly by the user but are implicitly created when arguments are passed or return values are returned, value types that can be changed can be confusing to many users. </li>\n<li>Therefore, value types should be immutable.</li>\n</ul>\n</li>\n</ul>\n<p>​    </p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h3 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h3><ul>\n<li>class <ul>\n<li>reference type</li>\n</ul>\n</li>\n<li>struct <ul>\n<li>value type</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"allocation\"><a href=\"#allocation\" class=\"headerlink\" title=\"allocation\"></a>allocation</h3><ul>\n<li>class <ul>\n<li>are allocated on the heap and garbage-collected</li>\n</ul>\n</li>\n<li>struct<ul>\n<li>are allocated either on the stack or inline in containing types </li>\n<li>and deallocated when the stack unwinds or when their containing type gets deallocated.</li>\n<li>allocations and deallocations are in general cheaper than reference types.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"arrays\"><a href=\"#arrays\" class=\"headerlink\" title=\"arrays\"></a>arrays</h3><ul>\n<li>class<ul>\n<li>arrays of reference types are allocated out-of-line, </li>\n<li>meaning the array elements are just references to instances of the reference type residing on the heap</li>\n</ul>\n</li>\n<li>struct<ul>\n<li>Value type arrays are allocated inline, meaning that the array elements are the actual instances of the value type.</li>\n<li>allocations and deallocations of value type arrays are much cheaper than reference type arrays. </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"memory-usage\"><a href=\"#memory-usage\" class=\"headerlink\" title=\"memory usage\"></a>memory usage</h3><ul>\n<li>class<ul>\n<li>no boxing occurs as reference types are cast.</li>\n</ul>\n</li>\n<li>struct<ul>\n<li>get boxed when cast to a reference type or one of the interfaces they implement.</li>\n<li>get unboxed when cast back to the value type</li>\n<li>Because boxes are objects that are allocated on the heap and are garbage-collected, </li>\n<li>too much boxing and unboxing can have a negative impact on the heap, the garbage collector, and ultimately the performance of the application</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"copy\"><a href=\"#copy\" class=\"headerlink\" title=\"copy\"></a>copy</h3><ul>\n<li>class<ul>\n<li>reference type assignments copy the reference</li>\n<li>assignments of large reference types are cheaper than assignments of large value types.</li>\n</ul>\n</li>\n<li>struct <ul>\n<li>value type assignments copy the entire value</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"pass\"><a href=\"#pass\" class=\"headerlink\" title=\"pass\"></a>pass</h3><ul>\n<li>class<ul>\n<li>reference types are passed by reference</li>\n<li>Changes to an instance of a reference type affect all references pointing to the instance</li>\n</ul>\n</li>\n<li>struct<ul>\n<li>value types are passed by value</li>\n<li>Value type instances are copied when they are passed by value.</li>\n<li>When an instance of a value type is changed, it of course does not affect any of its copies. </li>\n<li>Because the copies are not created explicitly by the user but are implicitly created when arguments are passed or return values are returned, value types that can be changed can be confusing to many users. </li>\n<li>Therefore, value types should be immutable.</li>\n</ul>\n</li>\n</ul>\n<p>​    </p>\n"},{"layout":"post","title":"축구","date":"2018-02-15T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1344>\n\n## 풀이\n\n- d[i][j][k]\n  - i라운드에서, A팀이 j 포인트, B팀이 k포인트 얻었을 때, 18라운드까지 한 확률의 합\n- 경우의 수\n  - i 라운드드에서\n    - A팀 : 1골, B팀 : 0골 \n    - A팀 : 0골, B팀 : 1골 \n    - A팀 : 1골, B팀 : 1골 \n    - A팀 : 0골, B팀 : 0골\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer03.png)\n\n","source":"_posts/2018-02-16-축구.md","raw":"---\nlayout: post\ntitle:  \"축구\"\ndate:   2018-02-16\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1344>\n\n## 풀이\n\n- d[i][j][k]\n  - i라운드에서, A팀이 j 포인트, B팀이 k포인트 얻었을 때, 18라운드까지 한 확률의 합\n- 경우의 수\n  - i 라운드드에서\n    - A팀 : 1골, B팀 : 0골 \n    - A팀 : 0골, B팀 : 1골 \n    - A팀 : 1골, B팀 : 1골 \n    - A팀 : 0골, B팀 : 0골\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer03.png)\n\n","slug":"2018-02-16-축구","published":1,"updated":"2018-04-16T04:00:51.294Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dr008731x7idnr068g","content":"<p><a href=\"https://www.acmicpc.net/problem/1344\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1344</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>d[i][j][k]<ul>\n<li>i라운드에서, A팀이 j 포인트, B팀이 k포인트 얻었을 때, 18라운드까지 한 확률의 합</li>\n</ul>\n</li>\n<li>경우의 수<ul>\n<li>i 라운드드에서<ul>\n<li>A팀 : 1골, B팀 : 0골 </li>\n<li>A팀 : 0골, B팀 : 1골 </li>\n<li>A팀 : 1골, B팀 : 1골 </li>\n<li>A팀 : 0골, B팀 : 0골</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1344\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1344</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>d[i][j][k]<ul>\n<li>i라운드에서, A팀이 j 포인트, B팀이 k포인트 얻었을 때, 18라운드까지 한 확률의 합</li>\n</ul>\n</li>\n<li>경우의 수<ul>\n<li>i 라운드드에서<ul>\n<li>A팀 : 1골, B팀 : 0골 </li>\n<li>A팀 : 0골, B팀 : 1골 </li>\n<li>A팀 : 1골, B팀 : 1골 </li>\n<li>A팀 : 0골, B팀 : 0골</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/soccer03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"민균이의 계략","date":"2018-02-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/11568>\n\n## 풀이\n\n- ''가장 긴 증가하는 부분수열'' 문제와 동일\n- 처음에 계속 틀렸음\n   - 이유 : j를 i-1 ~ 0 번째까지 비교해야하는데 1번째 까지만 비교했음\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/min.png)\n","source":"_posts/2018-02-15-민균이의 계략.md","raw":"---\nlayout: post\ntitle:  \"민균이의 계략\"\ndate:   2018-02-15\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/11568>\n\n## 풀이\n\n- ''가장 긴 증가하는 부분수열'' 문제와 동일\n- 처음에 계속 틀렸음\n   - 이유 : j를 i-1 ~ 0 번째까지 비교해야하는데 1번째 까지만 비교했음\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/min.png)\n","slug":"2018-02-15-민균이의 계략","published":1,"updated":"2018-04-16T04:00:55.198Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dv008a31x74jsqzvmx","content":"<p><a href=\"https://www.acmicpc.net/problem/11568\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11568</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>‘’가장 긴 증가하는 부분수열’’ 문제와 동일</li>\n<li>처음에 계속 틀렸음<ul>\n<li>이유 : j를 i-1 ~ 0 번째까지 비교해야하는데 1번째 까지만 비교했음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/min.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11568\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11568</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>‘’가장 긴 증가하는 부분수열’’ 문제와 동일</li>\n<li>처음에 계속 틀렸음<ul>\n<li>이유 : j를 i-1 ~ 0 번째까지 비교해야하는데 1번째 까지만 비교했음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/min.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"라그랑주의 네 제곱수 정리","date":"2018-02-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/3933>\n\n## 풀이\n\n- d[i]\n  - i 수를 제곱수의 합으로 표현 할 수 있는 경우의 수\n- 중복 문제 발생\n  - 1 \n    - 1 \n    - d[1] = 1\n  - 4 \n    - 1 + 1 + 1 + 1\n    - 4\n    - d[4] = 2\n  - 5\n    - 1의 제곱 + 4 \t\n      - d[4] = 2 \n    - 2의 제곱 + 1\n      - d[1] = 1\n    - d[5] = d[4] + d[1] = 3\n    - 여기서 중복 문제가 발생\n    - 사실, d[5] = 2\n- 중복 해결이 관건\n\n","source":"_posts/2018-02-20-라그랑주의 네 제곱수 정리.md","raw":"---\nlayout: post\ntitle:  \"라그랑주의 네 제곱수 정리\"\ndate:   2018-02-20\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/3933>\n\n## 풀이\n\n- d[i]\n  - i 수를 제곱수의 합으로 표현 할 수 있는 경우의 수\n- 중복 문제 발생\n  - 1 \n    - 1 \n    - d[1] = 1\n  - 4 \n    - 1 + 1 + 1 + 1\n    - 4\n    - d[4] = 2\n  - 5\n    - 1의 제곱 + 4 \t\n      - d[4] = 2 \n    - 2의 제곱 + 1\n      - d[1] = 1\n    - d[5] = d[4] + d[1] = 3\n    - 여기서 중복 문제가 발생\n    - 사실, d[5] = 2\n- 중복 해결이 관건\n\n","slug":"2018-02-20-라그랑주의 네 제곱수 정리","published":1,"updated":"2018-04-16T04:00:46.987Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dw008c31x7yg51lfr9","content":"<p><a href=\"https://www.acmicpc.net/problem/3933\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3933</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>d[i]<ul>\n<li>i 수를 제곱수의 합으로 표현 할 수 있는 경우의 수</li>\n</ul>\n</li>\n<li>중복 문제 발생<ul>\n<li>1 <ul>\n<li>1 </li>\n<li>d[1] = 1</li>\n</ul>\n</li>\n<li>4 <ul>\n<li>1 + 1 + 1 + 1</li>\n<li>4</li>\n<li>d[4] = 2</li>\n</ul>\n</li>\n<li>5<ul>\n<li>1의 제곱 + 4     <ul>\n<li>d[4] = 2 </li>\n</ul>\n</li>\n<li>2의 제곱 + 1<ul>\n<li>d[1] = 1</li>\n</ul>\n</li>\n<li>d[5] = d[4] + d[1] = 3</li>\n<li>여기서 중복 문제가 발생</li>\n<li>사실, d[5] = 2</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>중복 해결이 관건</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/3933\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3933</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>d[i]<ul>\n<li>i 수를 제곱수의 합으로 표현 할 수 있는 경우의 수</li>\n</ul>\n</li>\n<li>중복 문제 발생<ul>\n<li>1 <ul>\n<li>1 </li>\n<li>d[1] = 1</li>\n</ul>\n</li>\n<li>4 <ul>\n<li>1 + 1 + 1 + 1</li>\n<li>4</li>\n<li>d[4] = 2</li>\n</ul>\n</li>\n<li>5<ul>\n<li>1의 제곱 + 4     <ul>\n<li>d[4] = 2 </li>\n</ul>\n</li>\n<li>2의 제곱 + 1<ul>\n<li>d[1] = 1</li>\n</ul>\n</li>\n<li>d[5] = d[4] + d[1] = 3</li>\n<li>여기서 중복 문제가 발생</li>\n<li>사실, d[5] = 2</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>중복 해결이 관건</li>\n</ul>\n"},{"layout":"post","title":"find in studio3T","date":"2018-02-26T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n\n\n- 문제\n\n  - mongo studio3T 에서 {_id: '123'} 로 검색하면 id가 '123' 인 row가 find 되지 않음\n\n- 해결\n\n  - {id:ObjectId('123')}\n\n  ​\n\n​\t\n","source":"_posts/2018-02-27-find in studio3T.md","raw":"---\nlayout: post\ntitle:  \"find in studio3T\"\ndate:   2018-02-27\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n\n\n- 문제\n\n  - mongo studio3T 에서 {_id: '123'} 로 검색하면 id가 '123' 인 row가 find 되지 않음\n\n- 해결\n\n  - {id:ObjectId('123')}\n\n  ​\n\n​\t\n","slug":"2018-02-27-find in studio3T","published":1,"updated":"2018-04-16T04:00:38.435Z","comments":1,"photos":[],"link":"","_id":"cjp6k65dz008e31x7xqo007u5","content":"<ul>\n<li><p>문제</p>\n<ul>\n<li>mongo studio3T 에서 {_id: ‘123’} 로 검색하면 id가 ‘123’ 인 row가 find 되지 않음</li>\n</ul>\n</li>\n<li><p>해결</p>\n<ul>\n<li>{id:ObjectId(‘123’)}</li>\n</ul>\n<p>​</p>\n</li>\n</ul>\n<p>​    </p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>문제</p>\n<ul>\n<li>mongo studio3T 에서 {_id: ‘123’} 로 검색하면 id가 ‘123’ 인 row가 find 되지 않음</li>\n</ul>\n</li>\n<li><p>해결</p>\n<ul>\n<li>{id:ObjectId(‘123’)}</li>\n</ul>\n<p>​</p>\n</li>\n</ul>\n<p>​    </p>\n"},{"layout":"post","title":"Node Architecture","date":"2018-02-26T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n\n\n<https://www.youtube.com/watch?v=TlB_eWDSMt4>\n\n\n\n- Node.js is a runtime environment for executing JavaScript code\n- Before node, we use JavaScript only to build applications that run inside of a browser.\n- So, every browser has what we call JavaScript engine that takes our JavaScript code and converts it to code that a computer can understand\n- For example, Microsoft eight uses 'Chakra', Firefox uses 'SpiderMonkey',  and Chrome uses 'v8'\n- Because of these varieties of engines that sometimes JavaScript code can behave differently in one browser or another\n- Now a browser provides a runtime environment for JavaScript code\n- For example, in browser we have the window or the document object . \n  - (ex) documnet.getElementById('');\n- Thses objects allow us to work with environment in which our code is running \n-  Up to 2009, the only way to excute JavaScript code was inside of a browser\n- In 2009,  Brian Dahl creator of node came up with a brilliant idea\n- He thought it would be great to execute JavaScript outside of a browser,\n- so he took Google's v8 engine which is the fastest JavaScript engine out there and embeded it inside a C++ program and called that program node.\n- So, similar to a browser, node is a runtime environment for JavaScript code. \n- It contains a JavaScript engine that execute our JavaScript code,\n- but it also has certain objects that provide an environment for our JavaScript code \n- But these objects are different from the environment objects we have in browser\n- For example, we don't have the document object.\n- Instead , we have other objects that give us more interesting capabilities\n- For example, we can work with the file system, listen for requests and a given port and so on.\n  - fs.readFile()\n  - http.createServer()\n- We can't do stuff like that inside of a browser\n- In essence, node is a program that includese the v8 JavaScript engine plus some additional modules that give us capabilities not avaliable inside browsers\n- We can work with the file system or the network and so on\n- Both Chrome and node share the same JavaScript engine, but they provide different runtime environments for JavaScript\n- Node is NOT a programming language\n- Node is NOT a framework\n- It's a runtime environment for executing JavaScript code\n\n","source":"_posts/2018-02-27-Node Architecture.md","raw":"---\nlayout: post\ntitle:  \"Node Architecture\"\ndate:   2018-02-27\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n\n\n<https://www.youtube.com/watch?v=TlB_eWDSMt4>\n\n\n\n- Node.js is a runtime environment for executing JavaScript code\n- Before node, we use JavaScript only to build applications that run inside of a browser.\n- So, every browser has what we call JavaScript engine that takes our JavaScript code and converts it to code that a computer can understand\n- For example, Microsoft eight uses 'Chakra', Firefox uses 'SpiderMonkey',  and Chrome uses 'v8'\n- Because of these varieties of engines that sometimes JavaScript code can behave differently in one browser or another\n- Now a browser provides a runtime environment for JavaScript code\n- For example, in browser we have the window or the document object . \n  - (ex) documnet.getElementById('');\n- Thses objects allow us to work with environment in which our code is running \n-  Up to 2009, the only way to excute JavaScript code was inside of a browser\n- In 2009,  Brian Dahl creator of node came up with a brilliant idea\n- He thought it would be great to execute JavaScript outside of a browser,\n- so he took Google's v8 engine which is the fastest JavaScript engine out there and embeded it inside a C++ program and called that program node.\n- So, similar to a browser, node is a runtime environment for JavaScript code. \n- It contains a JavaScript engine that execute our JavaScript code,\n- but it also has certain objects that provide an environment for our JavaScript code \n- But these objects are different from the environment objects we have in browser\n- For example, we don't have the document object.\n- Instead , we have other objects that give us more interesting capabilities\n- For example, we can work with the file system, listen for requests and a given port and so on.\n  - fs.readFile()\n  - http.createServer()\n- We can't do stuff like that inside of a browser\n- In essence, node is a program that includese the v8 JavaScript engine plus some additional modules that give us capabilities not avaliable inside browsers\n- We can work with the file system or the network and so on\n- Both Chrome and node share the same JavaScript engine, but they provide different runtime environments for JavaScript\n- Node is NOT a programming language\n- Node is NOT a framework\n- It's a runtime environment for executing JavaScript code\n\n","slug":"2018-02-27-Node Architecture","published":1,"updated":"2018-04-16T04:00:34.443Z","comments":1,"photos":[],"link":"","_id":"cjp6k65eb008g31x7sieirwjk","content":"<p><a href=\"https://www.youtube.com/watch?v=TlB_eWDSMt4\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=TlB_eWDSMt4</a></p>\n<ul>\n<li>Node.js is a runtime environment for executing JavaScript code</li>\n<li>Before node, we use JavaScript only to build applications that run inside of a browser.</li>\n<li>So, every browser has what we call JavaScript engine that takes our JavaScript code and converts it to code that a computer can understand</li>\n<li>For example, Microsoft eight uses ‘Chakra’, Firefox uses ‘SpiderMonkey’,  and Chrome uses ‘v8’</li>\n<li>Because of these varieties of engines that sometimes JavaScript code can behave differently in one browser or another</li>\n<li>Now a browser provides a runtime environment for JavaScript code</li>\n<li>For example, in browser we have the window or the document object . <ul>\n<li>(ex) documnet.getElementById(‘’);</li>\n</ul>\n</li>\n<li>Thses objects allow us to work with environment in which our code is running </li>\n<li>Up to 2009, the only way to excute JavaScript code was inside of a browser</li>\n<li>In 2009,  Brian Dahl creator of node came up with a brilliant idea</li>\n<li>He thought it would be great to execute JavaScript outside of a browser,</li>\n<li>so he took Google’s v8 engine which is the fastest JavaScript engine out there and embeded it inside a C++ program and called that program node.</li>\n<li>So, similar to a browser, node is a runtime environment for JavaScript code. </li>\n<li>It contains a JavaScript engine that execute our JavaScript code,</li>\n<li>but it also has certain objects that provide an environment for our JavaScript code </li>\n<li>But these objects are different from the environment objects we have in browser</li>\n<li>For example, we don’t have the document object.</li>\n<li>Instead , we have other objects that give us more interesting capabilities</li>\n<li>For example, we can work with the file system, listen for requests and a given port and so on.<ul>\n<li>fs.readFile()</li>\n<li>http.createServer()</li>\n</ul>\n</li>\n<li>We can’t do stuff like that inside of a browser</li>\n<li>In essence, node is a program that includese the v8 JavaScript engine plus some additional modules that give us capabilities not avaliable inside browsers</li>\n<li>We can work with the file system or the network and so on</li>\n<li>Both Chrome and node share the same JavaScript engine, but they provide different runtime environments for JavaScript</li>\n<li>Node is NOT a programming language</li>\n<li>Node is NOT a framework</li>\n<li>It’s a runtime environment for executing JavaScript code</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.youtube.com/watch?v=TlB_eWDSMt4\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=TlB_eWDSMt4</a></p>\n<ul>\n<li>Node.js is a runtime environment for executing JavaScript code</li>\n<li>Before node, we use JavaScript only to build applications that run inside of a browser.</li>\n<li>So, every browser has what we call JavaScript engine that takes our JavaScript code and converts it to code that a computer can understand</li>\n<li>For example, Microsoft eight uses ‘Chakra’, Firefox uses ‘SpiderMonkey’,  and Chrome uses ‘v8’</li>\n<li>Because of these varieties of engines that sometimes JavaScript code can behave differently in one browser or another</li>\n<li>Now a browser provides a runtime environment for JavaScript code</li>\n<li>For example, in browser we have the window or the document object . <ul>\n<li>(ex) documnet.getElementById(‘’);</li>\n</ul>\n</li>\n<li>Thses objects allow us to work with environment in which our code is running </li>\n<li>Up to 2009, the only way to excute JavaScript code was inside of a browser</li>\n<li>In 2009,  Brian Dahl creator of node came up with a brilliant idea</li>\n<li>He thought it would be great to execute JavaScript outside of a browser,</li>\n<li>so he took Google’s v8 engine which is the fastest JavaScript engine out there and embeded it inside a C++ program and called that program node.</li>\n<li>So, similar to a browser, node is a runtime environment for JavaScript code. </li>\n<li>It contains a JavaScript engine that execute our JavaScript code,</li>\n<li>but it also has certain objects that provide an environment for our JavaScript code </li>\n<li>But these objects are different from the environment objects we have in browser</li>\n<li>For example, we don’t have the document object.</li>\n<li>Instead , we have other objects that give us more interesting capabilities</li>\n<li>For example, we can work with the file system, listen for requests and a given port and so on.<ul>\n<li>fs.readFile()</li>\n<li>http.createServer()</li>\n</ul>\n</li>\n<li>We can’t do stuff like that inside of a browser</li>\n<li>In essence, node is a program that includese the v8 JavaScript engine plus some additional modules that give us capabilities not avaliable inside browsers</li>\n<li>We can work with the file system or the network and so on</li>\n<li>Both Chrome and node share the same JavaScript engine, but they provide different runtime environments for JavaScript</li>\n<li>Node is NOT a programming language</li>\n<li>Node is NOT a framework</li>\n<li>It’s a runtime environment for executing JavaScript code</li>\n</ul>\n"},{"layout":"post","title":"coins","date":"2018-02-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/3067>\n\n## 풀이\n\n- 9084 번 문제와 동일한 문제\n\n- ex)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/coinsTable.png)\n\n- d[i] : i원을 만드는 경우의 수\n\n  - 2원으로 i 만드는 경우의 수 + 3원으로 i 만드는 경우의 수 + 5원으로 i 만드는 경우의 수 \n\n- 목표금액 7원을 만드는 경우\n\n  - 2원으로 만드는 경우 : 위 표와 같다\n  - 3원으로 만드는 경우 : 이전 결과에 경우의 수를 더한다.\n    - money가 6원 일 때\n      - 2원 * 3개 (이전 결과)\n      - 3원 * 2개\n\n    - money가 7원 일 때\n      - 2원 * 2개 + 3원 * 1개\n\n- X 의 의미\n\n  - 2원으로 1원을 만들 수 없다\n  - 3원으로 1원, 2원을 만들 수 없다\n  - 5원으로 1원, 2원, 3원, 4원을 만들 수 없다\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/coins2.png)","source":"_posts/2018-02-26-coins.md","raw":"---\nlayout: post\ntitle:  \"coins\"\ndate:   2018-02-26\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/3067>\n\n## 풀이\n\n- 9084 번 문제와 동일한 문제\n\n- ex)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/coinsTable.png)\n\n- d[i] : i원을 만드는 경우의 수\n\n  - 2원으로 i 만드는 경우의 수 + 3원으로 i 만드는 경우의 수 + 5원으로 i 만드는 경우의 수 \n\n- 목표금액 7원을 만드는 경우\n\n  - 2원으로 만드는 경우 : 위 표와 같다\n  - 3원으로 만드는 경우 : 이전 결과에 경우의 수를 더한다.\n    - money가 6원 일 때\n      - 2원 * 3개 (이전 결과)\n      - 3원 * 2개\n\n    - money가 7원 일 때\n      - 2원 * 2개 + 3원 * 1개\n\n- X 의 의미\n\n  - 2원으로 1원을 만들 수 없다\n  - 3원으로 1원, 2원을 만들 수 없다\n  - 5원으로 1원, 2원, 3원, 4원을 만들 수 없다\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/coins2.png)","slug":"2018-02-26-coins","published":1,"updated":"2018-04-16T04:00:43.426Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ee008i31x7x9y1peyq","content":"<p><a href=\"https://www.acmicpc.net/problem/3067\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3067</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>9084 번 문제와 동일한 문제</p>\n</li>\n<li><p>ex)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/coinsTable.png\" alt=\"img\"></p>\n</li>\n<li><p>d[i] : i원을 만드는 경우의 수</p>\n<ul>\n<li>2원으로 i 만드는 경우의 수 + 3원으로 i 만드는 경우의 수 + 5원으로 i 만드는 경우의 수 </li>\n</ul>\n</li>\n<li><p>목표금액 7원을 만드는 경우</p>\n<ul>\n<li>2원으로 만드는 경우 : 위 표와 같다</li>\n<li><p>3원으로 만드는 경우 : 이전 결과에 경우의 수를 더한다.</p>\n<ul>\n<li><p>money가 6원 일 때</p>\n<ul>\n<li>2원 * 3개 (이전 결과)</li>\n<li>3원 * 2개</li>\n</ul>\n</li>\n<li><p>money가 7원 일 때</p>\n<ul>\n<li>2원 <em> 2개 + 3원 </em> 1개</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>X 의 의미</p>\n<ul>\n<li>2원으로 1원을 만들 수 없다</li>\n<li>3원으로 1원, 2원을 만들 수 없다</li>\n<li>5원으로 1원, 2원, 3원, 4원을 만들 수 없다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/coins2.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/3067\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3067</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>9084 번 문제와 동일한 문제</p>\n</li>\n<li><p>ex)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/coinsTable.png\" alt=\"img\"></p>\n</li>\n<li><p>d[i] : i원을 만드는 경우의 수</p>\n<ul>\n<li>2원으로 i 만드는 경우의 수 + 3원으로 i 만드는 경우의 수 + 5원으로 i 만드는 경우의 수 </li>\n</ul>\n</li>\n<li><p>목표금액 7원을 만드는 경우</p>\n<ul>\n<li>2원으로 만드는 경우 : 위 표와 같다</li>\n<li><p>3원으로 만드는 경우 : 이전 결과에 경우의 수를 더한다.</p>\n<ul>\n<li><p>money가 6원 일 때</p>\n<ul>\n<li>2원 * 3개 (이전 결과)</li>\n<li>3원 * 2개</li>\n</ul>\n</li>\n<li><p>money가 7원 일 때</p>\n<ul>\n<li>2원 <em> 2개 + 3원 </em> 1개</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>X 의 의미</p>\n<ul>\n<li>2원으로 1원을 만들 수 없다</li>\n<li>3원으로 1원, 2원을 만들 수 없다</li>\n<li>5원으로 1원, 2원, 3원, 4원을 만들 수 없다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/coins2.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"저작권","date":"2018-02-26T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2914>\n\n## 풀이\n\n- 멜로디 = 곡의 개수 * 평균값\n- 하지만, 자료형 타입이 다른 점을 고려해야한다\n- ex)\n  - (int)874.38 == 874\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/right.png)","source":"_posts/2018-02-27-저작권.md","raw":"---\nlayout: post\ntitle:  \"저작권\"\ndate:   2018-02-27\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2914>\n\n## 풀이\n\n- 멜로디 = 곡의 개수 * 평균값\n- 하지만, 자료형 타입이 다른 점을 고려해야한다\n- ex)\n  - (int)874.38 == 874\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/right.png)","slug":"2018-02-27-저작권","published":1,"updated":"2018-04-16T04:00:27.058Z","comments":1,"photos":[],"link":"","_id":"cjp6k65eu008k31x70af0twnf","content":"<p><a href=\"https://www.acmicpc.net/problem/2914\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2914</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>멜로디 = 곡의 개수 * 평균값</li>\n<li>하지만, 자료형 타입이 다른 점을 고려해야한다</li>\n<li>ex)<ul>\n<li>(int)874.38 == 874</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/right.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2914\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2914</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>멜로디 = 곡의 개수 * 평균값</li>\n<li>하지만, 자료형 타입이 다른 점을 고려해야한다</li>\n<li>ex)<ul>\n<li>(int)874.38 == 874</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/right.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"구슬게임","date":"2018-02-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2600>\n\n## 풀이\n\n- 감이 잡히질 않음\n- 다시 풀어야함\n\n\n","source":"_posts/2018-02-27-구슬게임.md","raw":"---\nlayout: post\ntitle:  \"구슬게임\"\ndate:   2018-02-28\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2600>\n\n## 풀이\n\n- 감이 잡히질 않음\n- 다시 풀어야함\n\n\n","slug":"2018-02-27-구슬게임","published":1,"updated":"2018-04-16T04:00:30.799Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ew008m31x7snbj2fcj","content":"<p><a href=\"https://www.acmicpc.net/problem/2600\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2600</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>감이 잡히질 않음</li>\n<li>다시 풀어야함</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2600\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2600</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>감이 잡히질 않음</li>\n<li>다시 풀어야함</li>\n</ul>\n"},{"layout":"post","title":"최빈수","date":"2018-03-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh>\n\n## 풀이\n\n- 특정 자료에서 가장 여러번 나타나는 값 찾기\t\n- i번째에서\n  - i+1 ~ 1000 번째까지 같은 값 있는지 체크\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1.png)","source":"_posts/2018-03-09-최빈수 구하기.md","raw":"---\nlayout: post\ntitle:  \"최빈수\"\ndate:   2018-03-09\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh>\n\n## 풀이\n\n- 특정 자료에서 가장 여러번 나타나는 값 찾기\t\n- i번째에서\n  - i+1 ~ 1000 번째까지 같은 값 있는지 체크\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1.png)","slug":"2018-03-09-최빈수 구하기","published":1,"updated":"2018-04-16T04:00:20.168Z","comments":1,"photos":[],"link":"","_id":"cjp6k65f0008o31x7yqnmwbpc","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>특정 자료에서 가장 여러번 나타나는 값 찾기    </li>\n<li>i번째에서<ul>\n<li>i+1 ~ 1000 번째까지 같은 값 있는지 체크</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>특정 자료에서 가장 여러번 나타나는 값 찾기    </li>\n<li>i번째에서<ul>\n<li>i+1 ~ 1000 번째까지 같은 값 있는지 체크</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"프로세서 연결하기","date":"2018-03-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV4suNtaXFEDFAUf>\n\n## 풀이\n\n- 완전탐색 문제 \n- 전선의 중복 문제를 어떻게 해결할까..\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/)","source":"_posts/2018-03-05-프로세서 연결하기.md","raw":"---\nlayout: post\ntitle:  \"프로세서 연결하기\"\ndate:   2018-03-05\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV4suNtaXFEDFAUf>\n\n## 풀이\n\n- 완전탐색 문제 \n- 전선의 중복 문제를 어떻게 해결할까..\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/)","slug":"2018-03-05-프로세서 연결하기","published":1,"updated":"2018-04-16T04:00:23.837Z","comments":1,"photos":[],"link":"","_id":"cjp6k65f8008q31x7wcb9k4g8","content":"<p><a href=\"https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV4suNtaXFEDFAUf\" target=\"_blank\" rel=\"noopener\">https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV4suNtaXFEDFAUf</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>완전탐색 문제 </li>\n<li>전선의 중복 문제를 어떻게 해결할까..</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV4suNtaXFEDFAUf\" target=\"_blank\" rel=\"noopener\">https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV4suNtaXFEDFAUf</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>완전탐색 문제 </li>\n<li>전선의 중복 문제를 어떻게 해결할까..</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/\" alt=\"img\"></p>\n"},{"layout":"post","title":"최대상금","date":"2018-03-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV15Khn6AN0CFAYD&categoryId=AV15Khn6AN0CFAYD&categoryType=CODE>\n\n- 모든 경우의 수 완전 탐색을 하려고 하였다.\n- 겹치는 부분이 있기때문에, 방문체크 배열을 만들었다.\n- 바꿀 기회가 남아 있으면 다시 재귀 함수를 호출하여 탐색을 한다.\n- 계속 오답.\n- 많은 시간을 투자했지만 풀지 못하였다.\n- 다시 풀어봐야함.\n\n\n\n## 해결\n\n\n\n- 결국 구글링을 하였다.\n- 해결의 핵심은 \n  - 같은 횟수에, 같은 숫자를 탐색하는지 체크하는 배열을 두는 것이다.\n- 같은 횟수에, 해당 숫자를 \n  - 탐색하지 않았으면,  탐색을 시작하고\n  - 탐색을 이미 했으면, 계속해서 반복문을 돌린다\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_main.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_change.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_get.png)\n\n\n\n\n\n","source":"_posts/2018-03-12-최대상금.md","raw":"---\nlayout: post\ntitle:  \"최대상금\"\ndate:   2018-03-12\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV15Khn6AN0CFAYD&categoryId=AV15Khn6AN0CFAYD&categoryType=CODE>\n\n- 모든 경우의 수 완전 탐색을 하려고 하였다.\n- 겹치는 부분이 있기때문에, 방문체크 배열을 만들었다.\n- 바꿀 기회가 남아 있으면 다시 재귀 함수를 호출하여 탐색을 한다.\n- 계속 오답.\n- 많은 시간을 투자했지만 풀지 못하였다.\n- 다시 풀어봐야함.\n\n\n\n## 해결\n\n\n\n- 결국 구글링을 하였다.\n- 해결의 핵심은 \n  - 같은 횟수에, 같은 숫자를 탐색하는지 체크하는 배열을 두는 것이다.\n- 같은 횟수에, 해당 숫자를 \n  - 탐색하지 않았으면,  탐색을 시작하고\n  - 탐색을 이미 했으면, 계속해서 반복문을 돌린다\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_main.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_change.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_get.png)\n\n\n\n\n\n","slug":"2018-03-12-최대상금","published":1,"updated":"2018-04-16T04:00:12.963Z","comments":1,"photos":[],"link":"","_id":"cjp6k65fw008s31x77269r4fc","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV15Khn6AN0CFAYD&amp;categoryId=AV15Khn6AN0CFAYD&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV15Khn6AN0CFAYD&amp;categoryId=AV15Khn6AN0CFAYD&amp;categoryType=CODE</a></p>\n<ul>\n<li>모든 경우의 수 완전 탐색을 하려고 하였다.</li>\n<li>겹치는 부분이 있기때문에, 방문체크 배열을 만들었다.</li>\n<li>바꿀 기회가 남아 있으면 다시 재귀 함수를 호출하여 탐색을 한다.</li>\n<li>계속 오답.</li>\n<li>많은 시간을 투자했지만 풀지 못하였다.</li>\n<li>다시 풀어봐야함.</li>\n</ul>\n<h2 id=\"해결\"><a href=\"#해결\" class=\"headerlink\" title=\"해결\"></a>해결</h2><ul>\n<li>결국 구글링을 하였다.</li>\n<li>해결의 핵심은 <ul>\n<li>같은 횟수에, 같은 숫자를 탐색하는지 체크하는 배열을 두는 것이다.</li>\n</ul>\n</li>\n<li>같은 횟수에, 해당 숫자를 <ul>\n<li>탐색하지 않았으면,  탐색을 시작하고</li>\n<li>탐색을 이미 했으면, 계속해서 반복문을 돌린다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_main.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_change.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_get.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV15Khn6AN0CFAYD&amp;categoryId=AV15Khn6AN0CFAYD&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV15Khn6AN0CFAYD&amp;categoryId=AV15Khn6AN0CFAYD&amp;categoryType=CODE</a></p>\n<ul>\n<li>모든 경우의 수 완전 탐색을 하려고 하였다.</li>\n<li>겹치는 부분이 있기때문에, 방문체크 배열을 만들었다.</li>\n<li>바꿀 기회가 남아 있으면 다시 재귀 함수를 호출하여 탐색을 한다.</li>\n<li>계속 오답.</li>\n<li>많은 시간을 투자했지만 풀지 못하였다.</li>\n<li>다시 풀어봐야함.</li>\n</ul>\n<h2 id=\"해결\"><a href=\"#해결\" class=\"headerlink\" title=\"해결\"></a>해결</h2><ul>\n<li>결국 구글링을 하였다.</li>\n<li>해결의 핵심은 <ul>\n<li>같은 횟수에, 같은 숫자를 탐색하는지 체크하는 배열을 두는 것이다.</li>\n</ul>\n</li>\n<li>같은 횟수에, 해당 숫자를 <ul>\n<li>탐색하지 않았으면,  탐색을 시작하고</li>\n<li>탐색을 이미 했으면, 계속해서 반복문을 돌린다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_main.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_change.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/swa1244_get.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"경로찾기","date":"2018-04-01T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/11403>\n\n다시 푼 문제이다. DFS를 이해하고 있으면 쉬운 문제이다. \n\n## 풀이\n\n1. 각각의 정점에서 차례대로 DFS를 실행한다.\n2. 연결된 정점이 있고 아직 방문하지 않았으면, 방문 체크 후에 연결된 정점에서 다시 DFS를 실행한다.\n3. 경로를 출력한다.\n\n## 예시\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch01.png)\n\n위의 경우를 생각해보자.\n\n- 0을 시작으로 DFS를 실행한다.\n  - 0과 연결된 정점은 1이다. 1은 아직 방문하지 않았으니 방문 체크를 한다.\n  - 1을 시작으로 DFS를 실행한다.\n  - 1과 연결된 정점은 2이다. 2는 아직 방문하지 않았으니 방문 체크를 한다.\n  - 2를 시작으로 DFS를 실행한다.\n  - 2와 연결된 정점은 0이다. 0은 아직 방문하지 않았으니 방문 체크를 한다.\n  - 0과 연결된 정점은 1이다. 1은 이미 방문을 하였으니 방문하지 않는다.\n  - DFS는 종료되고, 방문체크 된 곳이 0에서 이동 가능 한 정점이다.\n- 1을 시작으로 DFS를 실행한다. \n  - 이하 위와 같다.\n- 2를 시작으로 DFS를 실행한다. \n  - 이하 위와 같다.\n\n## 코드  \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch03.png)\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-04-02-경로찾기.md","raw":"---\nlayout: post\ntitle:  \"경로찾기\"\ndate:   2018-04-02\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/11403>\n\n다시 푼 문제이다. DFS를 이해하고 있으면 쉬운 문제이다. \n\n## 풀이\n\n1. 각각의 정점에서 차례대로 DFS를 실행한다.\n2. 연결된 정점이 있고 아직 방문하지 않았으면, 방문 체크 후에 연결된 정점에서 다시 DFS를 실행한다.\n3. 경로를 출력한다.\n\n## 예시\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch01.png)\n\n위의 경우를 생각해보자.\n\n- 0을 시작으로 DFS를 실행한다.\n  - 0과 연결된 정점은 1이다. 1은 아직 방문하지 않았으니 방문 체크를 한다.\n  - 1을 시작으로 DFS를 실행한다.\n  - 1과 연결된 정점은 2이다. 2는 아직 방문하지 않았으니 방문 체크를 한다.\n  - 2를 시작으로 DFS를 실행한다.\n  - 2와 연결된 정점은 0이다. 0은 아직 방문하지 않았으니 방문 체크를 한다.\n  - 0과 연결된 정점은 1이다. 1은 이미 방문을 하였으니 방문하지 않는다.\n  - DFS는 종료되고, 방문체크 된 곳이 0에서 이동 가능 한 정점이다.\n- 1을 시작으로 DFS를 실행한다. \n  - 이하 위와 같다.\n- 2를 시작으로 DFS를 실행한다. \n  - 이하 위와 같다.\n\n## 코드  \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch03.png)\n\n\n\n\n\n\n\n\n\n","slug":"2018-04-02-경로찾기","published":1,"updated":"2018-08-01T05:16:06.887Z","comments":1,"photos":[],"link":"","_id":"cjp6k65g2008u31x7dl4ps5vo","content":"<p><a href=\"https://www.acmicpc.net/problem/11403\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11403</a></p>\n<p>다시 푼 문제이다. DFS를 이해하고 있으면 쉬운 문제이다. </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>각각의 정점에서 차례대로 DFS를 실행한다.</li>\n<li>연결된 정점이 있고 아직 방문하지 않았으면, 방문 체크 후에 연결된 정점에서 다시 DFS를 실행한다.</li>\n<li>경로를 출력한다.</li>\n</ol>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch01.png\" alt=\"img\"></p>\n<p>위의 경우를 생각해보자.</p>\n<ul>\n<li>0을 시작으로 DFS를 실행한다.<ul>\n<li>0과 연결된 정점은 1이다. 1은 아직 방문하지 않았으니 방문 체크를 한다.</li>\n<li>1을 시작으로 DFS를 실행한다.</li>\n<li>1과 연결된 정점은 2이다. 2는 아직 방문하지 않았으니 방문 체크를 한다.</li>\n<li>2를 시작으로 DFS를 실행한다.</li>\n<li>2와 연결된 정점은 0이다. 0은 아직 방문하지 않았으니 방문 체크를 한다.</li>\n<li>0과 연결된 정점은 1이다. 1은 이미 방문을 하였으니 방문하지 않는다.</li>\n<li>DFS는 종료되고, 방문체크 된 곳이 0에서 이동 가능 한 정점이다.</li>\n</ul>\n</li>\n<li>1을 시작으로 DFS를 실행한다. <ul>\n<li>이하 위와 같다.</li>\n</ul>\n</li>\n<li>2를 시작으로 DFS를 실행한다. <ul>\n<li>이하 위와 같다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/11403\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/11403</a></p>\n<p>다시 푼 문제이다. DFS를 이해하고 있으면 쉬운 문제이다. </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>각각의 정점에서 차례대로 DFS를 실행한다.</li>\n<li>연결된 정점이 있고 아직 방문하지 않았으면, 방문 체크 후에 연결된 정점에서 다시 DFS를 실행한다.</li>\n<li>경로를 출력한다.</li>\n</ol>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch01.png\" alt=\"img\"></p>\n<p>위의 경우를 생각해보자.</p>\n<ul>\n<li>0을 시작으로 DFS를 실행한다.<ul>\n<li>0과 연결된 정점은 1이다. 1은 아직 방문하지 않았으니 방문 체크를 한다.</li>\n<li>1을 시작으로 DFS를 실행한다.</li>\n<li>1과 연결된 정점은 2이다. 2는 아직 방문하지 않았으니 방문 체크를 한다.</li>\n<li>2를 시작으로 DFS를 실행한다.</li>\n<li>2와 연결된 정점은 0이다. 0은 아직 방문하지 않았으니 방문 체크를 한다.</li>\n<li>0과 연결된 정점은 1이다. 1은 이미 방문을 하였으니 방문하지 않는다.</li>\n<li>DFS는 종료되고, 방문체크 된 곳이 0에서 이동 가능 한 정점이다.</li>\n</ul>\n</li>\n<li>1을 시작으로 DFS를 실행한다. <ul>\n<li>이하 위와 같다.</li>\n</ul>\n</li>\n<li>2를 시작으로 DFS를 실행한다. <ul>\n<li>이하 위와 같다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pathSearch03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"영역 구하기","date":"2018-04-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n<https://www.acmicpc.net/problem/2583>\n\n- 배열에 직사각형 그리는 게 핵심\n  - x와 y 를 바꿔서 그려야함 \n- 이미 칠해져 있거나 , 방문을 이미 했으면 \n  - 탐색 X\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new1.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new2.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new3.png)","source":"_posts/2018-04-03-영역 구하기.md","raw":"---\nlayout: post\ntitle:  \"영역 구하기\"\ndate:   2018-04-03\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n<https://www.acmicpc.net/problem/2583>\n\n- 배열에 직사각형 그리는 게 핵심\n  - x와 y 를 바꿔서 그려야함 \n- 이미 칠해져 있거나 , 방문을 이미 했으면 \n  - 탐색 X\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new1.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new2.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new3.png)","slug":"2018-04-03-영역 구하기","published":1,"updated":"2018-04-16T04:00:04.036Z","comments":1,"photos":[],"link":"","_id":"cjp6k65g4008w31x7x5elt6xx","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/2583\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2583</a></p>\n<ul>\n<li>배열에 직사각형 그리는 게 핵심<ul>\n<li>x와 y 를 바꿔서 그려야함 </li>\n</ul>\n</li>\n<li>이미 칠해져 있거나 , 방문을 이미 했으면 <ul>\n<li>탐색 X</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new1.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new2.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new3.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/2583\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2583</a></p>\n<ul>\n<li>배열에 직사각형 그리는 게 핵심<ul>\n<li>x와 y 를 바꿔서 그려야함 </li>\n</ul>\n</li>\n<li>이미 칠해져 있거나 , 방문을 이미 했으면 <ul>\n<li>탐색 X</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new1.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new2.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/new3.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"그래프","date":"2018-03-09T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n- 그래프\n\n  - 자료구조의 일종\n  - 정점(node, vertex)\n    - 주로 번호가 써있음\n  - 간선(edge) :  정점 사이 연결\n  - 그래프 G =(V,E)로 나타냄\n\n- 그래프를 저장하는 방법\n\n  - 인접 행렬\n    - 정점 개수를 v라고 할때,\n    - v 제곱 크기의 인차원 배열 이용\n    - a[i][j]=1\n      - i에서 j 로 가는 간선이 있으면 \n    - a[i][j]=0\n      - i에서 j 로 가는 간선이 없으면 \n    - a[i][j] = w\n      - i에서 j로의 간선 가중치가 w 이면\n    - 없는 간선도 저장하기 때문에 자주 사용하지 않는 방법\n    - 쉬운 문제 풀 때 주로 사용\n  - 인접 리스트\n    - 링크드 리스트를 이용해서 구현\n    - a[i] = i와 연결된 정점이 링크드리스트 형태로 저장\n    - a[1] : 2, 5 \n      - 1과 연결된 정점이 2, 5\n    - 링크드 리스트는 구현하는데 시간이 오래걸림\n      - 그래서, vector / arraylist로 함\n    - 가중치가 있으면\n      - 정점과 가중치를 같이 저장\n      - a[1] : (2,2), (5,7)\n\n- 그래프의 탐색\n\n  - 목적 : 모든 정점을 한 번씩 방문\n\n  - 깊이 우선 탐색 (DFS)\n\n    - 최대한 깊숙히 많이 감\n    - 스택 사용\n    - 스택을 이용해서 갈수 있는 만큼 많이 가고\n    - 갈 수 없으면 이전 정점으로 돌아감 (스택에서 pop해서)\n    - check라는 배열이 필요함\n      - 0 : 아직 방문 X\n      - 1 : 방문 O\n    - 갈 수 있는 정점이 여러개면\n      - 번호가 작은 것부터\n    - pop 계속하다가 스택이 비면 탐색 종료\n    - 구현\n\n    ```\n    void dfs(int x){\n\n    \t//방문 했다고 체크\n        check[x] = true;\n        \n        //a[x] : x와 연결된 정점들이 저장되어 있음\n        for(int i=0; i<a[x].size; i++){\n        \n        \t//x와 연결된 정점\n            int y = a[x][i];\n            \n            //방문하지 않았으면 방문\n            if(check[y] == false){\n                dfs(y);\n            }\n        }\n    }\n    ```\n\n    ​\n\n  - 너비 우선 탐색 (BFS)\n\n    - 최대한 넓게 가는 것\n    - 큐 사용\n    - 모든 가중치가 1이면 최단 거리 찾는 알고리즘\n    - 큐를 이용해서 아직 방문하지 않았고, 지금 위치에서 갈 수 있는 것을 모두 큐에 넣는 방식\n    - 큐에 넣을 때 방문했다고 체크\n    - check라는 배열이 필요함\n      - 0 : 아직 방문 X\n      - 1 : 방문 O\n    - 구현\n\n    ```\n    queue<int> q;\n    check[1] = true; q.push(1);\n\n    while(!q.empty()){\n        int x = q.front(); q.pop();\n        printf(\"%d \" , x);\n        for(int i=0; i<a[x].size; i++){\n            int y = a[x][i];\n            if(check[y] == false){\n                check[y] = true; q.push(y);\n            }\n        }\n    }\n    ```\n\n    ​","source":"_posts/2018-03-10-그래프.md","raw":"---\nlayout: post\ntitle:  \"그래프\"\ndate:   2018-03-10\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n- 그래프\n\n  - 자료구조의 일종\n  - 정점(node, vertex)\n    - 주로 번호가 써있음\n  - 간선(edge) :  정점 사이 연결\n  - 그래프 G =(V,E)로 나타냄\n\n- 그래프를 저장하는 방법\n\n  - 인접 행렬\n    - 정점 개수를 v라고 할때,\n    - v 제곱 크기의 인차원 배열 이용\n    - a[i][j]=1\n      - i에서 j 로 가는 간선이 있으면 \n    - a[i][j]=0\n      - i에서 j 로 가는 간선이 없으면 \n    - a[i][j] = w\n      - i에서 j로의 간선 가중치가 w 이면\n    - 없는 간선도 저장하기 때문에 자주 사용하지 않는 방법\n    - 쉬운 문제 풀 때 주로 사용\n  - 인접 리스트\n    - 링크드 리스트를 이용해서 구현\n    - a[i] = i와 연결된 정점이 링크드리스트 형태로 저장\n    - a[1] : 2, 5 \n      - 1과 연결된 정점이 2, 5\n    - 링크드 리스트는 구현하는데 시간이 오래걸림\n      - 그래서, vector / arraylist로 함\n    - 가중치가 있으면\n      - 정점과 가중치를 같이 저장\n      - a[1] : (2,2), (5,7)\n\n- 그래프의 탐색\n\n  - 목적 : 모든 정점을 한 번씩 방문\n\n  - 깊이 우선 탐색 (DFS)\n\n    - 최대한 깊숙히 많이 감\n    - 스택 사용\n    - 스택을 이용해서 갈수 있는 만큼 많이 가고\n    - 갈 수 없으면 이전 정점으로 돌아감 (스택에서 pop해서)\n    - check라는 배열이 필요함\n      - 0 : 아직 방문 X\n      - 1 : 방문 O\n    - 갈 수 있는 정점이 여러개면\n      - 번호가 작은 것부터\n    - pop 계속하다가 스택이 비면 탐색 종료\n    - 구현\n\n    ```\n    void dfs(int x){\n\n    \t//방문 했다고 체크\n        check[x] = true;\n        \n        //a[x] : x와 연결된 정점들이 저장되어 있음\n        for(int i=0; i<a[x].size; i++){\n        \n        \t//x와 연결된 정점\n            int y = a[x][i];\n            \n            //방문하지 않았으면 방문\n            if(check[y] == false){\n                dfs(y);\n            }\n        }\n    }\n    ```\n\n    ​\n\n  - 너비 우선 탐색 (BFS)\n\n    - 최대한 넓게 가는 것\n    - 큐 사용\n    - 모든 가중치가 1이면 최단 거리 찾는 알고리즘\n    - 큐를 이용해서 아직 방문하지 않았고, 지금 위치에서 갈 수 있는 것을 모두 큐에 넣는 방식\n    - 큐에 넣을 때 방문했다고 체크\n    - check라는 배열이 필요함\n      - 0 : 아직 방문 X\n      - 1 : 방문 O\n    - 구현\n\n    ```\n    queue<int> q;\n    check[1] = true; q.push(1);\n\n    while(!q.empty()){\n        int x = q.front(); q.pop();\n        printf(\"%d \" , x);\n        for(int i=0; i<a[x].size; i++){\n            int y = a[x][i];\n            if(check[y] == false){\n                check[y] = true; q.push(y);\n            }\n        }\n    }\n    ```\n\n    ​","slug":"2018-03-10-그래프","published":1,"updated":"2018-04-16T04:00:16.633Z","comments":1,"photos":[],"link":"","_id":"cjp6k65g5008y31x7oc2l6orn","content":"<ul>\n<li><p>그래프</p>\n<ul>\n<li>자료구조의 일종</li>\n<li>정점(node, vertex)<ul>\n<li>주로 번호가 써있음</li>\n</ul>\n</li>\n<li>간선(edge) :  정점 사이 연결</li>\n<li>그래프 G =(V,E)로 나타냄</li>\n</ul>\n</li>\n<li><p>그래프를 저장하는 방법</p>\n<ul>\n<li>인접 행렬<ul>\n<li>정점 개수를 v라고 할때,</li>\n<li>v 제곱 크기의 인차원 배열 이용</li>\n<li>a[i][j]=1<ul>\n<li>i에서 j 로 가는 간선이 있으면 </li>\n</ul>\n</li>\n<li>a[i][j]=0<ul>\n<li>i에서 j 로 가는 간선이 없으면 </li>\n</ul>\n</li>\n<li>a[i][j] = w<ul>\n<li>i에서 j로의 간선 가중치가 w 이면</li>\n</ul>\n</li>\n<li>없는 간선도 저장하기 때문에 자주 사용하지 않는 방법</li>\n<li>쉬운 문제 풀 때 주로 사용</li>\n</ul>\n</li>\n<li>인접 리스트<ul>\n<li>링크드 리스트를 이용해서 구현</li>\n<li>a[i] = i와 연결된 정점이 링크드리스트 형태로 저장</li>\n<li>a[1] : 2, 5 <ul>\n<li>1과 연결된 정점이 2, 5</li>\n</ul>\n</li>\n<li>링크드 리스트는 구현하는데 시간이 오래걸림<ul>\n<li>그래서, vector / arraylist로 함</li>\n</ul>\n</li>\n<li>가중치가 있으면<ul>\n<li>정점과 가중치를 같이 저장</li>\n<li>a[1] : (2,2), (5,7)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>그래프의 탐색</p>\n<ul>\n<li><p>목적 : 모든 정점을 한 번씩 방문</p>\n</li>\n<li><p>깊이 우선 탐색 (DFS)</p>\n<ul>\n<li>최대한 깊숙히 많이 감</li>\n<li>스택 사용</li>\n<li>스택을 이용해서 갈수 있는 만큼 많이 가고</li>\n<li>갈 수 없으면 이전 정점으로 돌아감 (스택에서 pop해서)</li>\n<li>check라는 배열이 필요함<ul>\n<li>0 : 아직 방문 X</li>\n<li>1 : 방문 O</li>\n</ul>\n</li>\n<li>갈 수 있는 정점이 여러개면<ul>\n<li>번호가 작은 것부터</li>\n</ul>\n</li>\n<li>pop 계속하다가 스택이 비면 탐색 종료</li>\n<li>구현</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void dfs(int x)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t//방문 했다고 체크</span><br><span class=\"line\">    check[x] = true;</span><br><span class=\"line\">    </span><br><span class=\"line\">    //a[x] : x와 연결된 정점들이 저장되어 있음</span><br><span class=\"line\">    for(int i=0; i&lt;a[x].size; i++)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    \t//x와 연결된 정점</span><br><span class=\"line\">        int y = a[x][i];</span><br><span class=\"line\">        </span><br><span class=\"line\">        //방문하지 않았으면 방문</span><br><span class=\"line\">        if(check[y] == false)&#123;</span><br><span class=\"line\">            dfs(y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n<li><p>너비 우선 탐색 (BFS)</p>\n<ul>\n<li>최대한 넓게 가는 것</li>\n<li>큐 사용</li>\n<li>모든 가중치가 1이면 최단 거리 찾는 알고리즘</li>\n<li>큐를 이용해서 아직 방문하지 않았고, 지금 위치에서 갈 수 있는 것을 모두 큐에 넣는 방식</li>\n<li>큐에 넣을 때 방문했다고 체크</li>\n<li>check라는 배열이 필요함<ul>\n<li>0 : 아직 방문 X</li>\n<li>1 : 방문 O</li>\n</ul>\n</li>\n<li>구현</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">queue&lt;int&gt; q;</span><br><span class=\"line\">check[1] = true; q.push(1);</span><br><span class=\"line\"></span><br><span class=\"line\">while(!q.empty())&#123;</span><br><span class=\"line\">    int x = q.front(); q.pop();</span><br><span class=\"line\">    printf(&quot;%d &quot; , x);</span><br><span class=\"line\">    for(int i=0; i&lt;a[x].size; i++)&#123;</span><br><span class=\"line\">        int y = a[x][i];</span><br><span class=\"line\">        if(check[y] == false)&#123;</span><br><span class=\"line\">            check[y] = true; q.push(y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>그래프</p>\n<ul>\n<li>자료구조의 일종</li>\n<li>정점(node, vertex)<ul>\n<li>주로 번호가 써있음</li>\n</ul>\n</li>\n<li>간선(edge) :  정점 사이 연결</li>\n<li>그래프 G =(V,E)로 나타냄</li>\n</ul>\n</li>\n<li><p>그래프를 저장하는 방법</p>\n<ul>\n<li>인접 행렬<ul>\n<li>정점 개수를 v라고 할때,</li>\n<li>v 제곱 크기의 인차원 배열 이용</li>\n<li>a[i][j]=1<ul>\n<li>i에서 j 로 가는 간선이 있으면 </li>\n</ul>\n</li>\n<li>a[i][j]=0<ul>\n<li>i에서 j 로 가는 간선이 없으면 </li>\n</ul>\n</li>\n<li>a[i][j] = w<ul>\n<li>i에서 j로의 간선 가중치가 w 이면</li>\n</ul>\n</li>\n<li>없는 간선도 저장하기 때문에 자주 사용하지 않는 방법</li>\n<li>쉬운 문제 풀 때 주로 사용</li>\n</ul>\n</li>\n<li>인접 리스트<ul>\n<li>링크드 리스트를 이용해서 구현</li>\n<li>a[i] = i와 연결된 정점이 링크드리스트 형태로 저장</li>\n<li>a[1] : 2, 5 <ul>\n<li>1과 연결된 정점이 2, 5</li>\n</ul>\n</li>\n<li>링크드 리스트는 구현하는데 시간이 오래걸림<ul>\n<li>그래서, vector / arraylist로 함</li>\n</ul>\n</li>\n<li>가중치가 있으면<ul>\n<li>정점과 가중치를 같이 저장</li>\n<li>a[1] : (2,2), (5,7)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>그래프의 탐색</p>\n<ul>\n<li><p>목적 : 모든 정점을 한 번씩 방문</p>\n</li>\n<li><p>깊이 우선 탐색 (DFS)</p>\n<ul>\n<li>최대한 깊숙히 많이 감</li>\n<li>스택 사용</li>\n<li>스택을 이용해서 갈수 있는 만큼 많이 가고</li>\n<li>갈 수 없으면 이전 정점으로 돌아감 (스택에서 pop해서)</li>\n<li>check라는 배열이 필요함<ul>\n<li>0 : 아직 방문 X</li>\n<li>1 : 방문 O</li>\n</ul>\n</li>\n<li>갈 수 있는 정점이 여러개면<ul>\n<li>번호가 작은 것부터</li>\n</ul>\n</li>\n<li>pop 계속하다가 스택이 비면 탐색 종료</li>\n<li>구현</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void dfs(int x)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t//방문 했다고 체크</span><br><span class=\"line\">    check[x] = true;</span><br><span class=\"line\">    </span><br><span class=\"line\">    //a[x] : x와 연결된 정점들이 저장되어 있음</span><br><span class=\"line\">    for(int i=0; i&lt;a[x].size; i++)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    \t//x와 연결된 정점</span><br><span class=\"line\">        int y = a[x][i];</span><br><span class=\"line\">        </span><br><span class=\"line\">        //방문하지 않았으면 방문</span><br><span class=\"line\">        if(check[y] == false)&#123;</span><br><span class=\"line\">            dfs(y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n<li><p>너비 우선 탐색 (BFS)</p>\n<ul>\n<li>최대한 넓게 가는 것</li>\n<li>큐 사용</li>\n<li>모든 가중치가 1이면 최단 거리 찾는 알고리즘</li>\n<li>큐를 이용해서 아직 방문하지 않았고, 지금 위치에서 갈 수 있는 것을 모두 큐에 넣는 방식</li>\n<li>큐에 넣을 때 방문했다고 체크</li>\n<li>check라는 배열이 필요함<ul>\n<li>0 : 아직 방문 X</li>\n<li>1 : 방문 O</li>\n</ul>\n</li>\n<li>구현</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">queue&lt;int&gt; q;</span><br><span class=\"line\">check[1] = true; q.push(1);</span><br><span class=\"line\"></span><br><span class=\"line\">while(!q.empty())&#123;</span><br><span class=\"line\">    int x = q.front(); q.pop();</span><br><span class=\"line\">    printf(&quot;%d &quot; , x);</span><br><span class=\"line\">    for(int i=0; i&lt;a[x].size; i++)&#123;</span><br><span class=\"line\">        int y = a[x][i];</span><br><span class=\"line\">        if(check[y] == false)&#123;</span><br><span class=\"line\">            check[y] = true; q.push(y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Adapter Pattern01","date":"2018-04-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Intent\n  - Convert the interface of a class into another interface clients expect.\n  - Adapter lets classes work together, that could not otherwise because of incompatible interfaces.\n  - 레거시 시스템을 원하는 인터페이스로 사용가능케 함.\n  - Wrapper로도 불림\n\n\n- Class Diagram\n  - Clinet : Target Interface 만 볼 수 있다\n  - Adapter : Target Interface를 구현, Adaptee로 구성\n  - Adaptee : 모든 요청은 Adaptee에게 위임\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/duck.png)\n\n\n\n- Code\n\n### Target Interface\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/11111.png)\n\n### Target\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22222.png)\n\n### Adaptee Interface\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/33333.png)\n\n### Adaptee \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/44444.png)\n\n### Adapter \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/55555.png)\n\n### Client\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/66666.png)\n\n### Reference\n\n- <http://www.oodesign.com/adapter-pattern.html>\n- Head First Design Patterns","source":"_posts/2018-04-06-Adapter Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Adapter Pattern01\"\ndate:   2018-04-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Intent\n  - Convert the interface of a class into another interface clients expect.\n  - Adapter lets classes work together, that could not otherwise because of incompatible interfaces.\n  - 레거시 시스템을 원하는 인터페이스로 사용가능케 함.\n  - Wrapper로도 불림\n\n\n- Class Diagram\n  - Clinet : Target Interface 만 볼 수 있다\n  - Adapter : Target Interface를 구현, Adaptee로 구성\n  - Adaptee : 모든 요청은 Adaptee에게 위임\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/duck.png)\n\n\n\n- Code\n\n### Target Interface\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/11111.png)\n\n### Target\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22222.png)\n\n### Adaptee Interface\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/33333.png)\n\n### Adaptee \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/44444.png)\n\n### Adapter \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/55555.png)\n\n### Client\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/66666.png)\n\n### Reference\n\n- <http://www.oodesign.com/adapter-pattern.html>\n- Head First Design Patterns","slug":"2018-04-06-Adapter Pattern01","published":1,"updated":"2018-10-25T05:40:38.658Z","comments":1,"photos":[],"link":"","_id":"cjp6k65g6009031x7j67pqbt1","content":"<ul>\n<li>Intent<ul>\n<li>Convert the interface of a class into another interface clients expect.</li>\n<li>Adapter lets classes work together, that could not otherwise because of incompatible interfaces.</li>\n<li>레거시 시스템을 원하는 인터페이스로 사용가능케 함.</li>\n<li>Wrapper로도 불림</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Class Diagram<ul>\n<li>Clinet : Target Interface 만 볼 수 있다</li>\n<li>Adapter : Target Interface를 구현, Adaptee로 구성</li>\n<li>Adaptee : 모든 요청은 Adaptee에게 위임</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/duck.png\" alt=\"img\"></p>\n<ul>\n<li>Code</li>\n</ul>\n<h3 id=\"Target-Interface\"><a href=\"#Target-Interface\" class=\"headerlink\" title=\"Target Interface\"></a>Target Interface</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/11111.png\" alt=\"img\"></p>\n<h3 id=\"Target\"><a href=\"#Target\" class=\"headerlink\" title=\"Target\"></a>Target</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22222.png\" alt=\"img\"></p>\n<h3 id=\"Adaptee-Interface\"><a href=\"#Adaptee-Interface\" class=\"headerlink\" title=\"Adaptee Interface\"></a>Adaptee Interface</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/33333.png\" alt=\"img\"></p>\n<h3 id=\"Adaptee\"><a href=\"#Adaptee\" class=\"headerlink\" title=\"Adaptee\"></a>Adaptee</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/44444.png\" alt=\"img\"></p>\n<h3 id=\"Adapter\"><a href=\"#Adapter\" class=\"headerlink\" title=\"Adapter\"></a>Adapter</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/55555.png\" alt=\"img\"></p>\n<h3 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/66666.png\" alt=\"img\"></p>\n<h3 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h3><ul>\n<li><a href=\"http://www.oodesign.com/adapter-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/adapter-pattern.html</a></li>\n<li>Head First Design Patterns</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>Intent<ul>\n<li>Convert the interface of a class into another interface clients expect.</li>\n<li>Adapter lets classes work together, that could not otherwise because of incompatible interfaces.</li>\n<li>레거시 시스템을 원하는 인터페이스로 사용가능케 함.</li>\n<li>Wrapper로도 불림</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Class Diagram<ul>\n<li>Clinet : Target Interface 만 볼 수 있다</li>\n<li>Adapter : Target Interface를 구현, Adaptee로 구성</li>\n<li>Adaptee : 모든 요청은 Adaptee에게 위임</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/duck.png\" alt=\"img\"></p>\n<ul>\n<li>Code</li>\n</ul>\n<h3 id=\"Target-Interface\"><a href=\"#Target-Interface\" class=\"headerlink\" title=\"Target Interface\"></a>Target Interface</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/11111.png\" alt=\"img\"></p>\n<h3 id=\"Target\"><a href=\"#Target\" class=\"headerlink\" title=\"Target\"></a>Target</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/22222.png\" alt=\"img\"></p>\n<h3 id=\"Adaptee-Interface\"><a href=\"#Adaptee-Interface\" class=\"headerlink\" title=\"Adaptee Interface\"></a>Adaptee Interface</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/33333.png\" alt=\"img\"></p>\n<h3 id=\"Adaptee\"><a href=\"#Adaptee\" class=\"headerlink\" title=\"Adaptee\"></a>Adaptee</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/44444.png\" alt=\"img\"></p>\n<h3 id=\"Adapter\"><a href=\"#Adapter\" class=\"headerlink\" title=\"Adapter\"></a>Adapter</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/55555.png\" alt=\"img\"></p>\n<h3 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/66666.png\" alt=\"img\"></p>\n<h3 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h3><ul>\n<li><a href=\"http://www.oodesign.com/adapter-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/adapter-pattern.html</a></li>\n<li>Head First Design Patterns</li>\n</ul>\n"},{"layout":"post","title":"DIP","date":"2018-04-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Dependency Inversion Principle ( 의존 역전 법칙 )\n\n\n- Intent\n\n  - High-level modules should not depend on low-level modules. Both should depend on abstractions.\n  - Abstractions should not depend on details. Details should depend on abstractions.\n  - 의존 관계를 맺을 때 변화하기 쉬운 것 또는 자주 변화하는 것보다는 \n  - 변화하기 어려운 것, 거의 변화가 없는 것에 의존하라는 원칙\n  - DIP를 만족하려면,\n  - 어떤 클래스가 도움을 받을 때, 구체적인 클래스보다는 인터페이스나 추상 클래스와 의존 관계를 맺도록.\n\n- Bad Example\n\n  - the manager class which is a high level class, and the low level class called Worker\n  - now we have to change Manager class in order to introduce the new SuperWorker\n    - Adding a new protocol will create the need to add code for parsing and serializing the content for each type of field.\n    - Adding a new content type (like html) make us to add code for each protocol implemented.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip011.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip022.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip033.png)\n\n- Good Example\n\n  - Manager class doesn't require changes when adding SuperWorkers.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip044.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip055.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip066.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip077.png)\n\n\n- Reference\n  - <http://www.oodesign.com/dependency-inversion-principle.html>\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)\n\n\n\n\n\n","source":"_posts/2018-04-09-DIP.md","raw":"---\nlayout: post\ntitle:  \"DIP\"\ndate:   2018-04-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Dependency Inversion Principle ( 의존 역전 법칙 )\n\n\n- Intent\n\n  - High-level modules should not depend on low-level modules. Both should depend on abstractions.\n  - Abstractions should not depend on details. Details should depend on abstractions.\n  - 의존 관계를 맺을 때 변화하기 쉬운 것 또는 자주 변화하는 것보다는 \n  - 변화하기 어려운 것, 거의 변화가 없는 것에 의존하라는 원칙\n  - DIP를 만족하려면,\n  - 어떤 클래스가 도움을 받을 때, 구체적인 클래스보다는 인터페이스나 추상 클래스와 의존 관계를 맺도록.\n\n- Bad Example\n\n  - the manager class which is a high level class, and the low level class called Worker\n  - now we have to change Manager class in order to introduce the new SuperWorker\n    - Adding a new protocol will create the need to add code for parsing and serializing the content for each type of field.\n    - Adding a new content type (like html) make us to add code for each protocol implemented.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip011.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip022.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip033.png)\n\n- Good Example\n\n  - Manager class doesn't require changes when adding SuperWorkers.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip044.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip055.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip066.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip077.png)\n\n\n- Reference\n  - <http://www.oodesign.com/dependency-inversion-principle.html>\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)\n\n\n\n\n\n","slug":"2018-04-09-DIP","published":1,"updated":"2018-10-25T05:47:56.423Z","comments":1,"photos":[],"link":"","_id":"cjp6k65g7009231x7uxxeh672","content":"<ul>\n<li>Dependency Inversion Principle ( 의존 역전 법칙 )</li>\n</ul>\n<ul>\n<li><p>Intent</p>\n<ul>\n<li>High-level modules should not depend on low-level modules. Both should depend on abstractions.</li>\n<li>Abstractions should not depend on details. Details should depend on abstractions.</li>\n<li>의존 관계를 맺을 때 변화하기 쉬운 것 또는 자주 변화하는 것보다는 </li>\n<li>변화하기 어려운 것, 거의 변화가 없는 것에 의존하라는 원칙</li>\n<li>DIP를 만족하려면,</li>\n<li>어떤 클래스가 도움을 받을 때, 구체적인 클래스보다는 인터페이스나 추상 클래스와 의존 관계를 맺도록.</li>\n</ul>\n</li>\n<li><p>Bad Example</p>\n<ul>\n<li>the manager class which is a high level class, and the low level class called Worker</li>\n<li>now we have to change Manager class in order to introduce the new SuperWorker<ul>\n<li>Adding a new protocol will create the need to add code for parsing and serializing the content for each type of field.</li>\n<li>Adding a new content type (like html) make us to add code for each protocol implemented.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip022.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip033.png\" alt=\"img\"></p>\n</li>\n<li><p>Good Example</p>\n<ul>\n<li>Manager class doesn’t require changes when adding SuperWorkers.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip044.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip055.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip066.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip077.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/dependency-inversion-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/dependency-inversion-principle.html</a></li>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>Dependency Inversion Principle ( 의존 역전 법칙 )</li>\n</ul>\n<ul>\n<li><p>Intent</p>\n<ul>\n<li>High-level modules should not depend on low-level modules. Both should depend on abstractions.</li>\n<li>Abstractions should not depend on details. Details should depend on abstractions.</li>\n<li>의존 관계를 맺을 때 변화하기 쉬운 것 또는 자주 변화하는 것보다는 </li>\n<li>변화하기 어려운 것, 거의 변화가 없는 것에 의존하라는 원칙</li>\n<li>DIP를 만족하려면,</li>\n<li>어떤 클래스가 도움을 받을 때, 구체적인 클래스보다는 인터페이스나 추상 클래스와 의존 관계를 맺도록.</li>\n</ul>\n</li>\n<li><p>Bad Example</p>\n<ul>\n<li>the manager class which is a high level class, and the low level class called Worker</li>\n<li>now we have to change Manager class in order to introduce the new SuperWorker<ul>\n<li>Adding a new protocol will create the need to add code for parsing and serializing the content for each type of field.</li>\n<li>Adding a new content type (like html) make us to add code for each protocol implemented.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip022.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip033.png\" alt=\"img\"></p>\n</li>\n<li><p>Good Example</p>\n<ul>\n<li>Manager class doesn’t require changes when adding SuperWorkers.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip044.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip055.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip066.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dip077.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/dependency-inversion-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/dependency-inversion-principle.html</a></li>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Composite Pattern","date":"2018-04-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Intent\n\n  - Compose objects into tree structures to represent part-whole hierarchies.\n  - Lets clients treat individual objects and compositions of objects uniformly.\n  - Part-whole Hierarchy를 표현하기 위하여 객체들을 트리 구조로 구성\n  - Client가 개개의 객체와 그룹 객체를 동일하게 취급할 수 있게 만든다\n    - Clinet는 모든 객체들을 컴포넌트 객체로 간주하여 이용\n\n- 자식 관리 오퍼레이션\n\n  - add(), remove(), getChild()\n\n    - component와 composite 에 선언 : client가 편하다. 개체과 그룹에 관계없이 부를 수 있다\n\n      ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compo01.png)\n\n    - composite 에 선언 : client가 불편하다. 개체인지 그룹인지 구별을 해야한다\n\n      ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compo02.png)\n\n  - remove()\n\n    - 자식을 삭제하는 책임은 composite 객체에 주는것이 가장 좋다\n\n- Implementation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compositeUML.png)\n\n\n- EX )\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/device.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/computer.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/client.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/body.png)\n\n\n\n- Reference\n  - <http://www.oodesign.com/composite-pattern.html>\n  - Java 객체지향 디자인 패턴 (정인상, 채홍석 지음)\n\n\n\n\n\n","source":"_posts/2018-04-09-Composite Pattern.md","raw":"---\nlayout: post\ntitle:  \"Composite Pattern\"\ndate:   2018-04-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Intent\n\n  - Compose objects into tree structures to represent part-whole hierarchies.\n  - Lets clients treat individual objects and compositions of objects uniformly.\n  - Part-whole Hierarchy를 표현하기 위하여 객체들을 트리 구조로 구성\n  - Client가 개개의 객체와 그룹 객체를 동일하게 취급할 수 있게 만든다\n    - Clinet는 모든 객체들을 컴포넌트 객체로 간주하여 이용\n\n- 자식 관리 오퍼레이션\n\n  - add(), remove(), getChild()\n\n    - component와 composite 에 선언 : client가 편하다. 개체과 그룹에 관계없이 부를 수 있다\n\n      ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compo01.png)\n\n    - composite 에 선언 : client가 불편하다. 개체인지 그룹인지 구별을 해야한다\n\n      ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compo02.png)\n\n  - remove()\n\n    - 자식을 삭제하는 책임은 composite 객체에 주는것이 가장 좋다\n\n- Implementation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compositeUML.png)\n\n\n- EX )\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/device.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/computer.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/client.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/body.png)\n\n\n\n- Reference\n  - <http://www.oodesign.com/composite-pattern.html>\n  - Java 객체지향 디자인 패턴 (정인상, 채홍석 지음)\n\n\n\n\n\n","slug":"2018-04-09-Composite Pattern","published":1,"updated":"2018-10-25T05:40:52.692Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gb009531x7a4jglppo","content":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>Compose objects into tree structures to represent part-whole hierarchies.</li>\n<li>Lets clients treat individual objects and compositions of objects uniformly.</li>\n<li>Part-whole Hierarchy를 표현하기 위하여 객체들을 트리 구조로 구성</li>\n<li>Client가 개개의 객체와 그룹 객체를 동일하게 취급할 수 있게 만든다<ul>\n<li>Clinet는 모든 객체들을 컴포넌트 객체로 간주하여 이용</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>자식 관리 오퍼레이션</p>\n<ul>\n<li><p>add(), remove(), getChild()</p>\n<ul>\n<li><p>component와 composite 에 선언 : client가 편하다. 개체과 그룹에 관계없이 부를 수 있다</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compo01.png\" alt=\"img\"></p>\n</li>\n<li><p>composite 에 선언 : client가 불편하다. 개체인지 그룹인지 구별을 해야한다</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compo02.png\" alt=\"img\"></p>\n</li>\n</ul>\n</li>\n<li><p>remove()</p>\n<ul>\n<li>자식을 삭제하는 책임은 composite 객체에 주는것이 가장 좋다</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Implementation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compositeUML.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>EX )</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/device.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/computer.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/client.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/body.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/composite-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/composite-pattern.html</a></li>\n<li>Java 객체지향 디자인 패턴 (정인상, 채홍석 지음)</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>Compose objects into tree structures to represent part-whole hierarchies.</li>\n<li>Lets clients treat individual objects and compositions of objects uniformly.</li>\n<li>Part-whole Hierarchy를 표현하기 위하여 객체들을 트리 구조로 구성</li>\n<li>Client가 개개의 객체와 그룹 객체를 동일하게 취급할 수 있게 만든다<ul>\n<li>Clinet는 모든 객체들을 컴포넌트 객체로 간주하여 이용</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>자식 관리 오퍼레이션</p>\n<ul>\n<li><p>add(), remove(), getChild()</p>\n<ul>\n<li><p>component와 composite 에 선언 : client가 편하다. 개체과 그룹에 관계없이 부를 수 있다</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compo01.png\" alt=\"img\"></p>\n</li>\n<li><p>composite 에 선언 : client가 불편하다. 개체인지 그룹인지 구별을 해야한다</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compo02.png\" alt=\"img\"></p>\n</li>\n</ul>\n</li>\n<li><p>remove()</p>\n<ul>\n<li>자식을 삭제하는 책임은 composite 객체에 주는것이 가장 좋다</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Implementation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compositeUML.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>EX )</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/device.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/computer.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/client.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/body.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/composite-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/composite-pattern.html</a></li>\n<li>Java 객체지향 디자인 패턴 (정인상, 채홍석 지음)</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"로또","date":"2018-04-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/6603>\n\n- DFS 를 수행하며, 해당 정점을 스택에 담는다. \n- 스택의 크기가 6이면 출력한다\n- 출력 후 탐색을 종료하고,\n- 이전 번호로 돌아가서 다시 DFS 수행\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lotto01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lotto02.png)\n\n\n\n","source":"_posts/2018-04-08-로또.md","raw":"---\nlayout: post\ntitle:  \"로또\"\ndate:   2018-04-08\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/6603>\n\n- DFS 를 수행하며, 해당 정점을 스택에 담는다. \n- 스택의 크기가 6이면 출력한다\n- 출력 후 탐색을 종료하고,\n- 이전 번호로 돌아가서 다시 DFS 수행\n\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lotto01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lotto02.png)\n\n\n\n","slug":"2018-04-08-로또","published":1,"updated":"2018-04-16T03:59:56.132Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gc009731x7x2ebd19q","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/6603\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/6603</a></p>\n<ul>\n<li>DFS 를 수행하며, 해당 정점을 스택에 담는다. </li>\n<li>스택의 크기가 6이면 출력한다</li>\n<li>출력 후 탐색을 종료하고,</li>\n<li>이전 번호로 돌아가서 다시 DFS 수행</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lotto01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lotto02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/6603\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/6603</a></p>\n<ul>\n<li>DFS 를 수행하며, 해당 정점을 스택에 담는다. </li>\n<li>스택의 크기가 6이면 출력한다</li>\n<li>출력 후 탐색을 종료하고,</li>\n<li>이전 번호로 돌아가서 다시 DFS 수행</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lotto01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lotto02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"ISP","date":"2018-04-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Interface Segregation Principle ( 인터페이스 분리 법칙 )\n\n\n- Intent\n\n  - Clients should not be forced to depend upon interfaces that they don't use.\n  - 인터페이스를 클라이언트에 특화되돌독 분리시키는 설계 원칙\n\n- SRP와 ISP\n\n  - SRP를 만족하더라도 ISP를 반드시 만족한다고 할수 없다\n    - 게시판의 글쓰기, 읽기, 수정, 삭제를 위한 메소드를 제공하는 클래스가 있다.\n    - 클라이언트에 따라서는 게시판의 이러한 기능 중 일부분만 사용할 수 있다.\n    - 일반 사용자는 게시판의 삭제 기능이 없지만, 관리자는 삭제를 할 수 있다.\n    - 게시판 클래스는 게시판에 관련된 책임을 수행하므로 SRP 만족,\n    - 이 클래스의 모든 메서드가 들어 있는 인퍼테이스가 클라이언트에 상관없이 사용된다면, ISP에 위배.\n\n- Bad Example\n\n  - now some robots came in the company they work as well , but they don't eat so they don't need a launch break. \n  - One on side the new Robot class need to implement the IWorker interface because robots works. \n  - On the other side, they don't have to implement it because they don't eat.\n  - now we have to change Manager class in order to introduce the new SuperWorker\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp077.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp088.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp099.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp01010.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp01111.png)\n\n  ​\n\n- Good Example\n\n  - new Robot class is no longer forced to implement the eat method.\n  - if we need another functionality for the robot like recharging, \n  - we create another interface IRechargeble with a method recharge.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp011.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp022.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp033.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp044.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp055.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp066.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp077.png)\n\n\n- Reference\n  - <http://www.oodesign.com/dependency-inversion-principle.html>\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)\n\n\n\n","source":"_posts/2018-04-09-ISP.md","raw":"---\nlayout: post\ntitle:  \"ISP\"\ndate:   2018-04-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Interface Segregation Principle ( 인터페이스 분리 법칙 )\n\n\n- Intent\n\n  - Clients should not be forced to depend upon interfaces that they don't use.\n  - 인터페이스를 클라이언트에 특화되돌독 분리시키는 설계 원칙\n\n- SRP와 ISP\n\n  - SRP를 만족하더라도 ISP를 반드시 만족한다고 할수 없다\n    - 게시판의 글쓰기, 읽기, 수정, 삭제를 위한 메소드를 제공하는 클래스가 있다.\n    - 클라이언트에 따라서는 게시판의 이러한 기능 중 일부분만 사용할 수 있다.\n    - 일반 사용자는 게시판의 삭제 기능이 없지만, 관리자는 삭제를 할 수 있다.\n    - 게시판 클래스는 게시판에 관련된 책임을 수행하므로 SRP 만족,\n    - 이 클래스의 모든 메서드가 들어 있는 인퍼테이스가 클라이언트에 상관없이 사용된다면, ISP에 위배.\n\n- Bad Example\n\n  - now some robots came in the company they work as well , but they don't eat so they don't need a launch break. \n  - One on side the new Robot class need to implement the IWorker interface because robots works. \n  - On the other side, they don't have to implement it because they don't eat.\n  - now we have to change Manager class in order to introduce the new SuperWorker\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp077.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp088.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp099.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp01010.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp01111.png)\n\n  ​\n\n- Good Example\n\n  - new Robot class is no longer forced to implement the eat method.\n  - if we need another functionality for the robot like recharging, \n  - we create another interface IRechargeble with a method recharge.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp011.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp022.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp033.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp044.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp055.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp066.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp077.png)\n\n\n- Reference\n  - <http://www.oodesign.com/dependency-inversion-principle.html>\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)\n\n\n\n","slug":"2018-04-09-ISP","published":1,"updated":"2018-10-25T05:48:03.168Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gd009931x77cm3pjcr","content":"<ul>\n<li>Interface Segregation Principle ( 인터페이스 분리 법칙 )</li>\n</ul>\n<ul>\n<li><p>Intent</p>\n<ul>\n<li>Clients should not be forced to depend upon interfaces that they don’t use.</li>\n<li>인터페이스를 클라이언트에 특화되돌독 분리시키는 설계 원칙</li>\n</ul>\n</li>\n<li><p>SRP와 ISP</p>\n<ul>\n<li>SRP를 만족하더라도 ISP를 반드시 만족한다고 할수 없다<ul>\n<li>게시판의 글쓰기, 읽기, 수정, 삭제를 위한 메소드를 제공하는 클래스가 있다.</li>\n<li>클라이언트에 따라서는 게시판의 이러한 기능 중 일부분만 사용할 수 있다.</li>\n<li>일반 사용자는 게시판의 삭제 기능이 없지만, 관리자는 삭제를 할 수 있다.</li>\n<li>게시판 클래스는 게시판에 관련된 책임을 수행하므로 SRP 만족,</li>\n<li>이 클래스의 모든 메서드가 들어 있는 인퍼테이스가 클라이언트에 상관없이 사용된다면, ISP에 위배.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Bad Example</p>\n<ul>\n<li>now some robots came in the company they work as well , but they don’t eat so they don’t need a launch break. </li>\n<li>One on side the new Robot class need to implement the IWorker interface because robots works. </li>\n<li>On the other side, they don’t have to implement it because they don’t eat.</li>\n<li>now we have to change Manager class in order to introduce the new SuperWorker</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp077.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp088.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp099.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp01010.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp01111.png\" alt=\"img\"></p>\n<p>​</p>\n</li>\n<li><p>Good Example</p>\n<ul>\n<li>new Robot class is no longer forced to implement the eat method.</li>\n<li>if we need another functionality for the robot like recharging, </li>\n<li>we create another interface IRechargeble with a method recharge.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp022.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp033.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp044.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp055.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp066.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp077.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/dependency-inversion-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/dependency-inversion-principle.html</a></li>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>Interface Segregation Principle ( 인터페이스 분리 법칙 )</li>\n</ul>\n<ul>\n<li><p>Intent</p>\n<ul>\n<li>Clients should not be forced to depend upon interfaces that they don’t use.</li>\n<li>인터페이스를 클라이언트에 특화되돌독 분리시키는 설계 원칙</li>\n</ul>\n</li>\n<li><p>SRP와 ISP</p>\n<ul>\n<li>SRP를 만족하더라도 ISP를 반드시 만족한다고 할수 없다<ul>\n<li>게시판의 글쓰기, 읽기, 수정, 삭제를 위한 메소드를 제공하는 클래스가 있다.</li>\n<li>클라이언트에 따라서는 게시판의 이러한 기능 중 일부분만 사용할 수 있다.</li>\n<li>일반 사용자는 게시판의 삭제 기능이 없지만, 관리자는 삭제를 할 수 있다.</li>\n<li>게시판 클래스는 게시판에 관련된 책임을 수행하므로 SRP 만족,</li>\n<li>이 클래스의 모든 메서드가 들어 있는 인퍼테이스가 클라이언트에 상관없이 사용된다면, ISP에 위배.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Bad Example</p>\n<ul>\n<li>now some robots came in the company they work as well , but they don’t eat so they don’t need a launch break. </li>\n<li>One on side the new Robot class need to implement the IWorker interface because robots works. </li>\n<li>On the other side, they don’t have to implement it because they don’t eat.</li>\n<li>now we have to change Manager class in order to introduce the new SuperWorker</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp077.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp088.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp099.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp01010.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp01111.png\" alt=\"img\"></p>\n<p>​</p>\n</li>\n<li><p>Good Example</p>\n<ul>\n<li>new Robot class is no longer forced to implement the eat method.</li>\n<li>if we need another functionality for the robot like recharging, </li>\n<li>we create another interface IRechargeble with a method recharge.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp022.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp033.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp044.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp055.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp066.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/isp077.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/dependency-inversion-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/dependency-inversion-principle.html</a></li>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"OCP","date":"2018-04-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Open-Closed Principle (개방-폐쇄 원칙)\n- Intent\n  - Software entities like classes, modules and functions should be **open for extension** but **closed for modifications**.\n  - 기존의 코드를 변경하지 않으면서 기능을 추가할 수 있도록 설계되어야 한다.\n- 단위 테스트\n  - 테스트 대상 기능이 사용하는 실제 외부의 서비스를 흉내내는 가짜 객체를 만들어 테스트의 효율성을 높임\n\n\n- Bad Example\n\n  - GraphicEditor class has to be modified for every new shape class that has to be added\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocp01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op011.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op022.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op033.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op044.png)\n\n- Good Example\n\n  - GraphicEditor is not changed when a new shape class is added\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocp03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op055.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op066.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op077.png)\n\n\n- Reference\n  - <http://www.oodesign.com/open-close-principle.html>\n\n\n\n\n\n","source":"_posts/2018-04-09-OCP.md","raw":"---\nlayout: post\ntitle:  \"OCP\"\ndate:   2018-04-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Open-Closed Principle (개방-폐쇄 원칙)\n- Intent\n  - Software entities like classes, modules and functions should be **open for extension** but **closed for modifications**.\n  - 기존의 코드를 변경하지 않으면서 기능을 추가할 수 있도록 설계되어야 한다.\n- 단위 테스트\n  - 테스트 대상 기능이 사용하는 실제 외부의 서비스를 흉내내는 가짜 객체를 만들어 테스트의 효율성을 높임\n\n\n- Bad Example\n\n  - GraphicEditor class has to be modified for every new shape class that has to be added\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocp01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op011.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op022.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op033.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op044.png)\n\n- Good Example\n\n  - GraphicEditor is not changed when a new shape class is added\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocp03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op055.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op066.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op077.png)\n\n\n- Reference\n  - <http://www.oodesign.com/open-close-principle.html>\n\n\n\n\n\n","slug":"2018-04-09-OCP","published":1,"updated":"2018-10-25T05:48:17.649Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ge009c31x7clxomgi6","content":"<ul>\n<li>Open-Closed Principle (개방-폐쇄 원칙)</li>\n<li>Intent<ul>\n<li>Software entities like classes, modules and functions should be <strong>open for extension</strong> but <strong>closed for modifications</strong>.</li>\n<li>기존의 코드를 변경하지 않으면서 기능을 추가할 수 있도록 설계되어야 한다.</li>\n</ul>\n</li>\n<li>단위 테스트<ul>\n<li>테스트 대상 기능이 사용하는 실제 외부의 서비스를 흉내내는 가짜 객체를 만들어 테스트의 효율성을 높임</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Bad Example</p>\n<ul>\n<li>GraphicEditor class has to be modified for every new shape class that has to be added</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocp01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op022.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op033.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op044.png\" alt=\"img\"></p>\n</li>\n<li><p>Good Example</p>\n<ul>\n<li>GraphicEditor is not changed when a new shape class is added</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op055.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op066.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op077.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/open-close-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/open-close-principle.html</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>Open-Closed Principle (개방-폐쇄 원칙)</li>\n<li>Intent<ul>\n<li>Software entities like classes, modules and functions should be <strong>open for extension</strong> but <strong>closed for modifications</strong>.</li>\n<li>기존의 코드를 변경하지 않으면서 기능을 추가할 수 있도록 설계되어야 한다.</li>\n</ul>\n</li>\n<li>단위 테스트<ul>\n<li>테스트 대상 기능이 사용하는 실제 외부의 서비스를 흉내내는 가짜 객체를 만들어 테스트의 효율성을 높임</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Bad Example</p>\n<ul>\n<li>GraphicEditor class has to be modified for every new shape class that has to be added</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocp01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op022.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op033.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op044.png\" alt=\"img\"></p>\n</li>\n<li><p>Good Example</p>\n<ul>\n<li>GraphicEditor is not changed when a new shape class is added</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op055.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op066.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/op077.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/open-close-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/open-close-principle.html</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Bridge Pattern","date":"2018-04-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n\n\n- Intent\n\n  - decouple an abstraction from its implementation so that the two can vary independently.\n  - 추상을 구현으로부터 분리하여, \n  - 독립적으로 변하게 함\n  - 여기에서 구현의 의미\n    - 추상을 구현한 concrete class X\n    - 궂은 일을 하는 로직 / 코드\n  - 구현 뿐만 아니라 추상화된 부분까지 변경시켜야 하는 경우에는 bridge pattern을 사용\n\n\n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myBridge.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myBridgee.png)\n\n\n- Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b06.png)\n\n\n\n- Reference\n  - <https://www.tutorialspoint.com/design_pattern/bridge_pattern.htm>\n\n\n\n\n\n","source":"_posts/2018-04-09-Bridge Pattern.md","raw":"---\nlayout: post\ntitle:  \"Bridge Pattern\"\ndate:   2018-04-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n\n\n- Intent\n\n  - decouple an abstraction from its implementation so that the two can vary independently.\n  - 추상을 구현으로부터 분리하여, \n  - 독립적으로 변하게 함\n  - 여기에서 구현의 의미\n    - 추상을 구현한 concrete class X\n    - 궂은 일을 하는 로직 / 코드\n  - 구현 뿐만 아니라 추상화된 부분까지 변경시켜야 하는 경우에는 bridge pattern을 사용\n\n\n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myBridge.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myBridgee.png)\n\n\n- Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b06.png)\n\n\n\n- Reference\n  - <https://www.tutorialspoint.com/design_pattern/bridge_pattern.htm>\n\n\n\n\n\n","slug":"2018-04-09-Bridge Pattern","published":1,"updated":"2018-10-25T05:40:45.986Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gg009e31x7up5957ov","content":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>decouple an abstraction from its implementation so that the two can vary independently.</li>\n<li>추상을 구현으로부터 분리하여, </li>\n<li>독립적으로 변하게 함</li>\n<li>여기에서 구현의 의미<ul>\n<li>추상을 구현한 concrete class X</li>\n<li>궂은 일을 하는 로직 / 코드</li>\n</ul>\n</li>\n<li>구현 뿐만 아니라 추상화된 부분까지 변경시켜야 하는 경우에는 bridge pattern을 사용</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myBridge.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myBridgee.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Code</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b06.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/bridge_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/bridge_pattern.htm</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>decouple an abstraction from its implementation so that the two can vary independently.</li>\n<li>추상을 구현으로부터 분리하여, </li>\n<li>독립적으로 변하게 함</li>\n<li>여기에서 구현의 의미<ul>\n<li>추상을 구현한 concrete class X</li>\n<li>궂은 일을 하는 로직 / 코드</li>\n</ul>\n</li>\n<li>구현 뿐만 아니라 추상화된 부분까지 변경시켜야 하는 경우에는 bridge pattern을 사용</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myBridge.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myBridgee.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Code</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/b06.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/bridge_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/bridge_pattern.htm</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"LSP","date":"2018-04-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Liskov Subsititution Principle ( 리스코프 치환 법칙 )\n\n\n- Intent\n\n  - Derived types must be completely substitutable for their base types.\n  - 상속 관계에서,\n  - 자식 클래스는 최소한 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다\n  - 부모 클래스와 자식 클래스 사이의 행위가 일관성이 있어야 한다\n  - LSP를 만족하면,\n  - 프로그램에서 부모 클래스의 인스턴스 대신에 자식 클래스의 인스턴스로 대체해도 프로그램의 의미는 변화 X\n- LSP를 만족시키는 방법\n  - 재정의 하지 않는다 \n\n\n- Violation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp011.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp022.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp033.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp044.png)\n\n\n- Reference\n  - <http://www.oodesign.com/single-responsibility-principle.html>\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)\n\n\n\n\n\n","source":"_posts/2018-04-09-LSP.md","raw":"---\nlayout: post\ntitle:  \"LSP\"\ndate:   2018-04-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Liskov Subsititution Principle ( 리스코프 치환 법칙 )\n\n\n- Intent\n\n  - Derived types must be completely substitutable for their base types.\n  - 상속 관계에서,\n  - 자식 클래스는 최소한 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다\n  - 부모 클래스와 자식 클래스 사이의 행위가 일관성이 있어야 한다\n  - LSP를 만족하면,\n  - 프로그램에서 부모 클래스의 인스턴스 대신에 자식 클래스의 인스턴스로 대체해도 프로그램의 의미는 변화 X\n- LSP를 만족시키는 방법\n  - 재정의 하지 않는다 \n\n\n- Violation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp011.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp022.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp033.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp044.png)\n\n\n- Reference\n  - <http://www.oodesign.com/single-responsibility-principle.html>\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)\n\n\n\n\n\n","slug":"2018-04-09-LSP","published":1,"updated":"2018-10-25T05:48:10.617Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gk009h31x7mdiqewtm","content":"<ul>\n<li>Liskov Subsititution Principle ( 리스코프 치환 법칙 )</li>\n</ul>\n<ul>\n<li><p>Intent</p>\n<ul>\n<li>Derived types must be completely substitutable for their base types.</li>\n<li>상속 관계에서,</li>\n<li>자식 클래스는 최소한 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다</li>\n<li>부모 클래스와 자식 클래스 사이의 행위가 일관성이 있어야 한다</li>\n<li>LSP를 만족하면,</li>\n<li>프로그램에서 부모 클래스의 인스턴스 대신에 자식 클래스의 인스턴스로 대체해도 프로그램의 의미는 변화 X</li>\n</ul>\n</li>\n<li>LSP를 만족시키는 방법<ul>\n<li>재정의 하지 않는다 </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Violation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp022.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp033.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp044.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/single-responsibility-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/single-responsibility-principle.html</a></li>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>Liskov Subsititution Principle ( 리스코프 치환 법칙 )</li>\n</ul>\n<ul>\n<li><p>Intent</p>\n<ul>\n<li>Derived types must be completely substitutable for their base types.</li>\n<li>상속 관계에서,</li>\n<li>자식 클래스는 최소한 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다</li>\n<li>부모 클래스와 자식 클래스 사이의 행위가 일관성이 있어야 한다</li>\n<li>LSP를 만족하면,</li>\n<li>프로그램에서 부모 클래스의 인스턴스 대신에 자식 클래스의 인스턴스로 대체해도 프로그램의 의미는 변화 X</li>\n</ul>\n</li>\n<li>LSP를 만족시키는 방법<ul>\n<li>재정의 하지 않는다 </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Violation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp022.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp033.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lsp044.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/single-responsibility-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/single-responsibility-principle.html</a></li>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음)</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"SRP","date":"2018-04-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## SRP란\n\nSingle Responsibility Principle (단일 책임 원칙)\n\n\n- Intent\n\n  - A class should have only one reason to change.\n  - 객체는 단 하나의 책임(변경 이유)만 가져야 한다.\n- 산탄총 수술\n  - 수의사가 산탄총을 맞은 동물을 치료하는 상황처럼,\n  - 어떤 변경이 있을 때 하나가 아닌 여러 클래스를 변경해야한다\n\n\n- Bad Example\n\n  - each change for a responsibility might affect the other one:\n    - Adding a new protocol will create the need to add code for parsing and serializing the content for each type of field.\n    - Adding a new content type (like html) make us to add code for each protocol implemented.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp02.png)\n\n- Good Example\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp04.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp05.png)\n\n## Reference\n\n- <http://www.oodesign.com/single-responsibility-principle.html>\n- JAVA 객체지향 디자인 패턴 (정인상, 채흥석 지음)\n\n\n\n\n\n","source":"_posts/2018-04-09-SRP.md","raw":"---\nlayout: post\ntitle:  \"SRP\"\ndate:   2018-04-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## SRP란\n\nSingle Responsibility Principle (단일 책임 원칙)\n\n\n- Intent\n\n  - A class should have only one reason to change.\n  - 객체는 단 하나의 책임(변경 이유)만 가져야 한다.\n- 산탄총 수술\n  - 수의사가 산탄총을 맞은 동물을 치료하는 상황처럼,\n  - 어떤 변경이 있을 때 하나가 아닌 여러 클래스를 변경해야한다\n\n\n- Bad Example\n\n  - each change for a responsibility might affect the other one:\n    - Adding a new protocol will create the need to add code for parsing and serializing the content for each type of field.\n    - Adding a new content type (like html) make us to add code for each protocol implemented.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp02.png)\n\n- Good Example\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp04.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp05.png)\n\n## Reference\n\n- <http://www.oodesign.com/single-responsibility-principle.html>\n- JAVA 객체지향 디자인 패턴 (정인상, 채흥석 지음)\n\n\n\n\n\n","slug":"2018-04-09-SRP","published":1,"updated":"2018-11-13T04:57:56.242Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gl009j31x79c6ixlab","content":"<h2 id=\"SRP란\"><a href=\"#SRP란\" class=\"headerlink\" title=\"SRP란\"></a>SRP란</h2><p>Single Responsibility Principle (단일 책임 원칙)</p>\n<ul>\n<li><p>Intent</p>\n<ul>\n<li>A class should have only one reason to change.</li>\n<li>객체는 단 하나의 책임(변경 이유)만 가져야 한다.</li>\n</ul>\n</li>\n<li>산탄총 수술<ul>\n<li>수의사가 산탄총을 맞은 동물을 치료하는 상황처럼,</li>\n<li>어떤 변경이 있을 때 하나가 아닌 여러 클래스를 변경해야한다</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Bad Example</p>\n<ul>\n<li>each change for a responsibility might affect the other one:<ul>\n<li>Adding a new protocol will create the need to add code for parsing and serializing the content for each type of field.</li>\n<li>Adding a new content type (like html) make us to add code for each protocol implemented.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp02.png\" alt=\"img\"></p>\n</li>\n<li><p>Good Example</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp05.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"http://www.oodesign.com/single-responsibility-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/single-responsibility-principle.html</a></li>\n<li>JAVA 객체지향 디자인 패턴 (정인상, 채흥석 지음)</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"SRP란\"><a href=\"#SRP란\" class=\"headerlink\" title=\"SRP란\"></a>SRP란</h2><p>Single Responsibility Principle (단일 책임 원칙)</p>\n<ul>\n<li><p>Intent</p>\n<ul>\n<li>A class should have only one reason to change.</li>\n<li>객체는 단 하나의 책임(변경 이유)만 가져야 한다.</li>\n</ul>\n</li>\n<li>산탄총 수술<ul>\n<li>수의사가 산탄총을 맞은 동물을 치료하는 상황처럼,</li>\n<li>어떤 변경이 있을 때 하나가 아닌 여러 클래스를 변경해야한다</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Bad Example</p>\n<ul>\n<li>each change for a responsibility might affect the other one:<ul>\n<li>Adding a new protocol will create the need to add code for parsing and serializing the content for each type of field.</li>\n<li>Adding a new content type (like html) make us to add code for each protocol implemented.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp02.png\" alt=\"img\"></p>\n</li>\n<li><p>Good Example</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/srpp05.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"http://www.oodesign.com/single-responsibility-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/single-responsibility-principle.html</a></li>\n<li>JAVA 객체지향 디자인 패턴 (정인상, 채흥석 지음)</li>\n</ul>\n"},{"layout":"post","title":"적록색약","date":"2018-04-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/10026>\n\n1. 이차원 배열의 각 index에 순차적으로 접근\n\n2. 현재 위치를 기준으로 상하좌우 조사\n\n   - 현재 위치와 같은 색깔 && 아직 방문 하지 않았으면\n\n\n   - 이동\n\n3. 2번 다시 수행\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/greeRed01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newgreeRed02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newgreeRed03.png)\n\n\n\n\n\n","source":"_posts/2018-04-09-적록색약.md","raw":"---\nlayout: post\ntitle:  \"적록색약\"\ndate:   2018-04-09\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/10026>\n\n1. 이차원 배열의 각 index에 순차적으로 접근\n\n2. 현재 위치를 기준으로 상하좌우 조사\n\n   - 현재 위치와 같은 색깔 && 아직 방문 하지 않았으면\n\n\n   - 이동\n\n3. 2번 다시 수행\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/greeRed01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newgreeRed02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newgreeRed03.png)\n\n\n\n\n\n","slug":"2018-04-09-적록색약","published":1,"updated":"2018-04-16T03:59:21.974Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gq009l31x7w4n9mkbg","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/10026\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10026</a></p>\n<ol>\n<li><p>이차원 배열의 각 index에 순차적으로 접근</p>\n</li>\n<li><p>현재 위치를 기준으로 상하좌우 조사</p>\n<ul>\n<li>현재 위치와 같은 색깔 &amp;&amp; 아직 방문 하지 않았으면</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>이동</li>\n</ul>\n<ol start=\"3\">\n<li>2번 다시 수행</li>\n</ol>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/greeRed01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newgreeRed02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newgreeRed03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/10026\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/10026</a></p>\n<ol>\n<li><p>이차원 배열의 각 index에 순차적으로 접근</p>\n</li>\n<li><p>현재 위치를 기준으로 상하좌우 조사</p>\n<ul>\n<li>현재 위치와 같은 색깔 &amp;&amp; 아직 방문 하지 않았으면</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>이동</li>\n</ul>\n<ol start=\"3\">\n<li>2번 다시 수행</li>\n</ol>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/greeRed01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newgreeRed02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newgreeRed03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Singleton Pattern","date":"2018-04-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n\n\n- Intent\n\n  - Ensure that only one instance of a class is created.\n  - Provide a global point of access to the object.\n\n- Implementation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/si.png)\n\n\n- EX\n\n#### 01 : Early instantiation using implementation with static field\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SingleObject.png)\n\n\n\n#### 02 : Lazy instantiation using double locking mechanism\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sgg.png)\n\n\n\n#### Client\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SingletonPatternDemo.png)\n\n- Reference\n  - <http://www.oodesign.com/singleton-pattern.html>\n  - https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\n\n\n\n","source":"_posts/2018-04-13-Singleton Pattern.md","raw":"---\nlayout: post\ntitle:  \"Singleton Pattern\"\ndate:   2018-04-13\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n\n\n- Intent\n\n  - Ensure that only one instance of a class is created.\n  - Provide a global point of access to the object.\n\n- Implementation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/si.png)\n\n\n- EX\n\n#### 01 : Early instantiation using implementation with static field\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SingleObject.png)\n\n\n\n#### 02 : Lazy instantiation using double locking mechanism\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sgg.png)\n\n\n\n#### Client\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SingletonPatternDemo.png)\n\n- Reference\n  - <http://www.oodesign.com/singleton-pattern.html>\n  - https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\n\n\n\n","slug":"2018-04-13-Singleton Pattern","published":1,"updated":"2018-10-25T05:41:32.214Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gs009n31x7lngw2omk","content":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>Ensure that only one instance of a class is created.</li>\n<li>Provide a global point of access to the object.</li>\n</ul>\n</li>\n<li><p>Implementation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/si.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>EX</li>\n</ul>\n<h4 id=\"01-Early-instantiation-using-implementation-with-static-field\"><a href=\"#01-Early-instantiation-using-implementation-with-static-field\" class=\"headerlink\" title=\"01 : Early instantiation using implementation with static field\"></a>01 : Early instantiation using implementation with static field</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SingleObject.png\" alt=\"img\"></p>\n<h4 id=\"02-Lazy-instantiation-using-double-locking-mechanism\"><a href=\"#02-Lazy-instantiation-using-double-locking-mechanism\" class=\"headerlink\" title=\"02 : Lazy instantiation using double locking mechanism\"></a>02 : Lazy instantiation using double locking mechanism</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sgg.png\" alt=\"img\"></p>\n<h4 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SingletonPatternDemo.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/singleton-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/singleton-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>Ensure that only one instance of a class is created.</li>\n<li>Provide a global point of access to the object.</li>\n</ul>\n</li>\n<li><p>Implementation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/si.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>EX</li>\n</ul>\n<h4 id=\"01-Early-instantiation-using-implementation-with-static-field\"><a href=\"#01-Early-instantiation-using-implementation-with-static-field\" class=\"headerlink\" title=\"01 : Early instantiation using implementation with static field\"></a>01 : Early instantiation using implementation with static field</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SingleObject.png\" alt=\"img\"></p>\n<h4 id=\"02-Lazy-instantiation-using-double-locking-mechanism\"><a href=\"#02-Lazy-instantiation-using-double-locking-mechanism\" class=\"headerlink\" title=\"02 : Lazy instantiation using double locking mechanism\"></a>02 : Lazy instantiation using double locking mechanism</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sgg.png\" alt=\"img\"></p>\n<h4 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SingletonPatternDemo.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/singleton-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/singleton-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Observer Pattern","date":"2018-04-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Intent\n\n  - Defines a one-to-many dependency between objects \n  - so that when one object changes state, \n  - all its dependents are notified and updated automatically.\n  - 객체 사이에 1:n의 의존 관계이며,\n  - 객체 상태의 변화가 다른 의존 객체에 통지되고 자동으로 업데이트 되게 함\n\n- 다른 이름 \n\n  - Publisher-Subscriber\n\n- Implementation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obp.png)\n\n\n- EX\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/subject.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/observer.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs04.png)\n\n- Reference\n  - <http://www.oodesign.com/singleton-pattern.html>\n  - https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\n\n\n\n","source":"_posts/2018-04-13-Observer Pattern.md","raw":"---\nlayout: post\ntitle:  \"Observer Pattern\"\ndate:   2018-04-13\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Intent\n\n  - Defines a one-to-many dependency between objects \n  - so that when one object changes state, \n  - all its dependents are notified and updated automatically.\n  - 객체 사이에 1:n의 의존 관계이며,\n  - 객체 상태의 변화가 다른 의존 객체에 통지되고 자동으로 업데이트 되게 함\n\n- 다른 이름 \n\n  - Publisher-Subscriber\n\n- Implementation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obp.png)\n\n\n- EX\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/subject.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/observer.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs04.png)\n\n- Reference\n  - <http://www.oodesign.com/singleton-pattern.html>\n  - https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\n\n\n\n","slug":"2018-04-13-Observer Pattern","published":1,"updated":"2018-10-25T05:41:09.373Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gt009p31x779h1d5tk","content":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>Defines a one-to-many dependency between objects </li>\n<li>so that when one object changes state, </li>\n<li>all its dependents are notified and updated automatically.</li>\n<li>객체 사이에 1:n의 의존 관계이며,</li>\n<li>객체 상태의 변화가 다른 의존 객체에 통지되고 자동으로 업데이트 되게 함</li>\n</ul>\n</li>\n<li><p>다른 이름 </p>\n<ul>\n<li>Publisher-Subscriber</li>\n</ul>\n</li>\n<li><p>Implementation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obp.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>EX</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/subject.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/observer.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs04.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/singleton-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/singleton-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>Defines a one-to-many dependency between objects </li>\n<li>so that when one object changes state, </li>\n<li>all its dependents are notified and updated automatically.</li>\n<li>객체 사이에 1:n의 의존 관계이며,</li>\n<li>객체 상태의 변화가 다른 의존 객체에 통지되고 자동으로 업데이트 되게 함</li>\n</ul>\n</li>\n<li><p>다른 이름 </p>\n<ul>\n<li>Publisher-Subscriber</li>\n</ul>\n</li>\n<li><p>Implementation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obp.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>EX</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/subject.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/observer.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obs04.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/singleton-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/singleton-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"양치기 꿍","date":"2018-04-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/3187>\n\n1. 이차원 배열의 각 index에 순차적으로 접근\n2. 양, 늑대 count\n3. 현재 위치를 기준으로 상하좌우 조사\n\n   - 울타리가 X && 방문 X\n   - 이동\n\n\n3. 2번 다시 수행\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/shape01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/shape02.png)\n\n\n\n\n\n","source":"_posts/2018-04-13-양치기 꿍.md","raw":"---\nlayout: post\ntitle:  \"양치기 꿍\"\ndate:   2018-04-13\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/3187>\n\n1. 이차원 배열의 각 index에 순차적으로 접근\n2. 양, 늑대 count\n3. 현재 위치를 기준으로 상하좌우 조사\n\n   - 울타리가 X && 방문 X\n   - 이동\n\n\n3. 2번 다시 수행\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/shape01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/shape02.png)\n\n\n\n\n\n","slug":"2018-04-13-양치기 꿍","published":1,"updated":"2018-04-16T03:58:57.764Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gu009r31x7yv04ar19","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/3187\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3187</a></p>\n<ol>\n<li>이차원 배열의 각 index에 순차적으로 접근</li>\n<li>양, 늑대 count</li>\n<li><p>현재 위치를 기준으로 상하좌우 조사</p>\n<ul>\n<li>울타리가 X &amp;&amp; 방문 X</li>\n<li>이동</li>\n</ul>\n</li>\n</ol>\n<ol start=\"3\">\n<li>2번 다시 수행</li>\n</ol>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/shape01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/shape02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/3187\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3187</a></p>\n<ol>\n<li>이차원 배열의 각 index에 순차적으로 접근</li>\n<li>양, 늑대 count</li>\n<li><p>현재 위치를 기준으로 상하좌우 조사</p>\n<ul>\n<li>울타리가 X &amp;&amp; 방문 X</li>\n<li>이동</li>\n</ul>\n</li>\n</ol>\n<ol start=\"3\">\n<li>2번 다시 수행</li>\n</ol>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/shape01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/shape02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"상근이의 여행","date":"2018-04-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/9372>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang00.png)\n\n- 가장 적은 종류\n  - 따라서, BFS\n- 한 너비를 끝 마치고 다음 너비로 이동\n  - 이를 위해, 현 위치에서 갈 수 있는 곳들을 큐에 add\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang02.png)\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-04-15-상근이의 여행.md","raw":"---\nlayout: post\ntitle:  \"상근이의 여행\"\ndate:   2018-04-15\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/9372>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang00.png)\n\n- 가장 적은 종류\n  - 따라서, BFS\n- 한 너비를 끝 마치고 다음 너비로 이동\n  - 이를 위해, 현 위치에서 갈 수 있는 곳들을 큐에 add\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang02.png)\n\n\n\n\n\n\n\n\n\n","slug":"2018-04-15-상근이의 여행","published":1,"updated":"2018-04-16T03:58:01.759Z","comments":1,"photos":[],"link":"","_id":"cjp6k65gy009t31x76j53s2s8","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/9372\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9372</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang00.png\" alt=\"img\"></p>\n<ul>\n<li>가장 적은 종류<ul>\n<li>따라서, BFS</li>\n</ul>\n</li>\n<li>한 너비를 끝 마치고 다음 너비로 이동<ul>\n<li>이를 위해, 현 위치에서 갈 수 있는 곳들을 큐에 add</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/9372\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/9372</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang00.png\" alt=\"img\"></p>\n<ul>\n<li>가장 적은 종류<ul>\n<li>따라서, BFS</li>\n</ul>\n</li>\n<li>한 너비를 끝 마치고 다음 너비로 이동<ul>\n<li>이를 위해, 현 위치에서 갈 수 있는 곳들을 큐에 add</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sang02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Facade Pattern","date":"2018-04-09T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Intent\n\n  - hides the complexities of the system \n  - provides an interface to the client using which the client can access the system\n  - 인터페이스를 단순화 & 클라이언트와, 구성 요소로 이루어진 서브 시스템을 분리\n\n- Implementation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/facadeImple.png)\n\n\n- Code\n\n#### Create an interface\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa01.png)\n\n#### Create concrete classes implementing the same interface\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa04.png)\n\n#### Create a facade class\n\n- 사용하고자 하는 서브 시스템의 모든 구성요들이 인스턴스 변수 형태로 저장\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa05.png)\n\n#### Use the facade to draw various types of shapes.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa06.png)\n\n- Reference\n  - <https://www.tutorialspoint.com/design_pattern/facade_pattern.htm>\n\n","source":"_posts/2018-04-10-Facade Pattern.md","raw":"---\nlayout: post\ntitle:  \"Facade Pattern\"\ndate:   2018-04-10\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Intent\n\n  - hides the complexities of the system \n  - provides an interface to the client using which the client can access the system\n  - 인터페이스를 단순화 & 클라이언트와, 구성 요소로 이루어진 서브 시스템을 분리\n\n- Implementation\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/facadeImple.png)\n\n\n- Code\n\n#### Create an interface\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa01.png)\n\n#### Create concrete classes implementing the same interface\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa04.png)\n\n#### Create a facade class\n\n- 사용하고자 하는 서브 시스템의 모든 구성요들이 인스턴스 변수 형태로 저장\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa05.png)\n\n#### Use the facade to draw various types of shapes.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa06.png)\n\n- Reference\n  - <https://www.tutorialspoint.com/design_pattern/facade_pattern.htm>\n\n","slug":"2018-04-10-Facade Pattern","published":1,"updated":"2018-10-25T05:41:00.484Z","comments":1,"photos":[],"link":"","_id":"cjp6k65h0009v31x7830jwr3n","content":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>hides the complexities of the system </li>\n<li>provides an interface to the client using which the client can access the system</li>\n<li>인터페이스를 단순화 &amp; 클라이언트와, 구성 요소로 이루어진 서브 시스템을 분리</li>\n</ul>\n</li>\n<li><p>Implementation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/facadeImple.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Code</li>\n</ul>\n<h4 id=\"Create-an-interface\"><a href=\"#Create-an-interface\" class=\"headerlink\" title=\"Create an interface\"></a>Create an interface</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa01.png\" alt=\"img\"></p>\n<h4 id=\"Create-concrete-classes-implementing-the-same-interface\"><a href=\"#Create-concrete-classes-implementing-the-same-interface\" class=\"headerlink\" title=\"Create concrete classes implementing the same interface\"></a>Create concrete classes implementing the same interface</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa04.png\" alt=\"img\"></p>\n<h4 id=\"Create-a-facade-class\"><a href=\"#Create-a-facade-class\" class=\"headerlink\" title=\"Create a facade class\"></a>Create a facade class</h4><ul>\n<li>사용하고자 하는 서브 시스템의 모든 구성요들이 인스턴스 변수 형태로 저장</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa05.png\" alt=\"img\"></p>\n<h4 id=\"Use-the-facade-to-draw-various-types-of-shapes\"><a href=\"#Use-the-facade-to-draw-various-types-of-shapes\" class=\"headerlink\" title=\"Use the facade to draw various types of shapes.\"></a>Use the facade to draw various types of shapes.</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa06.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/facade_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/facade_pattern.htm</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>hides the complexities of the system </li>\n<li>provides an interface to the client using which the client can access the system</li>\n<li>인터페이스를 단순화 &amp; 클라이언트와, 구성 요소로 이루어진 서브 시스템을 분리</li>\n</ul>\n</li>\n<li><p>Implementation</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/facadeImple.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Code</li>\n</ul>\n<h4 id=\"Create-an-interface\"><a href=\"#Create-an-interface\" class=\"headerlink\" title=\"Create an interface\"></a>Create an interface</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa01.png\" alt=\"img\"></p>\n<h4 id=\"Create-concrete-classes-implementing-the-same-interface\"><a href=\"#Create-concrete-classes-implementing-the-same-interface\" class=\"headerlink\" title=\"Create concrete classes implementing the same interface\"></a>Create concrete classes implementing the same interface</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa04.png\" alt=\"img\"></p>\n<h4 id=\"Create-a-facade-class\"><a href=\"#Create-a-facade-class\" class=\"headerlink\" title=\"Create a facade class\"></a>Create a facade class</h4><ul>\n<li>사용하고자 하는 서브 시스템의 모든 구성요들이 인스턴스 변수 형태로 저장</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa05.png\" alt=\"img\"></p>\n<h4 id=\"Use-the-facade-to-draw-various-types-of-shapes\"><a href=\"#Use-the-facade-to-draw-various-types-of-shapes\" class=\"headerlink\" title=\"Use the facade to draw various types of shapes.\"></a>Use the facade to draw various types of shapes.</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fa06.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/facade_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/facade_pattern.htm</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"소수경로","date":"2018-04-13T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/1963>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mainPrime.png)\n\n- 최소 횟수를 구한다 \n  - 따라서, BFS\n- 현재 숫자에서 각 자리 수마다 하나씩 바꿈 \n  - 소수이면 큐에 넣음\n- 한 너비씩 진행\n- 최종 찾고자 나오면 바로 출력해도 됨\n  - 한 너비에서 진행되고 있기 떄문에\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime05.png)\n\n\n\n\n\n\n\n","source":"_posts/2018-04-14-소수경로.md","raw":"---\nlayout: post\ntitle:  \"소수경로\"\ndate:   2018-04-14\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/1963>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mainPrime.png)\n\n- 최소 횟수를 구한다 \n  - 따라서, BFS\n- 현재 숫자에서 각 자리 수마다 하나씩 바꿈 \n  - 소수이면 큐에 넣음\n- 한 너비씩 진행\n- 최종 찾고자 나오면 바로 출력해도 됨\n  - 한 너비에서 진행되고 있기 떄문에\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime05.png)\n\n\n\n\n\n\n\n","slug":"2018-04-14-소수경로","published":1,"updated":"2018-04-16T03:58:32.013Z","comments":1,"photos":[],"link":"","_id":"cjp6k65h1009x31x7z84op2x2","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/1963\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1963</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mainPrime.png\" alt=\"img\"></p>\n<ul>\n<li>최소 횟수를 구한다 <ul>\n<li>따라서, BFS</li>\n</ul>\n</li>\n<li>현재 숫자에서 각 자리 수마다 하나씩 바꿈 <ul>\n<li>소수이면 큐에 넣음</li>\n</ul>\n</li>\n<li>한 너비씩 진행</li>\n<li>최종 찾고자 나오면 바로 출력해도 됨<ul>\n<li>한 너비에서 진행되고 있기 떄문에</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime05.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/1963\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1963</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mainPrime.png\" alt=\"img\"></p>\n<ul>\n<li>최소 횟수를 구한다 <ul>\n<li>따라서, BFS</li>\n</ul>\n</li>\n<li>현재 숫자에서 각 자리 수마다 하나씩 바꿈 <ul>\n<li>소수이면 큐에 넣음</li>\n</ul>\n</li>\n<li>한 너비씩 진행</li>\n<li>최종 찾고자 나오면 바로 출력해도 됨<ul>\n<li>한 너비에서 진행되고 있기 떄문에</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prime05.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"바이러스","date":"2018-04-15T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/2606>\n\n- 1번 컴퓨터와 연결된 컴퓨터를 차례대로 최대한 깊게 방문\n  - DFS\n- 컴퓨터 방문할 때마다 ans++\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/vi01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/vi02.png)\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-04-16-바이러스.md","raw":"---\nlayout: post\ntitle:  \"바이러스\"\ndate:   2018-04-16\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n\n\n<https://www.acmicpc.net/problem/2606>\n\n- 1번 컴퓨터와 연결된 컴퓨터를 차례대로 최대한 깊게 방문\n  - DFS\n- 컴퓨터 방문할 때마다 ans++\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/vi01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/vi02.png)\n\n\n\n\n\n\n\n\n\n","slug":"2018-04-16-바이러스","published":1,"updated":"2018-04-16T03:56:42.399Z","comments":1,"photos":[],"link":"","_id":"cjp6k65h3009z31x7v8qtbu53","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/2606\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2606</a></p>\n<ul>\n<li>1번 컴퓨터와 연결된 컴퓨터를 차례대로 최대한 깊게 방문<ul>\n<li>DFS</li>\n</ul>\n</li>\n<li>컴퓨터 방문할 때마다 ans++</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/vi01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/vi02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/2606\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2606</a></p>\n<ul>\n<li>1번 컴퓨터와 연결된 컴퓨터를 차례대로 최대한 깊게 방문<ul>\n<li>DFS</li>\n</ul>\n</li>\n<li>컴퓨터 방문할 때마다 ans++</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/vi01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/vi02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Mediator Pattern","date":"2018-04-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Intent\n\n  - 여러 객체들 간의 상호 작용 자체를 캡슐화\n  - 객체들 끼리 직접 참조하는 것을 피함으로 객체들 간의 연결 강도를 줄임( loose coupling)\n  - client는 객체들의 상호작용을 독립적으로 변경할 수 있음 \n  - 각 부품 객체들간의 상호작용을 도맡아 처리하는 객체를 둔다\n  - 각 객체들은 Mediator 객체를 제외한 다른 객체는 알지 못한다\n  - M:N 의 관계를 M:1로 만든다\n  - 객체 간의 상호작용은 Mediator 가 처리\n\n- 문제\n\n  - Colleague 객체들 간의 상호작용을 Mediaotr 객체 하나가 모두 담당하기 때문에\n  - Mediaotr 객체가 복잡해져 유지 및 보수가 어려울 수 있음\n\n- Observer Pattern 적용\n\n  - 중재자에게 특정 이벤트가 발생하였음을 알려주기 위한 별도의 인터페이스를 정의\n    - Mediator : Subject \n    - Colleague : Observer\n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m02.png)\n\n\n- Code\n\n\n\n#### Mediator class\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m03.png)\n\n#### Create user class\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m04.png)\n\n#### Use the *User* object to show communications between them.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m05.png)\n\n- Reference\n  - <http://www.oodesign.com/singleton-pattern.html>\n  - <https://www.tutorialspoint.com/design_pattern/singleton_pattern.html>\n\n\n\n","source":"_posts/2018-04-15-Mediator Pattern.md","raw":"---\nlayout: post\ntitle:  \"Mediator Pattern\"\ndate:   2018-04-15\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Intent\n\n  - 여러 객체들 간의 상호 작용 자체를 캡슐화\n  - 객체들 끼리 직접 참조하는 것을 피함으로 객체들 간의 연결 강도를 줄임( loose coupling)\n  - client는 객체들의 상호작용을 독립적으로 변경할 수 있음 \n  - 각 부품 객체들간의 상호작용을 도맡아 처리하는 객체를 둔다\n  - 각 객체들은 Mediator 객체를 제외한 다른 객체는 알지 못한다\n  - M:N 의 관계를 M:1로 만든다\n  - 객체 간의 상호작용은 Mediator 가 처리\n\n- 문제\n\n  - Colleague 객체들 간의 상호작용을 Mediaotr 객체 하나가 모두 담당하기 때문에\n  - Mediaotr 객체가 복잡해져 유지 및 보수가 어려울 수 있음\n\n- Observer Pattern 적용\n\n  - 중재자에게 특정 이벤트가 발생하였음을 알려주기 위한 별도의 인터페이스를 정의\n    - Mediator : Subject \n    - Colleague : Observer\n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m02.png)\n\n\n- Code\n\n\n\n#### Mediator class\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m03.png)\n\n#### Create user class\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m04.png)\n\n#### Use the *User* object to show communications between them.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m05.png)\n\n- Reference\n  - <http://www.oodesign.com/singleton-pattern.html>\n  - <https://www.tutorialspoint.com/design_pattern/singleton_pattern.html>\n\n\n\n","slug":"2018-04-15-Mediator Pattern","published":1,"updated":"2018-10-25T05:41:39.454Z","comments":1,"photos":[],"link":"","_id":"cjp6k65h700a131x7lm2ymr88","content":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>여러 객체들 간의 상호 작용 자체를 캡슐화</li>\n<li>객체들 끼리 직접 참조하는 것을 피함으로 객체들 간의 연결 강도를 줄임( loose coupling)</li>\n<li>client는 객체들의 상호작용을 독립적으로 변경할 수 있음 </li>\n<li>각 부품 객체들간의 상호작용을 도맡아 처리하는 객체를 둔다</li>\n<li>각 객체들은 Mediator 객체를 제외한 다른 객체는 알지 못한다</li>\n<li>M:N 의 관계를 M:1로 만든다</li>\n<li>객체 간의 상호작용은 Mediator 가 처리</li>\n</ul>\n</li>\n<li><p>문제</p>\n<ul>\n<li>Colleague 객체들 간의 상호작용을 Mediaotr 객체 하나가 모두 담당하기 때문에</li>\n<li>Mediaotr 객체가 복잡해져 유지 및 보수가 어려울 수 있음</li>\n</ul>\n</li>\n<li><p>Observer Pattern 적용</p>\n<ul>\n<li>중재자에게 특정 이벤트가 발생하였음을 알려주기 위한 별도의 인터페이스를 정의<ul>\n<li>Mediator : Subject </li>\n<li>Colleague : Observer</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m02.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Code</li>\n</ul>\n<h4 id=\"Mediator-class\"><a href=\"#Mediator-class\" class=\"headerlink\" title=\"Mediator class\"></a>Mediator class</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m03.png\" alt=\"img\"></p>\n<h4 id=\"Create-user-class\"><a href=\"#Create-user-class\" class=\"headerlink\" title=\"Create user class\"></a>Create user class</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m04.png\" alt=\"img\"></p>\n<h4 id=\"Use-the-User-object-to-show-communications-between-them\"><a href=\"#Use-the-User-object-to-show-communications-between-them\" class=\"headerlink\" title=\"Use the User object to show communications between them.\"></a>Use the <em>User</em> object to show communications between them.</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m05.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/singleton-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/singleton-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>여러 객체들 간의 상호 작용 자체를 캡슐화</li>\n<li>객체들 끼리 직접 참조하는 것을 피함으로 객체들 간의 연결 강도를 줄임( loose coupling)</li>\n<li>client는 객체들의 상호작용을 독립적으로 변경할 수 있음 </li>\n<li>각 부품 객체들간의 상호작용을 도맡아 처리하는 객체를 둔다</li>\n<li>각 객체들은 Mediator 객체를 제외한 다른 객체는 알지 못한다</li>\n<li>M:N 의 관계를 M:1로 만든다</li>\n<li>객체 간의 상호작용은 Mediator 가 처리</li>\n</ul>\n</li>\n<li><p>문제</p>\n<ul>\n<li>Colleague 객체들 간의 상호작용을 Mediaotr 객체 하나가 모두 담당하기 때문에</li>\n<li>Mediaotr 객체가 복잡해져 유지 및 보수가 어려울 수 있음</li>\n</ul>\n</li>\n<li><p>Observer Pattern 적용</p>\n<ul>\n<li>중재자에게 특정 이벤트가 발생하였음을 알려주기 위한 별도의 인터페이스를 정의<ul>\n<li>Mediator : Subject </li>\n<li>Colleague : Observer</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m02.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Code</li>\n</ul>\n<h4 id=\"Mediator-class\"><a href=\"#Mediator-class\" class=\"headerlink\" title=\"Mediator class\"></a>Mediator class</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m03.png\" alt=\"img\"></p>\n<h4 id=\"Create-user-class\"><a href=\"#Create-user-class\" class=\"headerlink\" title=\"Create user class\"></a>Create user class</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m04.png\" alt=\"img\"></p>\n<h4 id=\"Use-the-User-object-to-show-communications-between-them\"><a href=\"#Use-the-User-object-to-show-communications-between-them\" class=\"headerlink\" title=\"Use the User object to show communications between them.\"></a>Use the <em>User</em> object to show communications between them.</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/m05.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"http://www.oodesign.com/singleton-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/singleton-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"추상클래스 vs 인터페이스","date":"2018-04-16T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n### 개념\n\n- 추상클래스\n  - 추상 매서드를 하나 이상 가지는 클래스\n- 인터페이스\n  - 클래스들이 구현해야 하는 동작을 지정하는데 사용되는 추상형\n\n### 차이\n\n- 추상이 아닌 메소드\n  - 추상 클래스 : 가질 수 있음\n  - 인터페이스 :  가질 수 없음 (모든 메소드가 추상 메소드)\n- 인스턴스 변수\n  - 추상 클래스 : 선언 가능\n  - 인터페이스 : 선언 불가능 (static final은 가능)\n- 생성자\n  - 추상 클래스 : 가능\n  - 인터페이스 : 불가능\n- 가시성\n  - 추상 클래스 : public / protected / private\n  - 인터페이스 : public / protected / private\n- 메소드 가시성\n  - 추상 클래스 : protected / private\n  - 인터페이스 : public\n- 다중 상속\n  - 추상 클래스 : 한 클래스가 추상클래스를 다중 상속 불가능\n  - 인터페이스 : 한 클래스가 인터페이스를 다중 상속 가능\n\n\n### 같이 사용\n\n- public class A extends B implements C, B\n\n\n","source":"_posts/2018-04-17-추상클래스 VS 인터페이스.md","raw":"---\nlayout: post\ntitle:  \"추상클래스 vs 인터페이스\"\ndate:   2018-04-17\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n### 개념\n\n- 추상클래스\n  - 추상 매서드를 하나 이상 가지는 클래스\n- 인터페이스\n  - 클래스들이 구현해야 하는 동작을 지정하는데 사용되는 추상형\n\n### 차이\n\n- 추상이 아닌 메소드\n  - 추상 클래스 : 가질 수 있음\n  - 인터페이스 :  가질 수 없음 (모든 메소드가 추상 메소드)\n- 인스턴스 변수\n  - 추상 클래스 : 선언 가능\n  - 인터페이스 : 선언 불가능 (static final은 가능)\n- 생성자\n  - 추상 클래스 : 가능\n  - 인터페이스 : 불가능\n- 가시성\n  - 추상 클래스 : public / protected / private\n  - 인터페이스 : public / protected / private\n- 메소드 가시성\n  - 추상 클래스 : protected / private\n  - 인터페이스 : public\n- 다중 상속\n  - 추상 클래스 : 한 클래스가 추상클래스를 다중 상속 불가능\n  - 인터페이스 : 한 클래스가 인터페이스를 다중 상속 가능\n\n\n### 같이 사용\n\n- public class A extends B implements C, B\n\n\n","slug":"2018-04-17-추상클래스 VS 인터페이스","published":1,"updated":"2018-10-25T05:42:21.949Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ha00a331x7zj0s6vdn","content":"<h3 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h3><ul>\n<li>추상클래스<ul>\n<li>추상 매서드를 하나 이상 가지는 클래스</li>\n</ul>\n</li>\n<li>인터페이스<ul>\n<li>클래스들이 구현해야 하는 동작을 지정하는데 사용되는 추상형</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"차이\"><a href=\"#차이\" class=\"headerlink\" title=\"차이\"></a>차이</h3><ul>\n<li>추상이 아닌 메소드<ul>\n<li>추상 클래스 : 가질 수 있음</li>\n<li>인터페이스 :  가질 수 없음 (모든 메소드가 추상 메소드)</li>\n</ul>\n</li>\n<li>인스턴스 변수<ul>\n<li>추상 클래스 : 선언 가능</li>\n<li>인터페이스 : 선언 불가능 (static final은 가능)</li>\n</ul>\n</li>\n<li>생성자<ul>\n<li>추상 클래스 : 가능</li>\n<li>인터페이스 : 불가능</li>\n</ul>\n</li>\n<li>가시성<ul>\n<li>추상 클래스 : public / protected / private</li>\n<li>인터페이스 : public / protected / private</li>\n</ul>\n</li>\n<li>메소드 가시성<ul>\n<li>추상 클래스 : protected / private</li>\n<li>인터페이스 : public</li>\n</ul>\n</li>\n<li>다중 상속<ul>\n<li>추상 클래스 : 한 클래스가 추상클래스를 다중 상속 불가능</li>\n<li>인터페이스 : 한 클래스가 인터페이스를 다중 상속 가능</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"같이-사용\"><a href=\"#같이-사용\" class=\"headerlink\" title=\"같이 사용\"></a>같이 사용</h3><ul>\n<li>public class A extends B implements C, B</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h3 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h3><ul>\n<li>추상클래스<ul>\n<li>추상 매서드를 하나 이상 가지는 클래스</li>\n</ul>\n</li>\n<li>인터페이스<ul>\n<li>클래스들이 구현해야 하는 동작을 지정하는데 사용되는 추상형</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"차이\"><a href=\"#차이\" class=\"headerlink\" title=\"차이\"></a>차이</h3><ul>\n<li>추상이 아닌 메소드<ul>\n<li>추상 클래스 : 가질 수 있음</li>\n<li>인터페이스 :  가질 수 없음 (모든 메소드가 추상 메소드)</li>\n</ul>\n</li>\n<li>인스턴스 변수<ul>\n<li>추상 클래스 : 선언 가능</li>\n<li>인터페이스 : 선언 불가능 (static final은 가능)</li>\n</ul>\n</li>\n<li>생성자<ul>\n<li>추상 클래스 : 가능</li>\n<li>인터페이스 : 불가능</li>\n</ul>\n</li>\n<li>가시성<ul>\n<li>추상 클래스 : public / protected / private</li>\n<li>인터페이스 : public / protected / private</li>\n</ul>\n</li>\n<li>메소드 가시성<ul>\n<li>추상 클래스 : protected / private</li>\n<li>인터페이스 : public</li>\n</ul>\n</li>\n<li>다중 상속<ul>\n<li>추상 클래스 : 한 클래스가 추상클래스를 다중 상속 불가능</li>\n<li>인터페이스 : 한 클래스가 인터페이스를 다중 상속 가능</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"같이-사용\"><a href=\"#같이-사용\" class=\"headerlink\" title=\"같이 사용\"></a>같이 사용</h3><ul>\n<li>public class A extends B implements C, B</li>\n</ul>\n"},{"layout":"post","title":"Adapter Pattern02","date":"2018-04-17T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 설명 \n  - 기존에 MediaPlayer 인터페이스 : mp3 포맷만 play\n  - 새로운 AdvancedMediaPlayer 인터페이스 :  vlc, mp4 포맷 play\n  - AudioPlayer로 mp3 뿐만 아니라, vlc, mp4 도 play 하고자 한다\n- Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myAda.png)\n\n- Code\n\n### Interface : Media Player and Advanced Media Player\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad04.png)\n\n### concrete classes \n\n### implementing the *AdvancedMediaPlayer* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad06.png)\n\n### adapter class \n\n### implementing the *MediaPlayer* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad07.png)\n\n### concrete class \n\n### implementing the *MediaPlayer* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad08.png)\n\n### Use the AudioPlayer  \n\n### to play different types of audio formats. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad09.png)\n\n### Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad02.png)\n\n\n\n- Reference\n  - <https://www.tutorialspoint.com/design_pattern/adapter_pattern.html>\n\n","source":"_posts/2018-04-18-Adapter Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Adapter Pattern02\"\ndate:   2018-04-18\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 설명 \n  - 기존에 MediaPlayer 인터페이스 : mp3 포맷만 play\n  - 새로운 AdvancedMediaPlayer 인터페이스 :  vlc, mp4 포맷 play\n  - AudioPlayer로 mp3 뿐만 아니라, vlc, mp4 도 play 하고자 한다\n- Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myAda.png)\n\n- Code\n\n### Interface : Media Player and Advanced Media Player\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad04.png)\n\n### concrete classes \n\n### implementing the *AdvancedMediaPlayer* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad06.png)\n\n### adapter class \n\n### implementing the *MediaPlayer* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad07.png)\n\n### concrete class \n\n### implementing the *MediaPlayer* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad08.png)\n\n### Use the AudioPlayer  \n\n### to play different types of audio formats. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad09.png)\n\n### Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad02.png)\n\n\n\n- Reference\n  - <https://www.tutorialspoint.com/design_pattern/adapter_pattern.html>\n\n","slug":"2018-04-18-Adapter Pattern02","published":1,"updated":"2018-10-25T05:41:49.327Z","comments":1,"photos":[],"link":"","_id":"cjp6k65hb00a531x7wrew4ti9","content":"<ul>\n<li>설명 <ul>\n<li>기존에 MediaPlayer 인터페이스 : mp3 포맷만 play</li>\n<li>새로운 AdvancedMediaPlayer 인터페이스 :  vlc, mp4 포맷 play</li>\n<li>AudioPlayer로 mp3 뿐만 아니라, vlc, mp4 도 play 하고자 한다</li>\n</ul>\n</li>\n<li>Class Diagram</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myAda.png\" alt=\"img\"></p>\n<ul>\n<li>Code</li>\n</ul>\n<h3 id=\"Interface-Media-Player-and-Advanced-Media-Player\"><a href=\"#Interface-Media-Player-and-Advanced-Media-Player\" class=\"headerlink\" title=\"Interface : Media Player and Advanced Media Player\"></a>Interface : Media Player and Advanced Media Player</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad04.png\" alt=\"img\"></p>\n<h3 id=\"concrete-classes\"><a href=\"#concrete-classes\" class=\"headerlink\" title=\"concrete classes\"></a>concrete classes</h3><h3 id=\"implementing-the-AdvancedMediaPlayer-interface\"><a href=\"#implementing-the-AdvancedMediaPlayer-interface\" class=\"headerlink\" title=\"implementing the AdvancedMediaPlayer interface.\"></a>implementing the <em>AdvancedMediaPlayer</em> interface.</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad06.png\" alt=\"img\"></p>\n<h3 id=\"adapter-class\"><a href=\"#adapter-class\" class=\"headerlink\" title=\"adapter class\"></a>adapter class</h3><h3 id=\"implementing-the-MediaPlayer-interface\"><a href=\"#implementing-the-MediaPlayer-interface\" class=\"headerlink\" title=\"implementing the MediaPlayer interface.\"></a>implementing the <em>MediaPlayer</em> interface.</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad07.png\" alt=\"img\"></p>\n<h3 id=\"concrete-class\"><a href=\"#concrete-class\" class=\"headerlink\" title=\"concrete class\"></a>concrete class</h3><h3 id=\"implementing-the-MediaPlayer-interface-1\"><a href=\"#implementing-the-MediaPlayer-interface-1\" class=\"headerlink\" title=\"implementing the MediaPlayer interface.\"></a>implementing the <em>MediaPlayer</em> interface.</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad08.png\" alt=\"img\"></p>\n<h3 id=\"Use-the-AudioPlayer\"><a href=\"#Use-the-AudioPlayer\" class=\"headerlink\" title=\"Use the AudioPlayer\"></a>Use the AudioPlayer</h3><h3 id=\"to-play-different-types-of-audio-formats\"><a href=\"#to-play-different-types-of-audio-formats\" class=\"headerlink\" title=\"to play different types of audio formats.\"></a>to play different types of audio formats.</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad09.png\" alt=\"img\"></p>\n<h3 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad02.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/adapter_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/adapter_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>설명 <ul>\n<li>기존에 MediaPlayer 인터페이스 : mp3 포맷만 play</li>\n<li>새로운 AdvancedMediaPlayer 인터페이스 :  vlc, mp4 포맷 play</li>\n<li>AudioPlayer로 mp3 뿐만 아니라, vlc, mp4 도 play 하고자 한다</li>\n</ul>\n</li>\n<li>Class Diagram</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/myAda.png\" alt=\"img\"></p>\n<ul>\n<li>Code</li>\n</ul>\n<h3 id=\"Interface-Media-Player-and-Advanced-Media-Player\"><a href=\"#Interface-Media-Player-and-Advanced-Media-Player\" class=\"headerlink\" title=\"Interface : Media Player and Advanced Media Player\"></a>Interface : Media Player and Advanced Media Player</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad04.png\" alt=\"img\"></p>\n<h3 id=\"concrete-classes\"><a href=\"#concrete-classes\" class=\"headerlink\" title=\"concrete classes\"></a>concrete classes</h3><h3 id=\"implementing-the-AdvancedMediaPlayer-interface\"><a href=\"#implementing-the-AdvancedMediaPlayer-interface\" class=\"headerlink\" title=\"implementing the AdvancedMediaPlayer interface.\"></a>implementing the <em>AdvancedMediaPlayer</em> interface.</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad06.png\" alt=\"img\"></p>\n<h3 id=\"adapter-class\"><a href=\"#adapter-class\" class=\"headerlink\" title=\"adapter class\"></a>adapter class</h3><h3 id=\"implementing-the-MediaPlayer-interface\"><a href=\"#implementing-the-MediaPlayer-interface\" class=\"headerlink\" title=\"implementing the MediaPlayer interface.\"></a>implementing the <em>MediaPlayer</em> interface.</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad07.png\" alt=\"img\"></p>\n<h3 id=\"concrete-class\"><a href=\"#concrete-class\" class=\"headerlink\" title=\"concrete class\"></a>concrete class</h3><h3 id=\"implementing-the-MediaPlayer-interface-1\"><a href=\"#implementing-the-MediaPlayer-interface-1\" class=\"headerlink\" title=\"implementing the MediaPlayer interface.\"></a>implementing the <em>MediaPlayer</em> interface.</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad08.png\" alt=\"img\"></p>\n<h3 id=\"Use-the-AudioPlayer\"><a href=\"#Use-the-AudioPlayer\" class=\"headerlink\" title=\"Use the AudioPlayer\"></a>Use the AudioPlayer</h3><h3 id=\"to-play-different-types-of-audio-formats\"><a href=\"#to-play-different-types-of-audio-formats\" class=\"headerlink\" title=\"to play different types of audio formats.\"></a>to play different types of audio formats.</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad09.png\" alt=\"img\"></p>\n<h3 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h3><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ad02.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/adapter_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/adapter_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"다형성","date":"2018-04-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n#### 개념\n\n- 서로 다른 클래스의 객체가 같은 메세지를 받았을 때 각자의 방식으로 동작하는 능력\n- 일반화 관계(상속 관계)와 함께 자식 클래스를 개별적으로 다룰 필요 없이 한 번에 처리할 수 있게 하는 수단을 제공\n- 일반환 관계에 있을 때 부모 클래스의 참조 변수가 자식 클래스의 객체를 참조할 수 있다\n- 단, 부모 클래스의 참조 변수가 접근할 수 있는 것은 부모 클래스가 물려준 변수와 메서드뿐\n- (형제 상속 관계에서 형제 클래스 사이에 형변환 불가능)\n\n#### 예시\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl05.png)\n\n####  Reference\n\n- JAVA 객체지향 디자인 패턴 <정인상, 채흥석 지음>","source":"_posts/2018-04-20-다형성.md","raw":"---\nlayout: post\ntitle:  \"다형성\"\ndate:   2018-04-20\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n#### 개념\n\n- 서로 다른 클래스의 객체가 같은 메세지를 받았을 때 각자의 방식으로 동작하는 능력\n- 일반화 관계(상속 관계)와 함께 자식 클래스를 개별적으로 다룰 필요 없이 한 번에 처리할 수 있게 하는 수단을 제공\n- 일반환 관계에 있을 때 부모 클래스의 참조 변수가 자식 클래스의 객체를 참조할 수 있다\n- 단, 부모 클래스의 참조 변수가 접근할 수 있는 것은 부모 클래스가 물려준 변수와 메서드뿐\n- (형제 상속 관계에서 형제 클래스 사이에 형변환 불가능)\n\n#### 예시\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl05.png)\n\n####  Reference\n\n- JAVA 객체지향 디자인 패턴 <정인상, 채흥석 지음>","slug":"2018-04-20-다형성","published":1,"updated":"2018-10-25T05:42:33.024Z","comments":1,"photos":[],"link":"","_id":"cjp6k65hj00a731x7tkduxn31","content":"<h4 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h4><ul>\n<li>서로 다른 클래스의 객체가 같은 메세지를 받았을 때 각자의 방식으로 동작하는 능력</li>\n<li>일반화 관계(상속 관계)와 함께 자식 클래스를 개별적으로 다룰 필요 없이 한 번에 처리할 수 있게 하는 수단을 제공</li>\n<li>일반환 관계에 있을 때 부모 클래스의 참조 변수가 자식 클래스의 객체를 참조할 수 있다</li>\n<li>단, 부모 클래스의 참조 변수가 접근할 수 있는 것은 부모 클래스가 물려준 변수와 메서드뿐</li>\n<li>(형제 상속 관계에서 형제 클래스 사이에 형변환 불가능)</li>\n</ul>\n<h4 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h4><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl05.png\" alt=\"img\"></p>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li>JAVA 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h4 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h4><ul>\n<li>서로 다른 클래스의 객체가 같은 메세지를 받았을 때 각자의 방식으로 동작하는 능력</li>\n<li>일반화 관계(상속 관계)와 함께 자식 클래스를 개별적으로 다룰 필요 없이 한 번에 처리할 수 있게 하는 수단을 제공</li>\n<li>일반환 관계에 있을 때 부모 클래스의 참조 변수가 자식 클래스의 객체를 참조할 수 있다</li>\n<li>단, 부모 클래스의 참조 변수가 접근할 수 있는 것은 부모 클래스가 물려준 변수와 메서드뿐</li>\n<li>(형제 상속 관계에서 형제 클래스 사이에 형변환 불가능)</li>\n</ul>\n<h4 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h4><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pl05.png\" alt=\"img\"></p>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li>JAVA 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</li>\n</ul>\n"},{"layout":"post","title":"상속VS위임","date":"2018-04-19T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 상속의 문제점\n  - 자식 클래스와는 전혀 관련 없는 수많은 연산이나 속성도 같이 상속 받음\n- 해결책\n  - 위임을 사용\n  - 위임은, 어떤 클래스의 일부 기능만 재사용하고 싶을 때 사용\n- 관계\n  - 상속 : 클래스 사이의 관계\n  - 위임 : 객체 사이의 관계 \n\n#### Reference\n\n- JAVA 객체지향 디자인 패턴 <정인상, 채흥석 지음>","source":"_posts/2018-04-20-상속VS위임.md","raw":"---\nlayout: post\ntitle:  \"상속VS위임\"\ndate:   2018-04-20\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 상속의 문제점\n  - 자식 클래스와는 전혀 관련 없는 수많은 연산이나 속성도 같이 상속 받음\n- 해결책\n  - 위임을 사용\n  - 위임은, 어떤 클래스의 일부 기능만 재사용하고 싶을 때 사용\n- 관계\n  - 상속 : 클래스 사이의 관계\n  - 위임 : 객체 사이의 관계 \n\n#### Reference\n\n- JAVA 객체지향 디자인 패턴 <정인상, 채흥석 지음>","slug":"2018-04-20-상속VS위임","published":1,"updated":"2018-10-25T05:42:40.213Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ho00a931x7k2ycx6ye","content":"<ul>\n<li>상속의 문제점<ul>\n<li>자식 클래스와는 전혀 관련 없는 수많은 연산이나 속성도 같이 상속 받음</li>\n</ul>\n</li>\n<li>해결책<ul>\n<li>위임을 사용</li>\n<li>위임은, 어떤 클래스의 일부 기능만 재사용하고 싶을 때 사용</li>\n</ul>\n</li>\n<li>관계<ul>\n<li>상속 : 클래스 사이의 관계</li>\n<li>위임 : 객체 사이의 관계 </li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li>JAVA 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>상속의 문제점<ul>\n<li>자식 클래스와는 전혀 관련 없는 수많은 연산이나 속성도 같이 상속 받음</li>\n</ul>\n</li>\n<li>해결책<ul>\n<li>위임을 사용</li>\n<li>위임은, 어떤 클래스의 일부 기능만 재사용하고 싶을 때 사용</li>\n</ul>\n</li>\n<li>관계<ul>\n<li>상속 : 클래스 사이의 관계</li>\n<li>위임 : 객체 사이의 관계 </li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li>JAVA 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</li>\n</ul>\n"},{"layout":"post","title":"Observer Pattern02","date":"2018-04-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 설명\n\n  - Battery의 level이 변함에 따라, Display & Warning \n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt01.png)\n\n- Code\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt02.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt04.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt05.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt06.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt07.png)\n\n\n- Reference\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음 )\n\n\n\n","source":"_posts/2018-04-22-Observer Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Observer Pattern02\"\ndate:   2018-04-22\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 설명\n\n  - Battery의 level이 변함에 따라, Display & Warning \n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt01.png)\n\n- Code\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt02.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt04.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt05.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt06.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt07.png)\n\n\n- Reference\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음 )\n\n\n\n","slug":"2018-04-22-Observer Pattern02","published":1,"updated":"2018-10-25T05:42:57.749Z","comments":1,"photos":[],"link":"","_id":"cjp6k65hp00ab31x7v64b682y","content":"<ul>\n<li><p>설명</p>\n<ul>\n<li>Battery의 level이 변함에 따라, Display &amp; Warning </li>\n</ul>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt01.png\" alt=\"img\"></p>\n</li>\n<li><p>Code</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt07.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음 )</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>설명</p>\n<ul>\n<li>Battery의 level이 변함에 따라, Display &amp; Warning </li>\n</ul>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt01.png\" alt=\"img\"></p>\n</li>\n<li><p>Code</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obt07.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음 )</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"정적메소드","date":"2018-04-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 상속을 통해 오버라이드 되지 않음\n- 정적 메서드를 실행할 때, \n  - 동적 바인딩을 실행하는 것이 아니고,\n  - 컴파일할 때 결정된 객체의 타입에 따라 실행될 메서드가 결정\n\n#### Reference\n\n- JAVA 객체지향 디자인 패턴 <정인상, 채흥석 지음>","source":"_posts/2018-04-21-정적메소드.md","raw":"---\nlayout: post\ntitle:  \"정적메소드\"\ndate:   2018-04-21\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 상속을 통해 오버라이드 되지 않음\n- 정적 메서드를 실행할 때, \n  - 동적 바인딩을 실행하는 것이 아니고,\n  - 컴파일할 때 결정된 객체의 타입에 따라 실행될 메서드가 결정\n\n#### Reference\n\n- JAVA 객체지향 디자인 패턴 <정인상, 채흥석 지음>","slug":"2018-04-21-정적메소드","published":1,"updated":"2018-10-25T05:42:46.423Z","comments":1,"photos":[],"link":"","_id":"cjp6k65hq00ad31x7fpj8bzhy","content":"<ul>\n<li>상속을 통해 오버라이드 되지 않음</li>\n<li>정적 메서드를 실행할 때, <ul>\n<li>동적 바인딩을 실행하는 것이 아니고,</li>\n<li>컴파일할 때 결정된 객체의 타입에 따라 실행될 메서드가 결정</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li>JAVA 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>상속을 통해 오버라이드 되지 않음</li>\n<li>정적 메서드를 실행할 때, <ul>\n<li>동적 바인딩을 실행하는 것이 아니고,</li>\n<li>컴파일할 때 결정된 객체의 타입에 따라 실행될 메서드가 결정</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li>JAVA 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</li>\n</ul>\n"},{"layout":"post","title":"Observer Pattern03","date":"2018-04-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 설명\n\n  - Elevator의 floor가 변함에 따라, 각 장치에 출력 \n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb01.png)\n\n- Code\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb02.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb04.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb05.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb06.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb07.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb08.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb09.png)\n\n\n- Reference\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음 )\n\n\n\n","source":"_posts/2018-04-22-Observer Pattern03.md","raw":"---\nlayout: post\ntitle:  \"Observer Pattern03\"\ndate:   2018-04-22\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 설명\n\n  - Elevator의 floor가 변함에 따라, 각 장치에 출력 \n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb01.png)\n\n- Code\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb02.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb04.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb05.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb06.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb07.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb08.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb09.png)\n\n\n- Reference\n  - Java 객체지향 디자인 패턴 (정인상, 채흥석 지음 )\n\n\n\n","slug":"2018-04-22-Observer Pattern03","published":1,"updated":"2018-10-25T05:43:03.868Z","comments":1,"photos":[],"link":"","_id":"cjp6k65hr00af31x7l2mbfpt3","content":"<ul>\n<li><p>설명</p>\n<ul>\n<li>Elevator의 floor가 변함에 따라, 각 장치에 출력 </li>\n</ul>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb01.png\" alt=\"img\"></p>\n</li>\n<li><p>Code</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb09.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음 )</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>설명</p>\n<ul>\n<li>Elevator의 floor가 변함에 따라, 각 장치에 출력 </li>\n</ul>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb01.png\" alt=\"img\"></p>\n</li>\n<li><p>Code</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/obbb09.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Reference<ul>\n<li>Java 객체지향 디자인 패턴 (정인상, 채흥석 지음 )</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Singleton Pattern02","date":"2018-04-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 요구사항\n  - 사용자는 티켓 발행기를 이용해 티켓 발행 가능 \n  - 티켓 발행기는 단 하나 존재\n  - 발행된 티켓은 고유의 시리얼 번호 존재\n  - 티켓의 시리얼 번호는 0보다 큼\n  - 0인 시리얼 번호는 유효하지 못한 티켓\n  - 발행될 수 있는 티켓은 한정\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm06.png)\n\n\n\n- Reference\n  - Java 객체지향 디자인 패턴 ( 정인상, 채흥석 지음 )","source":"_posts/2018-04-22-Singleton Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Singleton Pattern02\"\ndate:   2018-04-22\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 요구사항\n  - 사용자는 티켓 발행기를 이용해 티켓 발행 가능 \n  - 티켓 발행기는 단 하나 존재\n  - 발행된 티켓은 고유의 시리얼 번호 존재\n  - 티켓의 시리얼 번호는 0보다 큼\n  - 0인 시리얼 번호는 유효하지 못한 티켓\n  - 발행될 수 있는 티켓은 한정\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm06.png)\n\n\n\n- Reference\n  - Java 객체지향 디자인 패턴 ( 정인상, 채흥석 지음 )","slug":"2018-04-22-Singleton Pattern02","published":1,"updated":"2018-10-25T05:43:10.807Z","comments":1,"photos":[],"link":"","_id":"cjp6k65hs00ah31x7mwy3ts2w","content":"<ul>\n<li>요구사항<ul>\n<li>사용자는 티켓 발행기를 이용해 티켓 발행 가능 </li>\n<li>티켓 발행기는 단 하나 존재</li>\n<li>발행된 티켓은 고유의 시리얼 번호 존재</li>\n<li>티켓의 시리얼 번호는 0보다 큼</li>\n<li>0인 시리얼 번호는 유효하지 못한 티켓</li>\n<li>발행될 수 있는 티켓은 한정</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm06.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li>Java 객체지향 디자인 패턴 ( 정인상, 채흥석 지음 )</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>요구사항<ul>\n<li>사용자는 티켓 발행기를 이용해 티켓 발행 가능 </li>\n<li>티켓 발행기는 단 하나 존재</li>\n<li>발행된 티켓은 고유의 시리얼 번호 존재</li>\n<li>티켓의 시리얼 번호는 0보다 큼</li>\n<li>0인 시리얼 번호는 유효하지 못한 티켓</li>\n<li>발행될 수 있는 티켓은 한정</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tm06.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li>Java 객체지향 디자인 패턴 ( 정인상, 채흥석 지음 )</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"adapter VS facade","date":"2018-04-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Adapter와 Facade 모두 여러 개의 클래스를 감쌀 수 있다. BUT\n  - Adapter : 인터페이스를 다른 인터페이스로 변환\n  - Facade : 인터페이스를 단순화 \n- 이미 존재하는 클래스가 있는가?\n  - adpater : yes\n  - facade : yes\n- 인터페이스를 설계해야하나?\n  - adpater : yes\n  - facade : no\n- 다형적으로 동작하는 객체가 필요하나?\n  - adpater : probably\n  - facade : no\n- 더 간단한 인터페이스가 필요한가?\n  - adpater : no\n  - facade : yes\n\n","source":"_posts/2018-04-22-adapter VS facade.md","raw":"---\nlayout: post\ntitle:  \"adapter VS facade\"\ndate:   2018-04-22\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Adapter와 Facade 모두 여러 개의 클래스를 감쌀 수 있다. BUT\n  - Adapter : 인터페이스를 다른 인터페이스로 변환\n  - Facade : 인터페이스를 단순화 \n- 이미 존재하는 클래스가 있는가?\n  - adpater : yes\n  - facade : yes\n- 인터페이스를 설계해야하나?\n  - adpater : yes\n  - facade : no\n- 다형적으로 동작하는 객체가 필요하나?\n  - adpater : probably\n  - facade : no\n- 더 간단한 인터페이스가 필요한가?\n  - adpater : no\n  - facade : yes\n\n","slug":"2018-04-22-adapter VS facade","published":1,"updated":"2018-10-25T05:42:04.496Z","comments":1,"photos":[],"link":"","_id":"cjp6k65hu00aj31x7u4xy3y02","content":"<ul>\n<li>Adapter와 Facade 모두 여러 개의 클래스를 감쌀 수 있다. BUT<ul>\n<li>Adapter : 인터페이스를 다른 인터페이스로 변환</li>\n<li>Facade : 인터페이스를 단순화 </li>\n</ul>\n</li>\n<li>이미 존재하는 클래스가 있는가?<ul>\n<li>adpater : yes</li>\n<li>facade : yes</li>\n</ul>\n</li>\n<li>인터페이스를 설계해야하나?<ul>\n<li>adpater : yes</li>\n<li>facade : no</li>\n</ul>\n</li>\n<li>다형적으로 동작하는 객체가 필요하나?<ul>\n<li>adpater : probably</li>\n<li>facade : no</li>\n</ul>\n</li>\n<li>더 간단한 인터페이스가 필요한가?<ul>\n<li>adpater : no</li>\n<li>facade : yes</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>Adapter와 Facade 모두 여러 개의 클래스를 감쌀 수 있다. BUT<ul>\n<li>Adapter : 인터페이스를 다른 인터페이스로 변환</li>\n<li>Facade : 인터페이스를 단순화 </li>\n</ul>\n</li>\n<li>이미 존재하는 클래스가 있는가?<ul>\n<li>adpater : yes</li>\n<li>facade : yes</li>\n</ul>\n</li>\n<li>인터페이스를 설계해야하나?<ul>\n<li>adpater : yes</li>\n<li>facade : no</li>\n</ul>\n</li>\n<li>다형적으로 동작하는 객체가 필요하나?<ul>\n<li>adpater : probably</li>\n<li>facade : no</li>\n</ul>\n</li>\n<li>더 간단한 인터페이스가 필요한가?<ul>\n<li>adpater : no</li>\n<li>facade : yes</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Adapter Pattern03","date":"2018-04-22T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 설명\n  - Enumerator 인터페이스를 사용하는 구형 코드를 사용해야 하는 경우가 종종 있지만,\n  - 새로 만드는 코드에서는 Iterator만 사용할 계획\n- Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp01.png)\n\n- Code\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp04.png)\n\n- Reference\n  - Head First Deisgn Patterns\n\n\n","source":"_posts/2018-04-23-Adapter Pattern03.md","raw":"---\nlayout: post\ntitle:  \"Adapter Pattern03\"\ndate:   2018-04-23\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 설명\n  - Enumerator 인터페이스를 사용하는 구형 코드를 사용해야 하는 경우가 종종 있지만,\n  - 새로 만드는 코드에서는 Iterator만 사용할 계획\n- Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp01.png)\n\n- Code\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp04.png)\n\n- Reference\n  - Head First Deisgn Patterns\n\n\n","slug":"2018-04-23-Adapter Pattern03","published":1,"updated":"2018-10-25T05:43:17.409Z","comments":1,"photos":[],"link":"","_id":"cjp6k65i000al31x7lozdh0qf","content":"<ul>\n<li>설명<ul>\n<li>Enumerator 인터페이스를 사용하는 구형 코드를 사용해야 하는 경우가 종종 있지만,</li>\n<li>새로 만드는 코드에서는 Iterator만 사용할 계획</li>\n</ul>\n</li>\n<li>Class Diagram</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp01.png\" alt=\"img\"></p>\n<ul>\n<li><p>Code</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp02.png\" alt=\"img\"></p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp04.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li>Head First Deisgn Patterns</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>설명<ul>\n<li>Enumerator 인터페이스를 사용하는 구형 코드를 사용해야 하는 경우가 종종 있지만,</li>\n<li>새로 만드는 코드에서는 Iterator만 사용할 계획</li>\n</ul>\n</li>\n<li>Class Diagram</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp01.png\" alt=\"img\"></p>\n<ul>\n<li><p>Code</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp02.png\" alt=\"img\"></p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/adpp04.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li>Head First Deisgn Patterns</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"연구소","date":"2018-04-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n<https://www.acmicpc.net/problem/14502>\n\n- 반복\n  - 벽 3개 설치 => DFS\n    - 첫 번째 벽 어디 세울지 찾음 ( 첫번째 dfs 메소드 )\n      - for문 다 돌면, main을 돌아가\n    - 두 번째 벽 어디 세울지 찾음 ( 두 번째 dfs 메소드 )\n      - for문 다 돌면, ( 첫번째 dfs 메소드 )로 돌아가\n    - 세 번째 벽 어디 세울지 찾음 ( 세 번째 dfs 메소드 )\n      - 세우고, 바이러스 퍼뜨림\n      - 세번째 벽 세웠던거 초기화하고\n      - ( 두 번째 dfs 메소드 ) 로 돌아감\n  - 바이러스 퍼짐 => BFS\n  - 0의 개수 세기 \n- 0의 개수의 최댓값 구하기\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research011.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research012.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research013.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research014.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research015.png)\n\n","source":"_posts/2018-04-29-연구소.md","raw":"---\nlayout: post\ntitle:  \"연구소\"\ndate:   2018-04-29\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n<https://www.acmicpc.net/problem/14502>\n\n- 반복\n  - 벽 3개 설치 => DFS\n    - 첫 번째 벽 어디 세울지 찾음 ( 첫번째 dfs 메소드 )\n      - for문 다 돌면, main을 돌아가\n    - 두 번째 벽 어디 세울지 찾음 ( 두 번째 dfs 메소드 )\n      - for문 다 돌면, ( 첫번째 dfs 메소드 )로 돌아가\n    - 세 번째 벽 어디 세울지 찾음 ( 세 번째 dfs 메소드 )\n      - 세우고, 바이러스 퍼뜨림\n      - 세번째 벽 세웠던거 초기화하고\n      - ( 두 번째 dfs 메소드 ) 로 돌아감\n  - 바이러스 퍼짐 => BFS\n  - 0의 개수 세기 \n- 0의 개수의 최댓값 구하기\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research011.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research012.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research013.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research014.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research015.png)\n\n","slug":"2018-04-29-연구소","published":1,"updated":"2018-05-01T15:03:10.068Z","comments":1,"photos":[],"link":"","_id":"cjp6k65i200an31x7lw1pdfx2","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/14502\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14502</a></p>\n<ul>\n<li>반복<ul>\n<li>벽 3개 설치 =&gt; DFS<ul>\n<li>첫 번째 벽 어디 세울지 찾음 ( 첫번째 dfs 메소드 )<ul>\n<li>for문 다 돌면, main을 돌아가</li>\n</ul>\n</li>\n<li>두 번째 벽 어디 세울지 찾음 ( 두 번째 dfs 메소드 )<ul>\n<li>for문 다 돌면, ( 첫번째 dfs 메소드 )로 돌아가</li>\n</ul>\n</li>\n<li>세 번째 벽 어디 세울지 찾음 ( 세 번째 dfs 메소드 )<ul>\n<li>세우고, 바이러스 퍼뜨림</li>\n<li>세번째 벽 세웠던거 초기화하고</li>\n<li>( 두 번째 dfs 메소드 ) 로 돌아감</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>바이러스 퍼짐 =&gt; BFS</li>\n<li>0의 개수 세기 </li>\n</ul>\n</li>\n<li>0의 개수의 최댓값 구하기</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research012.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research013.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research014.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research015.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/14502\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14502</a></p>\n<ul>\n<li>반복<ul>\n<li>벽 3개 설치 =&gt; DFS<ul>\n<li>첫 번째 벽 어디 세울지 찾음 ( 첫번째 dfs 메소드 )<ul>\n<li>for문 다 돌면, main을 돌아가</li>\n</ul>\n</li>\n<li>두 번째 벽 어디 세울지 찾음 ( 두 번째 dfs 메소드 )<ul>\n<li>for문 다 돌면, ( 첫번째 dfs 메소드 )로 돌아가</li>\n</ul>\n</li>\n<li>세 번째 벽 어디 세울지 찾음 ( 세 번째 dfs 메소드 )<ul>\n<li>세우고, 바이러스 퍼뜨림</li>\n<li>세번째 벽 세웠던거 초기화하고</li>\n<li>( 두 번째 dfs 메소드 ) 로 돌아감</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>바이러스 퍼짐 =&gt; BFS</li>\n<li>0의 개수 세기 </li>\n</ul>\n</li>\n<li>0의 개수의 최댓값 구하기</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research012.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research013.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research014.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/research015.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Composite Pattern02","date":"2018-04-23T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 설명\n  - 파일 개체가 있다\n  - 파일을 포함할 수 있는 디렉토리 개체가 있다\n  - 이를 Composite Pattern으로 구현\n\n\n- Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp01.png)\n\n- Code\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp02.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp04.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp05.png)\n\n- Result\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compRes.png)\n\n  ​\n\n- Reference\n\n  - Java 객체지향 디자인 패턴 (정인상, 채홍석 지음)\n\n\n\n\n\n","source":"_posts/2018-04-24-Composite Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Composite Pattern02\"\ndate:   2018-04-24\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 설명\n  - 파일 개체가 있다\n  - 파일을 포함할 수 있는 디렉토리 개체가 있다\n  - 이를 Composite Pattern으로 구현\n\n\n- Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp01.png)\n\n- Code\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp02.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp04.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp05.png)\n\n- Result\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compRes.png)\n\n  ​\n\n- Reference\n\n  - Java 객체지향 디자인 패턴 (정인상, 채홍석 지음)\n\n\n\n\n\n","slug":"2018-04-24-Composite Pattern02","published":1,"updated":"2018-10-25T05:43:30.885Z","comments":1,"photos":[],"link":"","_id":"cjp6k65i400ap31x7w6farfnx","content":"<ul>\n<li>설명<ul>\n<li>파일 개체가 있다</li>\n<li>파일을 포함할 수 있는 디렉토리 개체가 있다</li>\n<li>이를 Composite Pattern으로 구현</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Class Diagram</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp01.png\" alt=\"img\"></p>\n<ul>\n<li><p>Code</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp05.png\" alt=\"img\"></p>\n</li>\n<li><p>Result</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compRes.png\" alt=\"img\"></p>\n<p>​</p>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>Java 객체지향 디자인 패턴 (정인상, 채홍석 지음)</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>설명<ul>\n<li>파일 개체가 있다</li>\n<li>파일을 포함할 수 있는 디렉토리 개체가 있다</li>\n<li>이를 Composite Pattern으로 구현</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Class Diagram</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp01.png\" alt=\"img\"></p>\n<ul>\n<li><p>Code</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compp05.png\" alt=\"img\"></p>\n</li>\n<li><p>Result</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/compRes.png\" alt=\"img\"></p>\n<p>​</p>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>Java 객체지향 디자인 패턴 (정인상, 채홍석 지음)</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Proxy Pattern02","date":"2018-05-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\n- The Proxy Pattern provides a surrogate or placeholder for another object to control access to it. \n- Use the Proxy Pattern to create a representative object that controls access to another object, which may be remote, expensive to create or in need of securing. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyUML02.png)\n\n## RMI (Remote Method Invocation)\n\nRMI gives us a way to find objects in a remote JVM and allows us to invoke their methods. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmi01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmi02.png)\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample03.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode07.png)\n\n## Reference\n\nHead First Design Pattern","source":"_posts/2018-05-03-Proxy Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Proxy Pattern02\"\ndate:   2018-05-03\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\n- The Proxy Pattern provides a surrogate or placeholder for another object to control access to it. \n- Use the Proxy Pattern to create a representative object that controls access to another object, which may be remote, expensive to create or in need of securing. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyUML02.png)\n\n## RMI (Remote Method Invocation)\n\nRMI gives us a way to find objects in a remote JVM and allows us to invoke their methods. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmi01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmi02.png)\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample03.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode07.png)\n\n## Reference\n\nHead First Design Pattern","slug":"2018-05-03-Proxy Pattern02","published":1,"updated":"2018-10-25T05:34:34.850Z","comments":1,"photos":[],"link":"","_id":"cjp6k65i700ar31x7hvd4obkc","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><ul>\n<li>The Proxy Pattern provides a surrogate or placeholder for another object to control access to it. </li>\n<li>Use the Proxy Pattern to create a representative object that controls access to another object, which may be remote, expensive to create or in need of securing. </li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyUML02.png\" alt=\"img\"></p>\n<h2 id=\"RMI-Remote-Method-Invocation\"><a href=\"#RMI-Remote-Method-Invocation\" class=\"headerlink\" title=\"RMI (Remote Method Invocation)\"></a>RMI (Remote Method Invocation)</h2><p>RMI gives us a way to find objects in a remote JVM and allows us to invoke their methods. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmi01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmi02.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample03.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode07.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><ul>\n<li>The Proxy Pattern provides a surrogate or placeholder for another object to control access to it. </li>\n<li>Use the Proxy Pattern to create a representative object that controls access to another object, which may be remote, expensive to create or in need of securing. </li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyUML02.png\" alt=\"img\"></p>\n<h2 id=\"RMI-Remote-Method-Invocation\"><a href=\"#RMI-Remote-Method-Invocation\" class=\"headerlink\" title=\"RMI (Remote Method Invocation)\"></a>RMI (Remote Method Invocation)</h2><p>RMI gives us a way to find objects in a remote JVM and allows us to invoke their methods. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmi01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmi02.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmiexample03.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rmicode07.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Proxy Pattern01","date":"2018-05-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- Intent\n\n  - The intent of this pattern is to provide a 'Placeholder' for an object to control references to it.\n\n- 다른 이름 \n\n  - Surrogate\t\t\t\n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyUML.png)\n\n\n- Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy04.png)\n\n- Result\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyResult.png)\n\n- Reference\n\n  - <http://www.oodesign.com/proxy-pattern.html>\n  - <https://www.tutorialspoint.com/design_pattern/singleton_pattern.html>\n\n\n\n","source":"_posts/2018-05-03-Proxy Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Proxy Pattern01\"\ndate:   2018-05-03\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- Intent\n\n  - The intent of this pattern is to provide a 'Placeholder' for an object to control references to it.\n\n- 다른 이름 \n\n  - Surrogate\t\t\t\n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyUML.png)\n\n\n- Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy04.png)\n\n- Result\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyResult.png)\n\n- Reference\n\n  - <http://www.oodesign.com/proxy-pattern.html>\n  - <https://www.tutorialspoint.com/design_pattern/singleton_pattern.html>\n\n\n\n","slug":"2018-05-03-Proxy Pattern01","published":1,"updated":"2018-10-25T05:39:04.663Z","comments":1,"photos":[],"link":"","_id":"cjp6k65i900at31x76g1ogdww","content":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>The intent of this pattern is to provide a ‘Placeholder’ for an object to control references to it.</li>\n</ul>\n</li>\n<li><p>다른 이름 </p>\n<ul>\n<li>Surrogate            </li>\n</ul>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyUML.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Code</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy04.png\" alt=\"img\"></p>\n<ul>\n<li><p>Result</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyResult.png\" alt=\"img\"></p>\n</li>\n<li><p>Reference</p>\n<ul>\n<li><a href=\"http://www.oodesign.com/proxy-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/proxy-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Intent</p>\n<ul>\n<li>The intent of this pattern is to provide a ‘Placeholder’ for an object to control references to it.</li>\n</ul>\n</li>\n<li><p>다른 이름 </p>\n<ul>\n<li>Surrogate            </li>\n</ul>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyUML.png\" alt=\"img\"></p>\n</li>\n</ul>\n<ul>\n<li>Code</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxy04.png\" alt=\"img\"></p>\n<ul>\n<li><p>Result</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proxyResult.png\" alt=\"img\"></p>\n</li>\n<li><p>Reference</p>\n<ul>\n<li><a href=\"http://www.oodesign.com/proxy-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/proxy-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"browser 동작","date":"2018-05-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- Rroweser comonents\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Browsercomponents.png)\n\n  - UI\n  - Browser engine : 소스코드 실행해서 화면에 보여주는. 브롸우저 소프트웨어를 동작시켜주는 핵심 엔진\n  - Rendering engine : 화면에 위치를 잡고 색칠을 해줌\n  - Data Persistence : 브라우저도 일부 데이터를 케쉬하고 저장을 해\n  - Networking : 서버와 HTTP로 정보를 주고 받을 수 있는 네트워크 모듈\n  - JavaScript Intetpreter : 자바스크림트 코드 처리\n  - UI Backend : UI 영역 처리\n\n- Rendering Engines\n\n  - 브라우져별로 다르게 가지고 있어\n\n  - main flow\n\n    ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rendering.png)\n\n    - Parsing HTML to construct the DOM tree\n      - HTML을 먼저 파싱. 문자 단위로 해석을해서 의미 파악.   \n      - DOM : Document Objedt Model\n        - HTML을 해석해서 일종의 트리구조로 데이터들을 가지고 있어\n    - Render tree construction\n    - Layout of the render tree : 스타일 정보와 구조를 합쳐서 화면에 어떠게 배치할지\n    - Paining the render tree : 화면에 직접 그림 \n    - diplay\n\n- 사파리 브라우저에서 처리되는 webkit렌더링엔진의 처리과정\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/webkit.png)\n\n  - HTML을 해석해서 DOM Tree를 만들고 \n  - CSS를 해석해서 CSS Tree(CSS Object Model)을 만든다\n  - 이 두 과정에서 Parsing 과정이 필요\n    -  토큰 단위로 해석되는 방식은 일반적인 소스코드의 컴파일 과정이라고 보면 된다\n  - DOM Tree와 CSS Tree, 이 두 개는 연관되어 있으므로 Render Tree로 다시 조합\n  - 이렇게 조합된 결과는 화면에 어떻게 배치할지 크기와 위치 정보를 담고 있습니다.\n  - 이후에 이렇게 구성된 Render Tree정보를 통해서 화면에 어떤 부분에 어떻게 색칠을 할지 Painting과정을 거치게 된다\n\n- Reference\n\n  - <https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction>\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","source":"_posts/2018-05-04-browser 동작.md","raw":"---\nlayout: post\ntitle:  \"browser 동작\"\ndate:   2018-05-05\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- Rroweser comonents\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Browsercomponents.png)\n\n  - UI\n  - Browser engine : 소스코드 실행해서 화면에 보여주는. 브롸우저 소프트웨어를 동작시켜주는 핵심 엔진\n  - Rendering engine : 화면에 위치를 잡고 색칠을 해줌\n  - Data Persistence : 브라우저도 일부 데이터를 케쉬하고 저장을 해\n  - Networking : 서버와 HTTP로 정보를 주고 받을 수 있는 네트워크 모듈\n  - JavaScript Intetpreter : 자바스크림트 코드 처리\n  - UI Backend : UI 영역 처리\n\n- Rendering Engines\n\n  - 브라우져별로 다르게 가지고 있어\n\n  - main flow\n\n    ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rendering.png)\n\n    - Parsing HTML to construct the DOM tree\n      - HTML을 먼저 파싱. 문자 단위로 해석을해서 의미 파악.   \n      - DOM : Document Objedt Model\n        - HTML을 해석해서 일종의 트리구조로 데이터들을 가지고 있어\n    - Render tree construction\n    - Layout of the render tree : 스타일 정보와 구조를 합쳐서 화면에 어떠게 배치할지\n    - Paining the render tree : 화면에 직접 그림 \n    - diplay\n\n- 사파리 브라우저에서 처리되는 webkit렌더링엔진의 처리과정\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/webkit.png)\n\n  - HTML을 해석해서 DOM Tree를 만들고 \n  - CSS를 해석해서 CSS Tree(CSS Object Model)을 만든다\n  - 이 두 과정에서 Parsing 과정이 필요\n    -  토큰 단위로 해석되는 방식은 일반적인 소스코드의 컴파일 과정이라고 보면 된다\n  - DOM Tree와 CSS Tree, 이 두 개는 연관되어 있으므로 Render Tree로 다시 조합\n  - 이렇게 조합된 결과는 화면에 어떻게 배치할지 크기와 위치 정보를 담고 있습니다.\n  - 이후에 이렇게 구성된 Render Tree정보를 통해서 화면에 어떤 부분에 어떻게 색칠을 할지 Painting과정을 거치게 된다\n\n- Reference\n\n  - <https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction>\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","slug":"2018-05-04-browser 동작","published":1,"updated":"2018-05-05T15:03:28.135Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ib00av31x7bbrrvrf4","content":"<ul>\n<li><p>Rroweser comonents</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Browsercomponents.png\" alt=\"img\"></p>\n<ul>\n<li>UI</li>\n<li>Browser engine : 소스코드 실행해서 화면에 보여주는. 브롸우저 소프트웨어를 동작시켜주는 핵심 엔진</li>\n<li>Rendering engine : 화면에 위치를 잡고 색칠을 해줌</li>\n<li>Data Persistence : 브라우저도 일부 데이터를 케쉬하고 저장을 해</li>\n<li>Networking : 서버와 HTTP로 정보를 주고 받을 수 있는 네트워크 모듈</li>\n<li>JavaScript Intetpreter : 자바스크림트 코드 처리</li>\n<li>UI Backend : UI 영역 처리</li>\n</ul>\n</li>\n<li><p>Rendering Engines</p>\n<ul>\n<li><p>브라우져별로 다르게 가지고 있어</p>\n</li>\n<li><p>main flow</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rendering.png\" alt=\"img\"></p>\n<ul>\n<li>Parsing HTML to construct the DOM tree<ul>\n<li>HTML을 먼저 파싱. 문자 단위로 해석을해서 의미 파악.   </li>\n<li>DOM : Document Objedt Model<ul>\n<li>HTML을 해석해서 일종의 트리구조로 데이터들을 가지고 있어</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Render tree construction</li>\n<li>Layout of the render tree : 스타일 정보와 구조를 합쳐서 화면에 어떠게 배치할지</li>\n<li>Paining the render tree : 화면에 직접 그림 </li>\n<li>diplay</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>사파리 브라우저에서 처리되는 webkit렌더링엔진의 처리과정</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/webkit.png\" alt=\"img\"></p>\n<ul>\n<li>HTML을 해석해서 DOM Tree를 만들고 </li>\n<li>CSS를 해석해서 CSS Tree(CSS Object Model)을 만든다</li>\n<li>이 두 과정에서 Parsing 과정이 필요<ul>\n<li>토큰 단위로 해석되는 방식은 일반적인 소스코드의 컴파일 과정이라고 보면 된다</li>\n</ul>\n</li>\n<li>DOM Tree와 CSS Tree, 이 두 개는 연관되어 있으므로 Render Tree로 다시 조합</li>\n<li>이렇게 조합된 결과는 화면에 어떻게 배치할지 크기와 위치 정보를 담고 있습니다.</li>\n<li>이후에 이렇게 구성된 Render Tree정보를 통해서 화면에 어떤 부분에 어떻게 색칠을 할지 Painting과정을 거치게 된다</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li><a href=\"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction\" target=\"_blank\" rel=\"noopener\">https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction</a></li>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Rroweser comonents</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Browsercomponents.png\" alt=\"img\"></p>\n<ul>\n<li>UI</li>\n<li>Browser engine : 소스코드 실행해서 화면에 보여주는. 브롸우저 소프트웨어를 동작시켜주는 핵심 엔진</li>\n<li>Rendering engine : 화면에 위치를 잡고 색칠을 해줌</li>\n<li>Data Persistence : 브라우저도 일부 데이터를 케쉬하고 저장을 해</li>\n<li>Networking : 서버와 HTTP로 정보를 주고 받을 수 있는 네트워크 모듈</li>\n<li>JavaScript Intetpreter : 자바스크림트 코드 처리</li>\n<li>UI Backend : UI 영역 처리</li>\n</ul>\n</li>\n<li><p>Rendering Engines</p>\n<ul>\n<li><p>브라우져별로 다르게 가지고 있어</p>\n</li>\n<li><p>main flow</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/rendering.png\" alt=\"img\"></p>\n<ul>\n<li>Parsing HTML to construct the DOM tree<ul>\n<li>HTML을 먼저 파싱. 문자 단위로 해석을해서 의미 파악.   </li>\n<li>DOM : Document Objedt Model<ul>\n<li>HTML을 해석해서 일종의 트리구조로 데이터들을 가지고 있어</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Render tree construction</li>\n<li>Layout of the render tree : 스타일 정보와 구조를 합쳐서 화면에 어떠게 배치할지</li>\n<li>Paining the render tree : 화면에 직접 그림 </li>\n<li>diplay</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>사파리 브라우저에서 처리되는 webkit렌더링엔진의 처리과정</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/webkit.png\" alt=\"img\"></p>\n<ul>\n<li>HTML을 해석해서 DOM Tree를 만들고 </li>\n<li>CSS를 해석해서 CSS Tree(CSS Object Model)을 만든다</li>\n<li>이 두 과정에서 Parsing 과정이 필요<ul>\n<li>토큰 단위로 해석되는 방식은 일반적인 소스코드의 컴파일 과정이라고 보면 된다</li>\n</ul>\n</li>\n<li>DOM Tree와 CSS Tree, 이 두 개는 연관되어 있으므로 Render Tree로 다시 조합</li>\n<li>이렇게 조합된 결과는 화면에 어떻게 배치할지 크기와 위치 정보를 담고 있습니다.</li>\n<li>이후에 이렇게 구성된 Render Tree정보를 통해서 화면에 어떤 부분에 어떻게 색칠을 할지 Painting과정을 거치게 된다</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li><a href=\"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction\" target=\"_blank\" rel=\"noopener\">https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction</a></li>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"케빈 베이컨의 6단계 법칙","date":"2018-04-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n<https://www.acmicpc.net/problem/1389>\n\n- 유저의 수 만큼 BFS\n  - start(root) 에서 다음 유저까지 가는데 얼마나 가야하는지\n    - depth 구하는것과 동일\n      - queue에 넣을 때, 부모가 누구인지도 같이 저장하면 됨\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin04.png)\n\n\n\n\n\n\n\n","source":"_posts/2018-05-01-케빈 베이컨의 6단계 법칙 .md","raw":"---\nlayout: post\ntitle:  \"케빈 베이컨의 6단계 법칙\"\ndate:   2018-05-01\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n<https://www.acmicpc.net/problem/1389>\n\n- 유저의 수 만큼 BFS\n  - start(root) 에서 다음 유저까지 가는데 얼마나 가야하는지\n    - depth 구하는것과 동일\n      - queue에 넣을 때, 부모가 누구인지도 같이 저장하면 됨\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin04.png)\n\n\n\n\n\n\n\n","slug":"2018-05-01-케빈 베이컨의 6단계 법칙 ","published":1,"updated":"2018-05-02T07:00:58.595Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ic00ax31x7w37ewlfk","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/1389\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1389</a></p>\n<ul>\n<li>유저의 수 만큼 BFS<ul>\n<li>start(root) 에서 다음 유저까지 가는데 얼마나 가야하는지<ul>\n<li>depth 구하는것과 동일<ul>\n<li>queue에 넣을 때, 부모가 누구인지도 같이 저장하면 됨</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin04.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/1389\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1389</a></p>\n<ul>\n<li>유저의 수 만큼 BFS<ul>\n<li>start(root) 에서 다음 유저까지 가는데 얼마나 가야하는지<ul>\n<li>depth 구하는것과 동일<ul>\n<li>queue에 넣을 때, 부모가 누구인지도 같이 저장하면 됨</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cabin04.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"web 동작","date":"2018-05-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- 물리적인 하나의 컴퓨터에 여러개의 서버가 동작 가능\n- 각각 서버는 포트를 가지고 잇음\n- 인터넷은 네트워크들의 네트워크. 네트워크들의 결합체\n- TCP/IP로 연결되어 있다\n- 통신을 하기 위해 HTTP를 사용함\n  - HTTP v0.9가 최초\n  - HTTP : 서바와 클라이언트가 인터넷상에서 데이터 주고 받기 위한 프로토콜\n  - 어떤 종류의 데이터도 전송 가능\n    - 이미지, 동영상, 텍스트 등 ...\n  - HTTP/2 까지 등장\n  - HTTP/1.1 을 다룰거임\n- HTTP 작동방식\n- 네트워크 통신방식에는 유상태와 무상태 두개가 있다\n  - 유상태  방식 :  stateful\n    - 접속이 계속 유지\n    -  클라이언트와 서버 간에 지속적으로 데이터 주고 받을 수 있어\n    - 채탱, 온라인 게임에 적합\n    - 서버가 동시에 접속 유지 할수 있는 수 정해짐\n      - 그래서 클라이언트 수가 많아지면 서버의 수도 많아져야해\n  - 무상태 : stateless  <-- HTTP는 이걸 써\n    - 계속 연결을 맺지 않아\n    - 필요한 경우에만 연결을 맺어\n    - 클라이언트가 계속 연결을 맺고 있지 않아\n    - 하나의 서버가 굉장히 많은 요청/ 응답 처리 가능\n    - 서버/ 클라이언트 모델을 따름\n    - 불특정 다수를 대상으로 하는 서비스에는 적합\n    -  클라이언트와 서버가 계속 연결된 형태가 아니기 때문에 클라이언트와 서버 간의 최대 연결 수보다 훨씬 많은 요청과 응답을 처리할 수 있다.\n    - 연결을 끊어버리기 때문에, 클라이언트의 이전 상황을 알 수가 없다. \n    - 이러한 특징을 무상태(Stateless)라고 말한다. \n    - 이러한 특징 때문에 정보를 유지하기 위해서 Cookie와 같은 기술이 등장하게 되었다.\n- URL\n  - 인터넷 상의 자원의 위치\n  - 문서/이미지/동영상등의 위치\n  - 크게 세부분으로 나뉨\n  - 프로토콜의 종류 / 서버의 IP주소(도메인주소) / 자원의 위치\n  - IP : 집의 집 주소\n  - 하나의 컴퓨터에는 하나의 IP 존재\n  - 집에는 방들이 여러개 ㅇ있어\n  - 각각의 하나의 방을 포트\n  - 한방에 여러명이 생활하기도해. 서버는 이렇게 불가능\n  - 서버는 각 하나의 방을 하나씩 차지\n  - 하나의 방에 여러개의 서버가 존재할수 없다\n  - 포트 번호가 각각 달라야됨\n  - 하나의 물리적 컴퓨터에는 여러개의 서버가 동작 가능\n  - 서버는 포트값이 다르게 동작\n  - 포트값은 0보다 큰 숫자값이다\n  - HTTP 서버는 기본 포트값이 80 이다\n- 웹 동작 원리\n  - 클라이언트가 서버에 접속을 함\n  - 다시 클라이언트가 요청을 함\n    - 요청되는 데이터들은 정해진 규칙이 있어. 요청데이터포맷 이라고 함\n    - 요청 데이터 포맷\n      - 헤더\n        - 요청 메서드 + 요청URI(요청하는 자원의 위치 명시) + HTTP 프로토콜의 버젼\n          - 요청 메서드 : GET 말고도 많아\n      - 요청 바디\n        - GET방식은 요청바디가 없어\n        - POST나 PUT을 사용하면 바디에 들어가\n    - 응답 데이터 포맷\n      - 헤더\n      - 바디\n  - 요청에 따른 응답결과를 클라이언트게 응답\n  - 응답이 끝나고 나면 서버와 클라이어트의 연결이 끊겨\n- Reference\n\n  - <https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction>\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","source":"_posts/2018-05-04-web 동작.md","raw":"---\nlayout: post\ntitle:  \"web 동작\"\ndate:   2018-05-05\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- 물리적인 하나의 컴퓨터에 여러개의 서버가 동작 가능\n- 각각 서버는 포트를 가지고 잇음\n- 인터넷은 네트워크들의 네트워크. 네트워크들의 결합체\n- TCP/IP로 연결되어 있다\n- 통신을 하기 위해 HTTP를 사용함\n  - HTTP v0.9가 최초\n  - HTTP : 서바와 클라이언트가 인터넷상에서 데이터 주고 받기 위한 프로토콜\n  - 어떤 종류의 데이터도 전송 가능\n    - 이미지, 동영상, 텍스트 등 ...\n  - HTTP/2 까지 등장\n  - HTTP/1.1 을 다룰거임\n- HTTP 작동방식\n- 네트워크 통신방식에는 유상태와 무상태 두개가 있다\n  - 유상태  방식 :  stateful\n    - 접속이 계속 유지\n    -  클라이언트와 서버 간에 지속적으로 데이터 주고 받을 수 있어\n    - 채탱, 온라인 게임에 적합\n    - 서버가 동시에 접속 유지 할수 있는 수 정해짐\n      - 그래서 클라이언트 수가 많아지면 서버의 수도 많아져야해\n  - 무상태 : stateless  <-- HTTP는 이걸 써\n    - 계속 연결을 맺지 않아\n    - 필요한 경우에만 연결을 맺어\n    - 클라이언트가 계속 연결을 맺고 있지 않아\n    - 하나의 서버가 굉장히 많은 요청/ 응답 처리 가능\n    - 서버/ 클라이언트 모델을 따름\n    - 불특정 다수를 대상으로 하는 서비스에는 적합\n    -  클라이언트와 서버가 계속 연결된 형태가 아니기 때문에 클라이언트와 서버 간의 최대 연결 수보다 훨씬 많은 요청과 응답을 처리할 수 있다.\n    - 연결을 끊어버리기 때문에, 클라이언트의 이전 상황을 알 수가 없다. \n    - 이러한 특징을 무상태(Stateless)라고 말한다. \n    - 이러한 특징 때문에 정보를 유지하기 위해서 Cookie와 같은 기술이 등장하게 되었다.\n- URL\n  - 인터넷 상의 자원의 위치\n  - 문서/이미지/동영상등의 위치\n  - 크게 세부분으로 나뉨\n  - 프로토콜의 종류 / 서버의 IP주소(도메인주소) / 자원의 위치\n  - IP : 집의 집 주소\n  - 하나의 컴퓨터에는 하나의 IP 존재\n  - 집에는 방들이 여러개 ㅇ있어\n  - 각각의 하나의 방을 포트\n  - 한방에 여러명이 생활하기도해. 서버는 이렇게 불가능\n  - 서버는 각 하나의 방을 하나씩 차지\n  - 하나의 방에 여러개의 서버가 존재할수 없다\n  - 포트 번호가 각각 달라야됨\n  - 하나의 물리적 컴퓨터에는 여러개의 서버가 동작 가능\n  - 서버는 포트값이 다르게 동작\n  - 포트값은 0보다 큰 숫자값이다\n  - HTTP 서버는 기본 포트값이 80 이다\n- 웹 동작 원리\n  - 클라이언트가 서버에 접속을 함\n  - 다시 클라이언트가 요청을 함\n    - 요청되는 데이터들은 정해진 규칙이 있어. 요청데이터포맷 이라고 함\n    - 요청 데이터 포맷\n      - 헤더\n        - 요청 메서드 + 요청URI(요청하는 자원의 위치 명시) + HTTP 프로토콜의 버젼\n          - 요청 메서드 : GET 말고도 많아\n      - 요청 바디\n        - GET방식은 요청바디가 없어\n        - POST나 PUT을 사용하면 바디에 들어가\n    - 응답 데이터 포맷\n      - 헤더\n      - 바디\n  - 요청에 따른 응답결과를 클라이언트게 응답\n  - 응답이 끝나고 나면 서버와 클라이어트의 연결이 끊겨\n- Reference\n\n  - <https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction>\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","slug":"2018-05-04-web 동작","published":1,"updated":"2018-05-05T15:03:38.006Z","comments":1,"photos":[],"link":"","_id":"cjp6k65if00b031x7gi995ugk","content":"<ul>\n<li>물리적인 하나의 컴퓨터에 여러개의 서버가 동작 가능</li>\n<li>각각 서버는 포트를 가지고 잇음</li>\n<li>인터넷은 네트워크들의 네트워크. 네트워크들의 결합체</li>\n<li>TCP/IP로 연결되어 있다</li>\n<li>통신을 하기 위해 HTTP를 사용함<ul>\n<li>HTTP v0.9가 최초</li>\n<li>HTTP : 서바와 클라이언트가 인터넷상에서 데이터 주고 받기 위한 프로토콜</li>\n<li>어떤 종류의 데이터도 전송 가능<ul>\n<li>이미지, 동영상, 텍스트 등 …</li>\n</ul>\n</li>\n<li>HTTP/2 까지 등장</li>\n<li>HTTP/1.1 을 다룰거임</li>\n</ul>\n</li>\n<li>HTTP 작동방식</li>\n<li>네트워크 통신방식에는 유상태와 무상태 두개가 있다<ul>\n<li>유상태  방식 :  stateful<ul>\n<li>접속이 계속 유지</li>\n<li>클라이언트와 서버 간에 지속적으로 데이터 주고 받을 수 있어</li>\n<li>채탱, 온라인 게임에 적합</li>\n<li>서버가 동시에 접속 유지 할수 있는 수 정해짐<ul>\n<li>그래서 클라이언트 수가 많아지면 서버의 수도 많아져야해</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>무상태 : stateless  &lt;– HTTP는 이걸 써<ul>\n<li>계속 연결을 맺지 않아</li>\n<li>필요한 경우에만 연결을 맺어</li>\n<li>클라이언트가 계속 연결을 맺고 있지 않아</li>\n<li>하나의 서버가 굉장히 많은 요청/ 응답 처리 가능</li>\n<li>서버/ 클라이언트 모델을 따름</li>\n<li>불특정 다수를 대상으로 하는 서비스에는 적합</li>\n<li>클라이언트와 서버가 계속 연결된 형태가 아니기 때문에 클라이언트와 서버 간의 최대 연결 수보다 훨씬 많은 요청과 응답을 처리할 수 있다.</li>\n<li>연결을 끊어버리기 때문에, 클라이언트의 이전 상황을 알 수가 없다. </li>\n<li>이러한 특징을 무상태(Stateless)라고 말한다. </li>\n<li>이러한 특징 때문에 정보를 유지하기 위해서 Cookie와 같은 기술이 등장하게 되었다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>URL<ul>\n<li>인터넷 상의 자원의 위치</li>\n<li>문서/이미지/동영상등의 위치</li>\n<li>크게 세부분으로 나뉨</li>\n<li>프로토콜의 종류 / 서버의 IP주소(도메인주소) / 자원의 위치</li>\n<li>IP : 집의 집 주소</li>\n<li>하나의 컴퓨터에는 하나의 IP 존재</li>\n<li>집에는 방들이 여러개 ㅇ있어</li>\n<li>각각의 하나의 방을 포트</li>\n<li>한방에 여러명이 생활하기도해. 서버는 이렇게 불가능</li>\n<li>서버는 각 하나의 방을 하나씩 차지</li>\n<li>하나의 방에 여러개의 서버가 존재할수 없다</li>\n<li>포트 번호가 각각 달라야됨</li>\n<li>하나의 물리적 컴퓨터에는 여러개의 서버가 동작 가능</li>\n<li>서버는 포트값이 다르게 동작</li>\n<li>포트값은 0보다 큰 숫자값이다</li>\n<li>HTTP 서버는 기본 포트값이 80 이다</li>\n</ul>\n</li>\n<li>웹 동작 원리<ul>\n<li>클라이언트가 서버에 접속을 함</li>\n<li>다시 클라이언트가 요청을 함<ul>\n<li>요청되는 데이터들은 정해진 규칙이 있어. 요청데이터포맷 이라고 함</li>\n<li>요청 데이터 포맷<ul>\n<li>헤더<ul>\n<li>요청 메서드 + 요청URI(요청하는 자원의 위치 명시) + HTTP 프로토콜의 버젼<ul>\n<li>요청 메서드 : GET 말고도 많아</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>요청 바디<ul>\n<li>GET방식은 요청바디가 없어</li>\n<li>POST나 PUT을 사용하면 바디에 들어가</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>응답 데이터 포맷<ul>\n<li>헤더</li>\n<li>바디</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>요청에 따른 응답결과를 클라이언트게 응답</li>\n<li>응답이 끝나고 나면 서버와 클라이어트의 연결이 끊겨</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li><a href=\"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction\" target=\"_blank\" rel=\"noopener\">https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction</a></li>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>물리적인 하나의 컴퓨터에 여러개의 서버가 동작 가능</li>\n<li>각각 서버는 포트를 가지고 잇음</li>\n<li>인터넷은 네트워크들의 네트워크. 네트워크들의 결합체</li>\n<li>TCP/IP로 연결되어 있다</li>\n<li>통신을 하기 위해 HTTP를 사용함<ul>\n<li>HTTP v0.9가 최초</li>\n<li>HTTP : 서바와 클라이언트가 인터넷상에서 데이터 주고 받기 위한 프로토콜</li>\n<li>어떤 종류의 데이터도 전송 가능<ul>\n<li>이미지, 동영상, 텍스트 등 …</li>\n</ul>\n</li>\n<li>HTTP/2 까지 등장</li>\n<li>HTTP/1.1 을 다룰거임</li>\n</ul>\n</li>\n<li>HTTP 작동방식</li>\n<li>네트워크 통신방식에는 유상태와 무상태 두개가 있다<ul>\n<li>유상태  방식 :  stateful<ul>\n<li>접속이 계속 유지</li>\n<li>클라이언트와 서버 간에 지속적으로 데이터 주고 받을 수 있어</li>\n<li>채탱, 온라인 게임에 적합</li>\n<li>서버가 동시에 접속 유지 할수 있는 수 정해짐<ul>\n<li>그래서 클라이언트 수가 많아지면 서버의 수도 많아져야해</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>무상태 : stateless  &lt;– HTTP는 이걸 써<ul>\n<li>계속 연결을 맺지 않아</li>\n<li>필요한 경우에만 연결을 맺어</li>\n<li>클라이언트가 계속 연결을 맺고 있지 않아</li>\n<li>하나의 서버가 굉장히 많은 요청/ 응답 처리 가능</li>\n<li>서버/ 클라이언트 모델을 따름</li>\n<li>불특정 다수를 대상으로 하는 서비스에는 적합</li>\n<li>클라이언트와 서버가 계속 연결된 형태가 아니기 때문에 클라이언트와 서버 간의 최대 연결 수보다 훨씬 많은 요청과 응답을 처리할 수 있다.</li>\n<li>연결을 끊어버리기 때문에, 클라이언트의 이전 상황을 알 수가 없다. </li>\n<li>이러한 특징을 무상태(Stateless)라고 말한다. </li>\n<li>이러한 특징 때문에 정보를 유지하기 위해서 Cookie와 같은 기술이 등장하게 되었다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>URL<ul>\n<li>인터넷 상의 자원의 위치</li>\n<li>문서/이미지/동영상등의 위치</li>\n<li>크게 세부분으로 나뉨</li>\n<li>프로토콜의 종류 / 서버의 IP주소(도메인주소) / 자원의 위치</li>\n<li>IP : 집의 집 주소</li>\n<li>하나의 컴퓨터에는 하나의 IP 존재</li>\n<li>집에는 방들이 여러개 ㅇ있어</li>\n<li>각각의 하나의 방을 포트</li>\n<li>한방에 여러명이 생활하기도해. 서버는 이렇게 불가능</li>\n<li>서버는 각 하나의 방을 하나씩 차지</li>\n<li>하나의 방에 여러개의 서버가 존재할수 없다</li>\n<li>포트 번호가 각각 달라야됨</li>\n<li>하나의 물리적 컴퓨터에는 여러개의 서버가 동작 가능</li>\n<li>서버는 포트값이 다르게 동작</li>\n<li>포트값은 0보다 큰 숫자값이다</li>\n<li>HTTP 서버는 기본 포트값이 80 이다</li>\n</ul>\n</li>\n<li>웹 동작 원리<ul>\n<li>클라이언트가 서버에 접속을 함</li>\n<li>다시 클라이언트가 요청을 함<ul>\n<li>요청되는 데이터들은 정해진 규칙이 있어. 요청데이터포맷 이라고 함</li>\n<li>요청 데이터 포맷<ul>\n<li>헤더<ul>\n<li>요청 메서드 + 요청URI(요청하는 자원의 위치 명시) + HTTP 프로토콜의 버젼<ul>\n<li>요청 메서드 : GET 말고도 많아</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>요청 바디<ul>\n<li>GET방식은 요청바디가 없어</li>\n<li>POST나 PUT을 사용하면 바디에 들어가</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>응답 데이터 포맷<ul>\n<li>헤더</li>\n<li>바디</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>요청에 따른 응답결과를 클라이언트게 응답</li>\n<li>응답이 끝나고 나면 서버와 클라이어트의 연결이 끊겨</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li><a href=\"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction\" target=\"_blank\" rel=\"noopener\">https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#Introduction</a></li>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"프론트엔드, 백엔드","date":"2018-05-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- 웹 프론트엔드\n  - 사용자에게 웹을 통해 다양한 콘텐츠(문서, 동영상, 사진 등)을 제공\n  - 사용자의 요청(요구사항)에 반응해서 동작\n- 웹 프론트엔드의 역할\n  - 웹 콘텐츠를 보여주기 위해 구조를 만들어야함 - HTML : 구조를 잡아\n  - 적절한 배치와 일관된 디자인 제공(보기좋게) - CSS : 디자인\n  - 사용장 요청을 잘 반영해야함 (소통하듯이) - JacaScript : 동적 제어. 프로그래밍\n\n- 벡엔드 개발자가 알아야할 것들\n  - 프로그래밍 언어(JAVA, Python, PHP, JavaScript)\n  - 웹의 동작 원리\n  - 알고리즘, 자료구조 등 프로그래밍 기반 지식\n  - 운영체제, 네트워크 등에 대한 이해\n  - 프레임워크에 대한 이해(ex: Spring)\n  - DBMS에 대한 이해와 사용방법(ex: MySQL, Oracle)  \n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","source":"_posts/2018-05-04-프론트엔드, 백엔드.md","raw":"---\nlayout: post\ntitle:  \"프론트엔드, 백엔드\"\ndate:   2018-05-05\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- 웹 프론트엔드\n  - 사용자에게 웹을 통해 다양한 콘텐츠(문서, 동영상, 사진 등)을 제공\n  - 사용자의 요청(요구사항)에 반응해서 동작\n- 웹 프론트엔드의 역할\n  - 웹 콘텐츠를 보여주기 위해 구조를 만들어야함 - HTML : 구조를 잡아\n  - 적절한 배치와 일관된 디자인 제공(보기좋게) - CSS : 디자인\n  - 사용장 요청을 잘 반영해야함 (소통하듯이) - JacaScript : 동적 제어. 프로그래밍\n\n- 벡엔드 개발자가 알아야할 것들\n  - 프로그래밍 언어(JAVA, Python, PHP, JavaScript)\n  - 웹의 동작 원리\n  - 알고리즘, 자료구조 등 프로그래밍 기반 지식\n  - 운영체제, 네트워크 등에 대한 이해\n  - 프레임워크에 대한 이해(ex: Spring)\n  - DBMS에 대한 이해와 사용방법(ex: MySQL, Oracle)  \n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","slug":"2018-05-04-프론트엔드, 백엔드","published":1,"updated":"2018-05-05T15:03:44.766Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ii00b231x782k2ehxn","content":"<ul>\n<li>웹 프론트엔드<ul>\n<li>사용자에게 웹을 통해 다양한 콘텐츠(문서, 동영상, 사진 등)을 제공</li>\n<li>사용자의 요청(요구사항)에 반응해서 동작</li>\n</ul>\n</li>\n<li><p>웹 프론트엔드의 역할</p>\n<ul>\n<li>웹 콘텐츠를 보여주기 위해 구조를 만들어야함 - HTML : 구조를 잡아</li>\n<li>적절한 배치와 일관된 디자인 제공(보기좋게) - CSS : 디자인</li>\n<li>사용장 요청을 잘 반영해야함 (소통하듯이) - JacaScript : 동적 제어. 프로그래밍</li>\n</ul>\n</li>\n<li><p>벡엔드 개발자가 알아야할 것들</p>\n<ul>\n<li>프로그래밍 언어(JAVA, Python, PHP, JavaScript)</li>\n<li>웹의 동작 원리</li>\n<li>알고리즘, 자료구조 등 프로그래밍 기반 지식</li>\n<li>운영체제, 네트워크 등에 대한 이해</li>\n<li>프레임워크에 대한 이해(ex: Spring)</li>\n<li>DBMS에 대한 이해와 사용방법(ex: MySQL, Oracle)  </li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>웹 프론트엔드<ul>\n<li>사용자에게 웹을 통해 다양한 콘텐츠(문서, 동영상, 사진 등)을 제공</li>\n<li>사용자의 요청(요구사항)에 반응해서 동작</li>\n</ul>\n</li>\n<li><p>웹 프론트엔드의 역할</p>\n<ul>\n<li>웹 콘텐츠를 보여주기 위해 구조를 만들어야함 - HTML : 구조를 잡아</li>\n<li>적절한 배치와 일관된 디자인 제공(보기좋게) - CSS : 디자인</li>\n<li>사용장 요청을 잘 반영해야함 (소통하듯이) - JacaScript : 동적 제어. 프로그래밍</li>\n</ul>\n</li>\n<li><p>벡엔드 개발자가 알아야할 것들</p>\n<ul>\n<li>프로그래밍 언어(JAVA, Python, PHP, JavaScript)</li>\n<li>웹의 동작 원리</li>\n<li>알고리즘, 자료구조 등 프로그래밍 기반 지식</li>\n<li>운영체제, 네트워크 등에 대한 이해</li>\n<li>프레임워크에 대한 이해(ex: Spring)</li>\n<li>DBMS에 대한 이해와 사용방법(ex: MySQL, Oracle)  </li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":" browser에서의 웹 개발","date":"2018-05-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- HTML 문서구조\n\n  - 크롬 개발자 도구 열기 (Option + Command + i)\n  - Network tab 에서 새로고침을 하면\n\n- 알게된 몇 가지 특징\n\n  - html 문서는 html이라는 태그로 시작해서 html 태그로 끝남\n\n  - head\n    - 자세한 문서에 대한 정보를 포함\n  - body\n    - 화면에 포함될 div 같은것들\n  - html은 계청적\n  - html은 tag를 사용해서 표현\n  - JavaScript와 CSS가 html 안에 여기 저기 존재\n\n- CSS / JavaScript 코드 위치\n\n  - JavaScript 코드\n    - body 태그 닫히기 전에 위치하는 것이 렌더링을 방해하지 않아도 좋고, \n  - CSS\n    - head 안에 위치해서 렌더링 처리 시에 브라우저가 더 빨리 참고할 수 있게 하는 것이 좋습니다.\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","source":"_posts/2018-05-05- browser에서의 웹 개발.md","raw":"---\nlayout: post\ntitle:  \" browser에서의 웹 개발\"\ndate:   2018-05-05\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- HTML 문서구조\n\n  - 크롬 개발자 도구 열기 (Option + Command + i)\n  - Network tab 에서 새로고침을 하면\n\n- 알게된 몇 가지 특징\n\n  - html 문서는 html이라는 태그로 시작해서 html 태그로 끝남\n\n  - head\n    - 자세한 문서에 대한 정보를 포함\n  - body\n    - 화면에 포함될 div 같은것들\n  - html은 계청적\n  - html은 tag를 사용해서 표현\n  - JavaScript와 CSS가 html 안에 여기 저기 존재\n\n- CSS / JavaScript 코드 위치\n\n  - JavaScript 코드\n    - body 태그 닫히기 전에 위치하는 것이 렌더링을 방해하지 않아도 좋고, \n  - CSS\n    - head 안에 위치해서 렌더링 처리 시에 브라우저가 더 빨리 참고할 수 있게 하는 것이 좋습니다.\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","slug":"2018-05-05- browser에서의 웹 개발","published":1,"updated":"2018-05-05T15:03:59.655Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ij00b431x7oy6levqd","content":"<ul>\n<li><p>HTML 문서구조</p>\n<ul>\n<li>크롬 개발자 도구 열기 (Option + Command + i)</li>\n<li>Network tab 에서 새로고침을 하면</li>\n</ul>\n</li>\n<li><p>알게된 몇 가지 특징</p>\n<ul>\n<li><p>html 문서는 html이라는 태그로 시작해서 html 태그로 끝남</p>\n</li>\n<li><p>head</p>\n<ul>\n<li>자세한 문서에 대한 정보를 포함</li>\n</ul>\n</li>\n<li>body<ul>\n<li>화면에 포함될 div 같은것들</li>\n</ul>\n</li>\n<li>html은 계청적</li>\n<li>html은 tag를 사용해서 표현</li>\n<li>JavaScript와 CSS가 html 안에 여기 저기 존재</li>\n</ul>\n</li>\n<li><p>CSS / JavaScript 코드 위치</p>\n<ul>\n<li>JavaScript 코드<ul>\n<li>body 태그 닫히기 전에 위치하는 것이 렌더링을 방해하지 않아도 좋고, </li>\n</ul>\n</li>\n<li>CSS<ul>\n<li>head 안에 위치해서 렌더링 처리 시에 브라우저가 더 빨리 참고할 수 있게 하는 것이 좋습니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>HTML 문서구조</p>\n<ul>\n<li>크롬 개발자 도구 열기 (Option + Command + i)</li>\n<li>Network tab 에서 새로고침을 하면</li>\n</ul>\n</li>\n<li><p>알게된 몇 가지 특징</p>\n<ul>\n<li><p>html 문서는 html이라는 태그로 시작해서 html 태그로 끝남</p>\n</li>\n<li><p>head</p>\n<ul>\n<li>자세한 문서에 대한 정보를 포함</li>\n</ul>\n</li>\n<li>body<ul>\n<li>화면에 포함될 div 같은것들</li>\n</ul>\n</li>\n<li>html은 계청적</li>\n<li>html은 tag를 사용해서 표현</li>\n<li>JavaScript와 CSS가 html 안에 여기 저기 존재</li>\n</ul>\n</li>\n<li><p>CSS / JavaScript 코드 위치</p>\n<ul>\n<li>JavaScript 코드<ul>\n<li>body 태그 닫히기 전에 위치하는 것이 렌더링을 방해하지 않아도 좋고, </li>\n</ul>\n</li>\n<li>CSS<ul>\n<li>head 안에 위치해서 렌더링 처리 시에 브라우저가 더 빨리 참고할 수 있게 하는 것이 좋습니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"프린터 큐","date":"2018-05-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1966>\n\n## 풀이\n\n- queue에서 하나씩 dequeue하면서 우선순위가 더 큰 문서가 있는지 확인\n\n  - 이를 위해, temp queue를 생성\n\n- ex\n\n  - original : 1 2 3 4\n\n    - temp : 2 3 4 1 \n      - 우선순위 더 큰 문서가 있음\n\n  - original : 2 3 4 1\n\n    - temp : 3 4 1 2\n      - 우선순위 더 큰 문서가 있음\n\n  - original : 4 1 2 3\n\n    - temp : 1 2 3 4\n    - temp : 2 3 4 1\n    - temp : 3 4 1 2\n      - 우선순위 더 큰 문서가 없음\n      - original 에서 head remove\n\n  - original : 1 2 3\n\n    ....\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/print01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/print02.png)\n\n\n\n\n\n\n\n","source":"_posts/2018-05-04-프린터 큐.md","raw":"---\nlayout: post\ntitle:  \"프린터 큐\"\ndate:   2018-05-04\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1966>\n\n## 풀이\n\n- queue에서 하나씩 dequeue하면서 우선순위가 더 큰 문서가 있는지 확인\n\n  - 이를 위해, temp queue를 생성\n\n- ex\n\n  - original : 1 2 3 4\n\n    - temp : 2 3 4 1 \n      - 우선순위 더 큰 문서가 있음\n\n  - original : 2 3 4 1\n\n    - temp : 3 4 1 2\n      - 우선순위 더 큰 문서가 있음\n\n  - original : 4 1 2 3\n\n    - temp : 1 2 3 4\n    - temp : 2 3 4 1\n    - temp : 3 4 1 2\n      - 우선순위 더 큰 문서가 없음\n      - original 에서 head remove\n\n  - original : 1 2 3\n\n    ....\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/print01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/print02.png)\n\n\n\n\n\n\n\n","slug":"2018-05-04-프린터 큐","published":1,"updated":"2018-05-06T09:05:08.156Z","comments":1,"photos":[],"link":"","_id":"cjp6k65il00b731x75927mqpi","content":"<p><a href=\"https://www.acmicpc.net/problem/1966\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1966</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>queue에서 하나씩 dequeue하면서 우선순위가 더 큰 문서가 있는지 확인</p>\n<ul>\n<li>이를 위해, temp queue를 생성</li>\n</ul>\n</li>\n<li><p>ex</p>\n<ul>\n<li><p>original : 1 2 3 4</p>\n<ul>\n<li>temp : 2 3 4 1 <ul>\n<li>우선순위 더 큰 문서가 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>original : 2 3 4 1</p>\n<ul>\n<li>temp : 3 4 1 2<ul>\n<li>우선순위 더 큰 문서가 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>original : 4 1 2 3</p>\n<ul>\n<li>temp : 1 2 3 4</li>\n<li>temp : 2 3 4 1</li>\n<li>temp : 3 4 1 2<ul>\n<li>우선순위 더 큰 문서가 없음</li>\n<li>original 에서 head remove</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>original : 1 2 3</p>\n<p>….</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/print01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/print02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1966\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1966</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>queue에서 하나씩 dequeue하면서 우선순위가 더 큰 문서가 있는지 확인</p>\n<ul>\n<li>이를 위해, temp queue를 생성</li>\n</ul>\n</li>\n<li><p>ex</p>\n<ul>\n<li><p>original : 1 2 3 4</p>\n<ul>\n<li>temp : 2 3 4 1 <ul>\n<li>우선순위 더 큰 문서가 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>original : 2 3 4 1</p>\n<ul>\n<li>temp : 3 4 1 2<ul>\n<li>우선순위 더 큰 문서가 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>original : 4 1 2 3</p>\n<ul>\n<li>temp : 1 2 3 4</li>\n<li>temp : 2 3 4 1</li>\n<li>temp : 3 4 1 2<ul>\n<li>우선순위 더 큰 문서가 없음</li>\n<li>original 에서 head remove</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>original : 1 2 3</p>\n<p>….</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/print01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/print02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"CSS","date":"2018-05-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- CSS를 HTML안에 선언하는 방식은 크게 3가지\n\n  - inline은 별도의 우선순위를 갖지만, internal 과 external은 우선순위가 동등합니다. 따라서 겹치는 선언이 있을 경우 나중에 선언된 속성이 반영됩니다.\n\n  **1. inline**\n\n  HTML태그 안에다가 적용합니다.\n\n  다른 CSS파일에 적용한 것 보다 가장 먼저 적용합니다.\n\n  ```html\n  <p style=\"border:1px solid gray;color:red;font-size:2em;\">\n  ```\n\n  **2. internal**\n\n  style 태그로 지정합니다.\n\n  구조와 스타일이 섞이게 되므로 유지보수가 어렵습니다.\n\n  별도의 CSS파일을 관리하지 않아도 되며 서버에 CSS파일을 부르기 위해 별도의 브라우저가 요청을 보낼 필요가 없습니다.\n\n  ```\n  <head>\n  <style>\n  p  {\n    font-size : 2em;\n    border:1px solid gray;\n    color: red;\n  }\n  </style>\n  </head>\n  \n  <body>\n  <div>...</div>\n  </body>\n  ```\n\n  **3. external**\n\n  외부파일(.css)로 지정하는 방식입니다.\n\n  CSS 코드가 아주 짧지 않다면 가급적 이 방법으로 구현하는 것이 가장 좋습니다.\n\n  현업에서는 여러개의 CSS 파일로 분리하고 이를 합쳐서 서비스에서 사용하기도 합니다.\n\n  internal 코드와 같은 css코드를 구현하고, style.css와 같은 별도 파일로 만듭니다. \n\n  이후에 아래처럼 link태그로 추가하면 됩니다.\n\n  ```html\n  <html>\n  \t<head>\n  \t\t<link rel=\"stylesheet\" href=\"style.css\">\n  \t</head>\n  \t<body>\n  \t\t<div>\n  \t\t\t<p>\n  \t\t\t\t<ul>\n  \t\t\t\t\t<li></li>\n  \t\t\t\t\t<li></li>\n  \t\t\t\t\t<li></li>\n  \t\t\t\t\t<li></li>\n  \t\t\t\t</ul>\n  \t\t\t</p>\n  \t\t</div>\n  \t</body>\n  </html>\n  ```\n\n- 상속과 우선순위 결정\n\n  - 상속\n    - 상위에서 적용한 스타일은 하위에도 반영됩니다.\n    - 이로 인해 여러 단계로 중첩된 엘리먼트마다 매번 같은 색상과 글자 크기를 부여하지 않아도 됩니다.\n    - 하지만 모든 CSS 속성이 이런 특징을 갖게 되면, 몇 가지 문제가 생깁니다.\n    - 예를 들어 width 속성이 상속되면 하위 엘리먼트가 모든 같은 크기의 넓잇값을 가질 수 있습니다.\n    - 그래서 box-model이라고 불리는 속성들(width, height, margin, padding, border)과 같이 크기와 배치 관련된 속성들은 하위엘리먼트로 상속이 되지 않습니다.\n  - 우선 순위\n    - CSS는 여러가지 스타일정보를 기반으로 최종적으로 '경쟁'에 의해서 적절한 스타일이 반영된다\n    -  inline > internal = external\n    - cascading\n      -  id, class, 엘리먼트 순으로 우선순위를 가짐.\n    - 선언 방식에 따른 차이\n      - 같은 선택자(selector)라면 나중에 선언한 것이 반영됩니다.\n      - 선택자의 표현이 구체적인 것이 있다면 먼저 적용됩니다.\n        - body > span (O)\n        - span (X)\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","source":"_posts/2018-05-06-CSS.md","raw":"---\nlayout: post\ntitle:  \"CSS\"\ndate:   2018-05-05\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- CSS를 HTML안에 선언하는 방식은 크게 3가지\n\n  - inline은 별도의 우선순위를 갖지만, internal 과 external은 우선순위가 동등합니다. 따라서 겹치는 선언이 있을 경우 나중에 선언된 속성이 반영됩니다.\n\n  **1. inline**\n\n  HTML태그 안에다가 적용합니다.\n\n  다른 CSS파일에 적용한 것 보다 가장 먼저 적용합니다.\n\n  ```html\n  <p style=\"border:1px solid gray;color:red;font-size:2em;\">\n  ```\n\n  **2. internal**\n\n  style 태그로 지정합니다.\n\n  구조와 스타일이 섞이게 되므로 유지보수가 어렵습니다.\n\n  별도의 CSS파일을 관리하지 않아도 되며 서버에 CSS파일을 부르기 위해 별도의 브라우저가 요청을 보낼 필요가 없습니다.\n\n  ```\n  <head>\n  <style>\n  p  {\n    font-size : 2em;\n    border:1px solid gray;\n    color: red;\n  }\n  </style>\n  </head>\n  \n  <body>\n  <div>...</div>\n  </body>\n  ```\n\n  **3. external**\n\n  외부파일(.css)로 지정하는 방식입니다.\n\n  CSS 코드가 아주 짧지 않다면 가급적 이 방법으로 구현하는 것이 가장 좋습니다.\n\n  현업에서는 여러개의 CSS 파일로 분리하고 이를 합쳐서 서비스에서 사용하기도 합니다.\n\n  internal 코드와 같은 css코드를 구현하고, style.css와 같은 별도 파일로 만듭니다. \n\n  이후에 아래처럼 link태그로 추가하면 됩니다.\n\n  ```html\n  <html>\n  \t<head>\n  \t\t<link rel=\"stylesheet\" href=\"style.css\">\n  \t</head>\n  \t<body>\n  \t\t<div>\n  \t\t\t<p>\n  \t\t\t\t<ul>\n  \t\t\t\t\t<li></li>\n  \t\t\t\t\t<li></li>\n  \t\t\t\t\t<li></li>\n  \t\t\t\t\t<li></li>\n  \t\t\t\t</ul>\n  \t\t\t</p>\n  \t\t</div>\n  \t</body>\n  </html>\n  ```\n\n- 상속과 우선순위 결정\n\n  - 상속\n    - 상위에서 적용한 스타일은 하위에도 반영됩니다.\n    - 이로 인해 여러 단계로 중첩된 엘리먼트마다 매번 같은 색상과 글자 크기를 부여하지 않아도 됩니다.\n    - 하지만 모든 CSS 속성이 이런 특징을 갖게 되면, 몇 가지 문제가 생깁니다.\n    - 예를 들어 width 속성이 상속되면 하위 엘리먼트가 모든 같은 크기의 넓잇값을 가질 수 있습니다.\n    - 그래서 box-model이라고 불리는 속성들(width, height, margin, padding, border)과 같이 크기와 배치 관련된 속성들은 하위엘리먼트로 상속이 되지 않습니다.\n  - 우선 순위\n    - CSS는 여러가지 스타일정보를 기반으로 최종적으로 '경쟁'에 의해서 적절한 스타일이 반영된다\n    -  inline > internal = external\n    - cascading\n      -  id, class, 엘리먼트 순으로 우선순위를 가짐.\n    - 선언 방식에 따른 차이\n      - 같은 선택자(selector)라면 나중에 선언한 것이 반영됩니다.\n      - 선택자의 표현이 구체적인 것이 있다면 먼저 적용됩니다.\n        - body > span (O)\n        - span (X)\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","slug":"2018-05-06-CSS","published":1,"updated":"2018-05-06T12:55:21.079Z","comments":1,"photos":[],"link":"","_id":"cjp6k65im00b931x7oex5epx4","content":"<ul>\n<li><p>CSS를 HTML안에 선언하는 방식은 크게 3가지</p>\n<ul>\n<li>inline은 별도의 우선순위를 갖지만, internal 과 external은 우선순위가 동등합니다. 따라서 겹치는 선언이 있을 경우 나중에 선언된 속성이 반영됩니다.</li>\n</ul>\n<p><strong>1. inline</strong></p>\n<p>HTML태그 안에다가 적용합니다.</p>\n<p>다른 CSS파일에 적용한 것 보다 가장 먼저 적용합니다.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">\"border:1px solid gray;color:red;font-size:2em;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>2. internal</strong></p>\n<p>style 태그로 지정합니다.</p>\n<p>구조와 스타일이 섞이게 되므로 유지보수가 어렵습니다.</p>\n<p>별도의 CSS파일을 관리하지 않아도 되며 서버에 CSS파일을 부르기 위해 별도의 브라우저가 요청을 보낼 필요가 없습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">p  &#123;</span><br><span class=\"line\">  font-size : 2em;</span><br><span class=\"line\">  border:1px solid gray;</span><br><span class=\"line\">  color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div&gt;...&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>3. external</strong></p>\n<p>외부파일(.css)로 지정하는 방식입니다.</p>\n<p>CSS 코드가 아주 짧지 않다면 가급적 이 방법으로 구현하는 것이 가장 좋습니다.</p>\n<p>현업에서는 여러개의 CSS 파일로 분리하고 이를 합쳐서 서비스에서 사용하기도 합니다.</p>\n<p>internal 코드와 같은 css코드를 구현하고, style.css와 같은 별도 파일로 만듭니다. </p>\n<p>이후에 아래처럼 link태그로 추가하면 됩니다.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"style.css\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>상속과 우선순위 결정</p>\n<ul>\n<li>상속<ul>\n<li>상위에서 적용한 스타일은 하위에도 반영됩니다.</li>\n<li>이로 인해 여러 단계로 중첩된 엘리먼트마다 매번 같은 색상과 글자 크기를 부여하지 않아도 됩니다.</li>\n<li>하지만 모든 CSS 속성이 이런 특징을 갖게 되면, 몇 가지 문제가 생깁니다.</li>\n<li>예를 들어 width 속성이 상속되면 하위 엘리먼트가 모든 같은 크기의 넓잇값을 가질 수 있습니다.</li>\n<li>그래서 box-model이라고 불리는 속성들(width, height, margin, padding, border)과 같이 크기와 배치 관련된 속성들은 하위엘리먼트로 상속이 되지 않습니다.</li>\n</ul>\n</li>\n<li>우선 순위<ul>\n<li>CSS는 여러가지 스타일정보를 기반으로 최종적으로 ‘경쟁’에 의해서 적절한 스타일이 반영된다</li>\n<li>inline &gt; internal = external</li>\n<li>cascading<ul>\n<li>id, class, 엘리먼트 순으로 우선순위를 가짐.</li>\n</ul>\n</li>\n<li>선언 방식에 따른 차이<ul>\n<li>같은 선택자(selector)라면 나중에 선언한 것이 반영됩니다.</li>\n<li>선택자의 표현이 구체적인 것이 있다면 먼저 적용됩니다.<ul>\n<li>body &gt; span (O)</li>\n<li>span (X)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>CSS를 HTML안에 선언하는 방식은 크게 3가지</p>\n<ul>\n<li>inline은 별도의 우선순위를 갖지만, internal 과 external은 우선순위가 동등합니다. 따라서 겹치는 선언이 있을 경우 나중에 선언된 속성이 반영됩니다.</li>\n</ul>\n<p><strong>1. inline</strong></p>\n<p>HTML태그 안에다가 적용합니다.</p>\n<p>다른 CSS파일에 적용한 것 보다 가장 먼저 적용합니다.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">\"border:1px solid gray;color:red;font-size:2em;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>2. internal</strong></p>\n<p>style 태그로 지정합니다.</p>\n<p>구조와 스타일이 섞이게 되므로 유지보수가 어렵습니다.</p>\n<p>별도의 CSS파일을 관리하지 않아도 되며 서버에 CSS파일을 부르기 위해 별도의 브라우저가 요청을 보낼 필요가 없습니다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">p  &#123;</span><br><span class=\"line\">  font-size : 2em;</span><br><span class=\"line\">  border:1px solid gray;</span><br><span class=\"line\">  color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div&gt;...&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>3. external</strong></p>\n<p>외부파일(.css)로 지정하는 방식입니다.</p>\n<p>CSS 코드가 아주 짧지 않다면 가급적 이 방법으로 구현하는 것이 가장 좋습니다.</p>\n<p>현업에서는 여러개의 CSS 파일로 분리하고 이를 합쳐서 서비스에서 사용하기도 합니다.</p>\n<p>internal 코드와 같은 css코드를 구현하고, style.css와 같은 별도 파일로 만듭니다. </p>\n<p>이후에 아래처럼 link태그로 추가하면 됩니다.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"style.css\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>상속과 우선순위 결정</p>\n<ul>\n<li>상속<ul>\n<li>상위에서 적용한 스타일은 하위에도 반영됩니다.</li>\n<li>이로 인해 여러 단계로 중첩된 엘리먼트마다 매번 같은 색상과 글자 크기를 부여하지 않아도 됩니다.</li>\n<li>하지만 모든 CSS 속성이 이런 특징을 갖게 되면, 몇 가지 문제가 생깁니다.</li>\n<li>예를 들어 width 속성이 상속되면 하위 엘리먼트가 모든 같은 크기의 넓잇값을 가질 수 있습니다.</li>\n<li>그래서 box-model이라고 불리는 속성들(width, height, margin, padding, border)과 같이 크기와 배치 관련된 속성들은 하위엘리먼트로 상속이 되지 않습니다.</li>\n</ul>\n</li>\n<li>우선 순위<ul>\n<li>CSS는 여러가지 스타일정보를 기반으로 최종적으로 ‘경쟁’에 의해서 적절한 스타일이 반영된다</li>\n<li>inline &gt; internal = external</li>\n<li>cascading<ul>\n<li>id, class, 엘리먼트 순으로 우선순위를 가짐.</li>\n</ul>\n</li>\n<li>선언 방식에 따른 차이<ul>\n<li>같은 선택자(selector)라면 나중에 선언한 것이 반영됩니다.</li>\n<li>선택자의 표현이 구체적인 것이 있다면 먼저 적용됩니다.<ul>\n<li>body &gt; span (O)</li>\n<li>span (X)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"was","date":"2018-05-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- MiddleWare  \n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/middleW.png)\n\n  - 클라이언트 쪽에 비즈니스 로직이 많을 경우, \n  - 클라이언트 관리(배포 등)로 인해 비용이 많이 발생하는 문제가 있습니다.\n  - 비즈니스 로직을 클라이언트와 DBMS사이의 미들웨어 서버에서 동작하도록 함으로써 \n  - 클라이언트는 입력과 출력만 담당하도록 합니다.\n\n- WAS\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/wasimge.png)\n\n  -  일종의 미들웨어로 웹 클라이언트(보통 웹 브라우저)의 요청 중 웹 애플리케이션이 동작하도록 지원하는 목적\n\n  - 프로그램 실행환경과 데이터베이스 접속 기능 제공\n  - 여러개의 트렌젝션(논리적인 작업 단위)을 관리\n  - 업무를 처리하는 비지니스 로직 처리\n\n- 웹서버 vs WAS \n  - 웹서버 : 정적인 컨텐츠를 웹 브라우저에게 전달\n  - WAS : 동적 결과를 웹 브라우저에게 전달\n  - WAS도 보통 자체적으로 웹 서버 기능을 내장하고 있습니다.\n  - 현재는 WAS가 가지고 있는 웹 서버도 정적인 콘텐츠를 처리하는 데 있어서 성능상 큰 차이가 없습니다.\n  - 규모가 커질수록 웹 서버와 WAS를 분리합니다.\n  - 자원 이용의 효율성 및 장애 극복, 배포 및 유지보수의 편의성을 위해 웹서버와 WAS를 대체로 분리합니다.\n- 웹 서버가 왜 WAS 앞단에서 동작?\n  - 웹 서버는 WAS보다 단단\n  - 대용량 어플리케이션은 서버의 수가 여러대일 수 있어\n  - 와스에서 동작하도록 만든 프로그램이 오작동이 발생해서 \n  - 와스 자체에 문제가 발생할수 있어\n  - 이 경우에,\n  - 와스를 재시작 해야할 수 있어\n  - 이런 경우 웹서버가 먼저, 해당 와스를 이용하지 못하도록 해\n  - 그리고 와스를 재시작한다면\n  - 사용자는 와스의 문제가 발생한지 모를 수 있어\n  - 이러한 처리를 '장애 극복 기능' 이라고 함\n\n\n\n\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","source":"_posts/2018-05-05-was.md","raw":"---\nlayout: post\ntitle:  \"was\"\ndate:   2018-05-05\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- MiddleWare  \n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/middleW.png)\n\n  - 클라이언트 쪽에 비즈니스 로직이 많을 경우, \n  - 클라이언트 관리(배포 등)로 인해 비용이 많이 발생하는 문제가 있습니다.\n  - 비즈니스 로직을 클라이언트와 DBMS사이의 미들웨어 서버에서 동작하도록 함으로써 \n  - 클라이언트는 입력과 출력만 담당하도록 합니다.\n\n- WAS\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/wasimge.png)\n\n  -  일종의 미들웨어로 웹 클라이언트(보통 웹 브라우저)의 요청 중 웹 애플리케이션이 동작하도록 지원하는 목적\n\n  - 프로그램 실행환경과 데이터베이스 접속 기능 제공\n  - 여러개의 트렌젝션(논리적인 작업 단위)을 관리\n  - 업무를 처리하는 비지니스 로직 처리\n\n- 웹서버 vs WAS \n  - 웹서버 : 정적인 컨텐츠를 웹 브라우저에게 전달\n  - WAS : 동적 결과를 웹 브라우저에게 전달\n  - WAS도 보통 자체적으로 웹 서버 기능을 내장하고 있습니다.\n  - 현재는 WAS가 가지고 있는 웹 서버도 정적인 콘텐츠를 처리하는 데 있어서 성능상 큰 차이가 없습니다.\n  - 규모가 커질수록 웹 서버와 WAS를 분리합니다.\n  - 자원 이용의 효율성 및 장애 극복, 배포 및 유지보수의 편의성을 위해 웹서버와 WAS를 대체로 분리합니다.\n- 웹 서버가 왜 WAS 앞단에서 동작?\n  - 웹 서버는 WAS보다 단단\n  - 대용량 어플리케이션은 서버의 수가 여러대일 수 있어\n  - 와스에서 동작하도록 만든 프로그램이 오작동이 발생해서 \n  - 와스 자체에 문제가 발생할수 있어\n  - 이 경우에,\n  - 와스를 재시작 해야할 수 있어\n  - 이런 경우 웹서버가 먼저, 해당 와스를 이용하지 못하도록 해\n  - 그리고 와스를 재시작한다면\n  - 사용자는 와스의 문제가 발생한지 모를 수 있어\n  - 이러한 처리를 '장애 극복 기능' 이라고 함\n\n\n\n\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","slug":"2018-05-05-was","published":1,"updated":"2018-05-05T15:03:13.574Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ip00bb31x77wwqsqje","content":"<ul>\n<li><p>MiddleWare  </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/middleW.png\" alt=\"img\"></p>\n<ul>\n<li>클라이언트 쪽에 비즈니스 로직이 많을 경우, </li>\n<li>클라이언트 관리(배포 등)로 인해 비용이 많이 발생하는 문제가 있습니다.</li>\n<li>비즈니스 로직을 클라이언트와 DBMS사이의 미들웨어 서버에서 동작하도록 함으로써 </li>\n<li>클라이언트는 입력과 출력만 담당하도록 합니다.</li>\n</ul>\n</li>\n<li><p>WAS</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/wasimge.png\" alt=\"img\"></p>\n<ul>\n<li><p>일종의 미들웨어로 웹 클라이언트(보통 웹 브라우저)의 요청 중 웹 애플리케이션이 동작하도록 지원하는 목적</p>\n</li>\n<li><p>프로그램 실행환경과 데이터베이스 접속 기능 제공</p>\n</li>\n<li>여러개의 트렌젝션(논리적인 작업 단위)을 관리</li>\n<li>업무를 처리하는 비지니스 로직 처리</li>\n</ul>\n</li>\n<li><p>웹서버 vs WAS </p>\n<ul>\n<li>웹서버 : 정적인 컨텐츠를 웹 브라우저에게 전달</li>\n<li>WAS : 동적 결과를 웹 브라우저에게 전달</li>\n<li>WAS도 보통 자체적으로 웹 서버 기능을 내장하고 있습니다.</li>\n<li>현재는 WAS가 가지고 있는 웹 서버도 정적인 콘텐츠를 처리하는 데 있어서 성능상 큰 차이가 없습니다.</li>\n<li>규모가 커질수록 웹 서버와 WAS를 분리합니다.</li>\n<li>자원 이용의 효율성 및 장애 극복, 배포 및 유지보수의 편의성을 위해 웹서버와 WAS를 대체로 분리합니다.</li>\n</ul>\n</li>\n<li>웹 서버가 왜 WAS 앞단에서 동작?<ul>\n<li>웹 서버는 WAS보다 단단</li>\n<li>대용량 어플리케이션은 서버의 수가 여러대일 수 있어</li>\n<li>와스에서 동작하도록 만든 프로그램이 오작동이 발생해서 </li>\n<li>와스 자체에 문제가 발생할수 있어</li>\n<li>이 경우에,</li>\n<li>와스를 재시작 해야할 수 있어</li>\n<li>이런 경우 웹서버가 먼저, 해당 와스를 이용하지 못하도록 해</li>\n<li>그리고 와스를 재시작한다면</li>\n<li>사용자는 와스의 문제가 발생한지 모를 수 있어</li>\n<li>이러한 처리를 ‘장애 극복 기능’ 이라고 함</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>MiddleWare  </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/middleW.png\" alt=\"img\"></p>\n<ul>\n<li>클라이언트 쪽에 비즈니스 로직이 많을 경우, </li>\n<li>클라이언트 관리(배포 등)로 인해 비용이 많이 발생하는 문제가 있습니다.</li>\n<li>비즈니스 로직을 클라이언트와 DBMS사이의 미들웨어 서버에서 동작하도록 함으로써 </li>\n<li>클라이언트는 입력과 출력만 담당하도록 합니다.</li>\n</ul>\n</li>\n<li><p>WAS</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/wasimge.png\" alt=\"img\"></p>\n<ul>\n<li><p>일종의 미들웨어로 웹 클라이언트(보통 웹 브라우저)의 요청 중 웹 애플리케이션이 동작하도록 지원하는 목적</p>\n</li>\n<li><p>프로그램 실행환경과 데이터베이스 접속 기능 제공</p>\n</li>\n<li>여러개의 트렌젝션(논리적인 작업 단위)을 관리</li>\n<li>업무를 처리하는 비지니스 로직 처리</li>\n</ul>\n</li>\n<li><p>웹서버 vs WAS </p>\n<ul>\n<li>웹서버 : 정적인 컨텐츠를 웹 브라우저에게 전달</li>\n<li>WAS : 동적 결과를 웹 브라우저에게 전달</li>\n<li>WAS도 보통 자체적으로 웹 서버 기능을 내장하고 있습니다.</li>\n<li>현재는 WAS가 가지고 있는 웹 서버도 정적인 콘텐츠를 처리하는 데 있어서 성능상 큰 차이가 없습니다.</li>\n<li>규모가 커질수록 웹 서버와 WAS를 분리합니다.</li>\n<li>자원 이용의 효율성 및 장애 극복, 배포 및 유지보수의 편의성을 위해 웹서버와 WAS를 대체로 분리합니다.</li>\n</ul>\n</li>\n<li>웹 서버가 왜 WAS 앞단에서 동작?<ul>\n<li>웹 서버는 WAS보다 단단</li>\n<li>대용량 어플리케이션은 서버의 수가 여러대일 수 있어</li>\n<li>와스에서 동작하도록 만든 프로그램이 오작동이 발생해서 </li>\n<li>와스 자체에 문제가 발생할수 있어</li>\n<li>이 경우에,</li>\n<li>와스를 재시작 해야할 수 있어</li>\n<li>이런 경우 웹서버가 먼저, 해당 와스를 이용하지 못하도록 해</li>\n<li>그리고 와스를 재시작한다면</li>\n<li>사용자는 와스의 문제가 발생한지 모를 수 있어</li>\n<li>이러한 처리를 ‘장애 극복 기능’ 이라고 함</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"웹 서버","date":"2018-05-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- 웹 서버란\n  - 웹 서버는 소프트웨어(Software)를 보통 말하지만, 웹 서버 소프트웨어가 동작하는 컴퓨터를 말합니다.\n  - 웹 서버의 가장 중요한 기능은 클라이언트(Client)가 요청하는 HTML 문서나 각종 리소스(Resource)를 전달하는 것입니다.\n    - 클라이언트 : 웹 브라우저, 웹 크롤러(네이버나 구글같은 검색 사이트가 다른 웹 사이트 정보를 읽어갈때 사용하는 소프트웨어)\n      - HTTP에 맞게 서버에게 리소스 요쳥\n  - 웹 브라우저나 웹 크롤러가 요청하는 리소스는 컴퓨터에 저장된 정적(static)인 데이터이거나 동적인 결과가 될 수 있습니다.\n    - 정적 데이터 : 이미지 , HTML, CSS, JavaScript (컴퓨터에 저장된 파일들)\n    - 동적 데이터 : 웹 서버에 의해 실행되는, 프로그래밍을 통해 만들어진 결과\n- 웹 서버 소프트웨어 종류\n  - Apache, Nginx, Microsoft, Google 웹 서버\n    - Apache웹 서버\n      - Apache Software Foundation에서 개발한 웹서버로 오픈소스 소프트웨어(Open-source Software)이며, 거의 대부분 운영체제에서 설치 및 사용을 할 수 있습니다.\n    - Nginx \n      - 차세대 웹서버로 불리며 더 적은 자원으로 더 빠르게 데이터를 서비스하는 것을 목적으로 만들어진 서버이며 Apache웹 서버와 마찬가지로 오픈소스 소프트웨어입니다.\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","source":"_posts/2018-05-05- 웹 서버.md","raw":"---\nlayout: post\ntitle:  \"웹 서버\"\ndate:   2018-05-05\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- 웹 서버란\n  - 웹 서버는 소프트웨어(Software)를 보통 말하지만, 웹 서버 소프트웨어가 동작하는 컴퓨터를 말합니다.\n  - 웹 서버의 가장 중요한 기능은 클라이언트(Client)가 요청하는 HTML 문서나 각종 리소스(Resource)를 전달하는 것입니다.\n    - 클라이언트 : 웹 브라우저, 웹 크롤러(네이버나 구글같은 검색 사이트가 다른 웹 사이트 정보를 읽어갈때 사용하는 소프트웨어)\n      - HTTP에 맞게 서버에게 리소스 요쳥\n  - 웹 브라우저나 웹 크롤러가 요청하는 리소스는 컴퓨터에 저장된 정적(static)인 데이터이거나 동적인 결과가 될 수 있습니다.\n    - 정적 데이터 : 이미지 , HTML, CSS, JavaScript (컴퓨터에 저장된 파일들)\n    - 동적 데이터 : 웹 서버에 의해 실행되는, 프로그래밍을 통해 만들어진 결과\n- 웹 서버 소프트웨어 종류\n  - Apache, Nginx, Microsoft, Google 웹 서버\n    - Apache웹 서버\n      - Apache Software Foundation에서 개발한 웹서버로 오픈소스 소프트웨어(Open-source Software)이며, 거의 대부분 운영체제에서 설치 및 사용을 할 수 있습니다.\n    - Nginx \n      - 차세대 웹서버로 불리며 더 적은 자원으로 더 빠르게 데이터를 서비스하는 것을 목적으로 만들어진 서버이며 Apache웹 서버와 마찬가지로 오픈소스 소프트웨어입니다.\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n\n\n\n","slug":"2018-05-05- 웹 서버","published":1,"updated":"2018-05-07T08:02:11.255Z","comments":1,"photos":[],"link":"","_id":"cjp6k65it00bd31x7awn4nbpp","content":"<ul>\n<li>웹 서버란<ul>\n<li>웹 서버는 소프트웨어(Software)를 보통 말하지만, 웹 서버 소프트웨어가 동작하는 컴퓨터를 말합니다.</li>\n<li>웹 서버의 가장 중요한 기능은 클라이언트(Client)가 요청하는 HTML 문서나 각종 리소스(Resource)를 전달하는 것입니다.<ul>\n<li>클라이언트 : 웹 브라우저, 웹 크롤러(네이버나 구글같은 검색 사이트가 다른 웹 사이트 정보를 읽어갈때 사용하는 소프트웨어)<ul>\n<li>HTTP에 맞게 서버에게 리소스 요쳥</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>웹 브라우저나 웹 크롤러가 요청하는 리소스는 컴퓨터에 저장된 정적(static)인 데이터이거나 동적인 결과가 될 수 있습니다.<ul>\n<li>정적 데이터 : 이미지 , HTML, CSS, JavaScript (컴퓨터에 저장된 파일들)</li>\n<li>동적 데이터 : 웹 서버에 의해 실행되는, 프로그래밍을 통해 만들어진 결과</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>웹 서버 소프트웨어 종류<ul>\n<li>Apache, Nginx, Microsoft, Google 웹 서버<ul>\n<li>Apache웹 서버<ul>\n<li>Apache Software Foundation에서 개발한 웹서버로 오픈소스 소프트웨어(Open-source Software)이며, 거의 대부분 운영체제에서 설치 및 사용을 할 수 있습니다.</li>\n</ul>\n</li>\n<li>Nginx <ul>\n<li>차세대 웹서버로 불리며 더 적은 자원으로 더 빠르게 데이터를 서비스하는 것을 목적으로 만들어진 서버이며 Apache웹 서버와 마찬가지로 오픈소스 소프트웨어입니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>웹 서버란<ul>\n<li>웹 서버는 소프트웨어(Software)를 보통 말하지만, 웹 서버 소프트웨어가 동작하는 컴퓨터를 말합니다.</li>\n<li>웹 서버의 가장 중요한 기능은 클라이언트(Client)가 요청하는 HTML 문서나 각종 리소스(Resource)를 전달하는 것입니다.<ul>\n<li>클라이언트 : 웹 브라우저, 웹 크롤러(네이버나 구글같은 검색 사이트가 다른 웹 사이트 정보를 읽어갈때 사용하는 소프트웨어)<ul>\n<li>HTTP에 맞게 서버에게 리소스 요쳥</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>웹 브라우저나 웹 크롤러가 요청하는 리소스는 컴퓨터에 저장된 정적(static)인 데이터이거나 동적인 결과가 될 수 있습니다.<ul>\n<li>정적 데이터 : 이미지 , HTML, CSS, JavaScript (컴퓨터에 저장된 파일들)</li>\n<li>동적 데이터 : 웹 서버에 의해 실행되는, 프로그래밍을 통해 만들어진 결과</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>웹 서버 소프트웨어 종류<ul>\n<li>Apache, Nginx, Microsoft, Google 웹 서버<ul>\n<li>Apache웹 서버<ul>\n<li>Apache Software Foundation에서 개발한 웹서버로 오픈소스 소프트웨어(Open-source Software)이며, 거의 대부분 운영체제에서 설치 및 사용을 할 수 있습니다.</li>\n</ul>\n</li>\n<li>Nginx <ul>\n<li>차세대 웹서버로 불리며 더 적은 자원으로 더 빠르게 데이터를 서비스하는 것을 목적으로 만들어진 서버이며 Apache웹 서버와 마찬가지로 오픈소스 소프트웨어입니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Spring IoC/DI 컨테이너","date":"2018-05-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- 컨테이너\n  - 인스턴스의 생명 주기를 관리\n    - Servlet을 실행해주는 WAS는 Servlet 컨테이너를 가지고 있다고 말합니다.\n    - WAS는 웹 브라우저로부터 서블릿 URL에 해당하는 요청을 받으면, 서블릿을 메모리에 올린 후 실행합니다.\n    - 개발자가 서블릿 클래스를 작성했지만, 실제로 메모리에 올리고 실행하는 것은 WAS가 가지고 있는 Servlet컨테이너입니다.\n    - Servlet컨테이너는 동일한 서블릿에 해당하는 요청을 받으면, 또 메모리에 올리지 않고 기존에 메모리에 올라간 서블릿을 실행하여 그 결과를 웹 브라우저에게 전달합니다.\n\n- IoC (Inversion of Control)\n\n  - 예를 들어 서블릿 클래스는 개발자가 만들지만, \n  - 그 서블릿의 메소드를 알맞게 호출하는 것은 WAS입니다.\n  - 이렇게 개발자가 만든 어떤 클래스나 메소드를 다른 프로그램이 대신 실행해주는 것을 제어의 역전이라고 합니다.\n\n- DI(Dependency Injection)\n\n  - DI는 클래스 사이의 의존 관계를 빈(Bean) 설정 정보를 바탕으로 컨테이너가 자동으로 연결해주는 것을 말합니다.\n\n- DI가 적용 안된 예\n\n  - 개발자가 직접 인스턴스를 생성합니다.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/di01.png)\n\n- Spring 에서 DI가 적용된 예\n\n  - 엔진 type의 v5변수에 아직 인스턴스가 할당되지 않았습니다.\n\n    컨테이너가 v5변수에 인스턴스를 할당해주게 됩니다.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/di02.png)\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","source":"_posts/2018-05-06-Spring IoC:DI 컨테이너.md","raw":"---\nlayout: post\ntitle:  \"Spring IoC/DI 컨테이너\"\ndate:   2018-05-06\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- 컨테이너\n  - 인스턴스의 생명 주기를 관리\n    - Servlet을 실행해주는 WAS는 Servlet 컨테이너를 가지고 있다고 말합니다.\n    - WAS는 웹 브라우저로부터 서블릿 URL에 해당하는 요청을 받으면, 서블릿을 메모리에 올린 후 실행합니다.\n    - 개발자가 서블릿 클래스를 작성했지만, 실제로 메모리에 올리고 실행하는 것은 WAS가 가지고 있는 Servlet컨테이너입니다.\n    - Servlet컨테이너는 동일한 서블릿에 해당하는 요청을 받으면, 또 메모리에 올리지 않고 기존에 메모리에 올라간 서블릿을 실행하여 그 결과를 웹 브라우저에게 전달합니다.\n\n- IoC (Inversion of Control)\n\n  - 예를 들어 서블릿 클래스는 개발자가 만들지만, \n  - 그 서블릿의 메소드를 알맞게 호출하는 것은 WAS입니다.\n  - 이렇게 개발자가 만든 어떤 클래스나 메소드를 다른 프로그램이 대신 실행해주는 것을 제어의 역전이라고 합니다.\n\n- DI(Dependency Injection)\n\n  - DI는 클래스 사이의 의존 관계를 빈(Bean) 설정 정보를 바탕으로 컨테이너가 자동으로 연결해주는 것을 말합니다.\n\n- DI가 적용 안된 예\n\n  - 개발자가 직접 인스턴스를 생성합니다.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/di01.png)\n\n- Spring 에서 DI가 적용된 예\n\n  - 엔진 type의 v5변수에 아직 인스턴스가 할당되지 않았습니다.\n\n    컨테이너가 v5변수에 인스턴스를 할당해주게 됩니다.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/di02.png)\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","slug":"2018-05-06-Spring IoC:DI 컨테이너","published":1,"updated":"2018-05-06T13:42:44.231Z","comments":1,"photos":[],"link":"","_id":"cjp6k65iv00bf31x7wsabqdoo","content":"<ul>\n<li><p>컨테이너</p>\n<ul>\n<li>인스턴스의 생명 주기를 관리<ul>\n<li>Servlet을 실행해주는 WAS는 Servlet 컨테이너를 가지고 있다고 말합니다.</li>\n<li>WAS는 웹 브라우저로부터 서블릿 URL에 해당하는 요청을 받으면, 서블릿을 메모리에 올린 후 실행합니다.</li>\n<li>개발자가 서블릿 클래스를 작성했지만, 실제로 메모리에 올리고 실행하는 것은 WAS가 가지고 있는 Servlet컨테이너입니다.</li>\n<li>Servlet컨테이너는 동일한 서블릿에 해당하는 요청을 받으면, 또 메모리에 올리지 않고 기존에 메모리에 올라간 서블릿을 실행하여 그 결과를 웹 브라우저에게 전달합니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>IoC (Inversion of Control)</p>\n<ul>\n<li>예를 들어 서블릿 클래스는 개발자가 만들지만, </li>\n<li>그 서블릿의 메소드를 알맞게 호출하는 것은 WAS입니다.</li>\n<li>이렇게 개발자가 만든 어떤 클래스나 메소드를 다른 프로그램이 대신 실행해주는 것을 제어의 역전이라고 합니다.</li>\n</ul>\n</li>\n<li><p>DI(Dependency Injection)</p>\n<ul>\n<li>DI는 클래스 사이의 의존 관계를 빈(Bean) 설정 정보를 바탕으로 컨테이너가 자동으로 연결해주는 것을 말합니다.</li>\n</ul>\n</li>\n<li><p>DI가 적용 안된 예</p>\n<ul>\n<li>개발자가 직접 인스턴스를 생성합니다.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/di01.png\" alt=\"img\"></p>\n</li>\n<li><p>Spring 에서 DI가 적용된 예</p>\n<ul>\n<li><p>엔진 type의 v5변수에 아직 인스턴스가 할당되지 않았습니다.</p>\n<p>컨테이너가 v5변수에 인스턴스를 할당해주게 됩니다.</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/di02.png\" alt=\"img\"></p>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>컨테이너</p>\n<ul>\n<li>인스턴스의 생명 주기를 관리<ul>\n<li>Servlet을 실행해주는 WAS는 Servlet 컨테이너를 가지고 있다고 말합니다.</li>\n<li>WAS는 웹 브라우저로부터 서블릿 URL에 해당하는 요청을 받으면, 서블릿을 메모리에 올린 후 실행합니다.</li>\n<li>개발자가 서블릿 클래스를 작성했지만, 실제로 메모리에 올리고 실행하는 것은 WAS가 가지고 있는 Servlet컨테이너입니다.</li>\n<li>Servlet컨테이너는 동일한 서블릿에 해당하는 요청을 받으면, 또 메모리에 올리지 않고 기존에 메모리에 올라간 서블릿을 실행하여 그 결과를 웹 브라우저에게 전달합니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>IoC (Inversion of Control)</p>\n<ul>\n<li>예를 들어 서블릿 클래스는 개발자가 만들지만, </li>\n<li>그 서블릿의 메소드를 알맞게 호출하는 것은 WAS입니다.</li>\n<li>이렇게 개발자가 만든 어떤 클래스나 메소드를 다른 프로그램이 대신 실행해주는 것을 제어의 역전이라고 합니다.</li>\n</ul>\n</li>\n<li><p>DI(Dependency Injection)</p>\n<ul>\n<li>DI는 클래스 사이의 의존 관계를 빈(Bean) 설정 정보를 바탕으로 컨테이너가 자동으로 연결해주는 것을 말합니다.</li>\n</ul>\n</li>\n<li><p>DI가 적용 안된 예</p>\n<ul>\n<li>개발자가 직접 인스턴스를 생성합니다.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/di01.png\" alt=\"img\"></p>\n</li>\n<li><p>Spring 에서 DI가 적용된 예</p>\n<ul>\n<li><p>엔진 type의 v5변수에 아직 인스턴스가 할당되지 않았습니다.</p>\n<p>컨테이너가 v5변수에 인스턴스를 할당해주게 됩니다.</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/di02.png\" alt=\"img\"></p>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"HttpServletRequest, HttpServletResponse","date":"2018-05-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- 요청과 응답\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/http.png)\n\n  - WAS는 웹 브라우저로부터 Servlet요청을 받으면,\n    - 요청할 때 가지고 있는 정보를 HttpServletRequest객체를 생성하여 저장합니다.\n    - 웹 브라우저에게 응답을 보낼 때 사용하기 위하여 HttpServletResponse객체를 생성합니다.\n    - 생성된 HttpServletRequest, HttpServletResponse 객체를 서블릿에게 전달합니다.\n\n- HttpServletRequest\n\n  - http프로토콜의 request정보를 서블릿에게 전달하기 위한 목적으로 사용합니다.\n  - 헤더정보, 파라미터, 쿠키, URI, URL 등의 정보를 읽어 들이는 메소드를 가지고 있습니다.\n  - Body의 Stream을 읽어 들이는 메소드를 가지고 있습니다.\n\n- HttpServletResponse\n\n  - WAS는 어떤 클라이언트가 요청을 보냈는지 알고 있고, 해당 클라이언트에게 응답을 보내기 위한 HttpServleResponse객체를 생성하여 서블릿에게 전달합니다.\n  - 서블릿은 해당 객체를 이용하여 content type, 응답코드, 응답 메시지등을 전송합니다.\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","source":"_posts/2018-05-07-HttpServletRequest, HttpServletResponse .md","raw":"---\nlayout: post\ntitle:  \"HttpServletRequest, HttpServletResponse\"\ndate:   2018-05-07\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- 요청과 응답\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/http.png)\n\n  - WAS는 웹 브라우저로부터 Servlet요청을 받으면,\n    - 요청할 때 가지고 있는 정보를 HttpServletRequest객체를 생성하여 저장합니다.\n    - 웹 브라우저에게 응답을 보낼 때 사용하기 위하여 HttpServletResponse객체를 생성합니다.\n    - 생성된 HttpServletRequest, HttpServletResponse 객체를 서블릿에게 전달합니다.\n\n- HttpServletRequest\n\n  - http프로토콜의 request정보를 서블릿에게 전달하기 위한 목적으로 사용합니다.\n  - 헤더정보, 파라미터, 쿠키, URI, URL 등의 정보를 읽어 들이는 메소드를 가지고 있습니다.\n  - Body의 Stream을 읽어 들이는 메소드를 가지고 있습니다.\n\n- HttpServletResponse\n\n  - WAS는 어떤 클라이언트가 요청을 보냈는지 알고 있고, 해당 클라이언트에게 응답을 보내기 위한 HttpServleResponse객체를 생성하여 서블릿에게 전달합니다.\n  - 서블릿은 해당 객체를 이용하여 content type, 응답코드, 응답 메시지등을 전송합니다.\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","slug":"2018-05-07-HttpServletRequest, HttpServletResponse ","published":1,"updated":"2018-05-07T08:07:04.836Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ix00bh31x7g93166bv","content":"<ul>\n<li><p>요청과 응답</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/http.png\" alt=\"img\"></p>\n<ul>\n<li>WAS는 웹 브라우저로부터 Servlet요청을 받으면,<ul>\n<li>요청할 때 가지고 있는 정보를 HttpServletRequest객체를 생성하여 저장합니다.</li>\n<li>웹 브라우저에게 응답을 보낼 때 사용하기 위하여 HttpServletResponse객체를 생성합니다.</li>\n<li>생성된 HttpServletRequest, HttpServletResponse 객체를 서블릿에게 전달합니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>HttpServletRequest</p>\n<ul>\n<li>http프로토콜의 request정보를 서블릿에게 전달하기 위한 목적으로 사용합니다.</li>\n<li>헤더정보, 파라미터, 쿠키, URI, URL 등의 정보를 읽어 들이는 메소드를 가지고 있습니다.</li>\n<li>Body의 Stream을 읽어 들이는 메소드를 가지고 있습니다.</li>\n</ul>\n</li>\n<li><p>HttpServletResponse</p>\n<ul>\n<li>WAS는 어떤 클라이언트가 요청을 보냈는지 알고 있고, 해당 클라이언트에게 응답을 보내기 위한 HttpServleResponse객체를 생성하여 서블릿에게 전달합니다.</li>\n<li>서블릿은 해당 객체를 이용하여 content type, 응답코드, 응답 메시지등을 전송합니다.</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>요청과 응답</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/http.png\" alt=\"img\"></p>\n<ul>\n<li>WAS는 웹 브라우저로부터 Servlet요청을 받으면,<ul>\n<li>요청할 때 가지고 있는 정보를 HttpServletRequest객체를 생성하여 저장합니다.</li>\n<li>웹 브라우저에게 응답을 보낼 때 사용하기 위하여 HttpServletResponse객체를 생성합니다.</li>\n<li>생성된 HttpServletRequest, HttpServletResponse 객체를 서블릿에게 전달합니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>HttpServletRequest</p>\n<ul>\n<li>http프로토콜의 request정보를 서블릿에게 전달하기 위한 목적으로 사용합니다.</li>\n<li>헤더정보, 파라미터, 쿠키, URI, URL 등의 정보를 읽어 들이는 메소드를 가지고 있습니다.</li>\n<li>Body의 Stream을 읽어 들이는 메소드를 가지고 있습니다.</li>\n</ul>\n</li>\n<li><p>HttpServletResponse</p>\n<ul>\n<li>WAS는 어떤 클라이언트가 요청을 보냈는지 알고 있고, 해당 클라이언트에게 응답을 보내기 위한 HttpServleResponse객체를 생성하여 서블릿에게 전달합니다.</li>\n<li>서블릿은 해당 객체를 이용하여 content type, 응답코드, 응답 메시지등을 전송합니다.</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Servlet","date":"2018-05-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- Servlet 이란\n\n  - 자바 웹 어플리케이션의 구성요소 중 동적인 처리를 하는 프로그램의 역할입니다.\n  - 서블릿(servlet)은 WAS에 동작하는 JAVA 클래스입니다. \n  - 서블릿은 HttpServlet 클래스를 상속받아야 합니다.\n  - 웹 페이지를 구성하는 화면(HTML)은 JSP로 표현하고, 복잡한 프로그래밍은 서블릿으로 구현합니다.\n\n- Life Cycle\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/slf.png)\n\n  - WAS는 서블릿 요청을 받으면 해당 서블릿이 메모리에 있는지 확인합니다.\n  -  if (메모리에 없음) {\n     - 해당 서블릿 클래스를 메모리에 올림\n     - init() 메소드를 실행\n    }\n     - service()메소드를 실행\n  - was가 종료되거나, 웹 어플리케이션이 새롭게 갱신될 경우 destroy() 메소드가 실행됩니다.\n\n- service(request, response) 메소드\n\n  - HttpServlet의 service메소드는 템플릿 메소드 패턴으로 구현합니다.\n\n  - 클라이언트의 요청이 GET일 경우에는 자신이 가지고 있는 doGet(request, response)메소드를 호출\n  - 클라이언트의 요청이 Post일 경우에는 자신이 가지고 있는 doPost(request, response)를 호출\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","source":"_posts/2018-05-07-Servlet.md","raw":"---\nlayout: post\ntitle:  \"Servlet\"\ndate:   2018-05-07\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- Servlet 이란\n\n  - 자바 웹 어플리케이션의 구성요소 중 동적인 처리를 하는 프로그램의 역할입니다.\n  - 서블릿(servlet)은 WAS에 동작하는 JAVA 클래스입니다. \n  - 서블릿은 HttpServlet 클래스를 상속받아야 합니다.\n  - 웹 페이지를 구성하는 화면(HTML)은 JSP로 표현하고, 복잡한 프로그래밍은 서블릿으로 구현합니다.\n\n- Life Cycle\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/slf.png)\n\n  - WAS는 서블릿 요청을 받으면 해당 서블릿이 메모리에 있는지 확인합니다.\n  -  if (메모리에 없음) {\n     - 해당 서블릿 클래스를 메모리에 올림\n     - init() 메소드를 실행\n    }\n     - service()메소드를 실행\n  - was가 종료되거나, 웹 어플리케이션이 새롭게 갱신될 경우 destroy() 메소드가 실행됩니다.\n\n- service(request, response) 메소드\n\n  - HttpServlet의 service메소드는 템플릿 메소드 패턴으로 구현합니다.\n\n  - 클라이언트의 요청이 GET일 경우에는 자신이 가지고 있는 doGet(request, response)메소드를 호출\n  - 클라이언트의 요청이 Post일 경우에는 자신이 가지고 있는 doPost(request, response)를 호출\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","slug":"2018-05-07-Servlet","published":1,"updated":"2018-05-07T08:07:12.640Z","comments":1,"photos":[],"link":"","_id":"cjp6k65iy00bj31x7w5tlaibr","content":"<ul>\n<li><p>Servlet 이란</p>\n<ul>\n<li>자바 웹 어플리케이션의 구성요소 중 동적인 처리를 하는 프로그램의 역할입니다.</li>\n<li>서블릿(servlet)은 WAS에 동작하는 JAVA 클래스입니다. </li>\n<li>서블릿은 HttpServlet 클래스를 상속받아야 합니다.</li>\n<li>웹 페이지를 구성하는 화면(HTML)은 JSP로 표현하고, 복잡한 프로그래밍은 서블릿으로 구현합니다.</li>\n</ul>\n</li>\n<li><p>Life Cycle</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/slf.png\" alt=\"img\"></p>\n<ul>\n<li>WAS는 서블릿 요청을 받으면 해당 서블릿이 메모리에 있는지 확인합니다.</li>\n<li>if (메모리에 없음) {<ul>\n<li>해당 서블릿 클래스를 메모리에 올림</li>\n<li>init() 메소드를 실행<br>}</li>\n<li>service()메소드를 실행</li>\n</ul>\n</li>\n<li>was가 종료되거나, 웹 어플리케이션이 새롭게 갱신될 경우 destroy() 메소드가 실행됩니다.</li>\n</ul>\n</li>\n<li><p>service(request, response) 메소드</p>\n<ul>\n<li><p>HttpServlet의 service메소드는 템플릿 메소드 패턴으로 구현합니다.</p>\n</li>\n<li><p>클라이언트의 요청이 GET일 경우에는 자신이 가지고 있는 doGet(request, response)메소드를 호출</p>\n</li>\n<li>클라이언트의 요청이 Post일 경우에는 자신이 가지고 있는 doPost(request, response)를 호출</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Servlet 이란</p>\n<ul>\n<li>자바 웹 어플리케이션의 구성요소 중 동적인 처리를 하는 프로그램의 역할입니다.</li>\n<li>서블릿(servlet)은 WAS에 동작하는 JAVA 클래스입니다. </li>\n<li>서블릿은 HttpServlet 클래스를 상속받아야 합니다.</li>\n<li>웹 페이지를 구성하는 화면(HTML)은 JSP로 표현하고, 복잡한 프로그래밍은 서블릿으로 구현합니다.</li>\n</ul>\n</li>\n<li><p>Life Cycle</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/slf.png\" alt=\"img\"></p>\n<ul>\n<li>WAS는 서블릿 요청을 받으면 해당 서블릿이 메모리에 있는지 확인합니다.</li>\n<li>if (메모리에 없음) {<ul>\n<li>해당 서블릿 클래스를 메모리에 올림</li>\n<li>init() 메소드를 실행<br>}</li>\n<li>service()메소드를 실행</li>\n</ul>\n</li>\n<li>was가 종료되거나, 웹 어플리케이션이 새롭게 갱신될 경우 destroy() 메소드가 실행됩니다.</li>\n</ul>\n</li>\n<li><p>service(request, response) 메소드</p>\n<ul>\n<li><p>HttpServlet의 service메소드는 템플릿 메소드 패턴으로 구현합니다.</p>\n</li>\n<li><p>클라이언트의 요청이 GET일 경우에는 자신이 가지고 있는 doGet(request, response)메소드를 호출</p>\n</li>\n<li>클라이언트의 요청이 Post일 경우에는 자신이 가지고 있는 doPost(request, response)를 호출</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"물통","date":"2018-05-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n<https://www.acmicpc.net/problem/2251>\n\n- 경우의 수\n\n  - A -> B\n  - A -> C\n  - B -> A\n  - B -> C\n  - C -> A\n  - C -> B\n\n- 가능한 모든 경우를 Queue에 넣어가면서 체크\n\n- EX\n\n  - (0 0 10)\n\n  - (8 0 2), (0 9 1)\n\n    - (0 8 2), (0, 0, 10) : 이미 체크했으므로 큐에 넣지 않음, (8, 2, 0)\n    - (8 1 1), (0 0 10) : 이미 체크했으므로 큐에 넣지 않음, (1 9 0)\n\n    ....\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water04.png)\n\n\n\n\n\n\n\n","source":"_posts/2018-05-06-물통.md","raw":"---\nlayout: post\ntitle:  \"물통\"\ndate:   2018-05-06\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n<https://www.acmicpc.net/problem/2251>\n\n- 경우의 수\n\n  - A -> B\n  - A -> C\n  - B -> A\n  - B -> C\n  - C -> A\n  - C -> B\n\n- 가능한 모든 경우를 Queue에 넣어가면서 체크\n\n- EX\n\n  - (0 0 10)\n\n  - (8 0 2), (0 9 1)\n\n    - (0 8 2), (0, 0, 10) : 이미 체크했으므로 큐에 넣지 않음, (8, 2, 0)\n    - (8 1 1), (0 0 10) : 이미 체크했으므로 큐에 넣지 않음, (1 9 0)\n\n    ....\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water04.png)\n\n\n\n\n\n\n\n","slug":"2018-05-06-물통","published":1,"updated":"2018-05-06T12:34:58.530Z","comments":1,"photos":[],"link":"","_id":"cjp6k65j500bl31x7a4zg9dsz","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/2251\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2251</a></p>\n<ul>\n<li><p>경우의 수</p>\n<ul>\n<li>A -&gt; B</li>\n<li>A -&gt; C</li>\n<li>B -&gt; A</li>\n<li>B -&gt; C</li>\n<li>C -&gt; A</li>\n<li>C -&gt; B</li>\n</ul>\n</li>\n<li><p>가능한 모든 경우를 Queue에 넣어가면서 체크</p>\n</li>\n<li><p>EX</p>\n<ul>\n<li><p>(0 0 10)</p>\n</li>\n<li><p>(8 0 2), (0 9 1)</p>\n<ul>\n<li>(0 8 2), (0, 0, 10) : 이미 체크했으므로 큐에 넣지 않음, (8, 2, 0)</li>\n<li>(8 1 1), (0 0 10) : 이미 체크했으므로 큐에 넣지 않음, (1 9 0)</li>\n</ul>\n<p>….</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water04.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/2251\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2251</a></p>\n<ul>\n<li><p>경우의 수</p>\n<ul>\n<li>A -&gt; B</li>\n<li>A -&gt; C</li>\n<li>B -&gt; A</li>\n<li>B -&gt; C</li>\n<li>C -&gt; A</li>\n<li>C -&gt; B</li>\n</ul>\n</li>\n<li><p>가능한 모든 경우를 Queue에 넣어가면서 체크</p>\n</li>\n<li><p>EX</p>\n<ul>\n<li><p>(0 0 10)</p>\n</li>\n<li><p>(8 0 2), (0 9 1)</p>\n<ul>\n<li>(0 8 2), (0, 0, 10) : 이미 체크했으므로 큐에 넣지 않음, (8, 2, 0)</li>\n<li>(8 1 1), (0 0 10) : 이미 체크했으므로 큐에 넣지 않음, (1 9 0)</li>\n</ul>\n<p>….</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/water04.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Database","date":"2018-05-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- 데이터베이스와 데이터베이스 관리 시스템\n\n  - 어린이가 가지고 있는 책(정보)들을 데이터베이스라고 한다면, \n  - 그 책을 관리해주는 엄마는 데이터베이스 관리 시스템이라고 말할 수 있습니다.\n\n- 데이터베이스\n\n  - 데이터의 집합 (a Set of Data)\n\n  - 여러 응용 시스템(프로그램)들의 통합된 정보들을 저장하여 운영할 수 있는 공용(share) 데이터의 집합\n\n  - 효율적으로 저장, 검색, 갱신할 수 있도록 데이터 집합들끼리 연관시키고 조직화되어야 한다.\n\n  - 특성\n\n    - 실시간 접근성(Real-time Accessability)\n      - 사용자의 요구를 즉시 처리할 수 있다.\n\n    - 계속적인 변화(Continuous Evolution)\n      - 정확한 값을 유지하려고 삽입·삭제·수정 작업 등을 이용해 데이터를 지속적으로 갱신할 수 있다.\n\n    - 동시 공유성(Concurrent Sharing)\n      - 사용자마다 서로 다른 목적으로 사용하므로 동시에 여러 사람이 동일한 데이터에 접근하고 이용할 수 있다.\n\n    - 내용 참조(Content Reference)\n      - 저장한 데이터 레코드의 위치나 주소가 아닌 사용자가 요구하는 데이터의 내용, 즉 데이터 값에 따라 참조할 수 있어야 한다.\n\n- 데이터베이스 관리 시스템 (Database Management System = DBMS)\n\n  - 데이터베이스를 관리하는 소프트웨어\n  - 여러 응용 소프트웨어(프로그램) 또는 시스템이 동시에 데이터베이스에 접근하여 사용할 수 있게 한다\n  - 필수 3기능\n    - 정의기능 :  데이터 베이스의 논리적, 물리적 구조를 정의\n    - 조작기능 : 데이터를 검색, 삭제, 갱신, 삽입, 삭제하는 기능\n    - 제어기능 :  데이터베이스의 내용 정확성과 안전성을 유지하도록 제어하는 기능\n  - Oracle, SQL Server, MySQL, DB2 등의 상용 또는 공개 DBMS가 있다.\n\n   \n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer ","source":"_posts/2018-05-08-Database.md","raw":"---\nlayout: post\ntitle:  \"Database\"\ndate:   2018-05-08\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- 데이터베이스와 데이터베이스 관리 시스템\n\n  - 어린이가 가지고 있는 책(정보)들을 데이터베이스라고 한다면, \n  - 그 책을 관리해주는 엄마는 데이터베이스 관리 시스템이라고 말할 수 있습니다.\n\n- 데이터베이스\n\n  - 데이터의 집합 (a Set of Data)\n\n  - 여러 응용 시스템(프로그램)들의 통합된 정보들을 저장하여 운영할 수 있는 공용(share) 데이터의 집합\n\n  - 효율적으로 저장, 검색, 갱신할 수 있도록 데이터 집합들끼리 연관시키고 조직화되어야 한다.\n\n  - 특성\n\n    - 실시간 접근성(Real-time Accessability)\n      - 사용자의 요구를 즉시 처리할 수 있다.\n\n    - 계속적인 변화(Continuous Evolution)\n      - 정확한 값을 유지하려고 삽입·삭제·수정 작업 등을 이용해 데이터를 지속적으로 갱신할 수 있다.\n\n    - 동시 공유성(Concurrent Sharing)\n      - 사용자마다 서로 다른 목적으로 사용하므로 동시에 여러 사람이 동일한 데이터에 접근하고 이용할 수 있다.\n\n    - 내용 참조(Content Reference)\n      - 저장한 데이터 레코드의 위치나 주소가 아닌 사용자가 요구하는 데이터의 내용, 즉 데이터 값에 따라 참조할 수 있어야 한다.\n\n- 데이터베이스 관리 시스템 (Database Management System = DBMS)\n\n  - 데이터베이스를 관리하는 소프트웨어\n  - 여러 응용 소프트웨어(프로그램) 또는 시스템이 동시에 데이터베이스에 접근하여 사용할 수 있게 한다\n  - 필수 3기능\n    - 정의기능 :  데이터 베이스의 논리적, 물리적 구조를 정의\n    - 조작기능 : 데이터를 검색, 삭제, 갱신, 삽입, 삭제하는 기능\n    - 제어기능 :  데이터베이스의 내용 정확성과 안전성을 유지하도록 제어하는 기능\n  - Oracle, SQL Server, MySQL, DB2 등의 상용 또는 공개 DBMS가 있다.\n\n   \n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer ","slug":"2018-05-08-Database","published":1,"updated":"2018-05-08T03:38:17.332Z","comments":1,"photos":[],"link":"","_id":"cjp6k65j700bn31x7gj3gutox","content":"<ul>\n<li><p>데이터베이스와 데이터베이스 관리 시스템</p>\n<ul>\n<li>어린이가 가지고 있는 책(정보)들을 데이터베이스라고 한다면, </li>\n<li>그 책을 관리해주는 엄마는 데이터베이스 관리 시스템이라고 말할 수 있습니다.</li>\n</ul>\n</li>\n<li><p>데이터베이스</p>\n<ul>\n<li><p>데이터의 집합 (a Set of Data)</p>\n</li>\n<li><p>여러 응용 시스템(프로그램)들의 통합된 정보들을 저장하여 운영할 수 있는 공용(share) 데이터의 집합</p>\n</li>\n<li><p>효율적으로 저장, 검색, 갱신할 수 있도록 데이터 집합들끼리 연관시키고 조직화되어야 한다.</p>\n</li>\n<li><p>특성</p>\n<ul>\n<li><p>실시간 접근성(Real-time Accessability)</p>\n<ul>\n<li>사용자의 요구를 즉시 처리할 수 있다.</li>\n</ul>\n</li>\n<li><p>계속적인 변화(Continuous Evolution)</p>\n<ul>\n<li>정확한 값을 유지하려고 삽입·삭제·수정 작업 등을 이용해 데이터를 지속적으로 갱신할 수 있다.</li>\n</ul>\n</li>\n<li><p>동시 공유성(Concurrent Sharing)</p>\n<ul>\n<li>사용자마다 서로 다른 목적으로 사용하므로 동시에 여러 사람이 동일한 데이터에 접근하고 이용할 수 있다.</li>\n</ul>\n</li>\n<li><p>내용 참조(Content Reference)</p>\n<ul>\n<li>저장한 데이터 레코드의 위치나 주소가 아닌 사용자가 요구하는 데이터의 내용, 즉 데이터 값에 따라 참조할 수 있어야 한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>데이터베이스 관리 시스템 (Database Management System = DBMS)</p>\n<ul>\n<li>데이터베이스를 관리하는 소프트웨어</li>\n<li>여러 응용 소프트웨어(프로그램) 또는 시스템이 동시에 데이터베이스에 접근하여 사용할 수 있게 한다</li>\n<li>필수 3기능<ul>\n<li>정의기능 :  데이터 베이스의 논리적, 물리적 구조를 정의</li>\n<li>조작기능 : 데이터를 검색, 삭제, 갱신, 삽입, 삭제하는 기능</li>\n<li>제어기능 :  데이터베이스의 내용 정확성과 안전성을 유지하도록 제어하는 기능</li>\n</ul>\n</li>\n<li>Oracle, SQL Server, MySQL, DB2 등의 상용 또는 공개 DBMS가 있다.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>데이터베이스와 데이터베이스 관리 시스템</p>\n<ul>\n<li>어린이가 가지고 있는 책(정보)들을 데이터베이스라고 한다면, </li>\n<li>그 책을 관리해주는 엄마는 데이터베이스 관리 시스템이라고 말할 수 있습니다.</li>\n</ul>\n</li>\n<li><p>데이터베이스</p>\n<ul>\n<li><p>데이터의 집합 (a Set of Data)</p>\n</li>\n<li><p>여러 응용 시스템(프로그램)들의 통합된 정보들을 저장하여 운영할 수 있는 공용(share) 데이터의 집합</p>\n</li>\n<li><p>효율적으로 저장, 검색, 갱신할 수 있도록 데이터 집합들끼리 연관시키고 조직화되어야 한다.</p>\n</li>\n<li><p>특성</p>\n<ul>\n<li><p>실시간 접근성(Real-time Accessability)</p>\n<ul>\n<li>사용자의 요구를 즉시 처리할 수 있다.</li>\n</ul>\n</li>\n<li><p>계속적인 변화(Continuous Evolution)</p>\n<ul>\n<li>정확한 값을 유지하려고 삽입·삭제·수정 작업 등을 이용해 데이터를 지속적으로 갱신할 수 있다.</li>\n</ul>\n</li>\n<li><p>동시 공유성(Concurrent Sharing)</p>\n<ul>\n<li>사용자마다 서로 다른 목적으로 사용하므로 동시에 여러 사람이 동일한 데이터에 접근하고 이용할 수 있다.</li>\n</ul>\n</li>\n<li><p>내용 참조(Content Reference)</p>\n<ul>\n<li>저장한 데이터 레코드의 위치나 주소가 아닌 사용자가 요구하는 데이터의 내용, 즉 데이터 값에 따라 참조할 수 있어야 한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>데이터베이스 관리 시스템 (Database Management System = DBMS)</p>\n<ul>\n<li>데이터베이스를 관리하는 소프트웨어</li>\n<li>여러 응용 소프트웨어(프로그램) 또는 시스템이 동시에 데이터베이스에 접근하여 사용할 수 있게 한다</li>\n<li>필수 3기능<ul>\n<li>정의기능 :  데이터 베이스의 논리적, 물리적 구조를 정의</li>\n<li>조작기능 : 데이터를 검색, 삭제, 갱신, 삽입, 삭제하는 기능</li>\n<li>제어기능 :  데이터베이스의 내용 정확성과 안전성을 유지하도록 제어하는 기능</li>\n</ul>\n</li>\n<li>Oracle, SQL Server, MySQL, DB2 등의 상용 또는 공개 DBMS가 있다.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"DTO, DAO","date":"2018-05-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- DTO (Data Transfer Object)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dto.png)\n\n  - 계층간 데이터 교환을 위한 자바빈즈입니다.\n    - 여기서의 계층이란 컨트롤러 뷰, 비지니스 계층, 퍼시스턴스 계층을 의미합니다.\n  - 일반적으로 DTO는 로직을 가지고 있지 않고, 순수한 데이터 객체입니다.\n  - 필드와 getter, setter를 가진다. \n    - 추가적으로 toString(), equals(), hashCode()등의 Object 메소드를 오버라이딩 할 수 있습니다.\n\n- DAO ( Data Access Object)\n\n  - 데이터를 조회하거나 조작하는 기능을 전담하도록 만든 객체입니다.\n  - 보통 데이터베이스를 조작하는 기능을 전담하는 목적으로 만들어집니다.\n\n- ConnectionPool\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cppp.png)\n\n  - DB연결은 비용이 많이 듭니다.\n  - 커넥션 풀은 미리 커넥션을 여러 개 맺어 둡니다.\n  - 커넥션이 필요하면 커넥션 풀에게 빌려서 사용한 후 반납합니다.\n  - 커넥션을 반납하지 않으면 컨넥션풀에서 사용가능한 컨넥션이 없어서  프로그램이 늦어지거나 장애 발생\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","source":"_posts/2018-05-08-DTO, DAO.md","raw":"---\nlayout: post\ntitle:  \"DTO, DAO\"\ndate:   2018-05-08\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- DTO (Data Transfer Object)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dto.png)\n\n  - 계층간 데이터 교환을 위한 자바빈즈입니다.\n    - 여기서의 계층이란 컨트롤러 뷰, 비지니스 계층, 퍼시스턴스 계층을 의미합니다.\n  - 일반적으로 DTO는 로직을 가지고 있지 않고, 순수한 데이터 객체입니다.\n  - 필드와 getter, setter를 가진다. \n    - 추가적으로 toString(), equals(), hashCode()등의 Object 메소드를 오버라이딩 할 수 있습니다.\n\n- DAO ( Data Access Object)\n\n  - 데이터를 조회하거나 조작하는 기능을 전담하도록 만든 객체입니다.\n  - 보통 데이터베이스를 조작하는 기능을 전담하는 목적으로 만들어집니다.\n\n- ConnectionPool\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cppp.png)\n\n  - DB연결은 비용이 많이 듭니다.\n  - 커넥션 풀은 미리 커넥션을 여러 개 맺어 둡니다.\n  - 커넥션이 필요하면 커넥션 풀에게 빌려서 사용한 후 반납합니다.\n  - 커넥션을 반납하지 않으면 컨넥션풀에서 사용가능한 컨넥션이 없어서  프로그램이 늦어지거나 장애 발생\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","slug":"2018-05-08-DTO, DAO","published":1,"updated":"2018-05-08T00:15:22.778Z","comments":1,"photos":[],"link":"","_id":"cjp6k65j800bp31x7t5dso5fc","content":"<ul>\n<li><p>DTO (Data Transfer Object)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dto.png\" alt=\"img\"></p>\n<ul>\n<li>계층간 데이터 교환을 위한 자바빈즈입니다.<ul>\n<li>여기서의 계층이란 컨트롤러 뷰, 비지니스 계층, 퍼시스턴스 계층을 의미합니다.</li>\n</ul>\n</li>\n<li>일반적으로 DTO는 로직을 가지고 있지 않고, 순수한 데이터 객체입니다.</li>\n<li>필드와 getter, setter를 가진다. <ul>\n<li>추가적으로 toString(), equals(), hashCode()등의 Object 메소드를 오버라이딩 할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DAO ( Data Access Object)</p>\n<ul>\n<li>데이터를 조회하거나 조작하는 기능을 전담하도록 만든 객체입니다.</li>\n<li>보통 데이터베이스를 조작하는 기능을 전담하는 목적으로 만들어집니다.</li>\n</ul>\n</li>\n<li><p>ConnectionPool</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cppp.png\" alt=\"img\"></p>\n<ul>\n<li>DB연결은 비용이 많이 듭니다.</li>\n<li>커넥션 풀은 미리 커넥션을 여러 개 맺어 둡니다.</li>\n<li>커넥션이 필요하면 커넥션 풀에게 빌려서 사용한 후 반납합니다.</li>\n<li>커넥션을 반납하지 않으면 컨넥션풀에서 사용가능한 컨넥션이 없어서  프로그램이 늦어지거나 장애 발생</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>DTO (Data Transfer Object)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dto.png\" alt=\"img\"></p>\n<ul>\n<li>계층간 데이터 교환을 위한 자바빈즈입니다.<ul>\n<li>여기서의 계층이란 컨트롤러 뷰, 비지니스 계층, 퍼시스턴스 계층을 의미합니다.</li>\n</ul>\n</li>\n<li>일반적으로 DTO는 로직을 가지고 있지 않고, 순수한 데이터 객체입니다.</li>\n<li>필드와 getter, setter를 가진다. <ul>\n<li>추가적으로 toString(), equals(), hashCode()등의 Object 메소드를 오버라이딩 할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DAO ( Data Access Object)</p>\n<ul>\n<li>데이터를 조회하거나 조작하는 기능을 전담하도록 만든 객체입니다.</li>\n<li>보통 데이터베이스를 조작하는 기능을 전담하는 목적으로 만들어집니다.</li>\n</ul>\n</li>\n<li><p>ConnectionPool</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cppp.png\" alt=\"img\"></p>\n<ul>\n<li>DB연결은 비용이 많이 듭니다.</li>\n<li>커넥션 풀은 미리 커넥션을 여러 개 맺어 둡니다.</li>\n<li>커넥션이 필요하면 커넥션 풀에게 빌려서 사용한 후 반납합니다.</li>\n<li>커넥션을 반납하지 않으면 컨넥션풀에서 사용가능한 컨넥션이 없어서  프로그램이 늦어지거나 장애 발생</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"JDBC","date":"2018-05-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- JDBC\n\n  - 자바를 이용한 데이터베이스 접속과 SQL 문장의 실행, 그리고 실행 결과로 얻어진 데이터의 핸들링을 제공하는 방법과 절차에 관한 규약\n  - 자바 프로그램 내에서 SQL문을 실행하기 위한 자바 API\n  - SQL과 프로그래밍 언어의 통합 접근 중 한 형태\n  - JAVA는 표준 인터페이스인 JDBC API를 제공\n  - 데이터베이스 벤더, 또는 기타 써드파티에서는 JDBC 인터페이스를 구현한 드라이버(driver)를 제공한다.\n\n- JDBC를 이용한 프로그래밍 방법\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/jdbc.png)\n\n  - import java.sql.*;\n\n  - 드라이버를 로드 한다.\n\n    - ```java\n      Class.forName( \"com.mysql.jdbc.Driver\" );\n      ```\n\n  - Connection 객체를 생성한다.\n\n    - ```java\n      String dburl  = \"jdbc:mysql://localhost/dbName\";\n      \n      Connection con =  DriverManager.getConnection ( dburl, ID, PWD );\n      ```\n\n  - Statement 객체를 생성 및 질의 수행\n\n    - ```java\n      Statement stmt = con.createStatement(); \n      ResultSet rs = stmt.executeQuery(\"select no from user\" );\n      \n      stmt.execute(“query”);             //any SQL\n      stmt.executeQuery(“query”);     //SELECT\n      stmt.executeUpdate(“query”);   //INSERT, UPDATE, DELETE\n      ```\n\n  - SQL문에 결과물이 있다면 ResultSet 객체를 생성한다.\n\n    - ```java\n      ResultSet rs =  stmt.executeQuery( \"select no from user\" );\n      while ( rs.next() )\n            System.out.println( rs.getInt( \"no\") );\n      ```\n\n  - 모든 객체를 닫는다.\n\n    - ```java\n      rs.close();\n      stmt.close();\n      con.close();\n      ```\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","source":"_posts/2018-05-08-JDBC.md","raw":"---\nlayout: post\ntitle:  \"JDBC\"\ndate:   2018-05-08\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- JDBC\n\n  - 자바를 이용한 데이터베이스 접속과 SQL 문장의 실행, 그리고 실행 결과로 얻어진 데이터의 핸들링을 제공하는 방법과 절차에 관한 규약\n  - 자바 프로그램 내에서 SQL문을 실행하기 위한 자바 API\n  - SQL과 프로그래밍 언어의 통합 접근 중 한 형태\n  - JAVA는 표준 인터페이스인 JDBC API를 제공\n  - 데이터베이스 벤더, 또는 기타 써드파티에서는 JDBC 인터페이스를 구현한 드라이버(driver)를 제공한다.\n\n- JDBC를 이용한 프로그래밍 방법\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/jdbc.png)\n\n  - import java.sql.*;\n\n  - 드라이버를 로드 한다.\n\n    - ```java\n      Class.forName( \"com.mysql.jdbc.Driver\" );\n      ```\n\n  - Connection 객체를 생성한다.\n\n    - ```java\n      String dburl  = \"jdbc:mysql://localhost/dbName\";\n      \n      Connection con =  DriverManager.getConnection ( dburl, ID, PWD );\n      ```\n\n  - Statement 객체를 생성 및 질의 수행\n\n    - ```java\n      Statement stmt = con.createStatement(); \n      ResultSet rs = stmt.executeQuery(\"select no from user\" );\n      \n      stmt.execute(“query”);             //any SQL\n      stmt.executeQuery(“query”);     //SELECT\n      stmt.executeUpdate(“query”);   //INSERT, UPDATE, DELETE\n      ```\n\n  - SQL문에 결과물이 있다면 ResultSet 객체를 생성한다.\n\n    - ```java\n      ResultSet rs =  stmt.executeQuery( \"select no from user\" );\n      while ( rs.next() )\n            System.out.println( rs.getInt( \"no\") );\n      ```\n\n  - 모든 객체를 닫는다.\n\n    - ```java\n      rs.close();\n      stmt.close();\n      con.close();\n      ```\n\n- Reference\n  - NAVER edwith boostcourse Full-Stack Web Developer ","slug":"2018-05-08-JDBC","published":1,"updated":"2018-05-08T01:07:37.152Z","comments":1,"photos":[],"link":"","_id":"cjp6k65j900br31x7kw3qc042","content":"<ul>\n<li><p>JDBC</p>\n<ul>\n<li>자바를 이용한 데이터베이스 접속과 SQL 문장의 실행, 그리고 실행 결과로 얻어진 데이터의 핸들링을 제공하는 방법과 절차에 관한 규약</li>\n<li>자바 프로그램 내에서 SQL문을 실행하기 위한 자바 API</li>\n<li>SQL과 프로그래밍 언어의 통합 접근 중 한 형태</li>\n<li>JAVA는 표준 인터페이스인 JDBC API를 제공</li>\n<li>데이터베이스 벤더, 또는 기타 써드파티에서는 JDBC 인터페이스를 구현한 드라이버(driver)를 제공한다.</li>\n</ul>\n</li>\n<li><p>JDBC를 이용한 프로그래밍 방법</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/jdbc.png\" alt=\"img\"></p>\n<ul>\n<li><p>import java.sql.*;</p>\n</li>\n<li><p>드라이버를 로드 한다.</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class.forName( <span class=\"string\">\"com.mysql.jdbc.Driver\"</span> );</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>Connection 객체를 생성한다.</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String dburl  = <span class=\"string\">\"jdbc:mysql://localhost/dbName\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Connection con =  DriverManager.getConnection ( dburl, ID, PWD );</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>Statement 객체를 생성 및 질의 수행</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Statement stmt = con.createStatement(); </span><br><span class=\"line\">ResultSet rs = stmt.executeQuery(<span class=\"string\">\"select no from user\"</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">stmt.execute(“query”);             <span class=\"comment\">//any SQL</span></span><br><span class=\"line\">stmt.executeQuery(“query”);     <span class=\"comment\">//SELECT</span></span><br><span class=\"line\">stmt.executeUpdate(“query”);   <span class=\"comment\">//INSERT, UPDATE, DELETE</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>SQL문에 결과물이 있다면 ResultSet 객체를 생성한다.</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ResultSet rs =  stmt.executeQuery( <span class=\"string\">\"select no from user\"</span> );</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( rs.next() )</span><br><span class=\"line\">      System.out.println( rs.getInt( <span class=\"string\">\"no\"</span>) );</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>모든 객체를 닫는다.</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs.close();</span><br><span class=\"line\">stmt.close();</span><br><span class=\"line\">con.close();</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>JDBC</p>\n<ul>\n<li>자바를 이용한 데이터베이스 접속과 SQL 문장의 실행, 그리고 실행 결과로 얻어진 데이터의 핸들링을 제공하는 방법과 절차에 관한 규약</li>\n<li>자바 프로그램 내에서 SQL문을 실행하기 위한 자바 API</li>\n<li>SQL과 프로그래밍 언어의 통합 접근 중 한 형태</li>\n<li>JAVA는 표준 인터페이스인 JDBC API를 제공</li>\n<li>데이터베이스 벤더, 또는 기타 써드파티에서는 JDBC 인터페이스를 구현한 드라이버(driver)를 제공한다.</li>\n</ul>\n</li>\n<li><p>JDBC를 이용한 프로그래밍 방법</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/jdbc.png\" alt=\"img\"></p>\n<ul>\n<li><p>import java.sql.*;</p>\n</li>\n<li><p>드라이버를 로드 한다.</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class.forName( <span class=\"string\">\"com.mysql.jdbc.Driver\"</span> );</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>Connection 객체를 생성한다.</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String dburl  = <span class=\"string\">\"jdbc:mysql://localhost/dbName\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Connection con =  DriverManager.getConnection ( dburl, ID, PWD );</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>Statement 객체를 생성 및 질의 수행</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Statement stmt = con.createStatement(); </span><br><span class=\"line\">ResultSet rs = stmt.executeQuery(<span class=\"string\">\"select no from user\"</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">stmt.execute(“query”);             <span class=\"comment\">//any SQL</span></span><br><span class=\"line\">stmt.executeQuery(“query”);     <span class=\"comment\">//SELECT</span></span><br><span class=\"line\">stmt.executeUpdate(“query”);   <span class=\"comment\">//INSERT, UPDATE, DELETE</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>SQL문에 결과물이 있다면 ResultSet 객체를 생성한다.</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ResultSet rs =  stmt.executeQuery( <span class=\"string\">\"select no from user\"</span> );</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( rs.next() )</span><br><span class=\"line\">      System.out.println( rs.getInt( <span class=\"string\">\"no\"</span>) );</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>모든 객체를 닫는다.</p>\n<ul>\n<li><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs.close();</span><br><span class=\"line\">stmt.close();</span><br><span class=\"line\">con.close();</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Spring MVC","date":"2018-05-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- MVC란 ?\n\n  - MVC는 Model-View-Controller의 약자입니다.\n  - 원래는 제록스 연구소에서 일하던 트뤼그베 린즈커그가 처음으로 소개한 개념으로, 데스트톱 어플리케이션용으로 고안되었습니다.\n  - Model : 모델은 뷰가 렌더링하는데 필요한 데이터입니다. 예를 들어 사용자가 요청한 상품 목록이나, 주문 내역이 이에 해당합니다.\n  - View : 웹 애플리케이션에서 뷰(View)는 실제로 보이는 부분이며, 모델을 사용해 렌더링을 합니다. 뷰는 JSP, JSF, PDF, XML등으로 결과를 표현합니다.\n  - Controller : 컨트롤러는 사용자의 액션에 응답하는 컴포넌트입니다. 컨트롤러는 모델을 업데이트하고, 다른 액션을 수행합니다.\n\n- MVC Model 1 아키텍처\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm01.png)\n\n- MVC Model 2 아키텍처\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm02.png)\n\n- MVC Model2 발전형태![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm03.png)\n\n- Spring Web Module \n\n  - Model2 MVC 패턴을 지원하는 Spring Module  \n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm04.png)\n\n- \n\n\n\n  \n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer\n\n    ","source":"_posts/2018-05-08-Spring MVC.md","raw":"---\nlayout: post\ntitle:  \"Spring MVC\"\ndate:   2018-05-08\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- MVC란 ?\n\n  - MVC는 Model-View-Controller의 약자입니다.\n  - 원래는 제록스 연구소에서 일하던 트뤼그베 린즈커그가 처음으로 소개한 개념으로, 데스트톱 어플리케이션용으로 고안되었습니다.\n  - Model : 모델은 뷰가 렌더링하는데 필요한 데이터입니다. 예를 들어 사용자가 요청한 상품 목록이나, 주문 내역이 이에 해당합니다.\n  - View : 웹 애플리케이션에서 뷰(View)는 실제로 보이는 부분이며, 모델을 사용해 렌더링을 합니다. 뷰는 JSP, JSF, PDF, XML등으로 결과를 표현합니다.\n  - Controller : 컨트롤러는 사용자의 액션에 응답하는 컴포넌트입니다. 컨트롤러는 모델을 업데이트하고, 다른 액션을 수행합니다.\n\n- MVC Model 1 아키텍처\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm01.png)\n\n- MVC Model 2 아키텍처\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm02.png)\n\n- MVC Model2 발전형태![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm03.png)\n\n- Spring Web Module \n\n  - Model2 MVC 패턴을 지원하는 Spring Module  \n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm04.png)\n\n- \n\n\n\n  \n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer\n\n    ","slug":"2018-05-08-Spring MVC","published":1,"updated":"2018-05-08T10:21:09.889Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jd00bt31x7x6x3wvgo","content":"<ul>\n<li><p>MVC란 ?</p>\n<ul>\n<li>MVC는 Model-View-Controller의 약자입니다.</li>\n<li>원래는 제록스 연구소에서 일하던 트뤼그베 린즈커그가 처음으로 소개한 개념으로, 데스트톱 어플리케이션용으로 고안되었습니다.</li>\n<li>Model : 모델은 뷰가 렌더링하는데 필요한 데이터입니다. 예를 들어 사용자가 요청한 상품 목록이나, 주문 내역이 이에 해당합니다.</li>\n<li>View : 웹 애플리케이션에서 뷰(View)는 실제로 보이는 부분이며, 모델을 사용해 렌더링을 합니다. 뷰는 JSP, JSF, PDF, XML등으로 결과를 표현합니다.</li>\n<li>Controller : 컨트롤러는 사용자의 액션에 응답하는 컴포넌트입니다. 컨트롤러는 모델을 업데이트하고, 다른 액션을 수행합니다.</li>\n</ul>\n</li>\n<li><p>MVC Model 1 아키텍처</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm01.png\" alt=\"img\"></p>\n</li>\n<li><p>MVC Model 2 아키텍처</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm02.png\" alt=\"img\"></p>\n</li>\n<li><p>MVC Model2 발전형태<img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm03.png\" alt=\"img\"></p>\n</li>\n<li><p>Spring Web Module </p>\n<ul>\n<li>Model2 MVC 패턴을 지원하는 Spring Module  </li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm04.png\" alt=\"img\"></p>\n</li>\n<li></li>\n</ul>\n<ul>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>MVC란 ?</p>\n<ul>\n<li>MVC는 Model-View-Controller의 약자입니다.</li>\n<li>원래는 제록스 연구소에서 일하던 트뤼그베 린즈커그가 처음으로 소개한 개념으로, 데스트톱 어플리케이션용으로 고안되었습니다.</li>\n<li>Model : 모델은 뷰가 렌더링하는데 필요한 데이터입니다. 예를 들어 사용자가 요청한 상품 목록이나, 주문 내역이 이에 해당합니다.</li>\n<li>View : 웹 애플리케이션에서 뷰(View)는 실제로 보이는 부분이며, 모델을 사용해 렌더링을 합니다. 뷰는 JSP, JSF, PDF, XML등으로 결과를 표현합니다.</li>\n<li>Controller : 컨트롤러는 사용자의 액션에 응답하는 컴포넌트입니다. 컨트롤러는 모델을 업데이트하고, 다른 액션을 수행합니다.</li>\n</ul>\n</li>\n<li><p>MVC Model 1 아키텍처</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm01.png\" alt=\"img\"></p>\n</li>\n<li><p>MVC Model 2 아키텍처</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm02.png\" alt=\"img\"></p>\n</li>\n<li><p>MVC Model2 발전형태<img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm03.png\" alt=\"img\"></p>\n</li>\n<li><p>Spring Web Module </p>\n<ul>\n<li>Model2 MVC 패턴을 지원하는 Spring Module  </li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sm04.png\" alt=\"img\"></p>\n</li>\n<li></li>\n</ul>\n<ul>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Spring MVC 구성요소","date":"2018-05-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- Spring MVC 기본 동작 흐름\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/smvc.png)\n\n   - 클라이언트가 요청을 보내면 이 모든 요청을 Dispatcher Servlet이 받아\n   - Dispatcher Servlet은 이 요청을 처리하는 컨트롤러와 메소드가 무엇인지 Handler Mapping 에게 물어봐\n   - Handler Adapter에게 실행을 요청. \n   - 결정된 컨트롤러와 메소드가 실행이 됨\n   - 그 결과를 모델에 받아서, Dispatcher Servlet에게 전달\n  - 컨트롤러가 return한 view name으로 적절한 View Resolver로 출력\n\n  \n\n- DispatcherServlet\n\n  - 프론트 컨트롤러 (Front Controller)\n  - 클라이언트의 모든 요청을 받은 후 \n  - 이를 처리할 핸들러에게 넘기고 \n  - 핸들러가 처리한 결과를 받아 \n  - 사용자에게 응답 결과를 보여준다.\n  - DispathcerServlet은 여러 컴포넌트를 이용해 작업을 처리한다.\n\n- DispatcherServlet 내부 동작흐름\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch01.png)\n\n- DispatcherServlet 내부 동작흐름 상세 - 요청 선처리 작\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch02.png)\n\n- 요청 선처리 작업시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.LocaleResolver\n    - 지역 정보를 결정해주는 전략 오브젝트이다.\n    - 디폴트인 AcceptHeaderLocalResolver는 HTTP 헤더의 정보를 보고 지역정보를 설정해준다.\n  - org.springframework.web.servlet.FlashMapManager\n    - FlashMap객체를 조회(retrieve) & 저장을 위한 인터페이스\n    - RedirectAttributes의 addFlashAttribute메소드를 이용해서 저장한다.\n    - 리다이렉트 후 조회를 하면 바로 정보는 삭제된다.\n  - org.springframework.web.context.request.RequestContextHolder\n    - 일반 빈에서 HttpServletRequest, HttpServletResponse, HttpSession 등을 사용할 수 있도록 한다.\n    - 해당 객체를 일반 빈에서 사용하게 되면, Web에 종속적이 될 수 있다.\n  - forg.springframework.web.multipart.MultipartResolver\n    - 멀티파트 파일 업로드를 처리하는 전략\n\n- DispatcherServlet 내부 동작흐름 상세 - 요청 전달\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch03.png)\n\n- 요청 전달시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.HandlerMapping\n    - HandlerMapping구현체는 어떤 핸들러가 요청을 처리할지에 대한 정보를 알고 있다.\n    - 디폴트로 설정되는 있는 핸들러매핑은 BeanNameHandlerMapping과 DefaultAnnotationHandlerMapping 2가지가 설정되어 있다.\n  - org.springframework.web.servlet.HandlerExecutionChain\n    - HandlerExecutionChain구현체는 실제로 호출된 핸들러에 대한 참조를 가지고 있다.\n    - 즉, 무엇이 실행되어야 될지 알고 있는 객체라고 말할 수 있으며, 핸들러 실행전과 실행후에 수행될 HandlerInterceptor도 참조하고 있다.\n  - org.springframework.web.servlet.HandlerAdapter\n    - 실제 핸들러를 실행하는 역할을 담당한다.\n    - 핸들러 어댑터는 선택된 핸들러를 실행하는 방법과 응답을 ModelAndView로 변화하는 방법에 대해 알고 있다.\n    - 디폴트로 설정되어 있는 핸들러어댑터는 HttpRequestHandlerAdapter, SimpleControllerHandlerAdapter, AnnotationMethodHanlderAdapter 3가지이다.\n    - @RequestMapping과 @Controller 애노테이션을 통해 정의되는 컨트롤러의 경우 DefaultAnnotationHandlerMapping에 의해 핸들러가 결정되고, 그에 대응되는 AnnotationMethodHandlerAdapter에 의해 호출이 일어난다.\n\n- DispatcherServlet 내부 동작흐름 상세 - 요청 처리\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch04.png)\n\n- 요청 처리시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.ModelAndView\n    - ModelAndView는 Controller의 처리 결과를 보여줄 view와 view에서 사용할 값을 전달하는 클래스이다.\n\n- DispatcherServlet 내부 동작흐름 상세 - 예외처리\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch05.png)\n\n- 예외 처리시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.handlerexceptionresolver\n    - 기본적으로 DispatcherServlet이 DefaultHandlerExceptionResolver를 등록한다.\n    - HandlerExceptionResolver는 예외가 던져졌을 때 어떤 핸들러를 실행할 것인지에 대한 정보를 제공한다.\n\n- DispatcherServlet 내부 동작흐름 상세 - 뷰 렌더링 과정\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch06.png)\n\n- 뷰 렌더링 과정시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.ViewResolver\n    - 컨트롤러가 리턴한 뷰 이름을 참고해서 적절한 뷰 오브젝트를 찾아주는 로직을 가진 전략 오프젝트이다.\n    - 뷰의 종류에 따라 적절한 뷰 리졸버를 추가로 설정해줄 수 있다.\n\n- DispatcherServlet 내부 동작흐름 상세 - 요청 처리 종료![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch07.png)\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer","source":"_posts/2018-05-08-Spring MVC 구성요소.md","raw":"---\nlayout: post\ntitle:  \"Spring MVC 구성요소\"\ndate:   2018-05-08\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- Spring MVC 기본 동작 흐름\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/smvc.png)\n\n   - 클라이언트가 요청을 보내면 이 모든 요청을 Dispatcher Servlet이 받아\n   - Dispatcher Servlet은 이 요청을 처리하는 컨트롤러와 메소드가 무엇인지 Handler Mapping 에게 물어봐\n   - Handler Adapter에게 실행을 요청. \n   - 결정된 컨트롤러와 메소드가 실행이 됨\n   - 그 결과를 모델에 받아서, Dispatcher Servlet에게 전달\n  - 컨트롤러가 return한 view name으로 적절한 View Resolver로 출력\n\n  \n\n- DispatcherServlet\n\n  - 프론트 컨트롤러 (Front Controller)\n  - 클라이언트의 모든 요청을 받은 후 \n  - 이를 처리할 핸들러에게 넘기고 \n  - 핸들러가 처리한 결과를 받아 \n  - 사용자에게 응답 결과를 보여준다.\n  - DispathcerServlet은 여러 컴포넌트를 이용해 작업을 처리한다.\n\n- DispatcherServlet 내부 동작흐름\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch01.png)\n\n- DispatcherServlet 내부 동작흐름 상세 - 요청 선처리 작\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch02.png)\n\n- 요청 선처리 작업시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.LocaleResolver\n    - 지역 정보를 결정해주는 전략 오브젝트이다.\n    - 디폴트인 AcceptHeaderLocalResolver는 HTTP 헤더의 정보를 보고 지역정보를 설정해준다.\n  - org.springframework.web.servlet.FlashMapManager\n    - FlashMap객체를 조회(retrieve) & 저장을 위한 인터페이스\n    - RedirectAttributes의 addFlashAttribute메소드를 이용해서 저장한다.\n    - 리다이렉트 후 조회를 하면 바로 정보는 삭제된다.\n  - org.springframework.web.context.request.RequestContextHolder\n    - 일반 빈에서 HttpServletRequest, HttpServletResponse, HttpSession 등을 사용할 수 있도록 한다.\n    - 해당 객체를 일반 빈에서 사용하게 되면, Web에 종속적이 될 수 있다.\n  - forg.springframework.web.multipart.MultipartResolver\n    - 멀티파트 파일 업로드를 처리하는 전략\n\n- DispatcherServlet 내부 동작흐름 상세 - 요청 전달\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch03.png)\n\n- 요청 전달시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.HandlerMapping\n    - HandlerMapping구현체는 어떤 핸들러가 요청을 처리할지에 대한 정보를 알고 있다.\n    - 디폴트로 설정되는 있는 핸들러매핑은 BeanNameHandlerMapping과 DefaultAnnotationHandlerMapping 2가지가 설정되어 있다.\n  - org.springframework.web.servlet.HandlerExecutionChain\n    - HandlerExecutionChain구현체는 실제로 호출된 핸들러에 대한 참조를 가지고 있다.\n    - 즉, 무엇이 실행되어야 될지 알고 있는 객체라고 말할 수 있으며, 핸들러 실행전과 실행후에 수행될 HandlerInterceptor도 참조하고 있다.\n  - org.springframework.web.servlet.HandlerAdapter\n    - 실제 핸들러를 실행하는 역할을 담당한다.\n    - 핸들러 어댑터는 선택된 핸들러를 실행하는 방법과 응답을 ModelAndView로 변화하는 방법에 대해 알고 있다.\n    - 디폴트로 설정되어 있는 핸들러어댑터는 HttpRequestHandlerAdapter, SimpleControllerHandlerAdapter, AnnotationMethodHanlderAdapter 3가지이다.\n    - @RequestMapping과 @Controller 애노테이션을 통해 정의되는 컨트롤러의 경우 DefaultAnnotationHandlerMapping에 의해 핸들러가 결정되고, 그에 대응되는 AnnotationMethodHandlerAdapter에 의해 호출이 일어난다.\n\n- DispatcherServlet 내부 동작흐름 상세 - 요청 처리\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch04.png)\n\n- 요청 처리시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.ModelAndView\n    - ModelAndView는 Controller의 처리 결과를 보여줄 view와 view에서 사용할 값을 전달하는 클래스이다.\n\n- DispatcherServlet 내부 동작흐름 상세 - 예외처리\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch05.png)\n\n- 예외 처리시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.handlerexceptionresolver\n    - 기본적으로 DispatcherServlet이 DefaultHandlerExceptionResolver를 등록한다.\n    - HandlerExceptionResolver는 예외가 던져졌을 때 어떤 핸들러를 실행할 것인지에 대한 정보를 제공한다.\n\n- DispatcherServlet 내부 동작흐름 상세 - 뷰 렌더링 과정\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch06.png)\n\n- 뷰 렌더링 과정시 사용된 컴포넌트\n\n  - org.springframework.web.servlet.ViewResolver\n    - 컨트롤러가 리턴한 뷰 이름을 참고해서 적절한 뷰 오브젝트를 찾아주는 로직을 가진 전략 오프젝트이다.\n    - 뷰의 종류에 따라 적절한 뷰 리졸버를 추가로 설정해줄 수 있다.\n\n- DispatcherServlet 내부 동작흐름 상세 - 요청 처리 종료![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch07.png)\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer","slug":"2018-05-08-Spring MVC 구성요소","published":1,"updated":"2018-05-08T10:37:39.991Z","comments":1,"photos":[],"link":"","_id":"cjp6k65je00bv31x7xjc3d0cb","content":"<ul>\n<li><p>Spring MVC 기본 동작 흐름</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/smvc.png\" alt=\"img\"></p>\n<ul>\n<li>클라이언트가 요청을 보내면 이 모든 요청을 Dispatcher Servlet이 받아</li>\n<li>Dispatcher Servlet은 이 요청을 처리하는 컨트롤러와 메소드가 무엇인지 Handler Mapping 에게 물어봐</li>\n<li>Handler Adapter에게 실행을 요청. </li>\n<li>결정된 컨트롤러와 메소드가 실행이 됨</li>\n<li>그 결과를 모델에 받아서, Dispatcher Servlet에게 전달<ul>\n<li>컨트롤러가 return한 view name으로 적절한 View Resolver로 출력</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>DispatcherServlet</p>\n<ul>\n<li>프론트 컨트롤러 (Front Controller)</li>\n<li>클라이언트의 모든 요청을 받은 후 </li>\n<li>이를 처리할 핸들러에게 넘기고 </li>\n<li>핸들러가 처리한 결과를 받아 </li>\n<li>사용자에게 응답 결과를 보여준다.</li>\n<li>DispathcerServlet은 여러 컴포넌트를 이용해 작업을 처리한다.</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch01.png\" alt=\"img\"></p>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 요청 선처리 작</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch02.png\" alt=\"img\"></p>\n</li>\n<li><p>요청 선처리 작업시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.LocaleResolver<ul>\n<li>지역 정보를 결정해주는 전략 오브젝트이다.</li>\n<li>디폴트인 AcceptHeaderLocalResolver는 HTTP 헤더의 정보를 보고 지역정보를 설정해준다.</li>\n</ul>\n</li>\n<li>org.springframework.web.servlet.FlashMapManager<ul>\n<li>FlashMap객체를 조회(retrieve) &amp; 저장을 위한 인터페이스</li>\n<li>RedirectAttributes의 addFlashAttribute메소드를 이용해서 저장한다.</li>\n<li>리다이렉트 후 조회를 하면 바로 정보는 삭제된다.</li>\n</ul>\n</li>\n<li>org.springframework.web.context.request.RequestContextHolder<ul>\n<li>일반 빈에서 HttpServletRequest, HttpServletResponse, HttpSession 등을 사용할 수 있도록 한다.</li>\n<li>해당 객체를 일반 빈에서 사용하게 되면, Web에 종속적이 될 수 있다.</li>\n</ul>\n</li>\n<li>forg.springframework.web.multipart.MultipartResolver<ul>\n<li>멀티파트 파일 업로드를 처리하는 전략</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 요청 전달</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch03.png\" alt=\"img\"></p>\n</li>\n<li><p>요청 전달시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.HandlerMapping<ul>\n<li>HandlerMapping구현체는 어떤 핸들러가 요청을 처리할지에 대한 정보를 알고 있다.</li>\n<li>디폴트로 설정되는 있는 핸들러매핑은 BeanNameHandlerMapping과 DefaultAnnotationHandlerMapping 2가지가 설정되어 있다.</li>\n</ul>\n</li>\n<li>org.springframework.web.servlet.HandlerExecutionChain<ul>\n<li>HandlerExecutionChain구현체는 실제로 호출된 핸들러에 대한 참조를 가지고 있다.</li>\n<li>즉, 무엇이 실행되어야 될지 알고 있는 객체라고 말할 수 있으며, 핸들러 실행전과 실행후에 수행될 HandlerInterceptor도 참조하고 있다.</li>\n</ul>\n</li>\n<li>org.springframework.web.servlet.HandlerAdapter<ul>\n<li>실제 핸들러를 실행하는 역할을 담당한다.</li>\n<li>핸들러 어댑터는 선택된 핸들러를 실행하는 방법과 응답을 ModelAndView로 변화하는 방법에 대해 알고 있다.</li>\n<li>디폴트로 설정되어 있는 핸들러어댑터는 HttpRequestHandlerAdapter, SimpleControllerHandlerAdapter, AnnotationMethodHanlderAdapter 3가지이다.</li>\n<li>@RequestMapping과 @Controller 애노테이션을 통해 정의되는 컨트롤러의 경우 DefaultAnnotationHandlerMapping에 의해 핸들러가 결정되고, 그에 대응되는 AnnotationMethodHandlerAdapter에 의해 호출이 일어난다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 요청 처리</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch04.png\" alt=\"img\"></p>\n</li>\n<li><p>요청 처리시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.ModelAndView<ul>\n<li>ModelAndView는 Controller의 처리 결과를 보여줄 view와 view에서 사용할 값을 전달하는 클래스이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 예외처리</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch05.png\" alt=\"img\"></p>\n</li>\n<li><p>예외 처리시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.handlerexceptionresolver<ul>\n<li>기본적으로 DispatcherServlet이 DefaultHandlerExceptionResolver를 등록한다.</li>\n<li>HandlerExceptionResolver는 예외가 던져졌을 때 어떤 핸들러를 실행할 것인지에 대한 정보를 제공한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 뷰 렌더링 과정</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch06.png\" alt=\"img\"></p>\n</li>\n<li><p>뷰 렌더링 과정시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.ViewResolver<ul>\n<li>컨트롤러가 리턴한 뷰 이름을 참고해서 적절한 뷰 오브젝트를 찾아주는 로직을 가진 전략 오프젝트이다.</li>\n<li>뷰의 종류에 따라 적절한 뷰 리졸버를 추가로 설정해줄 수 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 요청 처리 종료<img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch07.png\" alt=\"img\"></p>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Spring MVC 기본 동작 흐름</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/smvc.png\" alt=\"img\"></p>\n<ul>\n<li>클라이언트가 요청을 보내면 이 모든 요청을 Dispatcher Servlet이 받아</li>\n<li>Dispatcher Servlet은 이 요청을 처리하는 컨트롤러와 메소드가 무엇인지 Handler Mapping 에게 물어봐</li>\n<li>Handler Adapter에게 실행을 요청. </li>\n<li>결정된 컨트롤러와 메소드가 실행이 됨</li>\n<li>그 결과를 모델에 받아서, Dispatcher Servlet에게 전달<ul>\n<li>컨트롤러가 return한 view name으로 적절한 View Resolver로 출력</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>DispatcherServlet</p>\n<ul>\n<li>프론트 컨트롤러 (Front Controller)</li>\n<li>클라이언트의 모든 요청을 받은 후 </li>\n<li>이를 처리할 핸들러에게 넘기고 </li>\n<li>핸들러가 처리한 결과를 받아 </li>\n<li>사용자에게 응답 결과를 보여준다.</li>\n<li>DispathcerServlet은 여러 컴포넌트를 이용해 작업을 처리한다.</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch01.png\" alt=\"img\"></p>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 요청 선처리 작</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch02.png\" alt=\"img\"></p>\n</li>\n<li><p>요청 선처리 작업시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.LocaleResolver<ul>\n<li>지역 정보를 결정해주는 전략 오브젝트이다.</li>\n<li>디폴트인 AcceptHeaderLocalResolver는 HTTP 헤더의 정보를 보고 지역정보를 설정해준다.</li>\n</ul>\n</li>\n<li>org.springframework.web.servlet.FlashMapManager<ul>\n<li>FlashMap객체를 조회(retrieve) &amp; 저장을 위한 인터페이스</li>\n<li>RedirectAttributes의 addFlashAttribute메소드를 이용해서 저장한다.</li>\n<li>리다이렉트 후 조회를 하면 바로 정보는 삭제된다.</li>\n</ul>\n</li>\n<li>org.springframework.web.context.request.RequestContextHolder<ul>\n<li>일반 빈에서 HttpServletRequest, HttpServletResponse, HttpSession 등을 사용할 수 있도록 한다.</li>\n<li>해당 객체를 일반 빈에서 사용하게 되면, Web에 종속적이 될 수 있다.</li>\n</ul>\n</li>\n<li>forg.springframework.web.multipart.MultipartResolver<ul>\n<li>멀티파트 파일 업로드를 처리하는 전략</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 요청 전달</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch03.png\" alt=\"img\"></p>\n</li>\n<li><p>요청 전달시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.HandlerMapping<ul>\n<li>HandlerMapping구현체는 어떤 핸들러가 요청을 처리할지에 대한 정보를 알고 있다.</li>\n<li>디폴트로 설정되는 있는 핸들러매핑은 BeanNameHandlerMapping과 DefaultAnnotationHandlerMapping 2가지가 설정되어 있다.</li>\n</ul>\n</li>\n<li>org.springframework.web.servlet.HandlerExecutionChain<ul>\n<li>HandlerExecutionChain구현체는 실제로 호출된 핸들러에 대한 참조를 가지고 있다.</li>\n<li>즉, 무엇이 실행되어야 될지 알고 있는 객체라고 말할 수 있으며, 핸들러 실행전과 실행후에 수행될 HandlerInterceptor도 참조하고 있다.</li>\n</ul>\n</li>\n<li>org.springframework.web.servlet.HandlerAdapter<ul>\n<li>실제 핸들러를 실행하는 역할을 담당한다.</li>\n<li>핸들러 어댑터는 선택된 핸들러를 실행하는 방법과 응답을 ModelAndView로 변화하는 방법에 대해 알고 있다.</li>\n<li>디폴트로 설정되어 있는 핸들러어댑터는 HttpRequestHandlerAdapter, SimpleControllerHandlerAdapter, AnnotationMethodHanlderAdapter 3가지이다.</li>\n<li>@RequestMapping과 @Controller 애노테이션을 통해 정의되는 컨트롤러의 경우 DefaultAnnotationHandlerMapping에 의해 핸들러가 결정되고, 그에 대응되는 AnnotationMethodHandlerAdapter에 의해 호출이 일어난다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 요청 처리</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch04.png\" alt=\"img\"></p>\n</li>\n<li><p>요청 처리시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.ModelAndView<ul>\n<li>ModelAndView는 Controller의 처리 결과를 보여줄 view와 view에서 사용할 값을 전달하는 클래스이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 예외처리</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch05.png\" alt=\"img\"></p>\n</li>\n<li><p>예외 처리시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.handlerexceptionresolver<ul>\n<li>기본적으로 DispatcherServlet이 DefaultHandlerExceptionResolver를 등록한다.</li>\n<li>HandlerExceptionResolver는 예외가 던져졌을 때 어떤 핸들러를 실행할 것인지에 대한 정보를 제공한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 뷰 렌더링 과정</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch06.png\" alt=\"img\"></p>\n</li>\n<li><p>뷰 렌더링 과정시 사용된 컴포넌트</p>\n<ul>\n<li>org.springframework.web.servlet.ViewResolver<ul>\n<li>컨트롤러가 리턴한 뷰 이름을 참고해서 적절한 뷰 오브젝트를 찾아주는 로직을 가진 전략 오프젝트이다.</li>\n<li>뷰의 종류에 따라 적절한 뷰 리졸버를 추가로 설정해줄 수 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DispatcherServlet 내부 동작흐름 상세 - 요청 처리 종료<img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dispatch07.png\" alt=\"img\"></p>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"SQL","date":"2018-05-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- SQL(Structured Query Language)\n\n  - SQL은 데이터를 보다 쉽게 검색하고 추가, 삭제, 수정 같은 조작을 할 수 있도록 고안된 컴퓨터 언어입니다.\n  - 관계형 데이터베이스에서 데이터를 조작하고 쿼리하는 표준 수단입니다.\n  - DML (Data Manipulation Language)\n    - 데이터를 조작하기 위해 사용합니다.\n    - INSERT, UPDATE, DELETE, SELECT 등이 여기에 해당합니다.\n  - DDL (Data Definition Language)\n    - 데이터베이스의 스키마를 정의하거나 조작하기 위해 사용합니다.\n    - CREATE, DROP, ALTER 등이 여기에 해당합니다.\n  - DCL (Data Control Language) \n    - 데이터를 제어하는 언어입니다. 권한을 관리하고, 테이터의 보안, 무결성 등을 정의합니다.\n    - GRANT, REVOKE 등이 여기에 해당합니다.\n\n- Database 생성하기\n\n  ```mysql\n  mysql –uroot  -p\n  ```\n\n  - MySQL 관리자 계정인 root로 데이터베이스 관리 시스템에 접속하겠다는 것입니다.\n  - MySQL DBMS에 접속하면 “mysql>” 프롬프트가 보입니다.\n\n  ```mysql\n  mysql> create database connectdb;\n  ```\n\n  - 다음과 같은 명령을 실행하여 DB이름을 “connectdb＂로 생성하도록 하겠습니다.\n\n- Database 사용자 생성과 권한 주기\n\n  ```mysql\n  grant all privileges on db이름.* to 계정이름@'%' identified by ＇암호’;\n  grant all privileges on db이름.* to 계정이름@'localhost' identified by ＇암호’;\n  flush privileges;\n  ```\n\n  - Database를 생성했다면, 해당 데이터베이스를 사용하는 계정을 생성해야 합니다.\n  - 또한, 해당 계정이 데이터베이스를 이용할 수 있는 권한을 줘야 합니다.\n  - db이름 뒤의 * 는 모든 권한을 의미한다.\n  - @’%’는 어떤 클라이언트에서든 접근 가능하다는 의미이고, @’localhost’는 해당 컴퓨터에서만 접근 가능하다는 의미입니다.\n  - flush privileges는 DBMS에게 적용을 하라는 의미입니다.\n  - 해당 명령을 반드시 실행해줘야 합니다.\n\n  ```mysql\n  grant all privileges on connectdb.* to connectuser@'%' identified by 'connect123!@#';\n  \n  grant all privileges on connectdb.* to connectuser@'localhost' identified by 'connect123!@#';\n  \n  flush privileges;\n  ```\n\n- 생성한 Database에 접속하기\n\n  ```mysql\n  mysql> –h호스트명 –uDB계정명 –p 데이터베이스이름\n  ```\n\n  - db이름이 connectdb, db계정이 connectuser, 암호가 connect123!@# 일 경우 콘솔창에서 다음과 같이 입력합니다.\n\n  ```\n  mysql –h127.0.0.1 –uconnectuser –p connectdb [enter]\n  ```\n\n- DBMS에 존재하는 데이터베이스 확인하기\n\n  ```mysql\n  mysql> show databases;\n  ```\n\n- 사용중인 데이터베이스 전환하기\n\n  ```mysql\n  mysql> use mydb;\n  ```\n\n  - 데이터베이스를 전환하려면, \n  - 이미 데이터베이스가 존재해야 하며 \n  - 현재 접속 중인 계정이 해당 데이터베이스를 사용할 수 있는 권한이 있어야 합니다.\n\n- 데이터를 저장하는 공간 테이블(Table)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/table.png)\n\n  - 마이크로소프트의 엑셀(Excel)을 실행하면 표가 나옵니다. 이러한 표에 각종 값을 저장할 수 있습니다.\n  - 데이터베이스도 엑셀의 표와 유사한 테이블을 가질 수 있습니다.\n  - 엑셀과 다른 점은 데이터베이스를 생성해도 테이블은 존재하지 않는다는 것입니다.\n  - 테이블을 사용하려면 테이블을 생성하는 SQL을 사용해야 합니다.\n  - 그리고, 테이블에 값을 저장하려면 저장하기 위한 SQL을 사용해야 합니다.\n\n- 현재 데이터베이스에 존재하는 테이블 목록 확인하기\n\n  ```mysql\n  mysql> show tables;\n  ```\n\n-  테이블 구조를 확인하기 위한 DESCRIBE 명령\n\n  ```mysql\n  mysql> desc EMPLOYEE;\n  ```\n\n  \n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer ","source":"_posts/2018-05-08-SQL.md","raw":"---\nlayout: post\ntitle:  \"SQL\"\ndate:   2018-05-08\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- SQL(Structured Query Language)\n\n  - SQL은 데이터를 보다 쉽게 검색하고 추가, 삭제, 수정 같은 조작을 할 수 있도록 고안된 컴퓨터 언어입니다.\n  - 관계형 데이터베이스에서 데이터를 조작하고 쿼리하는 표준 수단입니다.\n  - DML (Data Manipulation Language)\n    - 데이터를 조작하기 위해 사용합니다.\n    - INSERT, UPDATE, DELETE, SELECT 등이 여기에 해당합니다.\n  - DDL (Data Definition Language)\n    - 데이터베이스의 스키마를 정의하거나 조작하기 위해 사용합니다.\n    - CREATE, DROP, ALTER 등이 여기에 해당합니다.\n  - DCL (Data Control Language) \n    - 데이터를 제어하는 언어입니다. 권한을 관리하고, 테이터의 보안, 무결성 등을 정의합니다.\n    - GRANT, REVOKE 등이 여기에 해당합니다.\n\n- Database 생성하기\n\n  ```mysql\n  mysql –uroot  -p\n  ```\n\n  - MySQL 관리자 계정인 root로 데이터베이스 관리 시스템에 접속하겠다는 것입니다.\n  - MySQL DBMS에 접속하면 “mysql>” 프롬프트가 보입니다.\n\n  ```mysql\n  mysql> create database connectdb;\n  ```\n\n  - 다음과 같은 명령을 실행하여 DB이름을 “connectdb＂로 생성하도록 하겠습니다.\n\n- Database 사용자 생성과 권한 주기\n\n  ```mysql\n  grant all privileges on db이름.* to 계정이름@'%' identified by ＇암호’;\n  grant all privileges on db이름.* to 계정이름@'localhost' identified by ＇암호’;\n  flush privileges;\n  ```\n\n  - Database를 생성했다면, 해당 데이터베이스를 사용하는 계정을 생성해야 합니다.\n  - 또한, 해당 계정이 데이터베이스를 이용할 수 있는 권한을 줘야 합니다.\n  - db이름 뒤의 * 는 모든 권한을 의미한다.\n  - @’%’는 어떤 클라이언트에서든 접근 가능하다는 의미이고, @’localhost’는 해당 컴퓨터에서만 접근 가능하다는 의미입니다.\n  - flush privileges는 DBMS에게 적용을 하라는 의미입니다.\n  - 해당 명령을 반드시 실행해줘야 합니다.\n\n  ```mysql\n  grant all privileges on connectdb.* to connectuser@'%' identified by 'connect123!@#';\n  \n  grant all privileges on connectdb.* to connectuser@'localhost' identified by 'connect123!@#';\n  \n  flush privileges;\n  ```\n\n- 생성한 Database에 접속하기\n\n  ```mysql\n  mysql> –h호스트명 –uDB계정명 –p 데이터베이스이름\n  ```\n\n  - db이름이 connectdb, db계정이 connectuser, 암호가 connect123!@# 일 경우 콘솔창에서 다음과 같이 입력합니다.\n\n  ```\n  mysql –h127.0.0.1 –uconnectuser –p connectdb [enter]\n  ```\n\n- DBMS에 존재하는 데이터베이스 확인하기\n\n  ```mysql\n  mysql> show databases;\n  ```\n\n- 사용중인 데이터베이스 전환하기\n\n  ```mysql\n  mysql> use mydb;\n  ```\n\n  - 데이터베이스를 전환하려면, \n  - 이미 데이터베이스가 존재해야 하며 \n  - 현재 접속 중인 계정이 해당 데이터베이스를 사용할 수 있는 권한이 있어야 합니다.\n\n- 데이터를 저장하는 공간 테이블(Table)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/table.png)\n\n  - 마이크로소프트의 엑셀(Excel)을 실행하면 표가 나옵니다. 이러한 표에 각종 값을 저장할 수 있습니다.\n  - 데이터베이스도 엑셀의 표와 유사한 테이블을 가질 수 있습니다.\n  - 엑셀과 다른 점은 데이터베이스를 생성해도 테이블은 존재하지 않는다는 것입니다.\n  - 테이블을 사용하려면 테이블을 생성하는 SQL을 사용해야 합니다.\n  - 그리고, 테이블에 값을 저장하려면 저장하기 위한 SQL을 사용해야 합니다.\n\n- 현재 데이터베이스에 존재하는 테이블 목록 확인하기\n\n  ```mysql\n  mysql> show tables;\n  ```\n\n-  테이블 구조를 확인하기 위한 DESCRIBE 명령\n\n  ```mysql\n  mysql> desc EMPLOYEE;\n  ```\n\n  \n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer ","slug":"2018-05-08-SQL","published":1,"updated":"2018-05-08T08:14:36.564Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jf00bx31x7oz9p0pmx","content":"<ul>\n<li><p>SQL(Structured Query Language)</p>\n<ul>\n<li>SQL은 데이터를 보다 쉽게 검색하고 추가, 삭제, 수정 같은 조작을 할 수 있도록 고안된 컴퓨터 언어입니다.</li>\n<li>관계형 데이터베이스에서 데이터를 조작하고 쿼리하는 표준 수단입니다.</li>\n<li>DML (Data Manipulation Language)<ul>\n<li>데이터를 조작하기 위해 사용합니다.</li>\n<li>INSERT, UPDATE, DELETE, SELECT 등이 여기에 해당합니다.</li>\n</ul>\n</li>\n<li>DDL (Data Definition Language)<ul>\n<li>데이터베이스의 스키마를 정의하거나 조작하기 위해 사용합니다.</li>\n<li>CREATE, DROP, ALTER 등이 여기에 해당합니다.</li>\n</ul>\n</li>\n<li>DCL (Data Control Language) <ul>\n<li>데이터를 제어하는 언어입니다. 권한을 관리하고, 테이터의 보안, 무결성 등을 정의합니다.</li>\n<li>GRANT, REVOKE 등이 여기에 해당합니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Database 생성하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql –uroot  -p</span><br></pre></td></tr></table></figure>\n<ul>\n<li>MySQL 관리자 계정인 root로 데이터베이스 관리 시스템에 접속하겠다는 것입니다.</li>\n<li>MySQL DBMS에 접속하면 “mysql&gt;” 프롬프트가 보입니다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create database connectdb;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>다음과 같은 명령을 실행하여 DB이름을 “connectdb＂로 생성하도록 하겠습니다.</li>\n</ul>\n</li>\n<li><p>Database 사용자 생성과 권한 주기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant all privileges on db이름.* to 계정이름@&apos;%&apos; identified by ＇암호’;</span><br><span class=\"line\">grant all privileges on db이름.* to 계정이름@&apos;localhost&apos; identified by ＇암호’;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Database를 생성했다면, 해당 데이터베이스를 사용하는 계정을 생성해야 합니다.</li>\n<li>또한, 해당 계정이 데이터베이스를 이용할 수 있는 권한을 줘야 합니다.</li>\n<li>db이름 뒤의 * 는 모든 권한을 의미한다.</li>\n<li>@’%’는 어떤 클라이언트에서든 접근 가능하다는 의미이고, @’localhost’는 해당 컴퓨터에서만 접근 가능하다는 의미입니다.</li>\n<li>flush privileges는 DBMS에게 적용을 하라는 의미입니다.</li>\n<li>해당 명령을 반드시 실행해줘야 합니다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant all privileges on connectdb.* to connectuser@&apos;%&apos; identified by &apos;connect123!@#&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">grant all privileges on connectdb.* to connectuser@&apos;localhost&apos; identified by &apos;connect123!@#&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>생성한 Database에 접속하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; –h호스트명 –uDB계정명 –p 데이터베이스이름</span><br></pre></td></tr></table></figure>\n<ul>\n<li>db이름이 connectdb, db계정이 connectuser, 암호가 connect123!@# 일 경우 콘솔창에서 다음과 같이 입력합니다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql –h127.0.0.1 –uconnectuser –p connectdb [enter]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>DBMS에 존재하는 데이터베이스 확인하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>사용중인 데이터베이스 전환하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; use mydb;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>데이터베이스를 전환하려면, </li>\n<li>이미 데이터베이스가 존재해야 하며 </li>\n<li>현재 접속 중인 계정이 해당 데이터베이스를 사용할 수 있는 권한이 있어야 합니다.</li>\n</ul>\n</li>\n<li><p>데이터를 저장하는 공간 테이블(Table)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/table.png\" alt=\"img\"></p>\n<ul>\n<li>마이크로소프트의 엑셀(Excel)을 실행하면 표가 나옵니다. 이러한 표에 각종 값을 저장할 수 있습니다.</li>\n<li>데이터베이스도 엑셀의 표와 유사한 테이블을 가질 수 있습니다.</li>\n<li>엑셀과 다른 점은 데이터베이스를 생성해도 테이블은 존재하지 않는다는 것입니다.</li>\n<li>테이블을 사용하려면 테이블을 생성하는 SQL을 사용해야 합니다.</li>\n<li>그리고, 테이블에 값을 저장하려면 저장하기 위한 SQL을 사용해야 합니다.</li>\n</ul>\n</li>\n<li><p>현재 데이터베이스에 존재하는 테이블 목록 확인하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show tables;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>테이블 구조를 확인하기 위한 DESCRIBE 명령</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; desc EMPLOYEE;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>SQL(Structured Query Language)</p>\n<ul>\n<li>SQL은 데이터를 보다 쉽게 검색하고 추가, 삭제, 수정 같은 조작을 할 수 있도록 고안된 컴퓨터 언어입니다.</li>\n<li>관계형 데이터베이스에서 데이터를 조작하고 쿼리하는 표준 수단입니다.</li>\n<li>DML (Data Manipulation Language)<ul>\n<li>데이터를 조작하기 위해 사용합니다.</li>\n<li>INSERT, UPDATE, DELETE, SELECT 등이 여기에 해당합니다.</li>\n</ul>\n</li>\n<li>DDL (Data Definition Language)<ul>\n<li>데이터베이스의 스키마를 정의하거나 조작하기 위해 사용합니다.</li>\n<li>CREATE, DROP, ALTER 등이 여기에 해당합니다.</li>\n</ul>\n</li>\n<li>DCL (Data Control Language) <ul>\n<li>데이터를 제어하는 언어입니다. 권한을 관리하고, 테이터의 보안, 무결성 등을 정의합니다.</li>\n<li>GRANT, REVOKE 등이 여기에 해당합니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Database 생성하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql –uroot  -p</span><br></pre></td></tr></table></figure>\n<ul>\n<li>MySQL 관리자 계정인 root로 데이터베이스 관리 시스템에 접속하겠다는 것입니다.</li>\n<li>MySQL DBMS에 접속하면 “mysql&gt;” 프롬프트가 보입니다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create database connectdb;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>다음과 같은 명령을 실행하여 DB이름을 “connectdb＂로 생성하도록 하겠습니다.</li>\n</ul>\n</li>\n<li><p>Database 사용자 생성과 권한 주기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant all privileges on db이름.* to 계정이름@&apos;%&apos; identified by ＇암호’;</span><br><span class=\"line\">grant all privileges on db이름.* to 계정이름@&apos;localhost&apos; identified by ＇암호’;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Database를 생성했다면, 해당 데이터베이스를 사용하는 계정을 생성해야 합니다.</li>\n<li>또한, 해당 계정이 데이터베이스를 이용할 수 있는 권한을 줘야 합니다.</li>\n<li>db이름 뒤의 * 는 모든 권한을 의미한다.</li>\n<li>@’%’는 어떤 클라이언트에서든 접근 가능하다는 의미이고, @’localhost’는 해당 컴퓨터에서만 접근 가능하다는 의미입니다.</li>\n<li>flush privileges는 DBMS에게 적용을 하라는 의미입니다.</li>\n<li>해당 명령을 반드시 실행해줘야 합니다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant all privileges on connectdb.* to connectuser@&apos;%&apos; identified by &apos;connect123!@#&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">grant all privileges on connectdb.* to connectuser@&apos;localhost&apos; identified by &apos;connect123!@#&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>생성한 Database에 접속하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; –h호스트명 –uDB계정명 –p 데이터베이스이름</span><br></pre></td></tr></table></figure>\n<ul>\n<li>db이름이 connectdb, db계정이 connectuser, 암호가 connect123!@# 일 경우 콘솔창에서 다음과 같이 입력합니다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql –h127.0.0.1 –uconnectuser –p connectdb [enter]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>DBMS에 존재하는 데이터베이스 확인하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>사용중인 데이터베이스 전환하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; use mydb;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>데이터베이스를 전환하려면, </li>\n<li>이미 데이터베이스가 존재해야 하며 </li>\n<li>현재 접속 중인 계정이 해당 데이터베이스를 사용할 수 있는 권한이 있어야 합니다.</li>\n</ul>\n</li>\n<li><p>데이터를 저장하는 공간 테이블(Table)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/table.png\" alt=\"img\"></p>\n<ul>\n<li>마이크로소프트의 엑셀(Excel)을 실행하면 표가 나옵니다. 이러한 표에 각종 값을 저장할 수 있습니다.</li>\n<li>데이터베이스도 엑셀의 표와 유사한 테이블을 가질 수 있습니다.</li>\n<li>엑셀과 다른 점은 데이터베이스를 생성해도 테이블은 존재하지 않는다는 것입니다.</li>\n<li>테이블을 사용하려면 테이블을 생성하는 SQL을 사용해야 합니다.</li>\n<li>그리고, 테이블에 값을 저장하려면 저장하기 위한 SQL을 사용해야 합니다.</li>\n</ul>\n</li>\n<li><p>현재 데이터베이스에 존재하는 테이블 목록 확인하기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show tables;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>테이블 구조를 확인하기 위한 DESCRIBE 명령</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; desc EMPLOYEE;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"HTML Layout","date":"2018-05-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg","_content":"\n- ‘레이아웃(Layout)’ 이란 ‘배치'라는 뜻으로, HTML 태그로 감싸진 각 정보 요소를 화면상의 어느 위치에 어떻게 자리잡을지를 결정하는 것을 말합니다.\n  - 기본적으로 상단의 <header>\n  - 하단의 <footer>\n  - 운데의 본문 영역\n\n- 레이아웃을 위한 태그\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/layoutT.png)\n\n- id, class\n\n  - id\n    - 고유한 속성으로 한 HTML 문서에 하나만 사용 가능합니다.\n    - 고유한 ID 값이 있으면 하나하나에 특별한 제어를 할 수 있으며 검색에도 용이합니다.\n  - class\n    - 하나의 HTML문서 안에 중복해서 사용 가능합니다.\n    - 하나의 태그에 여러 개의 다른 class 이름을 공백을 기준으로 나열할 수가 있습니다.\n    - 홈페이지 전체적인 스타일을 일관성 있게 지정하기 위해서는 class의 사용이 필수적입니다.\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n  - <https://gist.github.com/thomd/9220049>\n\n\n\n","source":"_posts/2018-05-06-HTML.md","raw":"---\nlayout: post\ntitle:  \"HTML Layout\"\ndate:   2018-05-05\ncategories: boostcourse\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/boostcourse.jpg\n---\n\n- ‘레이아웃(Layout)’ 이란 ‘배치'라는 뜻으로, HTML 태그로 감싸진 각 정보 요소를 화면상의 어느 위치에 어떻게 자리잡을지를 결정하는 것을 말합니다.\n  - 기본적으로 상단의 <header>\n  - 하단의 <footer>\n  - 운데의 본문 영역\n\n- 레이아웃을 위한 태그\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/layoutT.png)\n\n- id, class\n\n  - id\n    - 고유한 속성으로 한 HTML 문서에 하나만 사용 가능합니다.\n    - 고유한 ID 값이 있으면 하나하나에 특별한 제어를 할 수 있으며 검색에도 용이합니다.\n  - class\n    - 하나의 HTML문서 안에 중복해서 사용 가능합니다.\n    - 하나의 태그에 여러 개의 다른 class 이름을 공백을 기준으로 나열할 수가 있습니다.\n    - 홈페이지 전체적인 스타일을 일관성 있게 지정하기 위해서는 class의 사용이 필수적입니다.\n\n- Reference\n\n  - NAVER edwith boostcourse Full-Stack Web Developer \n  - <https://gist.github.com/thomd/9220049>\n\n\n\n","slug":"2018-05-06-HTML","published":1,"updated":"2018-05-05T16:28:34.599Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jg00bz31x7jexhzuhx","content":"<ul>\n<li><p>‘레이아웃(Layout)’ 이란 ‘배치’라는 뜻으로, HTML 태그로 감싸진 각 정보 요소를 화면상의 어느 위치에 어떻게 자리잡을지를 결정하는 것을 말합니다.</p>\n<ul>\n<li>기본적으로 상단의 <header></header></li>\n<li>하단의 <footer></footer></li>\n<li>운데의 본문 영역</li>\n</ul>\n</li>\n<li><p>레이아웃을 위한 태그</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/layoutT.png\" alt=\"img\"></p>\n</li>\n<li><p>id, class</p>\n<ul>\n<li>id<ul>\n<li>고유한 속성으로 한 HTML 문서에 하나만 사용 가능합니다.</li>\n<li>고유한 ID 값이 있으면 하나하나에 특별한 제어를 할 수 있으며 검색에도 용이합니다.</li>\n</ul>\n</li>\n<li>class<ul>\n<li>하나의 HTML문서 안에 중복해서 사용 가능합니다.</li>\n<li>하나의 태그에 여러 개의 다른 class 이름을 공백을 기준으로 나열할 수가 있습니다.</li>\n<li>홈페이지 전체적인 스타일을 일관성 있게 지정하기 위해서는 class의 사용이 필수적입니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n<li><a href=\"https://gist.github.com/thomd/9220049\" target=\"_blank\" rel=\"noopener\">https://gist.github.com/thomd/9220049</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>‘레이아웃(Layout)’ 이란 ‘배치’라는 뜻으로, HTML 태그로 감싸진 각 정보 요소를 화면상의 어느 위치에 어떻게 자리잡을지를 결정하는 것을 말합니다.</p>\n<ul>\n<li>기본적으로 상단의 <header></header></li>\n<li>하단의 <footer></footer></li>\n<li>운데의 본문 영역</li>\n</ul>\n</li>\n<li><p>레이아웃을 위한 태그</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/layoutT.png\" alt=\"img\"></p>\n</li>\n<li><p>id, class</p>\n<ul>\n<li>id<ul>\n<li>고유한 속성으로 한 HTML 문서에 하나만 사용 가능합니다.</li>\n<li>고유한 ID 값이 있으면 하나하나에 특별한 제어를 할 수 있으며 검색에도 용이합니다.</li>\n</ul>\n</li>\n<li>class<ul>\n<li>하나의 HTML문서 안에 중복해서 사용 가능합니다.</li>\n<li>하나의 태그에 여러 개의 다른 class 이름을 공백을 기준으로 나열할 수가 있습니다.</li>\n<li>홈페이지 전체적인 스타일을 일관성 있게 지정하기 위해서는 class의 사용이 필수적입니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Reference</p>\n<ul>\n<li>NAVER edwith boostcourse Full-Stack Web Developer </li>\n<li><a href=\"https://gist.github.com/thomd/9220049\" target=\"_blank\" rel=\"noopener\">https://gist.github.com/thomd/9220049</a></li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Chain of Responsibility Pattern01","date":"2018-05-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Intent\n\n- It avoids attaching the sender of a request to its receiver, giving this way other objects the possibility of handling the request too.\n- The objects become parts of a chain and the request is sent from one object to another across the chain until one of the objects will handle it.\n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corUML.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor05.png)\n\n## Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor06.png)\n\n## Reference\n\n<http://www.oodesign.com/proxy-pattern.html>\n\n<https://www.tutorialspoint.com/design_pattern/singleton_pattern.html>\n\n\n\n","source":"_posts/2018-05-09-Chain of Responsibility Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Chain of Responsibility Pattern01\"\ndate:   2018-05-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Intent\n\n- It avoids attaching the sender of a request to its receiver, giving this way other objects the possibility of handling the request too.\n- The objects become parts of a chain and the request is sent from one object to another across the chain until one of the objects will handle it.\n\n- Class Diagram\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corUML.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor05.png)\n\n## Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor06.png)\n\n## Reference\n\n<http://www.oodesign.com/proxy-pattern.html>\n\n<https://www.tutorialspoint.com/design_pattern/singleton_pattern.html>\n\n\n\n","slug":"2018-05-09-Chain of Responsibility Pattern01","published":1,"updated":"2018-10-25T05:39:20.841Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ji00c131x7qt71ngpa","content":"<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><ul>\n<li>It avoids attaching the sender of a request to its receiver, giving this way other objects the possibility of handling the request too.</li>\n<li><p>The objects become parts of a chain and the request is sent from one object to another across the chain until one of the objects will handle it.</p>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corUML.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor05.png\" alt=\"img\"></p>\n<h2 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor06.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://www.oodesign.com/proxy-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/proxy-pattern.html</a></p>\n<p><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><ul>\n<li>It avoids attaching the sender of a request to its receiver, giving this way other objects the possibility of handling the request too.</li>\n<li><p>The objects become parts of a chain and the request is sent from one object to another across the chain until one of the objects will handle it.</p>\n</li>\n<li><p>Class Diagram</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corUML.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor05.png\" alt=\"img\"></p>\n<h2 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cor06.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://www.oodesign.com/proxy-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/proxy-pattern.html</a></p>\n<p><a href=\"https://www.tutorialspoint.com/design_pattern/singleton_pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/singleton_pattern.html</a></p>\n"},{"layout":"post","title":"Chain of Responsibility Pattern02","date":"2018-05-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp06.png)\n\n## Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corResult.png)\n\n## Reference\n\n<http://www.oodesign.com/proxy-pattern.html>\n\n\n\n","source":"_posts/2018-05-10-Chain of Responsibility Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Chain of Responsibility Pattern02\"\ndate:   2018-05-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp06.png)\n\n## Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corResult.png)\n\n## Reference\n\n<http://www.oodesign.com/proxy-pattern.html>\n\n\n\n","slug":"2018-05-10-Chain of Responsibility Pattern02","published":1,"updated":"2018-10-25T05:39:27.769Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jj00c331x7nbzqrdow","content":"<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp06.png\" alt=\"img\"></p>\n<h2 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corResult.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://www.oodesign.com/proxy-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/proxy-pattern.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corp06.png\" alt=\"img\"></p>\n<h2 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/corResult.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://www.oodesign.com/proxy-pattern.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/proxy-pattern.html</a></p>\n"},{"layout":"post","title":"돌다리","date":"2018-05-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n<https://www.acmicpc.net/problem/12761>\n\n- 트리의 깊이가 얼마인지 구하면 됨\n  - 현재위치에서 갈 수 있는 곳을 Queue에 넣을 때, \n  - 위치와 트리의 depth를 함께 저장한다.\n  - 위치\n    - 8가지 경우의 수\n  - 트리의 depth\n    - 현재위치의 깊이+1\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stone01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stone02.png)\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-05-08-돌다리.md","raw":"---\nlayout: post\ntitle:  \"돌다리\"\ndate:   2018-05-08\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n<https://www.acmicpc.net/problem/12761>\n\n- 트리의 깊이가 얼마인지 구하면 됨\n  - 현재위치에서 갈 수 있는 곳을 Queue에 넣을 때, \n  - 위치와 트리의 depth를 함께 저장한다.\n  - 위치\n    - 8가지 경우의 수\n  - 트리의 depth\n    - 현재위치의 깊이+1\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stone01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stone02.png)\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2018-05-08-돌다리","published":1,"updated":"2018-05-08T12:08:32.789Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jl00c531x70kw3egh5","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/12761\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/12761</a></p>\n<ul>\n<li>트리의 깊이가 얼마인지 구하면 됨<ul>\n<li>현재위치에서 갈 수 있는 곳을 Queue에 넣을 때, </li>\n<li>위치와 트리의 depth를 함께 저장한다.</li>\n<li>위치<ul>\n<li>8가지 경우의 수</li>\n</ul>\n</li>\n<li>트리의 depth<ul>\n<li>현재위치의 깊이+1</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stone01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stone02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/12761\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/12761</a></p>\n<ul>\n<li>트리의 깊이가 얼마인지 구하면 됨<ul>\n<li>현재위치에서 갈 수 있는 곳을 Queue에 넣을 때, </li>\n<li>위치와 트리의 depth를 함께 저장한다.</li>\n<li>위치<ul>\n<li>8가지 경우의 수</li>\n</ul>\n</li>\n<li>트리의 depth<ul>\n<li>현재위치의 깊이+1</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stone01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stone02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Chain of Responsibility Pattern03","date":"2018-05-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nUse the Chain of Responsibility Pattern when you want to give more than one object a chance to handle a request. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chain0301.png)\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chain0302.png)\n\n## Benefits\n\n- Decouples the sender of the request and its receivers. \n- Simplifies your object because it doesn’t have to know the chain’s structure and keep direct references to its members. \n- Allows you to add or remove responsibilities dynamically by changing the members or order of the chain. \n\n## Reference\n\nHead First Design Pattern\n\n\n\n","source":"_posts/2018-05-10-Chain of Responsibility Pattern03.md","raw":"---\nlayout: post\ntitle:  \"Chain of Responsibility Pattern03\"\ndate:   2018-05-09\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nUse the Chain of Responsibility Pattern when you want to give more than one object a chance to handle a request. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chain0301.png)\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chain0302.png)\n\n## Benefits\n\n- Decouples the sender of the request and its receivers. \n- Simplifies your object because it doesn’t have to know the chain’s structure and keep direct references to its members. \n- Allows you to add or remove responsibilities dynamically by changing the members or order of the chain. \n\n## Reference\n\nHead First Design Pattern\n\n\n\n","slug":"2018-05-10-Chain of Responsibility Pattern03","published":1,"updated":"2018-10-25T05:36:00.965Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jm00c731x7ftelhp8e","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Chain of Responsibility Pattern when you want to give more than one object a chance to handle a request. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chain0301.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chain0302.png\" alt=\"img\"></p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Decouples the sender of the request and its receivers. </li>\n<li>Simplifies your object because it doesn’t have to know the chain’s structure and keep direct references to its members. </li>\n<li>Allows you to add or remove responsibilities dynamically by changing the members or order of the chain. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Chain of Responsibility Pattern when you want to give more than one object a chance to handle a request. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chain0301.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chain0302.png\" alt=\"img\"></p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Decouples the sender of the request and its receivers. </li>\n<li>Simplifies your object because it doesn’t have to know the chain’s structure and keep direct references to its members. </li>\n<li>Allows you to add or remove responsibilities dynamically by changing the members or order of the chain. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Abstract Factory Pattern02","date":"2018-05-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\n관련성 있는 여러 종류의 객체를 일관성 있는 방식으로 생성할 때 유용하다.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractF01.png)\n\n- Abstarct Factory\n  - 실제 팩토리 클래스의 공통 인터페이스\n  - 각 제품의 부품을 생성하는 기능을 추사 메서드로 정의\n- ConcreteFactory\n  - 구체적인 팩토리 클래스\n  - AbstractFactory 클래스의 추상 메서드를 오버라이드함으로써 구체적인 제품을 생성\n- AbstractProduct\n  - 제품의 공통 인터페이스\n- ConcreteProduct\n  - 구체적인 팩토리 클래스에서 생성되는 구체적인 제품\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractF02.png)\n\n- ElevatorFactory\n  - AbstractFactory\n- LGElevatorFactory, HyundaiElevatorFactory\n  - ConcreteFactory\n- Motor\n  - AbstractProductA\n- LGMotor, HyundaiMotor\n  - ConcreteProductA\n- Door\n  - AbstractProductB\n- LGDoor, HyundaiDoor\n  - ConcreteProductB\n\n## Reference\n\nJava 객체 지향 디자인 패턴 <정인상, 채흥석 지음>\n\n\n\n","source":"_posts/2018-05-13-Abstract Factory Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Abstract Factory Pattern02\"\ndate:   2018-05-13\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\n관련성 있는 여러 종류의 객체를 일관성 있는 방식으로 생성할 때 유용하다.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractF01.png)\n\n- Abstarct Factory\n  - 실제 팩토리 클래스의 공통 인터페이스\n  - 각 제품의 부품을 생성하는 기능을 추사 메서드로 정의\n- ConcreteFactory\n  - 구체적인 팩토리 클래스\n  - AbstractFactory 클래스의 추상 메서드를 오버라이드함으로써 구체적인 제품을 생성\n- AbstractProduct\n  - 제품의 공통 인터페이스\n- ConcreteProduct\n  - 구체적인 팩토리 클래스에서 생성되는 구체적인 제품\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractF02.png)\n\n- ElevatorFactory\n  - AbstractFactory\n- LGElevatorFactory, HyundaiElevatorFactory\n  - ConcreteFactory\n- Motor\n  - AbstractProductA\n- LGMotor, HyundaiMotor\n  - ConcreteProductA\n- Door\n  - AbstractProductB\n- LGDoor, HyundaiDoor\n  - ConcreteProductB\n\n## Reference\n\nJava 객체 지향 디자인 패턴 <정인상, 채흥석 지음>\n\n\n\n","slug":"2018-05-13-Abstract Factory Pattern02","published":1,"updated":"2018-10-25T05:36:10.806Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jo00c931x71e7oafhy","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>관련성 있는 여러 종류의 객체를 일관성 있는 방식으로 생성할 때 유용하다.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractF01.png\" alt=\"img\"></p>\n<ul>\n<li>Abstarct Factory<ul>\n<li>실제 팩토리 클래스의 공통 인터페이스</li>\n<li>각 제품의 부품을 생성하는 기능을 추사 메서드로 정의</li>\n</ul>\n</li>\n<li>ConcreteFactory<ul>\n<li>구체적인 팩토리 클래스</li>\n<li>AbstractFactory 클래스의 추상 메서드를 오버라이드함으로써 구체적인 제품을 생성</li>\n</ul>\n</li>\n<li>AbstractProduct<ul>\n<li>제품의 공통 인터페이스</li>\n</ul>\n</li>\n<li>ConcreteProduct<ul>\n<li>구체적인 팩토리 클래스에서 생성되는 구체적인 제품</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractF02.png\" alt=\"img\"></p>\n<ul>\n<li>ElevatorFactory<ul>\n<li>AbstractFactory</li>\n</ul>\n</li>\n<li>LGElevatorFactory, HyundaiElevatorFactory<ul>\n<li>ConcreteFactory</li>\n</ul>\n</li>\n<li>Motor<ul>\n<li>AbstractProductA</li>\n</ul>\n</li>\n<li>LGMotor, HyundaiMotor<ul>\n<li>ConcreteProductA</li>\n</ul>\n</li>\n<li>Door<ul>\n<li>AbstractProductB</li>\n</ul>\n</li>\n<li>LGDoor, HyundaiDoor<ul>\n<li>ConcreteProductB</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체 지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>관련성 있는 여러 종류의 객체를 일관성 있는 방식으로 생성할 때 유용하다.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractF01.png\" alt=\"img\"></p>\n<ul>\n<li>Abstarct Factory<ul>\n<li>실제 팩토리 클래스의 공통 인터페이스</li>\n<li>각 제품의 부품을 생성하는 기능을 추사 메서드로 정의</li>\n</ul>\n</li>\n<li>ConcreteFactory<ul>\n<li>구체적인 팩토리 클래스</li>\n<li>AbstractFactory 클래스의 추상 메서드를 오버라이드함으로써 구체적인 제품을 생성</li>\n</ul>\n</li>\n<li>AbstractProduct<ul>\n<li>제품의 공통 인터페이스</li>\n</ul>\n</li>\n<li>ConcreteProduct<ul>\n<li>구체적인 팩토리 클래스에서 생성되는 구체적인 제품</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractF02.png\" alt=\"img\"></p>\n<ul>\n<li>ElevatorFactory<ul>\n<li>AbstractFactory</li>\n</ul>\n</li>\n<li>LGElevatorFactory, HyundaiElevatorFactory<ul>\n<li>ConcreteFactory</li>\n</ul>\n</li>\n<li>Motor<ul>\n<li>AbstractProductA</li>\n</ul>\n</li>\n<li>LGMotor, HyundaiMotor<ul>\n<li>ConcreteProductA</li>\n</ul>\n</li>\n<li>Door<ul>\n<li>AbstractProductB</li>\n</ul>\n</li>\n<li>LGDoor, HyundaiDoor<ul>\n<li>ConcreteProductB</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체 지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n"},{"layout":"post","title":"팀배분","date":"2018-05-09T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n<https://www.acmicpc.net/problem/1953>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake04.png)\n\n- 깊이에 따라 팀을 나눔\n  - 깊이 0, 2, 4, 6, 8 .... : 백팀\n  - 깊이 1, 3, 5, 7, 8 .... : 청팀\n- 학생을 아직 방문하지 않았으면 학생을 root로 BFS\n- 깊이 정보를 나타내기 위해 Student class 생성해서, 학생 번호와 깊이 저장\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake03.png)\n\n\n","source":"_posts/2018-05-10-팀배분.md","raw":"---\nlayout: post\ntitle:  \"팀배분\"\ndate:   2018-05-10\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n<https://www.acmicpc.net/problem/1953>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake04.png)\n\n- 깊이에 따라 팀을 나눔\n  - 깊이 0, 2, 4, 6, 8 .... : 백팀\n  - 깊이 1, 3, 5, 7, 8 .... : 청팀\n- 학생을 아직 방문하지 않았으면 학생을 root로 BFS\n- 깊이 정보를 나타내기 위해 Student class 생성해서, 학생 번호와 깊이 저장\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake03.png)\n\n\n","slug":"2018-05-10-팀배분","published":1,"updated":"2018-05-10T08:38:50.202Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jq00cb31x790feptkb","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/1953\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1953</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake04.png\" alt=\"img\"></p>\n<ul>\n<li>깊이에 따라 팀을 나눔<ul>\n<li>깊이 0, 2, 4, 6, 8 …. : 백팀</li>\n<li>깊이 1, 3, 5, 7, 8 …. : 청팀</li>\n</ul>\n</li>\n<li>학생을 아직 방문하지 않았으면 학생을 root로 BFS</li>\n<li>깊이 정보를 나타내기 위해 Student class 생성해서, 학생 번호와 깊이 저장</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/1953\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1953</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake04.png\" alt=\"img\"></p>\n<ul>\n<li>깊이에 따라 팀을 나눔<ul>\n<li>깊이 0, 2, 4, 6, 8 …. : 백팀</li>\n<li>깊이 1, 3, 5, 7, 8 …. : 청팀</li>\n</ul>\n</li>\n<li>학생을 아직 방문하지 않았으면 학생을 root로 BFS</li>\n<li>깊이 정보를 나타내기 위해 Student class 생성해서, 학생 번호와 깊이 저장</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/teammake03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Factory Method Pattern02","date":"2018-05-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition \n\n객체를 생성하는 코드를 별도의 클래스/메소드로 분리함으로써 객체 생성 방식의 변화에 대비하는데 유용하다.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factorymethodpa01.png)\n\n- Product \n  - 펙토리 메서드로 생설될 객체의 공통 인터페이스\n- ConcreteProduct\n  - 구체적으로 객체가 생성되는 클래스\n- Creator\n  - 팩토리 메서드를 갖는 클래스\n- ConcreteCreator\n  - 팩토리 매서드를 구현하는 클래스\n  - ConcreteProduct 객체를 생성 \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factorymethodpa02.png)\n\n- ElevatorScheduler interface\n  - Prudct\n- ResponseTimeScheduler, ThroughputScheduler\n  - ConcretePrudct\n- ElevatorManger\n  - Creator\n- ElevatorMangerWithThroughputScheduling, ElevatorMangerWithDynamicScheduling, ElevatorManagerWithResponseTimeScheduling\n  - ConcreteCreator\n\n## Reference\n\nJava 객체 지향 디자인 패턴 <정인상, 채흥석 지음>\n\n\n\n","source":"_posts/2018-05-13-Factory Method Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Factory Method Pattern02\"\ndate:   2018-05-13\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition \n\n객체를 생성하는 코드를 별도의 클래스/메소드로 분리함으로써 객체 생성 방식의 변화에 대비하는데 유용하다.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factorymethodpa01.png)\n\n- Product \n  - 펙토리 메서드로 생설될 객체의 공통 인터페이스\n- ConcreteProduct\n  - 구체적으로 객체가 생성되는 클래스\n- Creator\n  - 팩토리 메서드를 갖는 클래스\n- ConcreteCreator\n  - 팩토리 매서드를 구현하는 클래스\n  - ConcreteProduct 객체를 생성 \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factorymethodpa02.png)\n\n- ElevatorScheduler interface\n  - Prudct\n- ResponseTimeScheduler, ThroughputScheduler\n  - ConcretePrudct\n- ElevatorManger\n  - Creator\n- ElevatorMangerWithThroughputScheduling, ElevatorMangerWithDynamicScheduling, ElevatorManagerWithResponseTimeScheduling\n  - ConcreteCreator\n\n## Reference\n\nJava 객체 지향 디자인 패턴 <정인상, 채흥석 지음>\n\n\n\n","slug":"2018-05-13-Factory Method Pattern02","published":1,"updated":"2018-10-25T05:36:20.375Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jt00cd31x7einrbgbb","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>객체를 생성하는 코드를 별도의 클래스/메소드로 분리함으로써 객체 생성 방식의 변화에 대비하는데 유용하다.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factorymethodpa01.png\" alt=\"img\"></p>\n<ul>\n<li>Product <ul>\n<li>펙토리 메서드로 생설될 객체의 공통 인터페이스</li>\n</ul>\n</li>\n<li>ConcreteProduct<ul>\n<li>구체적으로 객체가 생성되는 클래스</li>\n</ul>\n</li>\n<li>Creator<ul>\n<li>팩토리 메서드를 갖는 클래스</li>\n</ul>\n</li>\n<li>ConcreteCreator<ul>\n<li>팩토리 매서드를 구현하는 클래스</li>\n<li>ConcreteProduct 객체를 생성 </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factorymethodpa02.png\" alt=\"img\"></p>\n<ul>\n<li>ElevatorScheduler interface<ul>\n<li>Prudct</li>\n</ul>\n</li>\n<li>ResponseTimeScheduler, ThroughputScheduler<ul>\n<li>ConcretePrudct</li>\n</ul>\n</li>\n<li>ElevatorManger<ul>\n<li>Creator</li>\n</ul>\n</li>\n<li>ElevatorMangerWithThroughputScheduling, ElevatorMangerWithDynamicScheduling, ElevatorManagerWithResponseTimeScheduling<ul>\n<li>ConcreteCreator</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체 지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>객체를 생성하는 코드를 별도의 클래스/메소드로 분리함으로써 객체 생성 방식의 변화에 대비하는데 유용하다.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factorymethodpa01.png\" alt=\"img\"></p>\n<ul>\n<li>Product <ul>\n<li>펙토리 메서드로 생설될 객체의 공통 인터페이스</li>\n</ul>\n</li>\n<li>ConcreteProduct<ul>\n<li>구체적으로 객체가 생성되는 클래스</li>\n</ul>\n</li>\n<li>Creator<ul>\n<li>팩토리 메서드를 갖는 클래스</li>\n</ul>\n</li>\n<li>ConcreteCreator<ul>\n<li>팩토리 매서드를 구현하는 클래스</li>\n<li>ConcreteProduct 객체를 생성 </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factorymethodpa02.png\" alt=\"img\"></p>\n<ul>\n<li>ElevatorScheduler interface<ul>\n<li>Prudct</li>\n</ul>\n</li>\n<li>ResponseTimeScheduler, ThroughputScheduler<ul>\n<li>ConcretePrudct</li>\n</ul>\n</li>\n<li>ElevatorManger<ul>\n<li>Creator</li>\n</ul>\n</li>\n<li>ElevatorMangerWithThroughputScheduling, ElevatorMangerWithDynamicScheduling, ElevatorManagerWithResponseTimeScheduling<ul>\n<li>ConcreteCreator</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체 지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n"},{"layout":"post","title":"Simple Factory","date":"2018-05-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\nThe Simple Factory isn’t actually a Design Pattern; it’s more of a programming idiom. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/simpleFactoryUML.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza07.png)\n\n- Result\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza09.png)\n\n\n\n## Reference\n\nHead First Design Pattern","source":"_posts/2018-05-13-Simple Factory.md","raw":"---\nlayout: post\ntitle:  \"Simple Factory\"\ndate:   2018-05-13\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\nThe Simple Factory isn’t actually a Design Pattern; it’s more of a programming idiom. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/simpleFactoryUML.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza07.png)\n\n- Result\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza09.png)\n\n\n\n## Reference\n\nHead First Design Pattern","slug":"2018-05-13-Simple Factory","published":1,"updated":"2018-10-25T05:39:52.399Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ju00cf31x7ay724zt1","content":"<p>The Simple Factory isn’t actually a Design Pattern; it’s more of a programming idiom. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/simpleFactoryUML.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza07.png\" alt=\"img\"></p>\n<ul>\n<li><p>Result</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza09.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>The Simple Factory isn’t actually a Design Pattern; it’s more of a programming idiom. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/simpleFactoryUML.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza07.png\" alt=\"img\"></p>\n<ul>\n<li><p>Result</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pizza09.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Factory Method Pattern01","date":"2018-05-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nThe Factory Method Pattern defines an interface for creating an object, \n\nbut lets subclasses decide which class to instantiate. \n\nFactory Method lets a class defer instantiation to subclasses. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factoryMethod01.png)\n\n## Example\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factoryMethod02.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm13.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm13.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm10.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm11.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm12.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm14.png)\n\n## Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm15.png)\n\n\n\n## Reference\n\nHead First Design Pattern\n\n\n\n","source":"_posts/2018-05-13-Factory Method Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Factory Method Pattern01\"\ndate:   2018-05-13\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nThe Factory Method Pattern defines an interface for creating an object, \n\nbut lets subclasses decide which class to instantiate. \n\nFactory Method lets a class defer instantiation to subclasses. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factoryMethod01.png)\n\n## Example\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factoryMethod02.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm13.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm13.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm10.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm11.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm12.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm14.png)\n\n## Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm15.png)\n\n\n\n## Reference\n\nHead First Design Pattern\n\n\n\n","slug":"2018-05-13-Factory Method Pattern01","published":1,"updated":"2018-10-25T05:39:43.975Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jv00ch31x7xkdwhx3l","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Factory Method Pattern defines an interface for creating an object, </p>\n<p>but lets subclasses decide which class to instantiate. </p>\n<p>Factory Method lets a class defer instantiation to subclasses. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factoryMethod01.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factoryMethod02.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm13.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm13.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm10.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm11.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm12.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm14.png\" alt=\"img\"></p>\n<h2 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm15.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Factory Method Pattern defines an interface for creating an object, </p>\n<p>but lets subclasses decide which class to instantiate. </p>\n<p>Factory Method lets a class defer instantiation to subclasses. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factoryMethod01.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/factoryMethod02.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm13.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm13.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm10.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm11.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm12.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm14.png\" alt=\"img\"></p>\n<h2 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fm15.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"로봇청소기","date":"2018-04-26T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/4991>\n\n다시 푼 문제이다. 어떻게 풀어야하는지 전혀 감이 잡히지 않았다. 해설을 보고 이해를 하였다.\n\n## 풀이\n\n1. map 입력을 받으며, 더러운 칸이면 칸의 위치를 백터에 저장한다.\n2. 시작 위치에서 더러운 칸을 이동하는 최소값을 next_permutation()을 이용하여 구한다.\n\n## 예시\n\n- 다음과 같이 더러운 칸이 세 곳 이라고 하자.\n  - Start Point\n  - Dirty Point 01\n  - Dirty Point 02\n  - Dirty Point 03\n- 방문하는 순서는 다음과 같은 경우들이 있다. 이 때, next_permutation() 을 이용한다.\n  - S -> 01 -> 02 -> 03\n  - S -> 01 -> 03 -> 02 \n  - S -> 02 -> 01 -> 03\n  - S -> 02 -> 03 -> 01 \n  - S -> 03 -> 01 -> 02\n  - S -> 03 -> 02 -> 01 \n- 그렇다면 이동 경로 거리는 어떻게 구할까? 위 예시 중, 가장 위의 경우를 보자.\n  - S -> 01 최단 거리 :  S를 시작점으로 하는 BFS 에서 구할 수 있다.\n  - 01 -> 02 최단 거리 :  01을 시작점으로 하는 BFS 에서 구할 수 있다. \n  - 02 -> 03 최단 거리 :  02를 시작점으로 하는 BFS 에서 구할 수 있다. \n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotcleanNew.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner05.png)","source":"_posts/2018-04-27-로봇청소기.md","raw":"---\nlayout: post\ntitle:  \"로봇청소기\"\ndate:   2018-04-27\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/4991>\n\n다시 푼 문제이다. 어떻게 풀어야하는지 전혀 감이 잡히지 않았다. 해설을 보고 이해를 하였다.\n\n## 풀이\n\n1. map 입력을 받으며, 더러운 칸이면 칸의 위치를 백터에 저장한다.\n2. 시작 위치에서 더러운 칸을 이동하는 최소값을 next_permutation()을 이용하여 구한다.\n\n## 예시\n\n- 다음과 같이 더러운 칸이 세 곳 이라고 하자.\n  - Start Point\n  - Dirty Point 01\n  - Dirty Point 02\n  - Dirty Point 03\n- 방문하는 순서는 다음과 같은 경우들이 있다. 이 때, next_permutation() 을 이용한다.\n  - S -> 01 -> 02 -> 03\n  - S -> 01 -> 03 -> 02 \n  - S -> 02 -> 01 -> 03\n  - S -> 02 -> 03 -> 01 \n  - S -> 03 -> 01 -> 02\n  - S -> 03 -> 02 -> 01 \n- 그렇다면 이동 경로 거리는 어떻게 구할까? 위 예시 중, 가장 위의 경우를 보자.\n  - S -> 01 최단 거리 :  S를 시작점으로 하는 BFS 에서 구할 수 있다.\n  - 01 -> 02 최단 거리 :  01을 시작점으로 하는 BFS 에서 구할 수 있다. \n  - 02 -> 03 최단 거리 :  02를 시작점으로 하는 BFS 에서 구할 수 있다. \n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotcleanNew.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner05.png)","slug":"2018-04-27-로봇청소기","published":1,"updated":"2018-08-30T09:31:10.512Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jw00cj31x70xzgkvkf","content":"<p><a href=\"https://www.acmicpc.net/problem/4991\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/4991</a></p>\n<p>다시 푼 문제이다. 어떻게 풀어야하는지 전혀 감이 잡히지 않았다. 해설을 보고 이해를 하였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>map 입력을 받으며, 더러운 칸이면 칸의 위치를 백터에 저장한다.</li>\n<li>시작 위치에서 더러운 칸을 이동하는 최소값을 next_permutation()을 이용하여 구한다.</li>\n</ol>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><ul>\n<li>다음과 같이 더러운 칸이 세 곳 이라고 하자.<ul>\n<li>Start Point</li>\n<li>Dirty Point 01</li>\n<li>Dirty Point 02</li>\n<li>Dirty Point 03</li>\n</ul>\n</li>\n<li>방문하는 순서는 다음과 같은 경우들이 있다. 이 때, next_permutation() 을 이용한다.<ul>\n<li>S -&gt; 01 -&gt; 02 -&gt; 03</li>\n<li>S -&gt; 01 -&gt; 03 -&gt; 02 </li>\n<li>S -&gt; 02 -&gt; 01 -&gt; 03</li>\n<li>S -&gt; 02 -&gt; 03 -&gt; 01 </li>\n<li>S -&gt; 03 -&gt; 01 -&gt; 02</li>\n<li>S -&gt; 03 -&gt; 02 -&gt; 01 </li>\n</ul>\n</li>\n<li>그렇다면 이동 경로 거리는 어떻게 구할까? 위 예시 중, 가장 위의 경우를 보자.<ul>\n<li>S -&gt; 01 최단 거리 :  S를 시작점으로 하는 BFS 에서 구할 수 있다.</li>\n<li>01 -&gt; 02 최단 거리 :  01을 시작점으로 하는 BFS 에서 구할 수 있다. </li>\n<li>02 -&gt; 03 최단 거리 :  02를 시작점으로 하는 BFS 에서 구할 수 있다. </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotcleanNew.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner05.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/4991\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/4991</a></p>\n<p>다시 푼 문제이다. 어떻게 풀어야하는지 전혀 감이 잡히지 않았다. 해설을 보고 이해를 하였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>map 입력을 받으며, 더러운 칸이면 칸의 위치를 백터에 저장한다.</li>\n<li>시작 위치에서 더러운 칸을 이동하는 최소값을 next_permutation()을 이용하여 구한다.</li>\n</ol>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><ul>\n<li>다음과 같이 더러운 칸이 세 곳 이라고 하자.<ul>\n<li>Start Point</li>\n<li>Dirty Point 01</li>\n<li>Dirty Point 02</li>\n<li>Dirty Point 03</li>\n</ul>\n</li>\n<li>방문하는 순서는 다음과 같은 경우들이 있다. 이 때, next_permutation() 을 이용한다.<ul>\n<li>S -&gt; 01 -&gt; 02 -&gt; 03</li>\n<li>S -&gt; 01 -&gt; 03 -&gt; 02 </li>\n<li>S -&gt; 02 -&gt; 01 -&gt; 03</li>\n<li>S -&gt; 02 -&gt; 03 -&gt; 01 </li>\n<li>S -&gt; 03 -&gt; 01 -&gt; 02</li>\n<li>S -&gt; 03 -&gt; 02 -&gt; 01 </li>\n</ul>\n</li>\n<li>그렇다면 이동 경로 거리는 어떻게 구할까? 위 예시 중, 가장 위의 경우를 보자.<ul>\n<li>S -&gt; 01 최단 거리 :  S를 시작점으로 하는 BFS 에서 구할 수 있다.</li>\n<li>01 -&gt; 02 최단 거리 :  01을 시작점으로 하는 BFS 에서 구할 수 있다. </li>\n<li>02 -&gt; 03 최단 거리 :  02를 시작점으로 하는 BFS 에서 구할 수 있다. </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotcleanNew.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robotCleaner05.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Abstract Factory Pattern01","date":"2018-05-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nThe Abstract Factory Pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractFactoryPattern.png)\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstarct001.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp10.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp11.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp12.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp13.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp14.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp15.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp16.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp17.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp18.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp19.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp20.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp21.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp22.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp23.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp24.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp25.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp26.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp27.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp28.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp29.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp30.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp31.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp32.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp33.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp34.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp35.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp36.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp37.png)\n\n## Reference\n\nHead First Design Pattern\n\n\n\n","source":"_posts/2018-05-13-Abstract Factory Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Abstract Factory Pattern01\"\ndate:   2018-05-13\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nThe Abstract Factory Pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractFactoryPattern.png)\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstarct001.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp10.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp11.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp12.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp13.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp14.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp15.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp16.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp17.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp18.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp19.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp20.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp21.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp22.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp23.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp24.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp25.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp26.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp27.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp28.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp29.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp30.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp31.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp32.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp33.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp34.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp35.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp36.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp37.png)\n\n## Reference\n\nHead First Design Pattern\n\n\n\n","slug":"2018-05-13-Abstract Factory Pattern01","published":1,"updated":"2018-10-25T05:39:34.647Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jy00cl31x7fwmlrtrc","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Abstract Factory Pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractFactoryPattern.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstarct001.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp10.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp11.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp12.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp13.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp14.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp15.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp16.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp17.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp18.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp19.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp20.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp21.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp22.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp23.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp24.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp25.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp26.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp27.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp28.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp29.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp30.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp31.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp32.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp33.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp34.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp35.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp36.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp37.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Abstract Factory Pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstractFactoryPattern.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/abstarct001.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp10.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp11.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp12.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp13.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp14.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp15.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp16.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp17.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp18.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp19.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp20.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp21.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp22.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp23.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp24.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp25.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp26.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp27.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp28.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp29.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp30.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp31.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp32.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp33.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp34.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp35.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp36.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/afp37.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"숨바꼭질","date":"2018-05-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n<https://www.acmicpc.net/problem/1697>\n\n- 현재 위치에서 이동 가능한 곳 체크\n  - X - 1\n  - X + 1\n  - X * 2\n- 체크 조건\n  - 이동 가능한 곳이 범위 안에 있나?\n  - 아직 방문하지 않은 곳인가?\n- Queue에서 이동 가능한 곳을 뽑아냄\n  - 동생의 위치이면 그래프의 Depth를 출력\n- 그래프의 Depth를 표현하기 위해 \n  - Class는 위치와 depth로 구성\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide03.png)\n\n\n","source":"_posts/2018-05-13-숨바꼭질.md","raw":"---\nlayout: post\ntitle:  \"숨바꼭질\"\ndate:   2018-05-13\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n<https://www.acmicpc.net/problem/1697>\n\n- 현재 위치에서 이동 가능한 곳 체크\n  - X - 1\n  - X + 1\n  - X * 2\n- 체크 조건\n  - 이동 가능한 곳이 범위 안에 있나?\n  - 아직 방문하지 않은 곳인가?\n- Queue에서 이동 가능한 곳을 뽑아냄\n  - 동생의 위치이면 그래프의 Depth를 출력\n- 그래프의 Depth를 표현하기 위해 \n  - Class는 위치와 depth로 구성\n\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide03.png)\n\n\n","slug":"2018-05-13-숨바꼭질","published":1,"updated":"2018-05-13T07:38:16.655Z","comments":1,"photos":[],"link":"","_id":"cjp6k65jz00cn31x7ud6if12f","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/1697\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1697</a></p>\n<ul>\n<li>현재 위치에서 이동 가능한 곳 체크<ul>\n<li>X - 1</li>\n<li>X + 1</li>\n<li>X * 2</li>\n</ul>\n</li>\n<li>체크 조건<ul>\n<li>이동 가능한 곳이 범위 안에 있나?</li>\n<li>아직 방문하지 않은 곳인가?</li>\n</ul>\n</li>\n<li>Queue에서 이동 가능한 곳을 뽑아냄<ul>\n<li>동생의 위치이면 그래프의 Depth를 출력</li>\n</ul>\n</li>\n<li>그래프의 Depth를 표현하기 위해 <ul>\n<li>Class는 위치와 depth로 구성</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://www.acmicpc.net/problem/1697\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1697</a></p>\n<ul>\n<li>현재 위치에서 이동 가능한 곳 체크<ul>\n<li>X - 1</li>\n<li>X + 1</li>\n<li>X * 2</li>\n</ul>\n</li>\n<li>체크 조건<ul>\n<li>이동 가능한 곳이 범위 안에 있나?</li>\n<li>아직 방문하지 않은 곳인가?</li>\n</ul>\n</li>\n<li>Queue에서 이동 가능한 곳을 뽑아냄<ul>\n<li>동생의 위치이면 그래프의 Depth를 출력</li>\n</ul>\n</li>\n<li>그래프의 Depth를 표현하기 위해 <ul>\n<li>Class는 위치와 depth로 구성</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hide03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Sampling, Quantization","date":"2018-05-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n- Conversion of analog signal to digital signal\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sampling.png)\n\n  - The output of most of the image sensors is an analog signal, \n  - and we can not apply digital processing on it \n  - because we can not store it. \n  - We can not store it because it requires infinite memory \n  - to store a signal that can have infinite values.\n  - So we have to convert an analog signal into a digital signal.\n  - To create an image which is digital, \n  - we need to covert continuous data into digital form. \n  - There are two steps in which it is done.\n    - Sampling\n    - Quantization\n\n- Sampling\n\n  - It is done on X axis.\n\n  - It is the conversion of x axis (infinite values) to digital values.\n\n- Quantization\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quantization.png)\n\n  - It is done on Y axis.\n  - digitizing the amplitudes is known as Quantization\n  - In the figure shown above, \n  - these vertically ranging values have been quantized into 5 different levels or partitions. \n  - Ranging from 0 black to 4 white. ","source":"_posts/2018-05-15-Sampling, Quantization.md","raw":"---\nlayout: post\ntitle:  \"Sampling, Quantization\"\ndate:   2018-05-15\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n- Conversion of analog signal to digital signal\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sampling.png)\n\n  - The output of most of the image sensors is an analog signal, \n  - and we can not apply digital processing on it \n  - because we can not store it. \n  - We can not store it because it requires infinite memory \n  - to store a signal that can have infinite values.\n  - So we have to convert an analog signal into a digital signal.\n  - To create an image which is digital, \n  - we need to covert continuous data into digital form. \n  - There are two steps in which it is done.\n    - Sampling\n    - Quantization\n\n- Sampling\n\n  - It is done on X axis.\n\n  - It is the conversion of x axis (infinite values) to digital values.\n\n- Quantization\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quantization.png)\n\n  - It is done on Y axis.\n  - digitizing the amplitudes is known as Quantization\n  - In the figure shown above, \n  - these vertically ranging values have been quantized into 5 different levels or partitions. \n  - Ranging from 0 black to 4 white. ","slug":"2018-05-15-Sampling, Quantization","published":1,"updated":"2018-05-21T13:11:41.608Z","comments":1,"photos":[],"link":"","_id":"cjp6k65k100cp31x75pgz76dv","content":"<ul>\n<li><p>Conversion of analog signal to digital signal</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sampling.png\" alt=\"img\"></p>\n<ul>\n<li>The output of most of the image sensors is an analog signal, </li>\n<li>and we can not apply digital processing on it </li>\n<li>because we can not store it. </li>\n<li>We can not store it because it requires infinite memory </li>\n<li>to store a signal that can have infinite values.</li>\n<li>So we have to convert an analog signal into a digital signal.</li>\n<li>To create an image which is digital, </li>\n<li>we need to covert continuous data into digital form. </li>\n<li>There are two steps in which it is done.<ul>\n<li>Sampling</li>\n<li>Quantization</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Sampling</p>\n<ul>\n<li><p>It is done on X axis.</p>\n</li>\n<li><p>It is the conversion of x axis (infinite values) to digital values.</p>\n</li>\n</ul>\n</li>\n<li><p>Quantization</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quantization.png\" alt=\"img\"></p>\n<ul>\n<li>It is done on Y axis.</li>\n<li>digitizing the amplitudes is known as Quantization</li>\n<li>In the figure shown above, </li>\n<li>these vertically ranging values have been quantized into 5 different levels or partitions. </li>\n<li>Ranging from 0 black to 4 white. </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>Conversion of analog signal to digital signal</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sampling.png\" alt=\"img\"></p>\n<ul>\n<li>The output of most of the image sensors is an analog signal, </li>\n<li>and we can not apply digital processing on it </li>\n<li>because we can not store it. </li>\n<li>We can not store it because it requires infinite memory </li>\n<li>to store a signal that can have infinite values.</li>\n<li>So we have to convert an analog signal into a digital signal.</li>\n<li>To create an image which is digital, </li>\n<li>we need to covert continuous data into digital form. </li>\n<li>There are two steps in which it is done.<ul>\n<li>Sampling</li>\n<li>Quantization</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Sampling</p>\n<ul>\n<li><p>It is done on X axis.</p>\n</li>\n<li><p>It is the conversion of x axis (infinite values) to digital values.</p>\n</li>\n</ul>\n</li>\n<li><p>Quantization</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quantization.png\" alt=\"img\"></p>\n<ul>\n<li>It is done on Y axis.</li>\n<li>digitizing the amplitudes is known as Quantization</li>\n<li>In the figure shown above, </li>\n<li>these vertically ranging values have been quantized into 5 different levels or partitions. </li>\n<li>Ranging from 0 black to 4 white. </li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Brightness and Contrast","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## Brightness \n\n- Brightness is a relative term. \n\n- It depends on your visual perception. \n\n- Since brightness is a relative term, so brightness can be defined as the amount of energy output by a source of light relative to the source we are comparing it to. \n\n- In some cases we can easily say that the image is bright, and in some cases, its not easy to perceive.\n\n- Consider this black image of 5 rows and 5 columns\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri02.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri04.png)\n\n## Contrast\n\n- Contrast can be simply explained as the difference between maximum and minimum pixel intensity in an image.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri04.png)\n\n  - The maximum value in this matrix is 100.\n\n  - The minimum value in this matrix is 100.\n\n  - Contrast = maximum pixel intensity(subtracted by) minimum pixel intensity\n\n    = 100 (subtracted by) 100\n\n    = 0\n\n\n\n","source":"_posts/2018-05-21-Brightness and Contrast.md","raw":"---\nlayout: post\ntitle:  \"Brightness and Contrast\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## Brightness \n\n- Brightness is a relative term. \n\n- It depends on your visual perception. \n\n- Since brightness is a relative term, so brightness can be defined as the amount of energy output by a source of light relative to the source we are comparing it to. \n\n- In some cases we can easily say that the image is bright, and in some cases, its not easy to perceive.\n\n- Consider this black image of 5 rows and 5 columns\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri02.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri03.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri04.png)\n\n## Contrast\n\n- Contrast can be simply explained as the difference between maximum and minimum pixel intensity in an image.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri04.png)\n\n  - The maximum value in this matrix is 100.\n\n  - The minimum value in this matrix is 100.\n\n  - Contrast = maximum pixel intensity(subtracted by) minimum pixel intensity\n\n    = 100 (subtracted by) 100\n\n    = 0\n\n\n\n","slug":"2018-05-21-Brightness and Contrast","published":1,"updated":"2018-05-21T13:11:16.517Z","comments":1,"photos":[],"link":"","_id":"cjp6k65k400cr31x7b7s71k3p","content":"<h2 id=\"Brightness\"><a href=\"#Brightness\" class=\"headerlink\" title=\"Brightness\"></a>Brightness</h2><ul>\n<li><p>Brightness is a relative term. </p>\n</li>\n<li><p>It depends on your visual perception. </p>\n</li>\n<li><p>Since brightness is a relative term, so brightness can be defined as the amount of energy output by a source of light relative to the source we are comparing it to. </p>\n</li>\n<li><p>In some cases we can easily say that the image is bright, and in some cases, its not easy to perceive.</p>\n</li>\n<li><p>Consider this black image of 5 rows and 5 columns</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri04.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Contrast\"><a href=\"#Contrast\" class=\"headerlink\" title=\"Contrast\"></a>Contrast</h2><ul>\n<li><p>Contrast can be simply explained as the difference between maximum and minimum pixel intensity in an image.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri04.png\" alt=\"img\"></p>\n<ul>\n<li><p>The maximum value in this matrix is 100.</p>\n</li>\n<li><p>The minimum value in this matrix is 100.</p>\n</li>\n<li><p>Contrast = maximum pixel intensity(subtracted by) minimum pixel intensity</p>\n<p>= 100 (subtracted by) 100</p>\n<p>= 0</p>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Brightness\"><a href=\"#Brightness\" class=\"headerlink\" title=\"Brightness\"></a>Brightness</h2><ul>\n<li><p>Brightness is a relative term. </p>\n</li>\n<li><p>It depends on your visual perception. </p>\n</li>\n<li><p>Since brightness is a relative term, so brightness can be defined as the amount of energy output by a source of light relative to the source we are comparing it to. </p>\n</li>\n<li><p>In some cases we can easily say that the image is bright, and in some cases, its not easy to perceive.</p>\n</li>\n<li><p>Consider this black image of 5 rows and 5 columns</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri04.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Contrast\"><a href=\"#Contrast\" class=\"headerlink\" title=\"Contrast\"></a>Contrast</h2><ul>\n<li><p>Contrast can be simply explained as the difference between maximum and minimum pixel intensity in an image.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bri04.png\" alt=\"img\"></p>\n<ul>\n<li><p>The maximum value in this matrix is 100.</p>\n</li>\n<li><p>The minimum value in this matrix is 100.</p>\n</li>\n<li><p>Contrast = maximum pixel intensity(subtracted by) minimum pixel intensity</p>\n<p>= 100 (subtracted by) 100</p>\n<p>= 0</p>\n</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Bits Per Pixel","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\nBpp or bits per pixel denotes the number of bits per pixel.\n\n#### Number of different colors\n\n- the number of different colors depend on the number of bits per pixel.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bppTable.png)\n\n#### Shades \n\n- Shades = number of colors = (2)<sup>bpp<sup>\n- black color\n  -  0 pixel value always denotes black color. \n- white color\n  - (2)<sup>bpp<sup> -1\n  - In case of 1 bpp, 0 denotes black, and 1 denotes white.\n  - In case 8 bpp, 0 denotes black, and 255 denotes white.\n- gray color\n  - Gray color is actually the mid point of black and white.\n  - In case of 8bpp, the pixel value that denotes gray color is 127 or 128bpp (if you count from 1, not from 0).\n\n#### Image Size\n\n- Size of an image = rows * cols * bpp\n- Assuming it has 1024 rows and it has 1024 columns. \n- And since it is a gray scale image, it has 256 different shades of gray or it has bits per pixel\n- rows * cols * bpp = 1024 * 1024 * 8 = 8388608 bits.\n- Converting it into bytes = 8388608 / 8 = 1048576 bytes.\n- Converting into kilo bytes = 1048576 / 1024 = 1024kb.\n- Converting into Mega bytes = 1024 / 1024 = 1 Mb.\n\n#### Reference\n\n- <https://www.tutorialspoint.com/dip/concept_of_bits_per_pixel.htm>","source":"_posts/2018-05-21-Bits Per Pixel.md","raw":"---\nlayout: post\ntitle:  \"Bits Per Pixel\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\nBpp or bits per pixel denotes the number of bits per pixel.\n\n#### Number of different colors\n\n- the number of different colors depend on the number of bits per pixel.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bppTable.png)\n\n#### Shades \n\n- Shades = number of colors = (2)<sup>bpp<sup>\n- black color\n  -  0 pixel value always denotes black color. \n- white color\n  - (2)<sup>bpp<sup> -1\n  - In case of 1 bpp, 0 denotes black, and 1 denotes white.\n  - In case 8 bpp, 0 denotes black, and 255 denotes white.\n- gray color\n  - Gray color is actually the mid point of black and white.\n  - In case of 8bpp, the pixel value that denotes gray color is 127 or 128bpp (if you count from 1, not from 0).\n\n#### Image Size\n\n- Size of an image = rows * cols * bpp\n- Assuming it has 1024 rows and it has 1024 columns. \n- And since it is a gray scale image, it has 256 different shades of gray or it has bits per pixel\n- rows * cols * bpp = 1024 * 1024 * 8 = 8388608 bits.\n- Converting it into bytes = 8388608 / 8 = 1048576 bytes.\n- Converting into kilo bytes = 1048576 / 1024 = 1024kb.\n- Converting into Mega bytes = 1024 / 1024 = 1 Mb.\n\n#### Reference\n\n- <https://www.tutorialspoint.com/dip/concept_of_bits_per_pixel.htm>","slug":"2018-05-21-Bits Per Pixel","published":1,"updated":"2018-05-21T13:11:23.490Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kc00cu31x78h6gle1b","content":"<p>Bpp or bits per pixel denotes the number of bits per pixel.</p>\n<h4 id=\"Number-of-different-colors\"><a href=\"#Number-of-different-colors\" class=\"headerlink\" title=\"Number of different colors\"></a>Number of different colors</h4><ul>\n<li><p>the number of different colors depend on the number of bits per pixel.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bppTable.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h4 id=\"Shades\"><a href=\"#Shades\" class=\"headerlink\" title=\"Shades\"></a>Shades</h4><ul>\n<li>Shades = number of colors = (2)<sup>bpp<sup></sup></sup></li>\n<li>black color<ul>\n<li>0 pixel value always denotes black color. </li>\n</ul>\n</li>\n<li>white color<ul>\n<li>(2)<sup>bpp<sup> -1</sup></sup></li>\n<li>In case of 1 bpp, 0 denotes black, and 1 denotes white.</li>\n<li>In case 8 bpp, 0 denotes black, and 255 denotes white.</li>\n</ul>\n</li>\n<li>gray color<ul>\n<li>Gray color is actually the mid point of black and white.</li>\n<li>In case of 8bpp, the pixel value that denotes gray color is 127 or 128bpp (if you count from 1, not from 0).</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Image-Size\"><a href=\"#Image-Size\" class=\"headerlink\" title=\"Image Size\"></a>Image Size</h4><ul>\n<li>Size of an image = rows <em> cols </em> bpp</li>\n<li>Assuming it has 1024 rows and it has 1024 columns. </li>\n<li>And since it is a gray scale image, it has 256 different shades of gray or it has bits per pixel</li>\n<li>rows <em> cols </em> bpp = 1024 <em> 1024 </em> 8 = 8388608 bits.</li>\n<li>Converting it into bytes = 8388608 / 8 = 1048576 bytes.</li>\n<li>Converting into kilo bytes = 1048576 / 1024 = 1024kb.</li>\n<li>Converting into Mega bytes = 1024 / 1024 = 1 Mb.</li>\n</ul>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li><a href=\"https://www.tutorialspoint.com/dip/concept_of_bits_per_pixel.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/dip/concept_of_bits_per_pixel.htm</a></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>Bpp or bits per pixel denotes the number of bits per pixel.</p>\n<h4 id=\"Number-of-different-colors\"><a href=\"#Number-of-different-colors\" class=\"headerlink\" title=\"Number of different colors\"></a>Number of different colors</h4><ul>\n<li><p>the number of different colors depend on the number of bits per pixel.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bppTable.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h4 id=\"Shades\"><a href=\"#Shades\" class=\"headerlink\" title=\"Shades\"></a>Shades</h4><ul>\n<li>Shades = number of colors = (2)<sup>bpp<sup></sup></sup></li>\n<li>black color<ul>\n<li>0 pixel value always denotes black color. </li>\n</ul>\n</li>\n<li>white color<ul>\n<li>(2)<sup>bpp<sup> -1</sup></sup></li>\n<li>In case of 1 bpp, 0 denotes black, and 1 denotes white.</li>\n<li>In case 8 bpp, 0 denotes black, and 255 denotes white.</li>\n</ul>\n</li>\n<li>gray color<ul>\n<li>Gray color is actually the mid point of black and white.</li>\n<li>In case of 8bpp, the pixel value that denotes gray color is 127 or 128bpp (if you count from 1, not from 0).</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Image-Size\"><a href=\"#Image-Size\" class=\"headerlink\" title=\"Image Size\"></a>Image Size</h4><ul>\n<li>Size of an image = rows <em> cols </em> bpp</li>\n<li>Assuming it has 1024 rows and it has 1024 columns. </li>\n<li>And since it is a gray scale image, it has 256 different shades of gray or it has bits per pixel</li>\n<li>rows <em> cols </em> bpp = 1024 <em> 1024 </em> 8 = 8388608 bits.</li>\n<li>Converting it into bytes = 8388608 / 8 = 1048576 bytes.</li>\n<li>Converting into kilo bytes = 1048576 / 1024 = 1024kb.</li>\n<li>Converting into Mega bytes = 1024 / 1024 = 1 Mb.</li>\n</ul>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li><a href=\"https://www.tutorialspoint.com/dip/concept_of_bits_per_pixel.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/dip/concept_of_bits_per_pixel.htm</a></li>\n</ul>\n"},{"layout":"post","title":"Convolution","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## What is image processing\n\n- In image processing , we are developing a system \n- whose input is an image and output would be an image\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution04.png)\n\n- It can be mathematically represented as two ways : h(x,y) is the mask or filter.\n  - **g(x,y) = h(x,y) \\* f(x,y)**\n    - “mask convolved with an image”.\n  - **g(x,y) = f(x,y) \\* h(x,y)**\n    - \"image convolved with mask\"\n\n## What is mask?\n\n- Mask is also a signal. \n- It can be represented by a two dimensional matrix. \n- The mask is usually of the order of 1x1, 3x3, 5x5, 7x7 . \n- A mask should always be in odd number, \n- because other wise you cannot find the mid of the mask. \n\n## How to perform convolution?\n\n- Flip the mask (horizontally and vertically) only once\n- Slide the mask onto the image.\n- Multiply the corresponding elements and then add them\n- Repeat this procedure until all values of the image has been calculated.\n\n## Example of convolution\n\n- Mask\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution05.png)\n\n- Flipping the mask horizontally\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution06.png)\n\n- Flipping the mask vertically\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution07.png)\n\n- Image\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution08.png)\n\n- Convolution\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution09.png)\n\n- The box in red color is the mask, \n\n- and the values in the orange are the values of the mask. \n\n- The black color box and values belong to the image.\n\n-  Now for the first pixel of the image, the value will be calculated as\n\n  First pixel = (5*2) + (4*4) + (2*8) + (1*10)\n\n  = 10 + 16 + 16 + 10\n\n  = 52\n\n- Place 52 in the original image at the first index and repeat this procedure for each pixel of the image.\n\n## Why Convolution\n\n- Convolution can achieve something, that the previous two methods of manipulating images can’t achieve. \n- Those include the blurring, sharpening, edge detection, noise reduction e.t.c.","source":"_posts/2018-05-21-Convolution.md","raw":"---\nlayout: post\ntitle:  \"Convolution\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## What is image processing\n\n- In image processing , we are developing a system \n- whose input is an image and output would be an image\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution04.png)\n\n- It can be mathematically represented as two ways : h(x,y) is the mask or filter.\n  - **g(x,y) = h(x,y) \\* f(x,y)**\n    - “mask convolved with an image”.\n  - **g(x,y) = f(x,y) \\* h(x,y)**\n    - \"image convolved with mask\"\n\n## What is mask?\n\n- Mask is also a signal. \n- It can be represented by a two dimensional matrix. \n- The mask is usually of the order of 1x1, 3x3, 5x5, 7x7 . \n- A mask should always be in odd number, \n- because other wise you cannot find the mid of the mask. \n\n## How to perform convolution?\n\n- Flip the mask (horizontally and vertically) only once\n- Slide the mask onto the image.\n- Multiply the corresponding elements and then add them\n- Repeat this procedure until all values of the image has been calculated.\n\n## Example of convolution\n\n- Mask\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution05.png)\n\n- Flipping the mask horizontally\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution06.png)\n\n- Flipping the mask vertically\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution07.png)\n\n- Image\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution08.png)\n\n- Convolution\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution09.png)\n\n- The box in red color is the mask, \n\n- and the values in the orange are the values of the mask. \n\n- The black color box and values belong to the image.\n\n-  Now for the first pixel of the image, the value will be calculated as\n\n  First pixel = (5*2) + (4*4) + (2*8) + (1*10)\n\n  = 10 + 16 + 16 + 10\n\n  = 52\n\n- Place 52 in the original image at the first index and repeat this procedure for each pixel of the image.\n\n## Why Convolution\n\n- Convolution can achieve something, that the previous two methods of manipulating images can’t achieve. \n- Those include the blurring, sharpening, edge detection, noise reduction e.t.c.","slug":"2018-05-21-Convolution","published":1,"updated":"2018-05-21T13:45:36.958Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kd00cw31x75fcaa9l5","content":"<h2 id=\"What-is-image-processing\"><a href=\"#What-is-image-processing\" class=\"headerlink\" title=\"What is image processing\"></a>What is image processing</h2><ul>\n<li>In image processing , we are developing a system </li>\n<li>whose input is an image and output would be an image</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution04.png\" alt=\"img\"></p>\n<ul>\n<li>It can be mathematically represented as two ways : h(x,y) is the mask or filter.<ul>\n<li><strong>g(x,y) = h(x,y) * f(x,y)</strong><ul>\n<li>“mask convolved with an image”.</li>\n</ul>\n</li>\n<li><strong>g(x,y) = f(x,y) * h(x,y)</strong><ul>\n<li>“image convolved with mask”</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"What-is-mask\"><a href=\"#What-is-mask\" class=\"headerlink\" title=\"What is mask?\"></a>What is mask?</h2><ul>\n<li>Mask is also a signal. </li>\n<li>It can be represented by a two dimensional matrix. </li>\n<li>The mask is usually of the order of 1x1, 3x3, 5x5, 7x7 . </li>\n<li>A mask should always be in odd number, </li>\n<li>because other wise you cannot find the mid of the mask. </li>\n</ul>\n<h2 id=\"How-to-perform-convolution\"><a href=\"#How-to-perform-convolution\" class=\"headerlink\" title=\"How to perform convolution?\"></a>How to perform convolution?</h2><ul>\n<li>Flip the mask (horizontally and vertically) only once</li>\n<li>Slide the mask onto the image.</li>\n<li>Multiply the corresponding elements and then add them</li>\n<li>Repeat this procedure until all values of the image has been calculated.</li>\n</ul>\n<h2 id=\"Example-of-convolution\"><a href=\"#Example-of-convolution\" class=\"headerlink\" title=\"Example of convolution\"></a>Example of convolution</h2><ul>\n<li><p>Mask</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution05.png\" alt=\"img\"></p>\n</li>\n<li><p>Flipping the mask horizontally</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution06.png\" alt=\"img\"></p>\n</li>\n<li><p>Flipping the mask vertically</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution07.png\" alt=\"img\"></p>\n</li>\n<li><p>Image</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution08.png\" alt=\"img\"></p>\n</li>\n<li><p>Convolution</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution09.png\" alt=\"img\"></p>\n</li>\n<li><p>The box in red color is the mask, </p>\n</li>\n<li><p>and the values in the orange are the values of the mask. </p>\n</li>\n<li><p>The black color box and values belong to the image.</p>\n</li>\n<li><p>Now for the first pixel of the image, the value will be calculated as</p>\n<p>First pixel = (5<em>2) + (4</em>4) + (2<em>8) + (1</em>10)</p>\n<p>= 10 + 16 + 16 + 10</p>\n<p>= 52</p>\n</li>\n<li><p>Place 52 in the original image at the first index and repeat this procedure for each pixel of the image.</p>\n</li>\n</ul>\n<h2 id=\"Why-Convolution\"><a href=\"#Why-Convolution\" class=\"headerlink\" title=\"Why Convolution\"></a>Why Convolution</h2><ul>\n<li>Convolution can achieve something, that the previous two methods of manipulating images can’t achieve. </li>\n<li>Those include the blurring, sharpening, edge detection, noise reduction e.t.c.</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"What-is-image-processing\"><a href=\"#What-is-image-processing\" class=\"headerlink\" title=\"What is image processing\"></a>What is image processing</h2><ul>\n<li>In image processing , we are developing a system </li>\n<li>whose input is an image and output would be an image</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution04.png\" alt=\"img\"></p>\n<ul>\n<li>It can be mathematically represented as two ways : h(x,y) is the mask or filter.<ul>\n<li><strong>g(x,y) = h(x,y) * f(x,y)</strong><ul>\n<li>“mask convolved with an image”.</li>\n</ul>\n</li>\n<li><strong>g(x,y) = f(x,y) * h(x,y)</strong><ul>\n<li>“image convolved with mask”</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"What-is-mask\"><a href=\"#What-is-mask\" class=\"headerlink\" title=\"What is mask?\"></a>What is mask?</h2><ul>\n<li>Mask is also a signal. </li>\n<li>It can be represented by a two dimensional matrix. </li>\n<li>The mask is usually of the order of 1x1, 3x3, 5x5, 7x7 . </li>\n<li>A mask should always be in odd number, </li>\n<li>because other wise you cannot find the mid of the mask. </li>\n</ul>\n<h2 id=\"How-to-perform-convolution\"><a href=\"#How-to-perform-convolution\" class=\"headerlink\" title=\"How to perform convolution?\"></a>How to perform convolution?</h2><ul>\n<li>Flip the mask (horizontally and vertically) only once</li>\n<li>Slide the mask onto the image.</li>\n<li>Multiply the corresponding elements and then add them</li>\n<li>Repeat this procedure until all values of the image has been calculated.</li>\n</ul>\n<h2 id=\"Example-of-convolution\"><a href=\"#Example-of-convolution\" class=\"headerlink\" title=\"Example of convolution\"></a>Example of convolution</h2><ul>\n<li><p>Mask</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution05.png\" alt=\"img\"></p>\n</li>\n<li><p>Flipping the mask horizontally</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution06.png\" alt=\"img\"></p>\n</li>\n<li><p>Flipping the mask vertically</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution07.png\" alt=\"img\"></p>\n</li>\n<li><p>Image</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution08.png\" alt=\"img\"></p>\n</li>\n<li><p>Convolution</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/convolution09.png\" alt=\"img\"></p>\n</li>\n<li><p>The box in red color is the mask, </p>\n</li>\n<li><p>and the values in the orange are the values of the mask. </p>\n</li>\n<li><p>The black color box and values belong to the image.</p>\n</li>\n<li><p>Now for the first pixel of the image, the value will be calculated as</p>\n<p>First pixel = (5<em>2) + (4</em>4) + (2<em>8) + (1</em>10)</p>\n<p>= 10 + 16 + 16 + 10</p>\n<p>= 52</p>\n</li>\n<li><p>Place 52 in the original image at the first index and repeat this procedure for each pixel of the image.</p>\n</li>\n</ul>\n<h2 id=\"Why-Convolution\"><a href=\"#Why-Convolution\" class=\"headerlink\" title=\"Why Convolution\"></a>Why Convolution</h2><ul>\n<li>Convolution can achieve something, that the previous two methods of manipulating images can’t achieve. </li>\n<li>Those include the blurring, sharpening, edge detection, noise reduction e.t.c.</li>\n</ul>\n"},{"layout":"post","title":"안전영역","date":"2018-05-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2468>\n\n## 풀이\n\n비의 높이(지역 높이 최소~최대) 로 다음을 반복\n\n1. 물에 잠긴 영역 체크\n2. BFS로 안정 영역 개수 체크\n\n##  오답 원인\n\n최소 답을 0으로 설정하였기 때문에 계속 틀렸었다.\n\n## 해결\n\n최소 답은 1이다. \n\n왜냐하면, 아무 것도 잠기지 않는다면 하나의 영역이기 때문이다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea04.png)\n\n\n\n\n\n\n","source":"_posts/2018-05-15-안전영역.md","raw":"---\nlayout: post\ntitle:  \"안전영역\"\ndate:   2018-05-15\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2468>\n\n## 풀이\n\n비의 높이(지역 높이 최소~최대) 로 다음을 반복\n\n1. 물에 잠긴 영역 체크\n2. BFS로 안정 영역 개수 체크\n\n##  오답 원인\n\n최소 답을 0으로 설정하였기 때문에 계속 틀렸었다.\n\n## 해결\n\n최소 답은 1이다. \n\n왜냐하면, 아무 것도 잠기지 않는다면 하나의 영역이기 때문이다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea04.png)\n\n\n\n\n\n\n","slug":"2018-05-15-안전영역","published":1,"updated":"2018-07-27T04:48:00.136Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kg00cy31x75l8tmucf","content":"<p><a href=\"https://www.acmicpc.net/problem/2468\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2468</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>비의 높이(지역 높이 최소~최대) 로 다음을 반복</p>\n<ol>\n<li>물에 잠긴 영역 체크</li>\n<li>BFS로 안정 영역 개수 체크</li>\n</ol>\n<h2 id=\"오답-원인\"><a href=\"#오답-원인\" class=\"headerlink\" title=\"오답 원인\"></a>오답 원인</h2><p>최소 답을 0으로 설정하였기 때문에 계속 틀렸었다.</p>\n<h2 id=\"해결\"><a href=\"#해결\" class=\"headerlink\" title=\"해결\"></a>해결</h2><p>최소 답은 1이다. </p>\n<p>왜냐하면, 아무 것도 잠기지 않는다면 하나의 영역이기 때문이다.</p>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea04.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2468\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2468</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>비의 높이(지역 높이 최소~최대) 로 다음을 반복</p>\n<ol>\n<li>물에 잠긴 영역 체크</li>\n<li>BFS로 안정 영역 개수 체크</li>\n</ol>\n<h2 id=\"오답-원인\"><a href=\"#오답-원인\" class=\"headerlink\" title=\"오답 원인\"></a>오답 원인</h2><p>최소 답을 0으로 설정하였기 때문에 계속 틀렸었다.</p>\n<h2 id=\"해결\"><a href=\"#해결\" class=\"headerlink\" title=\"해결\"></a>해결</h2><p>최소 답은 1이다. </p>\n<p>왜냐하면, 아무 것도 잠기지 않는다면 하나의 영역이기 때문이다.</p>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/safeArea04.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Histogram Equalization","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## Histogram Equalization\n\n- Histogram equalization is used to enhance contrast.\n\n- Lets start histogram equalization by taking this image below as a simple image.\n\n- The histogram of this image has been shown below.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE02.png)\n\n- Now we will perform histogram equalization to it.\n\n- First we have to calculate the PMF (probability mass function) of all the pixels in this image.\n\n- Our next step involves calculation of CDF (cumulative distributive function).  \n\n## Calculate CDF according to gray levels\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE03.png)\n\n- Then in this step you will multiply the CDF value with (Gray levels (minus) 1) .\n\n- Considering we have an 3 bpp image. \n\n- Then number of levels we have are 8.\n\n- And 1 subtracts 8 is 7. So we multiply CDF by 7. Here what we got after multiplying.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE04.png)\n\n-  we have to map the new gray level values into number of pixels.\n\n- Lets assume our old gray levels values has these number of pixels.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE05.png)\n\n- Now if we map our new values to , then this is what we got.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE06.png)\n\n- Now map these new values you are onto histogram, and you are done.\n\n- Lets apply this technique to our original image. \n\n- After applying we got the following image and its following histogram.\n\n## Cumulative Distributive function of this image\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE07.png)\n\n## Histogram Equalization histogram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE08.png)\n\n## Comparing both the histograms and images\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE09.png)\n\n## Conclusion\n\n- during histogram equalization the overall shape of the histogram changes, \n- where as in histogram stretching the overall shape of histogram remains same.\n\n \n\n","source":"_posts/2018-05-21-Histogram Equalization.md","raw":"---\nlayout: post\ntitle:  \"Histogram Equalization\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## Histogram Equalization\n\n- Histogram equalization is used to enhance contrast.\n\n- Lets start histogram equalization by taking this image below as a simple image.\n\n- The histogram of this image has been shown below.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE01.png)\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE02.png)\n\n- Now we will perform histogram equalization to it.\n\n- First we have to calculate the PMF (probability mass function) of all the pixels in this image.\n\n- Our next step involves calculation of CDF (cumulative distributive function).  \n\n## Calculate CDF according to gray levels\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE03.png)\n\n- Then in this step you will multiply the CDF value with (Gray levels (minus) 1) .\n\n- Considering we have an 3 bpp image. \n\n- Then number of levels we have are 8.\n\n- And 1 subtracts 8 is 7. So we multiply CDF by 7. Here what we got after multiplying.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE04.png)\n\n-  we have to map the new gray level values into number of pixels.\n\n- Lets assume our old gray levels values has these number of pixels.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE05.png)\n\n- Now if we map our new values to , then this is what we got.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE06.png)\n\n- Now map these new values you are onto histogram, and you are done.\n\n- Lets apply this technique to our original image. \n\n- After applying we got the following image and its following histogram.\n\n## Cumulative Distributive function of this image\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE07.png)\n\n## Histogram Equalization histogram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE08.png)\n\n## Comparing both the histograms and images\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE09.png)\n\n## Conclusion\n\n- during histogram equalization the overall shape of the histogram changes, \n- where as in histogram stretching the overall shape of histogram remains same.\n\n \n\n","slug":"2018-05-21-Histogram Equalization","published":1,"updated":"2018-05-21T13:17:57.606Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kj00d131x7qjsbiv6i","content":"<h2 id=\"Histogram-Equalization\"><a href=\"#Histogram-Equalization\" class=\"headerlink\" title=\"Histogram Equalization\"></a>Histogram Equalization</h2><ul>\n<li><p>Histogram equalization is used to enhance contrast.</p>\n</li>\n<li><p>Lets start histogram equalization by taking this image below as a simple image.</p>\n</li>\n<li><p>The histogram of this image has been shown below.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE02.png\" alt=\"img\"></p>\n</li>\n<li><p>Now we will perform histogram equalization to it.</p>\n</li>\n<li><p>First we have to calculate the PMF (probability mass function) of all the pixels in this image.</p>\n</li>\n<li><p>Our next step involves calculation of CDF (cumulative distributive function).  </p>\n</li>\n</ul>\n<h2 id=\"Calculate-CDF-according-to-gray-levels\"><a href=\"#Calculate-CDF-according-to-gray-levels\" class=\"headerlink\" title=\"Calculate CDF according to gray levels\"></a>Calculate CDF according to gray levels</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE03.png\" alt=\"img\"></p>\n<ul>\n<li><p>Then in this step you will multiply the CDF value with (Gray levels (minus) 1) .</p>\n</li>\n<li><p>Considering we have an 3 bpp image. </p>\n</li>\n<li><p>Then number of levels we have are 8.</p>\n</li>\n<li><p>And 1 subtracts 8 is 7. So we multiply CDF by 7. Here what we got after multiplying.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE04.png\" alt=\"img\"></p>\n</li>\n<li><p>we have to map the new gray level values into number of pixels.</p>\n</li>\n<li><p>Lets assume our old gray levels values has these number of pixels.</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE05.png\" alt=\"img\"></p>\n<ul>\n<li><p>Now if we map our new values to , then this is what we got.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE06.png\" alt=\"img\"></p>\n</li>\n<li><p>Now map these new values you are onto histogram, and you are done.</p>\n</li>\n<li><p>Lets apply this technique to our original image. </p>\n</li>\n<li><p>After applying we got the following image and its following histogram.</p>\n</li>\n</ul>\n<h2 id=\"Cumulative-Distributive-function-of-this-image\"><a href=\"#Cumulative-Distributive-function-of-this-image\" class=\"headerlink\" title=\"Cumulative Distributive function of this image\"></a>Cumulative Distributive function of this image</h2><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE07.png\" alt=\"img\"></p>\n<h2 id=\"Histogram-Equalization-histogram\"><a href=\"#Histogram-Equalization-histogram\" class=\"headerlink\" title=\"Histogram Equalization histogram\"></a>Histogram Equalization histogram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE08.png\" alt=\"img\"></p>\n<h2 id=\"Comparing-both-the-histograms-and-images\"><a href=\"#Comparing-both-the-histograms-and-images\" class=\"headerlink\" title=\"Comparing both the histograms and images\"></a>Comparing both the histograms and images</h2><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE09.png\" alt=\"img\"></p>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><ul>\n<li>during histogram equalization the overall shape of the histogram changes, </li>\n<li>where as in histogram stretching the overall shape of histogram remains same.</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Histogram-Equalization\"><a href=\"#Histogram-Equalization\" class=\"headerlink\" title=\"Histogram Equalization\"></a>Histogram Equalization</h2><ul>\n<li><p>Histogram equalization is used to enhance contrast.</p>\n</li>\n<li><p>Lets start histogram equalization by taking this image below as a simple image.</p>\n</li>\n<li><p>The histogram of this image has been shown below.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE02.png\" alt=\"img\"></p>\n</li>\n<li><p>Now we will perform histogram equalization to it.</p>\n</li>\n<li><p>First we have to calculate the PMF (probability mass function) of all the pixels in this image.</p>\n</li>\n<li><p>Our next step involves calculation of CDF (cumulative distributive function).  </p>\n</li>\n</ul>\n<h2 id=\"Calculate-CDF-according-to-gray-levels\"><a href=\"#Calculate-CDF-according-to-gray-levels\" class=\"headerlink\" title=\"Calculate CDF according to gray levels\"></a>Calculate CDF according to gray levels</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE03.png\" alt=\"img\"></p>\n<ul>\n<li><p>Then in this step you will multiply the CDF value with (Gray levels (minus) 1) .</p>\n</li>\n<li><p>Considering we have an 3 bpp image. </p>\n</li>\n<li><p>Then number of levels we have are 8.</p>\n</li>\n<li><p>And 1 subtracts 8 is 7. So we multiply CDF by 7. Here what we got after multiplying.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE04.png\" alt=\"img\"></p>\n</li>\n<li><p>we have to map the new gray level values into number of pixels.</p>\n</li>\n<li><p>Lets assume our old gray levels values has these number of pixels.</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE05.png\" alt=\"img\"></p>\n<ul>\n<li><p>Now if we map our new values to , then this is what we got.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE06.png\" alt=\"img\"></p>\n</li>\n<li><p>Now map these new values you are onto histogram, and you are done.</p>\n</li>\n<li><p>Lets apply this technique to our original image. </p>\n</li>\n<li><p>After applying we got the following image and its following histogram.</p>\n</li>\n</ul>\n<h2 id=\"Cumulative-Distributive-function-of-this-image\"><a href=\"#Cumulative-Distributive-function-of-this-image\" class=\"headerlink\" title=\"Cumulative Distributive function of this image\"></a>Cumulative Distributive function of this image</h2><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE07.png\" alt=\"img\"></p>\n<h2 id=\"Histogram-Equalization-histogram\"><a href=\"#Histogram-Equalization-histogram\" class=\"headerlink\" title=\"Histogram Equalization histogram\"></a>Histogram Equalization histogram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE08.png\" alt=\"img\"></p>\n<h2 id=\"Comparing-both-the-histograms-and-images\"><a href=\"#Comparing-both-the-histograms-and-images\" class=\"headerlink\" title=\"Comparing both the histograms and images\"></a>Comparing both the histograms and images</h2><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisE09.png\" alt=\"img\"></p>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><ul>\n<li>during histogram equalization the overall shape of the histogram changes, </li>\n<li>where as in histogram stretching the overall shape of histogram remains same.</li>\n</ul>\n"},{"layout":"post","title":"Histogram Sliding","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## Histogram sliding\n\n- In histogram sliding, we just simply shift a complete histogram rightwards or leftwards. \n- Due to shifting or sliding of histogram towards right or left, \n- a clear change can be seen in the image.\n\n## Increasing brightness using histogram sliding\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl02.png)\n\n- On the y axis of this histogram are the frequency or count. \n- And on the x axis, we have gray level values. \n- As you can see from the above histogram, that those gray level intensities whose count is more then 700, lies in the first half portion, means towards blacker portion. \n- Thats why we got an image that is a bit darker.\n- In order to bright it, we will slide its histogram towards right, or towards whiter portion. \n- In order to do we need to add atleast a value of 50 to this image. \n- Because we can see from the histogram above, that this image also has 0 pixel intensities, that are pure black. \n- So if we add 0 to 50, we will shift all the values lies at 0 intensity to 50 intensity and all the rest of the values will be shifted accordingly.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl05.png)\n\n## Decreasing brightness using histogram sliding\n\n- Now if we were to decrease brightness of this new image to such an extent that the old image look brighter, \n- we got to subtract some value from all the matrix of the new image. \n- The value which we are going to subtract is 80. \n- Because we already add 50 to the original image and we got a new brighter image, \n- now if we want to make it darker, we have to subtract at least more than 50 from it.\n\n","source":"_posts/2018-05-21-Histogram Sliding.md","raw":"---\nlayout: post\ntitle:  \"Histogram Sliding\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## Histogram sliding\n\n- In histogram sliding, we just simply shift a complete histogram rightwards or leftwards. \n- Due to shifting or sliding of histogram towards right or left, \n- a clear change can be seen in the image.\n\n## Increasing brightness using histogram sliding\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl02.png)\n\n- On the y axis of this histogram are the frequency or count. \n- And on the x axis, we have gray level values. \n- As you can see from the above histogram, that those gray level intensities whose count is more then 700, lies in the first half portion, means towards blacker portion. \n- Thats why we got an image that is a bit darker.\n- In order to bright it, we will slide its histogram towards right, or towards whiter portion. \n- In order to do we need to add atleast a value of 50 to this image. \n- Because we can see from the histogram above, that this image also has 0 pixel intensities, that are pure black. \n- So if we add 0 to 50, we will shift all the values lies at 0 intensity to 50 intensity and all the rest of the values will be shifted accordingly.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl05.png)\n\n## Decreasing brightness using histogram sliding\n\n- Now if we were to decrease brightness of this new image to such an extent that the old image look brighter, \n- we got to subtract some value from all the matrix of the new image. \n- The value which we are going to subtract is 80. \n- Because we already add 50 to the original image and we got a new brighter image, \n- now if we want to make it darker, we have to subtract at least more than 50 from it.\n\n","slug":"2018-05-21-Histogram Sliding","published":1,"updated":"2018-05-21T13:11:01.908Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kl00d331x7xlwkm7ge","content":"<h2 id=\"Histogram-sliding\"><a href=\"#Histogram-sliding\" class=\"headerlink\" title=\"Histogram sliding\"></a>Histogram sliding</h2><ul>\n<li>In histogram sliding, we just simply shift a complete histogram rightwards or leftwards. </li>\n<li>Due to shifting or sliding of histogram towards right or left, </li>\n<li>a clear change can be seen in the image.</li>\n</ul>\n<h2 id=\"Increasing-brightness-using-histogram-sliding\"><a href=\"#Increasing-brightness-using-histogram-sliding\" class=\"headerlink\" title=\"Increasing brightness using histogram sliding\"></a>Increasing brightness using histogram sliding</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl02.png\" alt=\"img\"></p>\n<ul>\n<li>On the y axis of this histogram are the frequency or count. </li>\n<li>And on the x axis, we have gray level values. </li>\n<li>As you can see from the above histogram, that those gray level intensities whose count is more then 700, lies in the first half portion, means towards blacker portion. </li>\n<li>Thats why we got an image that is a bit darker.</li>\n<li>In order to bright it, we will slide its histogram towards right, or towards whiter portion. </li>\n<li>In order to do we need to add atleast a value of 50 to this image. </li>\n<li>Because we can see from the histogram above, that this image also has 0 pixel intensities, that are pure black. </li>\n<li>So if we add 0 to 50, we will shift all the values lies at 0 intensity to 50 intensity and all the rest of the values will be shifted accordingly.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl05.png\" alt=\"img\"></p>\n<h2 id=\"Decreasing-brightness-using-histogram-sliding\"><a href=\"#Decreasing-brightness-using-histogram-sliding\" class=\"headerlink\" title=\"Decreasing brightness using histogram sliding\"></a>Decreasing brightness using histogram sliding</h2><ul>\n<li>Now if we were to decrease brightness of this new image to such an extent that the old image look brighter, </li>\n<li>we got to subtract some value from all the matrix of the new image. </li>\n<li>The value which we are going to subtract is 80. </li>\n<li>Because we already add 50 to the original image and we got a new brighter image, </li>\n<li>now if we want to make it darker, we have to subtract at least more than 50 from it.</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Histogram-sliding\"><a href=\"#Histogram-sliding\" class=\"headerlink\" title=\"Histogram sliding\"></a>Histogram sliding</h2><ul>\n<li>In histogram sliding, we just simply shift a complete histogram rightwards or leftwards. </li>\n<li>Due to shifting or sliding of histogram towards right or left, </li>\n<li>a clear change can be seen in the image.</li>\n</ul>\n<h2 id=\"Increasing-brightness-using-histogram-sliding\"><a href=\"#Increasing-brightness-using-histogram-sliding\" class=\"headerlink\" title=\"Increasing brightness using histogram sliding\"></a>Increasing brightness using histogram sliding</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl02.png\" alt=\"img\"></p>\n<ul>\n<li>On the y axis of this histogram are the frequency or count. </li>\n<li>And on the x axis, we have gray level values. </li>\n<li>As you can see from the above histogram, that those gray level intensities whose count is more then 700, lies in the first half portion, means towards blacker portion. </li>\n<li>Thats why we got an image that is a bit darker.</li>\n<li>In order to bright it, we will slide its histogram towards right, or towards whiter portion. </li>\n<li>In order to do we need to add atleast a value of 50 to this image. </li>\n<li>Because we can see from the histogram above, that this image also has 0 pixel intensities, that are pure black. </li>\n<li>So if we add 0 to 50, we will shift all the values lies at 0 intensity to 50 intensity and all the rest of the values will be shifted accordingly.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisSl05.png\" alt=\"img\"></p>\n<h2 id=\"Decreasing-brightness-using-histogram-sliding\"><a href=\"#Decreasing-brightness-using-histogram-sliding\" class=\"headerlink\" title=\"Decreasing brightness using histogram sliding\"></a>Decreasing brightness using histogram sliding</h2><ul>\n<li>Now if we were to decrease brightness of this new image to such an extent that the old image look brighter, </li>\n<li>we got to subtract some value from all the matrix of the new image. </li>\n<li>The value which we are going to subtract is 80. </li>\n<li>Because we already add 50 to the original image and we got a new brighter image, </li>\n<li>now if we want to make it darker, we have to subtract at least more than 50 from it.</li>\n</ul>\n"},{"layout":"post","title":"Histogram Stretching","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\nThere are two methods of enhancing contrast. \n\n- The first one is called Histogram stretching that increase contrast. \n- The second one is called Histogram equalization that enhance contrast.\n\n## Contrast\n\n- Contrast is the difference between maximum and minimum pixel intensity.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch01.png)\n\n- Contrast = 225.\n- Now we will increase the contrast of the image.\n\n## Increasing the contrast of the image\n\n- The formula for stretching the histogram of the image to increase the contrast is\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch02.png)\n\n- The formula requires finding the minimum and maximum pixel intensity multiply by levels of gray. \n\n- In our case the image is 8bpp, so levels of gray are 256.\n\n- The minimum value is 0 and the maximum value is 225. So the formula in our case is\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch03.png)\n\n- where f(x,y) denotes the value of each pixel intensity. For each f(x,y) in an image , we will calculate this formula.\n\n- Note the shape and symmetry of histogram. The histogram is now stretched or in other means expand. Have a look at it.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch04.png)\n\n- In this case the contrast of the image can be calculated as Contrast = 240\n\n- Hence we can say that the contrast of the image is increased.\n\n## Failing of histogram stretching\n\n- the algorithm fails on some cases. \n\n- Those cases include images with when there is pixel intensity 0 and 255 are present in the image\n\n- Original Formula\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch05.png)\n\n- Putting fail case values in the formula\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch06.png)\n\n- Simplify that expression gives\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch07.png)\n\n- That means the output image is equal to the processed image. \n\n- That means there is no effect of histogram stretching has been done at this image.","source":"_posts/2018-05-21-Histogram Stretching.md","raw":"---\nlayout: post\ntitle:  \"Histogram Stretching\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\nThere are two methods of enhancing contrast. \n\n- The first one is called Histogram stretching that increase contrast. \n- The second one is called Histogram equalization that enhance contrast.\n\n## Contrast\n\n- Contrast is the difference between maximum and minimum pixel intensity.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch01.png)\n\n- Contrast = 225.\n- Now we will increase the contrast of the image.\n\n## Increasing the contrast of the image\n\n- The formula for stretching the histogram of the image to increase the contrast is\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch02.png)\n\n- The formula requires finding the minimum and maximum pixel intensity multiply by levels of gray. \n\n- In our case the image is 8bpp, so levels of gray are 256.\n\n- The minimum value is 0 and the maximum value is 225. So the formula in our case is\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch03.png)\n\n- where f(x,y) denotes the value of each pixel intensity. For each f(x,y) in an image , we will calculate this formula.\n\n- Note the shape and symmetry of histogram. The histogram is now stretched or in other means expand. Have a look at it.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch04.png)\n\n- In this case the contrast of the image can be calculated as Contrast = 240\n\n- Hence we can say that the contrast of the image is increased.\n\n## Failing of histogram stretching\n\n- the algorithm fails on some cases. \n\n- Those cases include images with when there is pixel intensity 0 and 255 are present in the image\n\n- Original Formula\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch05.png)\n\n- Putting fail case values in the formula\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch06.png)\n\n- Simplify that expression gives\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch07.png)\n\n- That means the output image is equal to the processed image. \n\n- That means there is no effect of histogram stretching has been done at this image.","slug":"2018-05-21-Histogram Stretching","published":1,"updated":"2018-05-21T13:10:53.584Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kn00d631x7sir8r2f1","content":"<p>There are two methods of enhancing contrast. </p>\n<ul>\n<li>The first one is called Histogram stretching that increase contrast. </li>\n<li>The second one is called Histogram equalization that enhance contrast.</li>\n</ul>\n<h2 id=\"Contrast\"><a href=\"#Contrast\" class=\"headerlink\" title=\"Contrast\"></a>Contrast</h2><ul>\n<li><p>Contrast is the difference between maximum and minimum pixel intensity.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch01.png\" alt=\"img\"></p>\n</li>\n<li><p>Contrast = 225.</p>\n</li>\n<li>Now we will increase the contrast of the image.</li>\n</ul>\n<h2 id=\"Increasing-the-contrast-of-the-image\"><a href=\"#Increasing-the-contrast-of-the-image\" class=\"headerlink\" title=\"Increasing the contrast of the image\"></a>Increasing the contrast of the image</h2><ul>\n<li><p>The formula for stretching the histogram of the image to increase the contrast is</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch02.png\" alt=\"img\"></p>\n</li>\n<li><p>The formula requires finding the minimum and maximum pixel intensity multiply by levels of gray. </p>\n</li>\n<li><p>In our case the image is 8bpp, so levels of gray are 256.</p>\n</li>\n<li><p>The minimum value is 0 and the maximum value is 225. So the formula in our case is</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch03.png\" alt=\"img\"></p>\n</li>\n<li><p>where f(x,y) denotes the value of each pixel intensity. For each f(x,y) in an image , we will calculate this formula.</p>\n</li>\n<li><p>Note the shape and symmetry of histogram. The histogram is now stretched or in other means expand. Have a look at it.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch04.png\" alt=\"img\"></p>\n</li>\n<li><p>In this case the contrast of the image can be calculated as Contrast = 240</p>\n</li>\n<li><p>Hence we can say that the contrast of the image is increased.</p>\n</li>\n</ul>\n<h2 id=\"Failing-of-histogram-stretching\"><a href=\"#Failing-of-histogram-stretching\" class=\"headerlink\" title=\"Failing of histogram stretching\"></a>Failing of histogram stretching</h2><ul>\n<li><p>the algorithm fails on some cases. </p>\n</li>\n<li><p>Those cases include images with when there is pixel intensity 0 and 255 are present in the image</p>\n</li>\n<li><p>Original Formula</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch05.png\" alt=\"img\"></p>\n</li>\n<li><p>Putting fail case values in the formula</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch06.png\" alt=\"img\"></p>\n</li>\n<li><p>Simplify that expression gives</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch07.png\" alt=\"img\"></p>\n</li>\n<li><p>That means the output image is equal to the processed image. </p>\n</li>\n<li><p>That means there is no effect of histogram stretching has been done at this image.</p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>There are two methods of enhancing contrast. </p>\n<ul>\n<li>The first one is called Histogram stretching that increase contrast. </li>\n<li>The second one is called Histogram equalization that enhance contrast.</li>\n</ul>\n<h2 id=\"Contrast\"><a href=\"#Contrast\" class=\"headerlink\" title=\"Contrast\"></a>Contrast</h2><ul>\n<li><p>Contrast is the difference between maximum and minimum pixel intensity.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch01.png\" alt=\"img\"></p>\n</li>\n<li><p>Contrast = 225.</p>\n</li>\n<li>Now we will increase the contrast of the image.</li>\n</ul>\n<h2 id=\"Increasing-the-contrast-of-the-image\"><a href=\"#Increasing-the-contrast-of-the-image\" class=\"headerlink\" title=\"Increasing the contrast of the image\"></a>Increasing the contrast of the image</h2><ul>\n<li><p>The formula for stretching the histogram of the image to increase the contrast is</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch02.png\" alt=\"img\"></p>\n</li>\n<li><p>The formula requires finding the minimum and maximum pixel intensity multiply by levels of gray. </p>\n</li>\n<li><p>In our case the image is 8bpp, so levels of gray are 256.</p>\n</li>\n<li><p>The minimum value is 0 and the maximum value is 225. So the formula in our case is</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch03.png\" alt=\"img\"></p>\n</li>\n<li><p>where f(x,y) denotes the value of each pixel intensity. For each f(x,y) in an image , we will calculate this formula.</p>\n</li>\n<li><p>Note the shape and symmetry of histogram. The histogram is now stretched or in other means expand. Have a look at it.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch04.png\" alt=\"img\"></p>\n</li>\n<li><p>In this case the contrast of the image can be calculated as Contrast = 240</p>\n</li>\n<li><p>Hence we can say that the contrast of the image is increased.</p>\n</li>\n</ul>\n<h2 id=\"Failing-of-histogram-stretching\"><a href=\"#Failing-of-histogram-stretching\" class=\"headerlink\" title=\"Failing of histogram stretching\"></a>Failing of histogram stretching</h2><ul>\n<li><p>the algorithm fails on some cases. </p>\n</li>\n<li><p>Those cases include images with when there is pixel intensity 0 and 255 are present in the image</p>\n</li>\n<li><p>Original Formula</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch05.png\" alt=\"img\"></p>\n</li>\n<li><p>Putting fail case values in the formula</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch06.png\" alt=\"img\"></p>\n</li>\n<li><p>Simplify that expression gives</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hisStretch07.png\" alt=\"img\"></p>\n</li>\n<li><p>That means the output image is equal to the processed image. </p>\n</li>\n<li><p>That means there is no effect of histogram stretching has been done at this image.</p>\n</li>\n</ul>\n"},{"layout":"post","title":"Histograms Introduction","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## Histogram of an image\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/histogram.png)\n\n- The x axis of the histogram shows the range of pixel values. \n- Since its an 8 bpp image, that means it has 256 levels of gray or shades of gray in it. \n- Thats why the range of x axis starts from 0 and end at 255 with a gap of 50. \n- Whereas on the y axis, is the count of these intensities.\n-  that most of the bars that have high frequency lies in the first half portion which is the darker portion. \n- That means that the image we have got is darker. \n\n## Applications of Histograms\n\n- The first use as it has also been discussed above is the analysis of the image. \n  - We can predict about an image by just looking at its histogram. \n  - Its like looking an x ray of a bone of a body.\n- The second use of histogram is for brightness purposes. \n  - The histograms has wide application in image brightness. \n  - Not only in brightness, but histograms are also used in adjusting contrast of an image.\n- Another important use of histogram is to equalize an image.\n- And last but not the least, histogram has wide use in thresholding. \n  - This is mostly used in computer vision.\n\n ","source":"_posts/2018-05-21-Histograms Introduction.md","raw":"---\nlayout: post\ntitle:  \"Histograms Introduction\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## Histogram of an image\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/histogram.png)\n\n- The x axis of the histogram shows the range of pixel values. \n- Since its an 8 bpp image, that means it has 256 levels of gray or shades of gray in it. \n- Thats why the range of x axis starts from 0 and end at 255 with a gap of 50. \n- Whereas on the y axis, is the count of these intensities.\n-  that most of the bars that have high frequency lies in the first half portion which is the darker portion. \n- That means that the image we have got is darker. \n\n## Applications of Histograms\n\n- The first use as it has also been discussed above is the analysis of the image. \n  - We can predict about an image by just looking at its histogram. \n  - Its like looking an x ray of a bone of a body.\n- The second use of histogram is for brightness purposes. \n  - The histograms has wide application in image brightness. \n  - Not only in brightness, but histograms are also used in adjusting contrast of an image.\n- Another important use of histogram is to equalize an image.\n- And last but not the least, histogram has wide use in thresholding. \n  - This is mostly used in computer vision.\n\n ","slug":"2018-05-21-Histograms Introduction","published":1,"updated":"2018-05-21T13:10:45.954Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kr00d831x7jb076la5","content":"<h2 id=\"Histogram-of-an-image\"><a href=\"#Histogram-of-an-image\" class=\"headerlink\" title=\"Histogram of an image\"></a>Histogram of an image</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/histogram.png\" alt=\"img\"></p>\n<ul>\n<li>The x axis of the histogram shows the range of pixel values. </li>\n<li>Since its an 8 bpp image, that means it has 256 levels of gray or shades of gray in it. </li>\n<li>Thats why the range of x axis starts from 0 and end at 255 with a gap of 50. </li>\n<li>Whereas on the y axis, is the count of these intensities.</li>\n<li>that most of the bars that have high frequency lies in the first half portion which is the darker portion. </li>\n<li>That means that the image we have got is darker. </li>\n</ul>\n<h2 id=\"Applications-of-Histograms\"><a href=\"#Applications-of-Histograms\" class=\"headerlink\" title=\"Applications of Histograms\"></a>Applications of Histograms</h2><ul>\n<li>The first use as it has also been discussed above is the analysis of the image. <ul>\n<li>We can predict about an image by just looking at its histogram. </li>\n<li>Its like looking an x ray of a bone of a body.</li>\n</ul>\n</li>\n<li>The second use of histogram is for brightness purposes. <ul>\n<li>The histograms has wide application in image brightness. </li>\n<li>Not only in brightness, but histograms are also used in adjusting contrast of an image.</li>\n</ul>\n</li>\n<li>Another important use of histogram is to equalize an image.</li>\n<li>And last but not the least, histogram has wide use in thresholding. <ul>\n<li>This is mostly used in computer vision.</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Histogram-of-an-image\"><a href=\"#Histogram-of-an-image\" class=\"headerlink\" title=\"Histogram of an image\"></a>Histogram of an image</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/histogram.png\" alt=\"img\"></p>\n<ul>\n<li>The x axis of the histogram shows the range of pixel values. </li>\n<li>Since its an 8 bpp image, that means it has 256 levels of gray or shades of gray in it. </li>\n<li>Thats why the range of x axis starts from 0 and end at 255 with a gap of 50. </li>\n<li>Whereas on the y axis, is the count of these intensities.</li>\n<li>that most of the bars that have high frequency lies in the first half portion which is the darker portion. </li>\n<li>That means that the image we have got is darker. </li>\n</ul>\n<h2 id=\"Applications-of-Histograms\"><a href=\"#Applications-of-Histograms\" class=\"headerlink\" title=\"Applications of Histograms\"></a>Applications of Histograms</h2><ul>\n<li>The first use as it has also been discussed above is the analysis of the image. <ul>\n<li>We can predict about an image by just looking at its histogram. </li>\n<li>Its like looking an x ray of a bone of a body.</li>\n</ul>\n</li>\n<li>The second use of histogram is for brightness purposes. <ul>\n<li>The histograms has wide application in image brightness. </li>\n<li>Not only in brightness, but histograms are also used in adjusting contrast of an image.</li>\n</ul>\n</li>\n<li>Another important use of histogram is to equalize an image.</li>\n<li>And last but not the least, histogram has wide use in thresholding. <ul>\n<li>This is mostly used in computer vision.</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Mask","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## What is a mask\n\n- A mask is a filter.\n- Concept of masking is also known as spatial filtering. \n- Masking is also known as filtering. \n- In this concept we just deal with the filtering operation that is performed directly on the image.\n\n## What is filtering?\n\n- The process of filtering is also known as convolving a mask with an image. \n- As this process is same of convolution so filter masks are also known as convolution masks.\n\n## How it is done\n\n- The general process of filtering and applying masks is consists of moving the filter mask from point to point in an image. \n- At each point (x,y) of the original image, the response of a filter is calculated by a pre defined relationship. \n- All the filters values are pre defined and are a standard.\n\n## Types of filters\n\n- Generally there are two types of filters. \n  - linear filters or smoothing filters \n  - frequency domain filters.\n\n## Why filters are used?\n\n- for Blurring and noise reduction\n\n- edge detection and sharpness\n\n## Blurring and noise reduction\n\n- Blurring is used in pre processing steps, such as removal of small details from an image prior to large object extraction.\n\n## Masks for blurring\n\n- The common masks for blurring are.\n  - Box filter\n  - Weighted average filter\n- In the process of blurring we reduce the edge content in an image and try to make the transitions between different pixel intensities as smooth as possible.\n- Noise reduction is also possible with the help of blurring.\n\n## Edge Detection and sharpness\n\n- Masks or filters can also be used for edge detection in an image and to increase sharpness of an image.\n\n## What are edges\n\n- We can also say that sudden changes of discontinuities in an image are called as edges. \n\n- Significant transitions in an image are called as edges.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mask.png)\n\n  \n\n  ","source":"_posts/2018-05-21-Mask.md","raw":"---\nlayout: post\ntitle:  \"Mask\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## What is a mask\n\n- A mask is a filter.\n- Concept of masking is also known as spatial filtering. \n- Masking is also known as filtering. \n- In this concept we just deal with the filtering operation that is performed directly on the image.\n\n## What is filtering?\n\n- The process of filtering is also known as convolving a mask with an image. \n- As this process is same of convolution so filter masks are also known as convolution masks.\n\n## How it is done\n\n- The general process of filtering and applying masks is consists of moving the filter mask from point to point in an image. \n- At each point (x,y) of the original image, the response of a filter is calculated by a pre defined relationship. \n- All the filters values are pre defined and are a standard.\n\n## Types of filters\n\n- Generally there are two types of filters. \n  - linear filters or smoothing filters \n  - frequency domain filters.\n\n## Why filters are used?\n\n- for Blurring and noise reduction\n\n- edge detection and sharpness\n\n## Blurring and noise reduction\n\n- Blurring is used in pre processing steps, such as removal of small details from an image prior to large object extraction.\n\n## Masks for blurring\n\n- The common masks for blurring are.\n  - Box filter\n  - Weighted average filter\n- In the process of blurring we reduce the edge content in an image and try to make the transitions between different pixel intensities as smooth as possible.\n- Noise reduction is also possible with the help of blurring.\n\n## Edge Detection and sharpness\n\n- Masks or filters can also be used for edge detection in an image and to increase sharpness of an image.\n\n## What are edges\n\n- We can also say that sudden changes of discontinuities in an image are called as edges. \n\n- Significant transitions in an image are called as edges.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mask.png)\n\n  \n\n  ","slug":"2018-05-21-Mask","published":1,"updated":"2018-05-21T13:59:00.952Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ks00da31x7ni9ca85e","content":"<h2 id=\"What-is-a-mask\"><a href=\"#What-is-a-mask\" class=\"headerlink\" title=\"What is a mask\"></a>What is a mask</h2><ul>\n<li>A mask is a filter.</li>\n<li>Concept of masking is also known as spatial filtering. </li>\n<li>Masking is also known as filtering. </li>\n<li>In this concept we just deal with the filtering operation that is performed directly on the image.</li>\n</ul>\n<h2 id=\"What-is-filtering\"><a href=\"#What-is-filtering\" class=\"headerlink\" title=\"What is filtering?\"></a>What is filtering?</h2><ul>\n<li>The process of filtering is also known as convolving a mask with an image. </li>\n<li>As this process is same of convolution so filter masks are also known as convolution masks.</li>\n</ul>\n<h2 id=\"How-it-is-done\"><a href=\"#How-it-is-done\" class=\"headerlink\" title=\"How it is done\"></a>How it is done</h2><ul>\n<li>The general process of filtering and applying masks is consists of moving the filter mask from point to point in an image. </li>\n<li>At each point (x,y) of the original image, the response of a filter is calculated by a pre defined relationship. </li>\n<li>All the filters values are pre defined and are a standard.</li>\n</ul>\n<h2 id=\"Types-of-filters\"><a href=\"#Types-of-filters\" class=\"headerlink\" title=\"Types of filters\"></a>Types of filters</h2><ul>\n<li>Generally there are two types of filters. <ul>\n<li>linear filters or smoothing filters </li>\n<li>frequency domain filters.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Why-filters-are-used\"><a href=\"#Why-filters-are-used\" class=\"headerlink\" title=\"Why filters are used?\"></a>Why filters are used?</h2><ul>\n<li><p>for Blurring and noise reduction</p>\n</li>\n<li><p>edge detection and sharpness</p>\n</li>\n</ul>\n<h2 id=\"Blurring-and-noise-reduction\"><a href=\"#Blurring-and-noise-reduction\" class=\"headerlink\" title=\"Blurring and noise reduction\"></a>Blurring and noise reduction</h2><ul>\n<li>Blurring is used in pre processing steps, such as removal of small details from an image prior to large object extraction.</li>\n</ul>\n<h2 id=\"Masks-for-blurring\"><a href=\"#Masks-for-blurring\" class=\"headerlink\" title=\"Masks for blurring\"></a>Masks for blurring</h2><ul>\n<li>The common masks for blurring are.<ul>\n<li>Box filter</li>\n<li>Weighted average filter</li>\n</ul>\n</li>\n<li>In the process of blurring we reduce the edge content in an image and try to make the transitions between different pixel intensities as smooth as possible.</li>\n<li>Noise reduction is also possible with the help of blurring.</li>\n</ul>\n<h2 id=\"Edge-Detection-and-sharpness\"><a href=\"#Edge-Detection-and-sharpness\" class=\"headerlink\" title=\"Edge Detection and sharpness\"></a>Edge Detection and sharpness</h2><ul>\n<li>Masks or filters can also be used for edge detection in an image and to increase sharpness of an image.</li>\n</ul>\n<h2 id=\"What-are-edges\"><a href=\"#What-are-edges\" class=\"headerlink\" title=\"What are edges\"></a>What are edges</h2><ul>\n<li><p>We can also say that sudden changes of discontinuities in an image are called as edges. </p>\n</li>\n<li><p>Significant transitions in an image are called as edges.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mask.png\" alt=\"img\"></p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"What-is-a-mask\"><a href=\"#What-is-a-mask\" class=\"headerlink\" title=\"What is a mask\"></a>What is a mask</h2><ul>\n<li>A mask is a filter.</li>\n<li>Concept of masking is also known as spatial filtering. </li>\n<li>Masking is also known as filtering. </li>\n<li>In this concept we just deal with the filtering operation that is performed directly on the image.</li>\n</ul>\n<h2 id=\"What-is-filtering\"><a href=\"#What-is-filtering\" class=\"headerlink\" title=\"What is filtering?\"></a>What is filtering?</h2><ul>\n<li>The process of filtering is also known as convolving a mask with an image. </li>\n<li>As this process is same of convolution so filter masks are also known as convolution masks.</li>\n</ul>\n<h2 id=\"How-it-is-done\"><a href=\"#How-it-is-done\" class=\"headerlink\" title=\"How it is done\"></a>How it is done</h2><ul>\n<li>The general process of filtering and applying masks is consists of moving the filter mask from point to point in an image. </li>\n<li>At each point (x,y) of the original image, the response of a filter is calculated by a pre defined relationship. </li>\n<li>All the filters values are pre defined and are a standard.</li>\n</ul>\n<h2 id=\"Types-of-filters\"><a href=\"#Types-of-filters\" class=\"headerlink\" title=\"Types of filters\"></a>Types of filters</h2><ul>\n<li>Generally there are two types of filters. <ul>\n<li>linear filters or smoothing filters </li>\n<li>frequency domain filters.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Why-filters-are-used\"><a href=\"#Why-filters-are-used\" class=\"headerlink\" title=\"Why filters are used?\"></a>Why filters are used?</h2><ul>\n<li><p>for Blurring and noise reduction</p>\n</li>\n<li><p>edge detection and sharpness</p>\n</li>\n</ul>\n<h2 id=\"Blurring-and-noise-reduction\"><a href=\"#Blurring-and-noise-reduction\" class=\"headerlink\" title=\"Blurring and noise reduction\"></a>Blurring and noise reduction</h2><ul>\n<li>Blurring is used in pre processing steps, such as removal of small details from an image prior to large object extraction.</li>\n</ul>\n<h2 id=\"Masks-for-blurring\"><a href=\"#Masks-for-blurring\" class=\"headerlink\" title=\"Masks for blurring\"></a>Masks for blurring</h2><ul>\n<li>The common masks for blurring are.<ul>\n<li>Box filter</li>\n<li>Weighted average filter</li>\n</ul>\n</li>\n<li>In the process of blurring we reduce the edge content in an image and try to make the transitions between different pixel intensities as smooth as possible.</li>\n<li>Noise reduction is also possible with the help of blurring.</li>\n</ul>\n<h2 id=\"Edge-Detection-and-sharpness\"><a href=\"#Edge-Detection-and-sharpness\" class=\"headerlink\" title=\"Edge Detection and sharpness\"></a>Edge Detection and sharpness</h2><ul>\n<li>Masks or filters can also be used for edge detection in an image and to increase sharpness of an image.</li>\n</ul>\n<h2 id=\"What-are-edges\"><a href=\"#What-are-edges\" class=\"headerlink\" title=\"What are edges\"></a>What are edges</h2><ul>\n<li><p>We can also say that sudden changes of discontinuities in an image are called as edges. </p>\n</li>\n<li><p>Significant transitions in an image are called as edges.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mask.png\" alt=\"img\"></p>\n</li>\n</ul>\n"},{"layout":"post","title":"PMF, CDF","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\nIn the histogram equalization, the first and the second step are PMF and CDF. \n\n## What is PMF?\n\n- probability mass function\n-  it gives the probability of each number in the data set or \n- you can say that it basically gives the count or frequency of each element.\n\n## How PMF is calculated\n\n- Consider this matrix.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf01.png)\n\n- Now if we were to calculate the PMF of this matrix, \n\n- here how we are going to do it.\n\n- At first, we will take the first value in the matrix , and then we will count, how much time this value appears in the whole matrix. \n\n- After count they can either be represented in a histogram, or in a table like this below.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf02.png)\n\n## Calculating PMF from histogram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf03.png) \n\n- The above histogram shows frequency of gray level values for an 8 bits per pixel image.\n- Now if we have to calculate its PMF, \n- we will simple look at the count of each bar from vertical axis and then divide it by total count.\n- So the PMF of the above histogram is this.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf04.png) \n\n## What is CDF?\n\n- cumulative distributive function\n- it is a function that calculates the cumulative sum of all the values that are calculated by PMF. \n- It basically sums the previous one.\n\n## How CDF is calculated\n\n- Since this histogram is not increasing monotonically, so will make it grow monotonically.\n\n- the first value of PMF remain as it is. \n\n- The second value of PMF is added in the first value and placed over 128. \n\n- The third value of PMF is added in the second value of CDF , that gives 110/110 which is equal to 1.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf05.png) ","source":"_posts/2018-05-21-PMF, CDF.md","raw":"---\nlayout: post\ntitle:  \"PMF, CDF\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\nIn the histogram equalization, the first and the second step are PMF and CDF. \n\n## What is PMF?\n\n- probability mass function\n-  it gives the probability of each number in the data set or \n- you can say that it basically gives the count or frequency of each element.\n\n## How PMF is calculated\n\n- Consider this matrix.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf01.png)\n\n- Now if we were to calculate the PMF of this matrix, \n\n- here how we are going to do it.\n\n- At first, we will take the first value in the matrix , and then we will count, how much time this value appears in the whole matrix. \n\n- After count they can either be represented in a histogram, or in a table like this below.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf02.png)\n\n## Calculating PMF from histogram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf03.png) \n\n- The above histogram shows frequency of gray level values for an 8 bits per pixel image.\n- Now if we have to calculate its PMF, \n- we will simple look at the count of each bar from vertical axis and then divide it by total count.\n- So the PMF of the above histogram is this.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf04.png) \n\n## What is CDF?\n\n- cumulative distributive function\n- it is a function that calculates the cumulative sum of all the values that are calculated by PMF. \n- It basically sums the previous one.\n\n## How CDF is calculated\n\n- Since this histogram is not increasing monotonically, so will make it grow monotonically.\n\n- the first value of PMF remain as it is. \n\n- The second value of PMF is added in the first value and placed over 128. \n\n- The third value of PMF is added in the second value of CDF , that gives 110/110 which is equal to 1.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf05.png) ","slug":"2018-05-21-PMF, CDF","published":1,"updated":"2018-05-21T13:10:39.129Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ku00dc31x78wncjr6o","content":"<p>In the histogram equalization, the first and the second step are PMF and CDF. </p>\n<h2 id=\"What-is-PMF\"><a href=\"#What-is-PMF\" class=\"headerlink\" title=\"What is PMF?\"></a>What is PMF?</h2><ul>\n<li>probability mass function</li>\n<li>it gives the probability of each number in the data set or </li>\n<li>you can say that it basically gives the count or frequency of each element.</li>\n</ul>\n<h2 id=\"How-PMF-is-calculated\"><a href=\"#How-PMF-is-calculated\" class=\"headerlink\" title=\"How PMF is calculated\"></a>How PMF is calculated</h2><ul>\n<li><p>Consider this matrix.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf01.png\" alt=\"img\"></p>\n</li>\n<li><p>Now if we were to calculate the PMF of this matrix, </p>\n</li>\n<li><p>here how we are going to do it.</p>\n</li>\n<li><p>At first, we will take the first value in the matrix , and then we will count, how much time this value appears in the whole matrix. </p>\n</li>\n<li><p>After count they can either be represented in a histogram, or in a table like this below.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf02.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Calculating-PMF-from-histogram\"><a href=\"#Calculating-PMF-from-histogram\" class=\"headerlink\" title=\"Calculating PMF from histogram\"></a>Calculating PMF from histogram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf03.png\" alt=\"img\"> </p>\n<ul>\n<li>The above histogram shows frequency of gray level values for an 8 bits per pixel image.</li>\n<li>Now if we have to calculate its PMF, </li>\n<li>we will simple look at the count of each bar from vertical axis and then divide it by total count.</li>\n<li>So the PMF of the above histogram is this.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf04.png\" alt=\"img\"> </p>\n<h2 id=\"What-is-CDF\"><a href=\"#What-is-CDF\" class=\"headerlink\" title=\"What is CDF?\"></a>What is CDF?</h2><ul>\n<li>cumulative distributive function</li>\n<li>it is a function that calculates the cumulative sum of all the values that are calculated by PMF. </li>\n<li>It basically sums the previous one.</li>\n</ul>\n<h2 id=\"How-CDF-is-calculated\"><a href=\"#How-CDF-is-calculated\" class=\"headerlink\" title=\"How CDF is calculated\"></a>How CDF is calculated</h2><ul>\n<li><p>Since this histogram is not increasing monotonically, so will make it grow monotonically.</p>\n</li>\n<li><p>the first value of PMF remain as it is. </p>\n</li>\n<li><p>The second value of PMF is added in the first value and placed over 128. </p>\n</li>\n<li><p>The third value of PMF is added in the second value of CDF , that gives 110/110 which is equal to 1.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf05.png\" alt=\"img\"> </p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>In the histogram equalization, the first and the second step are PMF and CDF. </p>\n<h2 id=\"What-is-PMF\"><a href=\"#What-is-PMF\" class=\"headerlink\" title=\"What is PMF?\"></a>What is PMF?</h2><ul>\n<li>probability mass function</li>\n<li>it gives the probability of each number in the data set or </li>\n<li>you can say that it basically gives the count or frequency of each element.</li>\n</ul>\n<h2 id=\"How-PMF-is-calculated\"><a href=\"#How-PMF-is-calculated\" class=\"headerlink\" title=\"How PMF is calculated\"></a>How PMF is calculated</h2><ul>\n<li><p>Consider this matrix.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf01.png\" alt=\"img\"></p>\n</li>\n<li><p>Now if we were to calculate the PMF of this matrix, </p>\n</li>\n<li><p>here how we are going to do it.</p>\n</li>\n<li><p>At first, we will take the first value in the matrix , and then we will count, how much time this value appears in the whole matrix. </p>\n</li>\n<li><p>After count they can either be represented in a histogram, or in a table like this below.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf02.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"Calculating-PMF-from-histogram\"><a href=\"#Calculating-PMF-from-histogram\" class=\"headerlink\" title=\"Calculating PMF from histogram\"></a>Calculating PMF from histogram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf03.png\" alt=\"img\"> </p>\n<ul>\n<li>The above histogram shows frequency of gray level values for an 8 bits per pixel image.</li>\n<li>Now if we have to calculate its PMF, </li>\n<li>we will simple look at the count of each bar from vertical axis and then divide it by total count.</li>\n<li>So the PMF of the above histogram is this.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf04.png\" alt=\"img\"> </p>\n<h2 id=\"What-is-CDF\"><a href=\"#What-is-CDF\" class=\"headerlink\" title=\"What is CDF?\"></a>What is CDF?</h2><ul>\n<li>cumulative distributive function</li>\n<li>it is a function that calculates the cumulative sum of all the values that are calculated by PMF. </li>\n<li>It basically sums the previous one.</li>\n</ul>\n<h2 id=\"How-CDF-is-calculated\"><a href=\"#How-CDF-is-calculated\" class=\"headerlink\" title=\"How CDF is calculated\"></a>How CDF is calculated</h2><ul>\n<li><p>Since this histogram is not increasing monotonically, so will make it grow monotonically.</p>\n</li>\n<li><p>the first value of PMF remain as it is. </p>\n</li>\n<li><p>The second value of PMF is added in the first value and placed over 128. </p>\n</li>\n<li><p>The third value of PMF is added in the second value of CDF , that gives 110/110 which is equal to 1.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pmf05.png\" alt=\"img\"> </p>\n</li>\n</ul>\n"},{"layout":"post","title":"Pixel","date":"2018-05-14T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n#### Pixel\n\n- Pixel is the smallest element of an image.\n- Each pixel correspond to any one value.\n  - In an 8-bit gray scale image, the value of the pixel between 0 and 255\n  - each value denotes the intensity of light at that point of the image.\n\n#### Calculation of total number of pixels\n\n- We have define an image as a two dimensional signal or matrix.\n- Total number of pixels\n  - number of rows ( X ) number of columns\n  - the number of (x,y) coordinate pairs\n\n#### Gray Scale\n\n- The value of the pixel at any point denotes the intensity of image at that location, and that is also known as gray level.\n\n#### Pixel value (0)\n\n- each pixel can have only one value and each value denotes the intensity of light at that point of the image.\n\n- The value 0 means absence of light. \n\n- It means that 0 denotes dark, \n\n- and it further means that when ever a pixel has a value of 0, it means at that point, black color would be formed.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pixelTable.png)\n\n- this image matrix has all filled up with 0. \n\n- All the pixels have a value of 0. \n\n- an image would be formed with 9 pixels, \n\n- and that image would have a dimension of 3 rows and 3 column \n\n- and most importantly that image would be black.\n\n- Because all the pixels in the image had a value of 0.\n\n#### Reference\n\n- https://www.tutorialspoint.com/dip/concept_of_pixel.htm","source":"_posts/2018-05-15-Pixel.md","raw":"---\nlayout: post\ntitle:  \"Pixel\"\ndate:   2018-05-15\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n#### Pixel\n\n- Pixel is the smallest element of an image.\n- Each pixel correspond to any one value.\n  - In an 8-bit gray scale image, the value of the pixel between 0 and 255\n  - each value denotes the intensity of light at that point of the image.\n\n#### Calculation of total number of pixels\n\n- We have define an image as a two dimensional signal or matrix.\n- Total number of pixels\n  - number of rows ( X ) number of columns\n  - the number of (x,y) coordinate pairs\n\n#### Gray Scale\n\n- The value of the pixel at any point denotes the intensity of image at that location, and that is also known as gray level.\n\n#### Pixel value (0)\n\n- each pixel can have only one value and each value denotes the intensity of light at that point of the image.\n\n- The value 0 means absence of light. \n\n- It means that 0 denotes dark, \n\n- and it further means that when ever a pixel has a value of 0, it means at that point, black color would be formed.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pixelTable.png)\n\n- this image matrix has all filled up with 0. \n\n- All the pixels have a value of 0. \n\n- an image would be formed with 9 pixels, \n\n- and that image would have a dimension of 3 rows and 3 column \n\n- and most importantly that image would be black.\n\n- Because all the pixels in the image had a value of 0.\n\n#### Reference\n\n- https://www.tutorialspoint.com/dip/concept_of_pixel.htm","slug":"2018-05-15-Pixel","published":1,"updated":"2018-05-21T13:11:33.068Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kv00de31x781wt5idr","content":"<h4 id=\"Pixel\"><a href=\"#Pixel\" class=\"headerlink\" title=\"Pixel\"></a>Pixel</h4><ul>\n<li>Pixel is the smallest element of an image.</li>\n<li>Each pixel correspond to any one value.<ul>\n<li>In an 8-bit gray scale image, the value of the pixel between 0 and 255</li>\n<li>each value denotes the intensity of light at that point of the image.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Calculation-of-total-number-of-pixels\"><a href=\"#Calculation-of-total-number-of-pixels\" class=\"headerlink\" title=\"Calculation of total number of pixels\"></a>Calculation of total number of pixels</h4><ul>\n<li>We have define an image as a two dimensional signal or matrix.</li>\n<li>Total number of pixels<ul>\n<li>number of rows ( X ) number of columns</li>\n<li>the number of (x,y) coordinate pairs</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Gray-Scale\"><a href=\"#Gray-Scale\" class=\"headerlink\" title=\"Gray Scale\"></a>Gray Scale</h4><ul>\n<li>The value of the pixel at any point denotes the intensity of image at that location, and that is also known as gray level.</li>\n</ul>\n<h4 id=\"Pixel-value-0\"><a href=\"#Pixel-value-0\" class=\"headerlink\" title=\"Pixel value (0)\"></a>Pixel value (0)</h4><ul>\n<li><p>each pixel can have only one value and each value denotes the intensity of light at that point of the image.</p>\n</li>\n<li><p>The value 0 means absence of light. </p>\n</li>\n<li><p>It means that 0 denotes dark, </p>\n</li>\n<li><p>and it further means that when ever a pixel has a value of 0, it means at that point, black color would be formed.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pixelTable.png\" alt=\"img\"></p>\n</li>\n<li><p>this image matrix has all filled up with 0. </p>\n</li>\n<li><p>All the pixels have a value of 0. </p>\n</li>\n<li><p>an image would be formed with 9 pixels, </p>\n</li>\n<li><p>and that image would have a dimension of 3 rows and 3 column </p>\n</li>\n<li><p>and most importantly that image would be black.</p>\n</li>\n<li><p>Because all the pixels in the image had a value of 0.</p>\n</li>\n</ul>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li><a href=\"https://www.tutorialspoint.com/dip/concept_of_pixel.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/dip/concept_of_pixel.htm</a></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h4 id=\"Pixel\"><a href=\"#Pixel\" class=\"headerlink\" title=\"Pixel\"></a>Pixel</h4><ul>\n<li>Pixel is the smallest element of an image.</li>\n<li>Each pixel correspond to any one value.<ul>\n<li>In an 8-bit gray scale image, the value of the pixel between 0 and 255</li>\n<li>each value denotes the intensity of light at that point of the image.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Calculation-of-total-number-of-pixels\"><a href=\"#Calculation-of-total-number-of-pixels\" class=\"headerlink\" title=\"Calculation of total number of pixels\"></a>Calculation of total number of pixels</h4><ul>\n<li>We have define an image as a two dimensional signal or matrix.</li>\n<li>Total number of pixels<ul>\n<li>number of rows ( X ) number of columns</li>\n<li>the number of (x,y) coordinate pairs</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Gray-Scale\"><a href=\"#Gray-Scale\" class=\"headerlink\" title=\"Gray Scale\"></a>Gray Scale</h4><ul>\n<li>The value of the pixel at any point denotes the intensity of image at that location, and that is also known as gray level.</li>\n</ul>\n<h4 id=\"Pixel-value-0\"><a href=\"#Pixel-value-0\" class=\"headerlink\" title=\"Pixel value (0)\"></a>Pixel value (0)</h4><ul>\n<li><p>each pixel can have only one value and each value denotes the intensity of light at that point of the image.</p>\n</li>\n<li><p>The value 0 means absence of light. </p>\n</li>\n<li><p>It means that 0 denotes dark, </p>\n</li>\n<li><p>and it further means that when ever a pixel has a value of 0, it means at that point, black color would be formed.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/pixelTable.png\" alt=\"img\"></p>\n</li>\n<li><p>this image matrix has all filled up with 0. </p>\n</li>\n<li><p>All the pixels have a value of 0. </p>\n</li>\n<li><p>an image would be formed with 9 pixels, </p>\n</li>\n<li><p>and that image would have a dimension of 3 rows and 3 column </p>\n</li>\n<li><p>and most importantly that image would be black.</p>\n</li>\n<li><p>Because all the pixels in the image had a value of 0.</p>\n</li>\n</ul>\n<h4 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h4><ul>\n<li><a href=\"https://www.tutorialspoint.com/dip/concept_of_pixel.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/dip/concept_of_pixel.htm</a></li>\n</ul>\n"},{"layout":"post","title":"Edge Detection","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## What are edges\n\nWe can also say that sudden changes of discontinuities in an image are called as edges. \n\nSignificant transitions in an image are called as edges.\n\n## Types of edges\n\nGenerally edges are of three types:\n\n- Horizontal edges\n- Vertical Edges\n- Diagonal Edges\n\n## Why detect edges\n\nMost of the shape information of an image is enclosed in edges. \n\nSo first we detect these edges in an image and by using these filters and then by enhancing those areas of image which contains edges, sharpness of the image will increase and image will become clearer.\n\nHere are some of the masks for edge detection\n\n- Prewitt Operator\n- Sobel Operator\n- Robinson Compass Masks\n- Krisch Compass Masks\n- Laplacian Operator.\n\nAbove mentioned all the filters are Linear filters or smoothing filters.\n\n## Prewitt Operator\n\nPrewitt operator is used for detecting edges horizontally and vertically.\n\n \n\n## Sobel Operator\n\nThe sobel operator is very similar to Prewitt operator. It is also a derivate mask and is used for edge detection. It also calculates edges in both horizontal and vertical direction.\n\n## Robinson Compass Masks\n\n This operator is also known as direction mask. In this operator we take one mask and rotate it in all the 8 compass major directions to calculate edges of each direction.\n\n## Kirsch Compass Masks\n\nKirsch Compass Mask is also a derivative mask which is used for finding edges. Kirsch mask is also used for calculating edges in all the directions.\n\n## Laplacian Operator\n\nLaplacian Operator is also a derivative operator which is used to find edges in an image. \n\nLaplacian is a second order derivative mask. It can be further divided into positive laplacian and negative laplacian.\n\nAll these masks find edges. Some find horizontally and vertically, some find in one direction only and some find in all the directions. \n\n## Sharpening\n\nSharpening is opposite to the blurring. In blurring, we reduce the edge content and in Sharpening, we increase the edge content. So in order to increase the edge content in an image, we have to find edges first.\n\nEdges can be find by one of the any method described above by using any operator. After finding edges, we will add those edges on an image and thus the image would have more edges, and it would look sharpen.\n\nThis is one way of sharpening an image.\n\nThe sharpen image is shown below.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ed01.png)\n\n\n\n","source":"_posts/2018-05-22-Edge Detection.md","raw":"---\nlayout: post\ntitle:  \"Edge Detection\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## What are edges\n\nWe can also say that sudden changes of discontinuities in an image are called as edges. \n\nSignificant transitions in an image are called as edges.\n\n## Types of edges\n\nGenerally edges are of three types:\n\n- Horizontal edges\n- Vertical Edges\n- Diagonal Edges\n\n## Why detect edges\n\nMost of the shape information of an image is enclosed in edges. \n\nSo first we detect these edges in an image and by using these filters and then by enhancing those areas of image which contains edges, sharpness of the image will increase and image will become clearer.\n\nHere are some of the masks for edge detection\n\n- Prewitt Operator\n- Sobel Operator\n- Robinson Compass Masks\n- Krisch Compass Masks\n- Laplacian Operator.\n\nAbove mentioned all the filters are Linear filters or smoothing filters.\n\n## Prewitt Operator\n\nPrewitt operator is used for detecting edges horizontally and vertically.\n\n \n\n## Sobel Operator\n\nThe sobel operator is very similar to Prewitt operator. It is also a derivate mask and is used for edge detection. It also calculates edges in both horizontal and vertical direction.\n\n## Robinson Compass Masks\n\n This operator is also known as direction mask. In this operator we take one mask and rotate it in all the 8 compass major directions to calculate edges of each direction.\n\n## Kirsch Compass Masks\n\nKirsch Compass Mask is also a derivative mask which is used for finding edges. Kirsch mask is also used for calculating edges in all the directions.\n\n## Laplacian Operator\n\nLaplacian Operator is also a derivative operator which is used to find edges in an image. \n\nLaplacian is a second order derivative mask. It can be further divided into positive laplacian and negative laplacian.\n\nAll these masks find edges. Some find horizontally and vertically, some find in one direction only and some find in all the directions. \n\n## Sharpening\n\nSharpening is opposite to the blurring. In blurring, we reduce the edge content and in Sharpening, we increase the edge content. So in order to increase the edge content in an image, we have to find edges first.\n\nEdges can be find by one of the any method described above by using any operator. After finding edges, we will add those edges on an image and thus the image would have more edges, and it would look sharpen.\n\nThis is one way of sharpening an image.\n\nThe sharpen image is shown below.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ed01.png)\n\n\n\n","slug":"2018-05-22-Edge Detection","published":1,"updated":"2018-05-22T07:04:26.209Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kx00dg31x7p5ys0jmt","content":"<h2 id=\"What-are-edges\"><a href=\"#What-are-edges\" class=\"headerlink\" title=\"What are edges\"></a>What are edges</h2><p>We can also say that sudden changes of discontinuities in an image are called as edges. </p>\n<p>Significant transitions in an image are called as edges.</p>\n<h2 id=\"Types-of-edges\"><a href=\"#Types-of-edges\" class=\"headerlink\" title=\"Types of edges\"></a>Types of edges</h2><p>Generally edges are of three types:</p>\n<ul>\n<li>Horizontal edges</li>\n<li>Vertical Edges</li>\n<li>Diagonal Edges</li>\n</ul>\n<h2 id=\"Why-detect-edges\"><a href=\"#Why-detect-edges\" class=\"headerlink\" title=\"Why detect edges\"></a>Why detect edges</h2><p>Most of the shape information of an image is enclosed in edges. </p>\n<p>So first we detect these edges in an image and by using these filters and then by enhancing those areas of image which contains edges, sharpness of the image will increase and image will become clearer.</p>\n<p>Here are some of the masks for edge detection</p>\n<ul>\n<li>Prewitt Operator</li>\n<li>Sobel Operator</li>\n<li>Robinson Compass Masks</li>\n<li>Krisch Compass Masks</li>\n<li>Laplacian Operator.</li>\n</ul>\n<p>Above mentioned all the filters are Linear filters or smoothing filters.</p>\n<h2 id=\"Prewitt-Operator\"><a href=\"#Prewitt-Operator\" class=\"headerlink\" title=\"Prewitt Operator\"></a>Prewitt Operator</h2><p>Prewitt operator is used for detecting edges horizontally and vertically.</p>\n<h2 id=\"Sobel-Operator\"><a href=\"#Sobel-Operator\" class=\"headerlink\" title=\"Sobel Operator\"></a>Sobel Operator</h2><p>The sobel operator is very similar to Prewitt operator. It is also a derivate mask and is used for edge detection. It also calculates edges in both horizontal and vertical direction.</p>\n<h2 id=\"Robinson-Compass-Masks\"><a href=\"#Robinson-Compass-Masks\" class=\"headerlink\" title=\"Robinson Compass Masks\"></a>Robinson Compass Masks</h2><p> This operator is also known as direction mask. In this operator we take one mask and rotate it in all the 8 compass major directions to calculate edges of each direction.</p>\n<h2 id=\"Kirsch-Compass-Masks\"><a href=\"#Kirsch-Compass-Masks\" class=\"headerlink\" title=\"Kirsch Compass Masks\"></a>Kirsch Compass Masks</h2><p>Kirsch Compass Mask is also a derivative mask which is used for finding edges. Kirsch mask is also used for calculating edges in all the directions.</p>\n<h2 id=\"Laplacian-Operator\"><a href=\"#Laplacian-Operator\" class=\"headerlink\" title=\"Laplacian Operator\"></a>Laplacian Operator</h2><p>Laplacian Operator is also a derivative operator which is used to find edges in an image. </p>\n<p>Laplacian is a second order derivative mask. It can be further divided into positive laplacian and negative laplacian.</p>\n<p>All these masks find edges. Some find horizontally and vertically, some find in one direction only and some find in all the directions. </p>\n<h2 id=\"Sharpening\"><a href=\"#Sharpening\" class=\"headerlink\" title=\"Sharpening\"></a>Sharpening</h2><p>Sharpening is opposite to the blurring. In blurring, we reduce the edge content and in Sharpening, we increase the edge content. So in order to increase the edge content in an image, we have to find edges first.</p>\n<p>Edges can be find by one of the any method described above by using any operator. After finding edges, we will add those edges on an image and thus the image would have more edges, and it would look sharpen.</p>\n<p>This is one way of sharpening an image.</p>\n<p>The sharpen image is shown below.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ed01.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"What-are-edges\"><a href=\"#What-are-edges\" class=\"headerlink\" title=\"What are edges\"></a>What are edges</h2><p>We can also say that sudden changes of discontinuities in an image are called as edges. </p>\n<p>Significant transitions in an image are called as edges.</p>\n<h2 id=\"Types-of-edges\"><a href=\"#Types-of-edges\" class=\"headerlink\" title=\"Types of edges\"></a>Types of edges</h2><p>Generally edges are of three types:</p>\n<ul>\n<li>Horizontal edges</li>\n<li>Vertical Edges</li>\n<li>Diagonal Edges</li>\n</ul>\n<h2 id=\"Why-detect-edges\"><a href=\"#Why-detect-edges\" class=\"headerlink\" title=\"Why detect edges\"></a>Why detect edges</h2><p>Most of the shape information of an image is enclosed in edges. </p>\n<p>So first we detect these edges in an image and by using these filters and then by enhancing those areas of image which contains edges, sharpness of the image will increase and image will become clearer.</p>\n<p>Here are some of the masks for edge detection</p>\n<ul>\n<li>Prewitt Operator</li>\n<li>Sobel Operator</li>\n<li>Robinson Compass Masks</li>\n<li>Krisch Compass Masks</li>\n<li>Laplacian Operator.</li>\n</ul>\n<p>Above mentioned all the filters are Linear filters or smoothing filters.</p>\n<h2 id=\"Prewitt-Operator\"><a href=\"#Prewitt-Operator\" class=\"headerlink\" title=\"Prewitt Operator\"></a>Prewitt Operator</h2><p>Prewitt operator is used for detecting edges horizontally and vertically.</p>\n<h2 id=\"Sobel-Operator\"><a href=\"#Sobel-Operator\" class=\"headerlink\" title=\"Sobel Operator\"></a>Sobel Operator</h2><p>The sobel operator is very similar to Prewitt operator. It is also a derivate mask and is used for edge detection. It also calculates edges in both horizontal and vertical direction.</p>\n<h2 id=\"Robinson-Compass-Masks\"><a href=\"#Robinson-Compass-Masks\" class=\"headerlink\" title=\"Robinson Compass Masks\"></a>Robinson Compass Masks</h2><p> This operator is also known as direction mask. In this operator we take one mask and rotate it in all the 8 compass major directions to calculate edges of each direction.</p>\n<h2 id=\"Kirsch-Compass-Masks\"><a href=\"#Kirsch-Compass-Masks\" class=\"headerlink\" title=\"Kirsch Compass Masks\"></a>Kirsch Compass Masks</h2><p>Kirsch Compass Mask is also a derivative mask which is used for finding edges. Kirsch mask is also used for calculating edges in all the directions.</p>\n<h2 id=\"Laplacian-Operator\"><a href=\"#Laplacian-Operator\" class=\"headerlink\" title=\"Laplacian Operator\"></a>Laplacian Operator</h2><p>Laplacian Operator is also a derivative operator which is used to find edges in an image. </p>\n<p>Laplacian is a second order derivative mask. It can be further divided into positive laplacian and negative laplacian.</p>\n<p>All these masks find edges. Some find horizontally and vertically, some find in one direction only and some find in all the directions. </p>\n<h2 id=\"Sharpening\"><a href=\"#Sharpening\" class=\"headerlink\" title=\"Sharpening\"></a>Sharpening</h2><p>Sharpening is opposite to the blurring. In blurring, we reduce the edge content and in Sharpening, we increase the edge content. So in order to increase the edge content in an image, we have to find edges first.</p>\n<p>Edges can be find by one of the any method described above by using any operator. After finding edges, we will add those edges on an image and thus the image would have more edges, and it would look sharpen.</p>\n<p>This is one way of sharpening an image.</p>\n<p>The sharpen image is shown below.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ed01.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Types of Images","date":"2018-05-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n#### 8 bit color format\n\n- 8 bit color format is one of the most famous image format. \n- It has 256 different shades of colors in it. \n- It is commonly known as Grayscale image.\n- The range of the colors in 8 bit vary from 0-255.\n\n#### 16 bit color format\n\n- A 16 bit format is actually divided into three further formats which are Red , Green and Blue. The famous (RGB) format.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/16bit.png)\n\n- 5 bits for R, 6 bits for G, 5 bits for B.\n\n- The additional bit that was left behind is added into the green bit. \n\n- Because green is the color which is most soothing to eyes in all of these three colors.\n\n#### 24 bit color format\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/24bit.png)\n\n- 8 bits for R, 8 bits for G, 8 bits for B.\n- a 24 bit image has three different matrices of R, G, B.\n\n","source":"_posts/2018-05-21-Types of Images.md","raw":"---\nlayout: post\ntitle:  \"Types of Images\"\ndate:   2018-05-21\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n#### 8 bit color format\n\n- 8 bit color format is one of the most famous image format. \n- It has 256 different shades of colors in it. \n- It is commonly known as Grayscale image.\n- The range of the colors in 8 bit vary from 0-255.\n\n#### 16 bit color format\n\n- A 16 bit format is actually divided into three further formats which are Red , Green and Blue. The famous (RGB) format.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/16bit.png)\n\n- 5 bits for R, 6 bits for G, 5 bits for B.\n\n- The additional bit that was left behind is added into the green bit. \n\n- Because green is the color which is most soothing to eyes in all of these three colors.\n\n#### 24 bit color format\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/24bit.png)\n\n- 8 bits for R, 8 bits for G, 8 bits for B.\n- a 24 bit image has three different matrices of R, G, B.\n\n","slug":"2018-05-21-Types of Images","published":1,"updated":"2018-05-21T13:10:24.664Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ky00di31x77ud1t1uu","content":"<h4 id=\"8-bit-color-format\"><a href=\"#8-bit-color-format\" class=\"headerlink\" title=\"8 bit color format\"></a>8 bit color format</h4><ul>\n<li>8 bit color format is one of the most famous image format. </li>\n<li>It has 256 different shades of colors in it. </li>\n<li>It is commonly known as Grayscale image.</li>\n<li>The range of the colors in 8 bit vary from 0-255.</li>\n</ul>\n<h4 id=\"16-bit-color-format\"><a href=\"#16-bit-color-format\" class=\"headerlink\" title=\"16 bit color format\"></a>16 bit color format</h4><ul>\n<li><p>A 16 bit format is actually divided into three further formats which are Red , Green and Blue. The famous (RGB) format.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/16bit.png\" alt=\"img\"></p>\n</li>\n<li><p>5 bits for R, 6 bits for G, 5 bits for B.</p>\n</li>\n<li><p>The additional bit that was left behind is added into the green bit. </p>\n</li>\n<li><p>Because green is the color which is most soothing to eyes in all of these three colors.</p>\n</li>\n</ul>\n<h4 id=\"24-bit-color-format\"><a href=\"#24-bit-color-format\" class=\"headerlink\" title=\"24 bit color format\"></a>24 bit color format</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/24bit.png\" alt=\"img\"></p>\n<ul>\n<li>8 bits for R, 8 bits for G, 8 bits for B.</li>\n<li>a 24 bit image has three different matrices of R, G, B.</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h4 id=\"8-bit-color-format\"><a href=\"#8-bit-color-format\" class=\"headerlink\" title=\"8 bit color format\"></a>8 bit color format</h4><ul>\n<li>8 bit color format is one of the most famous image format. </li>\n<li>It has 256 different shades of colors in it. </li>\n<li>It is commonly known as Grayscale image.</li>\n<li>The range of the colors in 8 bit vary from 0-255.</li>\n</ul>\n<h4 id=\"16-bit-color-format\"><a href=\"#16-bit-color-format\" class=\"headerlink\" title=\"16 bit color format\"></a>16 bit color format</h4><ul>\n<li><p>A 16 bit format is actually divided into three further formats which are Red , Green and Blue. The famous (RGB) format.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/16bit.png\" alt=\"img\"></p>\n</li>\n<li><p>5 bits for R, 6 bits for G, 5 bits for B.</p>\n</li>\n<li><p>The additional bit that was left behind is added into the green bit. </p>\n</li>\n<li><p>Because green is the color which is most soothing to eyes in all of these three colors.</p>\n</li>\n</ul>\n<h4 id=\"24-bit-color-format\"><a href=\"#24-bit-color-format\" class=\"headerlink\" title=\"24 bit color format\"></a>24 bit color format</h4><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/24bit.png\" alt=\"img\"></p>\n<ul>\n<li>8 bits for R, 8 bits for G, 8 bits for B.</li>\n<li>a 24 bit image has three different matrices of R, G, B.</li>\n</ul>\n"},{"layout":"post","title":"Blurring","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## Blurring\n\n- In blurring, we simple blur an image. \n- An image looks more sharp or more detailed if we are able to perceive all the objects and their shapes correctly in it. \n- For example. An image with a face, looks clear when we are able to identify eyes, ears, nose, lips, forehead e.t.c very clear. \n- This shape of an object is due to its edges. \n- So in blurring, we simple reduce the edge content and makes the transition form one color to the other very smooth.\n\n## Blurring vs zooming\n\n- You might have seen a blurred image when you zoom an image. \n  - When you zoom an image using pixel replication, and zooming factor is increased, you saw a blurred image. This image also has less details, but it is not true blurring.\n- In zooming, you add new pixels to an image, that increase the overall number of pixels in an image, \n- In blurring, the number of pixels of a normal image and a blurred image remains the same.\n\n## Common example of a blurred image\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur01.png) \n\n## Types of filters\n\n- Blurring can be achieved by many ways. \n- The common type of filters that are used to perform blurring are.\n  - Mean filter\n  - Weighted average filter\n  - Gaussian filter\n\n## Mean filter\n\n- Mean filter is also known as Box filter and average filter. \n- A mean filter has the following properties.\n  - It must be odd ordered\n  - The sum of all the elements should be 1\n  - All the elements should be same\n- If we follow this rule, then for a mask of 3x3. We get the following result.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur02.png) \n\n- The blurring can be increased by increasing the size of the mask. \n- The more is the size of the mask, the more is the blurring. \n- Because with greater mask, greater number of pixels are catered and one smooth transition is defined.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur03.png) \n\n## Weighted average filter\n\n- In weighted average filter, \n\n- we gave more weight to the center value. \n\n- Due to which the contribution of center becomes more then the rest of the values. Due to weighted average filtering, we can actually control the blurring.\n\n- Properties of the weighted average filter are.\n\n  - It must be odd ordered\n  - The sum of all the elements should be 1\n  - The weight of center element should be more then all of the other elements\n\n- Filter01\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur04.png) \n\n  - The two properties are satisfied which are (1 and 3). But the property 2 is not satisfied. So in order to satisfy that we will simple divide the whole filter by 10, or multiply it with 1/10.\n\n- Filter02\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur05.png) \n\n  - Dividing factor = 18.\n\n\n\n\n\n\n\n","source":"_posts/2018-05-22-Blurring.md","raw":"---\nlayout: post\ntitle:  \"Blurring\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## Blurring\n\n- In blurring, we simple blur an image. \n- An image looks more sharp or more detailed if we are able to perceive all the objects and their shapes correctly in it. \n- For example. An image with a face, looks clear when we are able to identify eyes, ears, nose, lips, forehead e.t.c very clear. \n- This shape of an object is due to its edges. \n- So in blurring, we simple reduce the edge content and makes the transition form one color to the other very smooth.\n\n## Blurring vs zooming\n\n- You might have seen a blurred image when you zoom an image. \n  - When you zoom an image using pixel replication, and zooming factor is increased, you saw a blurred image. This image also has less details, but it is not true blurring.\n- In zooming, you add new pixels to an image, that increase the overall number of pixels in an image, \n- In blurring, the number of pixels of a normal image and a blurred image remains the same.\n\n## Common example of a blurred image\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur01.png) \n\n## Types of filters\n\n- Blurring can be achieved by many ways. \n- The common type of filters that are used to perform blurring are.\n  - Mean filter\n  - Weighted average filter\n  - Gaussian filter\n\n## Mean filter\n\n- Mean filter is also known as Box filter and average filter. \n- A mean filter has the following properties.\n  - It must be odd ordered\n  - The sum of all the elements should be 1\n  - All the elements should be same\n- If we follow this rule, then for a mask of 3x3. We get the following result.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur02.png) \n\n- The blurring can be increased by increasing the size of the mask. \n- The more is the size of the mask, the more is the blurring. \n- Because with greater mask, greater number of pixels are catered and one smooth transition is defined.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur03.png) \n\n## Weighted average filter\n\n- In weighted average filter, \n\n- we gave more weight to the center value. \n\n- Due to which the contribution of center becomes more then the rest of the values. Due to weighted average filtering, we can actually control the blurring.\n\n- Properties of the weighted average filter are.\n\n  - It must be odd ordered\n  - The sum of all the elements should be 1\n  - The weight of center element should be more then all of the other elements\n\n- Filter01\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur04.png) \n\n  - The two properties are satisfied which are (1 and 3). But the property 2 is not satisfied. So in order to satisfy that we will simple divide the whole filter by 10, or multiply it with 1/10.\n\n- Filter02\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur05.png) \n\n  - Dividing factor = 18.\n\n\n\n\n\n\n\n","slug":"2018-05-22-Blurring","published":1,"updated":"2018-05-22T06:42:29.653Z","comments":1,"photos":[],"link":"","_id":"cjp6k65kz00dk31x7ywyftrjr","content":"<h2 id=\"Blurring\"><a href=\"#Blurring\" class=\"headerlink\" title=\"Blurring\"></a>Blurring</h2><ul>\n<li>In blurring, we simple blur an image. </li>\n<li>An image looks more sharp or more detailed if we are able to perceive all the objects and their shapes correctly in it. </li>\n<li>For example. An image with a face, looks clear when we are able to identify eyes, ears, nose, lips, forehead e.t.c very clear. </li>\n<li>This shape of an object is due to its edges. </li>\n<li>So in blurring, we simple reduce the edge content and makes the transition form one color to the other very smooth.</li>\n</ul>\n<h2 id=\"Blurring-vs-zooming\"><a href=\"#Blurring-vs-zooming\" class=\"headerlink\" title=\"Blurring vs zooming\"></a>Blurring vs zooming</h2><ul>\n<li>You might have seen a blurred image when you zoom an image. <ul>\n<li>When you zoom an image using pixel replication, and zooming factor is increased, you saw a blurred image. This image also has less details, but it is not true blurring.</li>\n</ul>\n</li>\n<li>In zooming, you add new pixels to an image, that increase the overall number of pixels in an image, </li>\n<li>In blurring, the number of pixels of a normal image and a blurred image remains the same.</li>\n</ul>\n<h2 id=\"Common-example-of-a-blurred-image\"><a href=\"#Common-example-of-a-blurred-image\" class=\"headerlink\" title=\"Common example of a blurred image\"></a>Common example of a blurred image</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur01.png\" alt=\"img\"> </p>\n<h2 id=\"Types-of-filters\"><a href=\"#Types-of-filters\" class=\"headerlink\" title=\"Types of filters\"></a>Types of filters</h2><ul>\n<li>Blurring can be achieved by many ways. </li>\n<li>The common type of filters that are used to perform blurring are.<ul>\n<li>Mean filter</li>\n<li>Weighted average filter</li>\n<li>Gaussian filter</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Mean-filter\"><a href=\"#Mean-filter\" class=\"headerlink\" title=\"Mean filter\"></a>Mean filter</h2><ul>\n<li>Mean filter is also known as Box filter and average filter. </li>\n<li>A mean filter has the following properties.<ul>\n<li>It must be odd ordered</li>\n<li>The sum of all the elements should be 1</li>\n<li>All the elements should be same</li>\n</ul>\n</li>\n<li>If we follow this rule, then for a mask of 3x3. We get the following result.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur02.png\" alt=\"img\"> </p>\n<ul>\n<li>The blurring can be increased by increasing the size of the mask. </li>\n<li>The more is the size of the mask, the more is the blurring. </li>\n<li>Because with greater mask, greater number of pixels are catered and one smooth transition is defined.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur03.png\" alt=\"img\"> </p>\n<h2 id=\"Weighted-average-filter\"><a href=\"#Weighted-average-filter\" class=\"headerlink\" title=\"Weighted average filter\"></a>Weighted average filter</h2><ul>\n<li><p>In weighted average filter, </p>\n</li>\n<li><p>we gave more weight to the center value. </p>\n</li>\n<li><p>Due to which the contribution of center becomes more then the rest of the values. Due to weighted average filtering, we can actually control the blurring.</p>\n</li>\n<li><p>Properties of the weighted average filter are.</p>\n<ul>\n<li>It must be odd ordered</li>\n<li>The sum of all the elements should be 1</li>\n<li>The weight of center element should be more then all of the other elements</li>\n</ul>\n</li>\n<li><p>Filter01</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur04.png\" alt=\"img\"> </p>\n<ul>\n<li>The two properties are satisfied which are (1 and 3). But the property 2 is not satisfied. So in order to satisfy that we will simple divide the whole filter by 10, or multiply it with 1/10.</li>\n</ul>\n</li>\n<li><p>Filter02</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur05.png\" alt=\"img\"> </p>\n<ul>\n<li>Dividing factor = 18.</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Blurring\"><a href=\"#Blurring\" class=\"headerlink\" title=\"Blurring\"></a>Blurring</h2><ul>\n<li>In blurring, we simple blur an image. </li>\n<li>An image looks more sharp or more detailed if we are able to perceive all the objects and their shapes correctly in it. </li>\n<li>For example. An image with a face, looks clear when we are able to identify eyes, ears, nose, lips, forehead e.t.c very clear. </li>\n<li>This shape of an object is due to its edges. </li>\n<li>So in blurring, we simple reduce the edge content and makes the transition form one color to the other very smooth.</li>\n</ul>\n<h2 id=\"Blurring-vs-zooming\"><a href=\"#Blurring-vs-zooming\" class=\"headerlink\" title=\"Blurring vs zooming\"></a>Blurring vs zooming</h2><ul>\n<li>You might have seen a blurred image when you zoom an image. <ul>\n<li>When you zoom an image using pixel replication, and zooming factor is increased, you saw a blurred image. This image also has less details, but it is not true blurring.</li>\n</ul>\n</li>\n<li>In zooming, you add new pixels to an image, that increase the overall number of pixels in an image, </li>\n<li>In blurring, the number of pixels of a normal image and a blurred image remains the same.</li>\n</ul>\n<h2 id=\"Common-example-of-a-blurred-image\"><a href=\"#Common-example-of-a-blurred-image\" class=\"headerlink\" title=\"Common example of a blurred image\"></a>Common example of a blurred image</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur01.png\" alt=\"img\"> </p>\n<h2 id=\"Types-of-filters\"><a href=\"#Types-of-filters\" class=\"headerlink\" title=\"Types of filters\"></a>Types of filters</h2><ul>\n<li>Blurring can be achieved by many ways. </li>\n<li>The common type of filters that are used to perform blurring are.<ul>\n<li>Mean filter</li>\n<li>Weighted average filter</li>\n<li>Gaussian filter</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Mean-filter\"><a href=\"#Mean-filter\" class=\"headerlink\" title=\"Mean filter\"></a>Mean filter</h2><ul>\n<li>Mean filter is also known as Box filter and average filter. </li>\n<li>A mean filter has the following properties.<ul>\n<li>It must be odd ordered</li>\n<li>The sum of all the elements should be 1</li>\n<li>All the elements should be same</li>\n</ul>\n</li>\n<li>If we follow this rule, then for a mask of 3x3. We get the following result.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur02.png\" alt=\"img\"> </p>\n<ul>\n<li>The blurring can be increased by increasing the size of the mask. </li>\n<li>The more is the size of the mask, the more is the blurring. </li>\n<li>Because with greater mask, greater number of pixels are catered and one smooth transition is defined.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur03.png\" alt=\"img\"> </p>\n<h2 id=\"Weighted-average-filter\"><a href=\"#Weighted-average-filter\" class=\"headerlink\" title=\"Weighted average filter\"></a>Weighted average filter</h2><ul>\n<li><p>In weighted average filter, </p>\n</li>\n<li><p>we gave more weight to the center value. </p>\n</li>\n<li><p>Due to which the contribution of center becomes more then the rest of the values. Due to weighted average filtering, we can actually control the blurring.</p>\n</li>\n<li><p>Properties of the weighted average filter are.</p>\n<ul>\n<li>It must be odd ordered</li>\n<li>The sum of all the elements should be 1</li>\n<li>The weight of center element should be more then all of the other elements</li>\n</ul>\n</li>\n<li><p>Filter01</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur04.png\" alt=\"img\"> </p>\n<ul>\n<li>The two properties are satisfied which are (1 and 3). But the property 2 is not satisfied. So in order to satisfy that we will simple divide the whole filter by 10, or multiply it with 1/10.</li>\n</ul>\n</li>\n<li><p>Filter02</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/blur05.png\" alt=\"img\"> </p>\n<ul>\n<li>Dividing factor = 18.</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Krisch Compass Mask","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\nKirsch Compass Mask is also a derivative mask which is used for finding edges. \n\nThis is also like Robinson compass find edges in all the eight directions of a compass. \n\nThe only difference between Robinson and kirsch compass masks is that in Kirsch we have a standard mask but in Kirsch we change the mask according to our own requirements.\n\nWith the help of Kirsch Compass Masks we can find edges in the following eight directions.\n\n- North\n- North West\n- West\n- South West\n- South\n- South East\n- East\n- North East\n\nWe take a standard mask which follows all the properties of a derivative mask and then rotate it to find the edges.\n\nFor example let’s see the following mask which is in North Direction and then rotate it to make all the direction masks.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch02.png)\n\nAs you can see that all the directions are covered and each mask will give you the edges of its own direction. \n\nNow to help you better understand the concept of these masks we will apply it on a real image. \n\nSuppose we have a sample picture from which we have to find all the edges. Here is our sample picture:\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch04.png)\n\nAs you can see that by applying all the above masks you will get edges in all the direction. \n\nResult is also depends on the image. \n\nSuppose there is an image, which do not have any North East direction edges so then that mask will be ineffective.","source":"_posts/2018-05-22-Krisch Compass Mask.md","raw":"---\nlayout: post\ntitle:  \"Krisch Compass Mask\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\nKirsch Compass Mask is also a derivative mask which is used for finding edges. \n\nThis is also like Robinson compass find edges in all the eight directions of a compass. \n\nThe only difference between Robinson and kirsch compass masks is that in Kirsch we have a standard mask but in Kirsch we change the mask according to our own requirements.\n\nWith the help of Kirsch Compass Masks we can find edges in the following eight directions.\n\n- North\n- North West\n- West\n- South West\n- South\n- South East\n- East\n- North East\n\nWe take a standard mask which follows all the properties of a derivative mask and then rotate it to find the edges.\n\nFor example let’s see the following mask which is in North Direction and then rotate it to make all the direction masks.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch02.png)\n\nAs you can see that all the directions are covered and each mask will give you the edges of its own direction. \n\nNow to help you better understand the concept of these masks we will apply it on a real image. \n\nSuppose we have a sample picture from which we have to find all the edges. Here is our sample picture:\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch04.png)\n\nAs you can see that by applying all the above masks you will get edges in all the direction. \n\nResult is also depends on the image. \n\nSuppose there is an image, which do not have any North East direction edges so then that mask will be ineffective.","slug":"2018-05-22-Krisch Compass Mask","published":1,"updated":"2018-05-22T09:34:02.773Z","comments":1,"photos":[],"link":"","_id":"cjp6k65l100dm31x7t82wwkfa","content":"<p>Kirsch Compass Mask is also a derivative mask which is used for finding edges. </p>\n<p>This is also like Robinson compass find edges in all the eight directions of a compass. </p>\n<p>The only difference between Robinson and kirsch compass masks is that in Kirsch we have a standard mask but in Kirsch we change the mask according to our own requirements.</p>\n<p>With the help of Kirsch Compass Masks we can find edges in the following eight directions.</p>\n<ul>\n<li>North</li>\n<li>North West</li>\n<li>West</li>\n<li>South West</li>\n<li>South</li>\n<li>South East</li>\n<li>East</li>\n<li>North East</li>\n</ul>\n<p>We take a standard mask which follows all the properties of a derivative mask and then rotate it to find the edges.</p>\n<p>For example let’s see the following mask which is in North Direction and then rotate it to make all the direction masks.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch02.png\" alt=\"img\"></p>\n<p>As you can see that all the directions are covered and each mask will give you the edges of its own direction. </p>\n<p>Now to help you better understand the concept of these masks we will apply it on a real image. </p>\n<p>Suppose we have a sample picture from which we have to find all the edges. Here is our sample picture:</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch04.png\" alt=\"img\"></p>\n<p>As you can see that by applying all the above masks you will get edges in all the direction. </p>\n<p>Result is also depends on the image. </p>\n<p>Suppose there is an image, which do not have any North East direction edges so then that mask will be ineffective.</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>Kirsch Compass Mask is also a derivative mask which is used for finding edges. </p>\n<p>This is also like Robinson compass find edges in all the eight directions of a compass. </p>\n<p>The only difference between Robinson and kirsch compass masks is that in Kirsch we have a standard mask but in Kirsch we change the mask according to our own requirements.</p>\n<p>With the help of Kirsch Compass Masks we can find edges in the following eight directions.</p>\n<ul>\n<li>North</li>\n<li>North West</li>\n<li>West</li>\n<li>South West</li>\n<li>South</li>\n<li>South East</li>\n<li>East</li>\n<li>North East</li>\n</ul>\n<p>We take a standard mask which follows all the properties of a derivative mask and then rotate it to find the edges.</p>\n<p>For example let’s see the following mask which is in North Direction and then rotate it to make all the direction masks.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch02.png\" alt=\"img\"></p>\n<p>As you can see that all the directions are covered and each mask will give you the edges of its own direction. </p>\n<p>Now to help you better understand the concept of these masks we will apply it on a real image. </p>\n<p>Suppose we have a sample picture from which we have to find all the edges. Here is our sample picture:</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/krisch04.png\" alt=\"img\"></p>\n<p>As you can see that by applying all the above masks you will get edges in all the direction. </p>\n<p>Result is also depends on the image. </p>\n<p>Suppose there is an image, which do not have any North East direction edges so then that mask will be ineffective.</p>\n"},{"layout":"post","title":"Prewitt Operator","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\nPrewitt operator is used for edge detection in an image. It detects two types of edges\n\n- Horizontal edges\n- Vertical Edges\n\nEdges are calculated by using difference between corresponding pixel intensities of an image. \n\nAll the masks that are used for edge detection are also known as derivative masks. \n\nBecause image is also a signal so changes in a signal can only be calculated using differentiation. \n\nSo that’s why these operators are also called as derivative operators or derivative masks.\n\nAll the derivative masks should have the following properties:\n\n- Opposite sign should be present in the mask.\n- Sum of mask should be equal to zero.\n- More weight means more edge detection.\n\nPrewitt operator provides us two masks one for detecting edges in horizontal direction and another for detecting edges in an vertical direction.\n\n## Vertical direction\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt01.png)  \n\nAbove mask will find the edges in vertical direction and it is because the zeros column in the vertical direction. When you will convolve this mask on an image, it will give you the vertical edges in an image.\n\n## How it works\n\nWhen we apply this mask on the image it prominent vertical edges. \n\nIt simply works like as first order derivate and calculates the difference of pixel intensities in a edge region. As the center column is of zero so it does not include the original values of an image but rather it calculates the difference of right and left pixel values around that edge. \n\nThis increase the edge intensity and it become enhanced comparatively to the original image.\n\n## Horizontal Direction\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt02.png)\n\nAbove mask will find edges in horizontal direction and it is because that zeros column is in horizontal direction. When you will convolve this mask onto an image it would prominent horizontal edges in the image.\n\n## How it works\n\nThis mask will prominent the horizontal edges in an image. \n\nIt also works on the principle of above mask and calculates difference among the pixel intensities of a particular edge. \n\nAs the center row of mask is consist of zeros so it does not include the original values of edge in the image but rather it calculate the difference of above and below pixel intensities of the particular edge. \n\nThus increasing the sudden change of intensities and making the edge more visible. \n\nBoth the above masks follow the principle of derivate mask. \n\nBoth masks have opposite sign in them and both masks sum equals to zero. \n\nThe third condition will not be applicable in this operator as both the above masks are standardize and we can’t change the value in them.\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt03.png)\n\nAs you can see that in the first picture on which we apply vertical mask, all the vertical edges are more visible than the original image. \n\nSimilarly in the second picture we have applied the horizontal mask and in result all the horizontal edges are visible. \n\nSo in this way you can see that we can detect both horizontal and vertical edges from an image.\n\n\n\n\n\n","source":"_posts/2018-05-22-Prewitt Operator.md","raw":"---\nlayout: post\ntitle:  \"Prewitt Operator\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\nPrewitt operator is used for edge detection in an image. It detects two types of edges\n\n- Horizontal edges\n- Vertical Edges\n\nEdges are calculated by using difference between corresponding pixel intensities of an image. \n\nAll the masks that are used for edge detection are also known as derivative masks. \n\nBecause image is also a signal so changes in a signal can only be calculated using differentiation. \n\nSo that’s why these operators are also called as derivative operators or derivative masks.\n\nAll the derivative masks should have the following properties:\n\n- Opposite sign should be present in the mask.\n- Sum of mask should be equal to zero.\n- More weight means more edge detection.\n\nPrewitt operator provides us two masks one for detecting edges in horizontal direction and another for detecting edges in an vertical direction.\n\n## Vertical direction\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt01.png)  \n\nAbove mask will find the edges in vertical direction and it is because the zeros column in the vertical direction. When you will convolve this mask on an image, it will give you the vertical edges in an image.\n\n## How it works\n\nWhen we apply this mask on the image it prominent vertical edges. \n\nIt simply works like as first order derivate and calculates the difference of pixel intensities in a edge region. As the center column is of zero so it does not include the original values of an image but rather it calculates the difference of right and left pixel values around that edge. \n\nThis increase the edge intensity and it become enhanced comparatively to the original image.\n\n## Horizontal Direction\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt02.png)\n\nAbove mask will find edges in horizontal direction and it is because that zeros column is in horizontal direction. When you will convolve this mask onto an image it would prominent horizontal edges in the image.\n\n## How it works\n\nThis mask will prominent the horizontal edges in an image. \n\nIt also works on the principle of above mask and calculates difference among the pixel intensities of a particular edge. \n\nAs the center row of mask is consist of zeros so it does not include the original values of edge in the image but rather it calculate the difference of above and below pixel intensities of the particular edge. \n\nThus increasing the sudden change of intensities and making the edge more visible. \n\nBoth the above masks follow the principle of derivate mask. \n\nBoth masks have opposite sign in them and both masks sum equals to zero. \n\nThe third condition will not be applicable in this operator as both the above masks are standardize and we can’t change the value in them.\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt03.png)\n\nAs you can see that in the first picture on which we apply vertical mask, all the vertical edges are more visible than the original image. \n\nSimilarly in the second picture we have applied the horizontal mask and in result all the horizontal edges are visible. \n\nSo in this way you can see that we can detect both horizontal and vertical edges from an image.\n\n\n\n\n\n","slug":"2018-05-22-Prewitt Operator","published":1,"updated":"2018-05-22T07:24:22.376Z","comments":1,"photos":[],"link":"","_id":"cjp6k65l300do31x7og4a4uko","content":"<p>Prewitt operator is used for edge detection in an image. It detects two types of edges</p>\n<ul>\n<li>Horizontal edges</li>\n<li>Vertical Edges</li>\n</ul>\n<p>Edges are calculated by using difference between corresponding pixel intensities of an image. </p>\n<p>All the masks that are used for edge detection are also known as derivative masks. </p>\n<p>Because image is also a signal so changes in a signal can only be calculated using differentiation. </p>\n<p>So that’s why these operators are also called as derivative operators or derivative masks.</p>\n<p>All the derivative masks should have the following properties:</p>\n<ul>\n<li>Opposite sign should be present in the mask.</li>\n<li>Sum of mask should be equal to zero.</li>\n<li>More weight means more edge detection.</li>\n</ul>\n<p>Prewitt operator provides us two masks one for detecting edges in horizontal direction and another for detecting edges in an vertical direction.</p>\n<h2 id=\"Vertical-direction\"><a href=\"#Vertical-direction\" class=\"headerlink\" title=\"Vertical direction\"></a>Vertical direction</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt01.png\" alt=\"img\">  </p>\n<p>Above mask will find the edges in vertical direction and it is because the zeros column in the vertical direction. When you will convolve this mask on an image, it will give you the vertical edges in an image.</p>\n<h2 id=\"How-it-works\"><a href=\"#How-it-works\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>When we apply this mask on the image it prominent vertical edges. </p>\n<p>It simply works like as first order derivate and calculates the difference of pixel intensities in a edge region. As the center column is of zero so it does not include the original values of an image but rather it calculates the difference of right and left pixel values around that edge. </p>\n<p>This increase the edge intensity and it become enhanced comparatively to the original image.</p>\n<h2 id=\"Horizontal-Direction\"><a href=\"#Horizontal-Direction\" class=\"headerlink\" title=\"Horizontal Direction\"></a>Horizontal Direction</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt02.png\" alt=\"img\"></p>\n<p>Above mask will find edges in horizontal direction and it is because that zeros column is in horizontal direction. When you will convolve this mask onto an image it would prominent horizontal edges in the image.</p>\n<h2 id=\"How-it-works-1\"><a href=\"#How-it-works-1\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>This mask will prominent the horizontal edges in an image. </p>\n<p>It also works on the principle of above mask and calculates difference among the pixel intensities of a particular edge. </p>\n<p>As the center row of mask is consist of zeros so it does not include the original values of edge in the image but rather it calculate the difference of above and below pixel intensities of the particular edge. </p>\n<p>Thus increasing the sudden change of intensities and making the edge more visible. </p>\n<p>Both the above masks follow the principle of derivate mask. </p>\n<p>Both masks have opposite sign in them and both masks sum equals to zero. </p>\n<p>The third condition will not be applicable in this operator as both the above masks are standardize and we can’t change the value in them.</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt03.png\" alt=\"img\"></p>\n<p>As you can see that in the first picture on which we apply vertical mask, all the vertical edges are more visible than the original image. </p>\n<p>Similarly in the second picture we have applied the horizontal mask and in result all the horizontal edges are visible. </p>\n<p>So in this way you can see that we can detect both horizontal and vertical edges from an image.</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>Prewitt operator is used for edge detection in an image. It detects two types of edges</p>\n<ul>\n<li>Horizontal edges</li>\n<li>Vertical Edges</li>\n</ul>\n<p>Edges are calculated by using difference between corresponding pixel intensities of an image. </p>\n<p>All the masks that are used for edge detection are also known as derivative masks. </p>\n<p>Because image is also a signal so changes in a signal can only be calculated using differentiation. </p>\n<p>So that’s why these operators are also called as derivative operators or derivative masks.</p>\n<p>All the derivative masks should have the following properties:</p>\n<ul>\n<li>Opposite sign should be present in the mask.</li>\n<li>Sum of mask should be equal to zero.</li>\n<li>More weight means more edge detection.</li>\n</ul>\n<p>Prewitt operator provides us two masks one for detecting edges in horizontal direction and another for detecting edges in an vertical direction.</p>\n<h2 id=\"Vertical-direction\"><a href=\"#Vertical-direction\" class=\"headerlink\" title=\"Vertical direction\"></a>Vertical direction</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt01.png\" alt=\"img\">  </p>\n<p>Above mask will find the edges in vertical direction and it is because the zeros column in the vertical direction. When you will convolve this mask on an image, it will give you the vertical edges in an image.</p>\n<h2 id=\"How-it-works\"><a href=\"#How-it-works\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>When we apply this mask on the image it prominent vertical edges. </p>\n<p>It simply works like as first order derivate and calculates the difference of pixel intensities in a edge region. As the center column is of zero so it does not include the original values of an image but rather it calculates the difference of right and left pixel values around that edge. </p>\n<p>This increase the edge intensity and it become enhanced comparatively to the original image.</p>\n<h2 id=\"Horizontal-Direction\"><a href=\"#Horizontal-Direction\" class=\"headerlink\" title=\"Horizontal Direction\"></a>Horizontal Direction</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt02.png\" alt=\"img\"></p>\n<p>Above mask will find edges in horizontal direction and it is because that zeros column is in horizontal direction. When you will convolve this mask onto an image it would prominent horizontal edges in the image.</p>\n<h2 id=\"How-it-works-1\"><a href=\"#How-it-works-1\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>This mask will prominent the horizontal edges in an image. </p>\n<p>It also works on the principle of above mask and calculates difference among the pixel intensities of a particular edge. </p>\n<p>As the center row of mask is consist of zeros so it does not include the original values of edge in the image but rather it calculate the difference of above and below pixel intensities of the particular edge. </p>\n<p>Thus increasing the sudden change of intensities and making the edge more visible. </p>\n<p>Both the above masks follow the principle of derivate mask. </p>\n<p>Both masks have opposite sign in them and both masks sum equals to zero. </p>\n<p>The third condition will not be applicable in this operator as both the above masks are standardize and we can’t change the value in them.</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/prewitt03.png\" alt=\"img\"></p>\n<p>As you can see that in the first picture on which we apply vertical mask, all the vertical edges are more visible than the original image. </p>\n<p>Similarly in the second picture we have applied the horizontal mask and in result all the horizontal edges are visible. </p>\n<p>So in this way you can see that we can detect both horizontal and vertical edges from an image.</p>\n"},{"layout":"post","title":"Robinson Compass Mask","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\nRobinson compass masks are another type of derrivate mask which is used for edge detection. \n\nThis operator is also known as direction mask. In this operator we take one mask and rotate it in all the 8 compass major directions that are following:\n\n- North\n- North West\n- West\n- South West\n- South\n- South East\n- East\n- North East\n\nThere is no fixed mask. \n\nYou can take any mask and you have to rotate it to find edges in all the above mentioned directions. \n\nAll the masks are rotated on the bases of direction of zero columns.\n\nFor example let’s see the following mask which is in North Direction and then rotate it to make all the direction masks.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson01.png)![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson02.png)\n\n\n\nAs you can see that all the directions are covered on the basis of zeros direction. \n\nEach mask will give you the edges on its direction. \n\nNow let’s see the result of the entire above masks. \n\nSuppose we have a sample picture from which we have to find all the edges. \n\n\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson03.png)\n\nAs you can see that by applying all the above masks you will get edges in all the direction. \n\nResult is also depends on the image. \n\nSuppose there is an image, which do not have any North East direction edges so then that mask will be ineffective.\n\n","source":"_posts/2018-05-22-Robinson Compass Mask.md","raw":"---\nlayout: post\ntitle:  \"Robinson Compass Mask\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\nRobinson compass masks are another type of derrivate mask which is used for edge detection. \n\nThis operator is also known as direction mask. In this operator we take one mask and rotate it in all the 8 compass major directions that are following:\n\n- North\n- North West\n- West\n- South West\n- South\n- South East\n- East\n- North East\n\nThere is no fixed mask. \n\nYou can take any mask and you have to rotate it to find edges in all the above mentioned directions. \n\nAll the masks are rotated on the bases of direction of zero columns.\n\nFor example let’s see the following mask which is in North Direction and then rotate it to make all the direction masks.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson01.png)![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson02.png)\n\n\n\nAs you can see that all the directions are covered on the basis of zeros direction. \n\nEach mask will give you the edges on its direction. \n\nNow let’s see the result of the entire above masks. \n\nSuppose we have a sample picture from which we have to find all the edges. \n\n\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson03.png)\n\nAs you can see that by applying all the above masks you will get edges in all the direction. \n\nResult is also depends on the image. \n\nSuppose there is an image, which do not have any North East direction edges so then that mask will be ineffective.\n\n","slug":"2018-05-22-Robinson Compass Mask","published":1,"updated":"2018-05-22T07:55:24.860Z","comments":1,"photos":[],"link":"","_id":"cjp6k65l400dq31x7bo0pvfis","content":"<p>Robinson compass masks are another type of derrivate mask which is used for edge detection. </p>\n<p>This operator is also known as direction mask. In this operator we take one mask and rotate it in all the 8 compass major directions that are following:</p>\n<ul>\n<li>North</li>\n<li>North West</li>\n<li>West</li>\n<li>South West</li>\n<li>South</li>\n<li>South East</li>\n<li>East</li>\n<li>North East</li>\n</ul>\n<p>There is no fixed mask. </p>\n<p>You can take any mask and you have to rotate it to find edges in all the above mentioned directions. </p>\n<p>All the masks are rotated on the bases of direction of zero columns.</p>\n<p>For example let’s see the following mask which is in North Direction and then rotate it to make all the direction masks.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson01.png\" alt=\"img\"><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson02.png\" alt=\"img\"></p>\n<p>As you can see that all the directions are covered on the basis of zeros direction. </p>\n<p>Each mask will give you the edges on its direction. </p>\n<p>Now let’s see the result of the entire above masks. </p>\n<p>Suppose we have a sample picture from which we have to find all the edges. </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson03.png\" alt=\"img\"></p>\n<p>As you can see that by applying all the above masks you will get edges in all the direction. </p>\n<p>Result is also depends on the image. </p>\n<p>Suppose there is an image, which do not have any North East direction edges so then that mask will be ineffective.</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>Robinson compass masks are another type of derrivate mask which is used for edge detection. </p>\n<p>This operator is also known as direction mask. In this operator we take one mask and rotate it in all the 8 compass major directions that are following:</p>\n<ul>\n<li>North</li>\n<li>North West</li>\n<li>West</li>\n<li>South West</li>\n<li>South</li>\n<li>South East</li>\n<li>East</li>\n<li>North East</li>\n</ul>\n<p>There is no fixed mask. </p>\n<p>You can take any mask and you have to rotate it to find edges in all the above mentioned directions. </p>\n<p>All the masks are rotated on the bases of direction of zero columns.</p>\n<p>For example let’s see the following mask which is in North Direction and then rotate it to make all the direction masks.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson01.png\" alt=\"img\"><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson02.png\" alt=\"img\"></p>\n<p>As you can see that all the directions are covered on the basis of zeros direction. </p>\n<p>Each mask will give you the edges on its direction. </p>\n<p>Now let’s see the result of the entire above masks. </p>\n<p>Suppose we have a sample picture from which we have to find all the edges. </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robinson03.png\" alt=\"img\"></p>\n<p>As you can see that by applying all the above masks you will get edges in all the direction. </p>\n<p>Result is also depends on the image. </p>\n<p>Suppose there is an image, which do not have any North East direction edges so then that mask will be ineffective.</p>\n"},{"layout":"post","title":"High Pass, Low Pass Filters","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## Blurring masks\n\nA blurring mask has the following properties.\n\n- All the values in blurring masks are positive\n- The sum of all the values is equal to 1\n- The edge content is reduced by using a blurring mask\n- As the size of the mask grow, more smoothing effect will take place\n\n## Derivative masks\n\nA derivative mask has the following properties.\n\n- A derivative mask have positive and as well as negative values\n- The sum of all the values in a derivative mask is equal to zero\n- The edge content is increased by a derivative mask\n- As the size of the mask grows , more edge content is increased\n\n## Relationship between blurring mask and derivative mask with high pass filters and low pass filters.\n\n- Blurring masks are also called as low pass filter\n- Derivative masks are also called as high pass filter\n\n## High pass frequency components and Low pass frequency components\n\nThe high pass frequency components denotes edges whereas the low pass frequency components denotes smooth regions.","source":"_posts/2018-05-22-High Pass, Low Pass Filters.md","raw":"---\nlayout: post\ntitle:  \"High Pass, Low Pass Filters\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## Blurring masks\n\nA blurring mask has the following properties.\n\n- All the values in blurring masks are positive\n- The sum of all the values is equal to 1\n- The edge content is reduced by using a blurring mask\n- As the size of the mask grow, more smoothing effect will take place\n\n## Derivative masks\n\nA derivative mask has the following properties.\n\n- A derivative mask have positive and as well as negative values\n- The sum of all the values in a derivative mask is equal to zero\n- The edge content is increased by a derivative mask\n- As the size of the mask grows , more edge content is increased\n\n## Relationship between blurring mask and derivative mask with high pass filters and low pass filters.\n\n- Blurring masks are also called as low pass filter\n- Derivative masks are also called as high pass filter\n\n## High pass frequency components and Low pass frequency components\n\nThe high pass frequency components denotes edges whereas the low pass frequency components denotes smooth regions.","slug":"2018-05-22-High Pass, Low Pass Filters","published":1,"updated":"2018-05-22T14:58:52.384Z","comments":1,"photos":[],"link":"","_id":"cjp6k65l500ds31x7bqpuoh91","content":"<h2 id=\"Blurring-masks\"><a href=\"#Blurring-masks\" class=\"headerlink\" title=\"Blurring masks\"></a>Blurring masks</h2><p>A blurring mask has the following properties.</p>\n<ul>\n<li>All the values in blurring masks are positive</li>\n<li>The sum of all the values is equal to 1</li>\n<li>The edge content is reduced by using a blurring mask</li>\n<li>As the size of the mask grow, more smoothing effect will take place</li>\n</ul>\n<h2 id=\"Derivative-masks\"><a href=\"#Derivative-masks\" class=\"headerlink\" title=\"Derivative masks\"></a>Derivative masks</h2><p>A derivative mask has the following properties.</p>\n<ul>\n<li>A derivative mask have positive and as well as negative values</li>\n<li>The sum of all the values in a derivative mask is equal to zero</li>\n<li>The edge content is increased by a derivative mask</li>\n<li>As the size of the mask grows , more edge content is increased</li>\n</ul>\n<h2 id=\"Relationship-between-blurring-mask-and-derivative-mask-with-high-pass-filters-and-low-pass-filters\"><a href=\"#Relationship-between-blurring-mask-and-derivative-mask-with-high-pass-filters-and-low-pass-filters\" class=\"headerlink\" title=\"Relationship between blurring mask and derivative mask with high pass filters and low pass filters.\"></a>Relationship between blurring mask and derivative mask with high pass filters and low pass filters.</h2><ul>\n<li>Blurring masks are also called as low pass filter</li>\n<li>Derivative masks are also called as high pass filter</li>\n</ul>\n<h2 id=\"High-pass-frequency-components-and-Low-pass-frequency-components\"><a href=\"#High-pass-frequency-components-and-Low-pass-frequency-components\" class=\"headerlink\" title=\"High pass frequency components and Low pass frequency components\"></a>High pass frequency components and Low pass frequency components</h2><p>The high pass frequency components denotes edges whereas the low pass frequency components denotes smooth regions.</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Blurring-masks\"><a href=\"#Blurring-masks\" class=\"headerlink\" title=\"Blurring masks\"></a>Blurring masks</h2><p>A blurring mask has the following properties.</p>\n<ul>\n<li>All the values in blurring masks are positive</li>\n<li>The sum of all the values is equal to 1</li>\n<li>The edge content is reduced by using a blurring mask</li>\n<li>As the size of the mask grow, more smoothing effect will take place</li>\n</ul>\n<h2 id=\"Derivative-masks\"><a href=\"#Derivative-masks\" class=\"headerlink\" title=\"Derivative masks\"></a>Derivative masks</h2><p>A derivative mask has the following properties.</p>\n<ul>\n<li>A derivative mask have positive and as well as negative values</li>\n<li>The sum of all the values in a derivative mask is equal to zero</li>\n<li>The edge content is increased by a derivative mask</li>\n<li>As the size of the mask grows , more edge content is increased</li>\n</ul>\n<h2 id=\"Relationship-between-blurring-mask-and-derivative-mask-with-high-pass-filters-and-low-pass-filters\"><a href=\"#Relationship-between-blurring-mask-and-derivative-mask-with-high-pass-filters-and-low-pass-filters\" class=\"headerlink\" title=\"Relationship between blurring mask and derivative mask with high pass filters and low pass filters.\"></a>Relationship between blurring mask and derivative mask with high pass filters and low pass filters.</h2><ul>\n<li>Blurring masks are also called as low pass filter</li>\n<li>Derivative masks are also called as high pass filter</li>\n</ul>\n<h2 id=\"High-pass-frequency-components-and-Low-pass-frequency-components\"><a href=\"#High-pass-frequency-components-and-Low-pass-frequency-components\" class=\"headerlink\" title=\"High pass frequency components and Low pass frequency components\"></a>High pass frequency components and Low pass frequency components</h2><p>The high pass frequency components denotes edges whereas the low pass frequency components denotes smooth regions.</p>\n"},{"layout":"post","title":"Sobel Operator","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\nThe sobel operator is very similar to Prewitt operator. \n\nIt is also a derivate mask and is used for edge detection. Like Prewitt operator sobel operator is also used to detect two kinds of edges in an image:\n\n- Vertical direction\n- Horizontal direction\n\n## Difference with Prewitt Operator\n\nThe major difference is that in sobel operator the coefficients of masks are not fixed and they can be adjusted according to our requirement unless they do not violate any property of derivative masks.\n\n## Vertical Mask of Sobel Operator\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel01.png)\n\nThis mask works exactly same as the Prewitt operator vertical mask. \n\nThere is only one difference that is it has “2” and “-2” values in center of first and third column. \n\nWhen applied on an image this mask will highlight the vertical edges.\n\n## How it works\n\nWhen we apply this mask on the image it prominent vertical edges. \n\nIt simply works like as first order derivate and calculates the difference of pixel intensities in a edge region.\n\nAs the center column is of zero so it does not include the original values of an image but rather it calculates the difference of right and left pixel values around that edge. \n\nAlso the center values of both the first and third column is 2 and -2 respectively.\n\nThis give more weight age to the pixel values around the edge region. \n\nThis increase the edge intensity and it become enhanced comparatively to the original image.\n\n## Horizontal Mask of Sobel Operator\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel02.png)\n\nAbove mask will find edges in horizontal direction and it is because that zeros column is in horizontal direction. \n\nWhen you will convolve this mask onto an image it would prominent horizontal edges in the image. \n\nThe only difference between it is that it have 2 and -2 as a center element of first and third row.\n\n## How it works\n\nThis mask will prominent the horizontal edges in an image. \n\nIt also works on the principle of above mask and calculates difference among the pixel intensities of a particular edge. \n\nAs the center row of mask is consist of zeros so it does not include the original values of edge in the image but rather it calculate the difference of above and below pixel intensities of the particular edge. \n\nThus increasing the sudden change of intensities and making the edge more visible.\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel03.png)\n\n## Comparison\n\nAs you can see that in the first picture on which we apply vertical mask, all the vertical edges are more visible than the original image. \n\nSimilarly in the second picture we have applied the horizontal mask and in result all the horizontal edges are visible.\n\nSo in this way you can see that we can detect both horizontal and vertical edges from an image. \n\nAlso if you compare the result of sobel operator with Prewitt operator, you will find that sobel operator finds more edges or make edges more visible as compared to Prewitt Operator.\n\nThis is because in sobel operator we have allotted more weight to the pixel intensities around the edges.\n\n## Applying more weight to mask\n\nNow we can also see that if we apply more weight to the mask, the more edges it will get for us. \n\nThere is no fixed coefficients in sobel operator, so here is another weighted operator\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel04.png)\n\nIf you can compare the result of this mask with of the Prewitt vertical mask, \n\nit is clear that this mask will give out more edges as compared to Prewitt one just because we have allotted more weight in the mask.\n\n\n\n \n\n\n\n","source":"_posts/2018-05-22-Sobel Operator.md","raw":"---\nlayout: post\ntitle:  \"Sobel Operator\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\nThe sobel operator is very similar to Prewitt operator. \n\nIt is also a derivate mask and is used for edge detection. Like Prewitt operator sobel operator is also used to detect two kinds of edges in an image:\n\n- Vertical direction\n- Horizontal direction\n\n## Difference with Prewitt Operator\n\nThe major difference is that in sobel operator the coefficients of masks are not fixed and they can be adjusted according to our requirement unless they do not violate any property of derivative masks.\n\n## Vertical Mask of Sobel Operator\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel01.png)\n\nThis mask works exactly same as the Prewitt operator vertical mask. \n\nThere is only one difference that is it has “2” and “-2” values in center of first and third column. \n\nWhen applied on an image this mask will highlight the vertical edges.\n\n## How it works\n\nWhen we apply this mask on the image it prominent vertical edges. \n\nIt simply works like as first order derivate and calculates the difference of pixel intensities in a edge region.\n\nAs the center column is of zero so it does not include the original values of an image but rather it calculates the difference of right and left pixel values around that edge. \n\nAlso the center values of both the first and third column is 2 and -2 respectively.\n\nThis give more weight age to the pixel values around the edge region. \n\nThis increase the edge intensity and it become enhanced comparatively to the original image.\n\n## Horizontal Mask of Sobel Operator\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel02.png)\n\nAbove mask will find edges in horizontal direction and it is because that zeros column is in horizontal direction. \n\nWhen you will convolve this mask onto an image it would prominent horizontal edges in the image. \n\nThe only difference between it is that it have 2 and -2 as a center element of first and third row.\n\n## How it works\n\nThis mask will prominent the horizontal edges in an image. \n\nIt also works on the principle of above mask and calculates difference among the pixel intensities of a particular edge. \n\nAs the center row of mask is consist of zeros so it does not include the original values of edge in the image but rather it calculate the difference of above and below pixel intensities of the particular edge. \n\nThus increasing the sudden change of intensities and making the edge more visible.\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel03.png)\n\n## Comparison\n\nAs you can see that in the first picture on which we apply vertical mask, all the vertical edges are more visible than the original image. \n\nSimilarly in the second picture we have applied the horizontal mask and in result all the horizontal edges are visible.\n\nSo in this way you can see that we can detect both horizontal and vertical edges from an image. \n\nAlso if you compare the result of sobel operator with Prewitt operator, you will find that sobel operator finds more edges or make edges more visible as compared to Prewitt Operator.\n\nThis is because in sobel operator we have allotted more weight to the pixel intensities around the edges.\n\n## Applying more weight to mask\n\nNow we can also see that if we apply more weight to the mask, the more edges it will get for us. \n\nThere is no fixed coefficients in sobel operator, so here is another weighted operator\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel04.png)\n\nIf you can compare the result of this mask with of the Prewitt vertical mask, \n\nit is clear that this mask will give out more edges as compared to Prewitt one just because we have allotted more weight in the mask.\n\n\n\n \n\n\n\n","slug":"2018-05-22-Sobel Operator","published":1,"updated":"2018-05-22T07:35:25.150Z","comments":1,"photos":[],"link":"","_id":"cjp6k65l800du31x704lhgt45","content":"<p>The sobel operator is very similar to Prewitt operator. </p>\n<p>It is also a derivate mask and is used for edge detection. Like Prewitt operator sobel operator is also used to detect two kinds of edges in an image:</p>\n<ul>\n<li>Vertical direction</li>\n<li>Horizontal direction</li>\n</ul>\n<h2 id=\"Difference-with-Prewitt-Operator\"><a href=\"#Difference-with-Prewitt-Operator\" class=\"headerlink\" title=\"Difference with Prewitt Operator\"></a>Difference with Prewitt Operator</h2><p>The major difference is that in sobel operator the coefficients of masks are not fixed and they can be adjusted according to our requirement unless they do not violate any property of derivative masks.</p>\n<h2 id=\"Vertical-Mask-of-Sobel-Operator\"><a href=\"#Vertical-Mask-of-Sobel-Operator\" class=\"headerlink\" title=\"Vertical Mask of Sobel Operator\"></a>Vertical Mask of Sobel Operator</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel01.png\" alt=\"img\"></p>\n<p>This mask works exactly same as the Prewitt operator vertical mask. </p>\n<p>There is only one difference that is it has “2” and “-2” values in center of first and third column. </p>\n<p>When applied on an image this mask will highlight the vertical edges.</p>\n<h2 id=\"How-it-works\"><a href=\"#How-it-works\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>When we apply this mask on the image it prominent vertical edges. </p>\n<p>It simply works like as first order derivate and calculates the difference of pixel intensities in a edge region.</p>\n<p>As the center column is of zero so it does not include the original values of an image but rather it calculates the difference of right and left pixel values around that edge. </p>\n<p>Also the center values of both the first and third column is 2 and -2 respectively.</p>\n<p>This give more weight age to the pixel values around the edge region. </p>\n<p>This increase the edge intensity and it become enhanced comparatively to the original image.</p>\n<h2 id=\"Horizontal-Mask-of-Sobel-Operator\"><a href=\"#Horizontal-Mask-of-Sobel-Operator\" class=\"headerlink\" title=\"Horizontal Mask of Sobel Operator\"></a>Horizontal Mask of Sobel Operator</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel02.png\" alt=\"img\"></p>\n<p>Above mask will find edges in horizontal direction and it is because that zeros column is in horizontal direction. </p>\n<p>When you will convolve this mask onto an image it would prominent horizontal edges in the image. </p>\n<p>The only difference between it is that it have 2 and -2 as a center element of first and third row.</p>\n<h2 id=\"How-it-works-1\"><a href=\"#How-it-works-1\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>This mask will prominent the horizontal edges in an image. </p>\n<p>It also works on the principle of above mask and calculates difference among the pixel intensities of a particular edge. </p>\n<p>As the center row of mask is consist of zeros so it does not include the original values of edge in the image but rather it calculate the difference of above and below pixel intensities of the particular edge. </p>\n<p>Thus increasing the sudden change of intensities and making the edge more visible.</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel03.png\" alt=\"img\"></p>\n<h2 id=\"Comparison\"><a href=\"#Comparison\" class=\"headerlink\" title=\"Comparison\"></a>Comparison</h2><p>As you can see that in the first picture on which we apply vertical mask, all the vertical edges are more visible than the original image. </p>\n<p>Similarly in the second picture we have applied the horizontal mask and in result all the horizontal edges are visible.</p>\n<p>So in this way you can see that we can detect both horizontal and vertical edges from an image. </p>\n<p>Also if you compare the result of sobel operator with Prewitt operator, you will find that sobel operator finds more edges or make edges more visible as compared to Prewitt Operator.</p>\n<p>This is because in sobel operator we have allotted more weight to the pixel intensities around the edges.</p>\n<h2 id=\"Applying-more-weight-to-mask\"><a href=\"#Applying-more-weight-to-mask\" class=\"headerlink\" title=\"Applying more weight to mask\"></a>Applying more weight to mask</h2><p>Now we can also see that if we apply more weight to the mask, the more edges it will get for us. </p>\n<p>There is no fixed coefficients in sobel operator, so here is another weighted operator</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel04.png\" alt=\"img\"></p>\n<p>If you can compare the result of this mask with of the Prewitt vertical mask, </p>\n<p>it is clear that this mask will give out more edges as compared to Prewitt one just because we have allotted more weight in the mask.</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>The sobel operator is very similar to Prewitt operator. </p>\n<p>It is also a derivate mask and is used for edge detection. Like Prewitt operator sobel operator is also used to detect two kinds of edges in an image:</p>\n<ul>\n<li>Vertical direction</li>\n<li>Horizontal direction</li>\n</ul>\n<h2 id=\"Difference-with-Prewitt-Operator\"><a href=\"#Difference-with-Prewitt-Operator\" class=\"headerlink\" title=\"Difference with Prewitt Operator\"></a>Difference with Prewitt Operator</h2><p>The major difference is that in sobel operator the coefficients of masks are not fixed and they can be adjusted according to our requirement unless they do not violate any property of derivative masks.</p>\n<h2 id=\"Vertical-Mask-of-Sobel-Operator\"><a href=\"#Vertical-Mask-of-Sobel-Operator\" class=\"headerlink\" title=\"Vertical Mask of Sobel Operator\"></a>Vertical Mask of Sobel Operator</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel01.png\" alt=\"img\"></p>\n<p>This mask works exactly same as the Prewitt operator vertical mask. </p>\n<p>There is only one difference that is it has “2” and “-2” values in center of first and third column. </p>\n<p>When applied on an image this mask will highlight the vertical edges.</p>\n<h2 id=\"How-it-works\"><a href=\"#How-it-works\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>When we apply this mask on the image it prominent vertical edges. </p>\n<p>It simply works like as first order derivate and calculates the difference of pixel intensities in a edge region.</p>\n<p>As the center column is of zero so it does not include the original values of an image but rather it calculates the difference of right and left pixel values around that edge. </p>\n<p>Also the center values of both the first and third column is 2 and -2 respectively.</p>\n<p>This give more weight age to the pixel values around the edge region. </p>\n<p>This increase the edge intensity and it become enhanced comparatively to the original image.</p>\n<h2 id=\"Horizontal-Mask-of-Sobel-Operator\"><a href=\"#Horizontal-Mask-of-Sobel-Operator\" class=\"headerlink\" title=\"Horizontal Mask of Sobel Operator\"></a>Horizontal Mask of Sobel Operator</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel02.png\" alt=\"img\"></p>\n<p>Above mask will find edges in horizontal direction and it is because that zeros column is in horizontal direction. </p>\n<p>When you will convolve this mask onto an image it would prominent horizontal edges in the image. </p>\n<p>The only difference between it is that it have 2 and -2 as a center element of first and third row.</p>\n<h2 id=\"How-it-works-1\"><a href=\"#How-it-works-1\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>This mask will prominent the horizontal edges in an image. </p>\n<p>It also works on the principle of above mask and calculates difference among the pixel intensities of a particular edge. </p>\n<p>As the center row of mask is consist of zeros so it does not include the original values of edge in the image but rather it calculate the difference of above and below pixel intensities of the particular edge. </p>\n<p>Thus increasing the sudden change of intensities and making the edge more visible.</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel03.png\" alt=\"img\"></p>\n<h2 id=\"Comparison\"><a href=\"#Comparison\" class=\"headerlink\" title=\"Comparison\"></a>Comparison</h2><p>As you can see that in the first picture on which we apply vertical mask, all the vertical edges are more visible than the original image. </p>\n<p>Similarly in the second picture we have applied the horizontal mask and in result all the horizontal edges are visible.</p>\n<p>So in this way you can see that we can detect both horizontal and vertical edges from an image. </p>\n<p>Also if you compare the result of sobel operator with Prewitt operator, you will find that sobel operator finds more edges or make edges more visible as compared to Prewitt Operator.</p>\n<p>This is because in sobel operator we have allotted more weight to the pixel intensities around the edges.</p>\n<h2 id=\"Applying-more-weight-to-mask\"><a href=\"#Applying-more-weight-to-mask\" class=\"headerlink\" title=\"Applying more weight to mask\"></a>Applying more weight to mask</h2><p>Now we can also see that if we apply more weight to the mask, the more edges it will get for us. </p>\n<p>There is no fixed coefficients in sobel operator, so here is another weighted operator</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sobel04.png\" alt=\"img\"></p>\n<p>If you can compare the result of this mask with of the Prewitt vertical mask, </p>\n<p>it is clear that this mask will give out more edges as compared to Prewitt one just because we have allotted more weight in the mask.</p>\n"},{"layout":"post","title":"Laplacian Operator","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\nLaplacian Operator is also a derivative operator which is used to find edges in an image. \n\nThe major difference between Laplacian and other operators like Prewitt, Sobel, Robinson and Kirsch is that these all are first order derivative masks but Laplacian is a second order derivative mask. \n\nIn this mask we have two further classifications one is Positive Laplacian Operator and other is Negative Laplacian Operator.\n\nAnother difference between Laplacian and other operators is that unlike other operators Laplacian didn’t take out edges in any particular direction but it take out edges in following classification.\n\n- Inward Edges\n- Outward Edges\n\nLet’s see that how Laplacian operator works.\n\n## Positive Laplacian Operator\n\nIn Positive Laplacian we have standard mask in which center element of the mask should be negative \n\nand corner elements of mask should be zero.\n\nPositive Laplacian Operator is use to take out outward edges in an image.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian01.png)\n\n## Negative Laplacian Operator\n\nIn negative Laplacian operator we also have a standard mask, in which center element should be positive. All the elements in the corner should be zero and rest of all the elements in the mask should be -1.\n\nNegative Laplacian operator is use to take out inward edges in an image\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian02.png)\n\n## How it works\n\nLaplacian is a derivative operator; its uses highlight gray level discontinuities in an image and try to deemphasize regions with slowly varying gray levels. \n\nThis operation in result produces such images which have grayish edge lines and other discontinuities on a dark background. T\n\nhis produces inward and outward edges in an image\n\nThe important thing is how to apply these filters onto image. \n\nRemember we can’t apply both the positive and negative Laplacian operator on the same image. \n\nWe have to apply just one but the thing to remember is that if we apply positive Laplacian operator on the image then we subtract the resultant image from the original image to get the sharpened image. \n\nSimilarly if we apply negative Laplacian operator then we have to add the resultant image onto original image to get the sharpened image.\n\nLet’s apply these filters onto an image and see how it will get us inward and outward edges from an image. \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian03.png)\n","source":"_posts/2018-05-22-Laplacian Operator.md","raw":"---\nlayout: post\ntitle:  \"Laplacian Operator\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\nLaplacian Operator is also a derivative operator which is used to find edges in an image. \n\nThe major difference between Laplacian and other operators like Prewitt, Sobel, Robinson and Kirsch is that these all are first order derivative masks but Laplacian is a second order derivative mask. \n\nIn this mask we have two further classifications one is Positive Laplacian Operator and other is Negative Laplacian Operator.\n\nAnother difference between Laplacian and other operators is that unlike other operators Laplacian didn’t take out edges in any particular direction but it take out edges in following classification.\n\n- Inward Edges\n- Outward Edges\n\nLet’s see that how Laplacian operator works.\n\n## Positive Laplacian Operator\n\nIn Positive Laplacian we have standard mask in which center element of the mask should be negative \n\nand corner elements of mask should be zero.\n\nPositive Laplacian Operator is use to take out outward edges in an image.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian01.png)\n\n## Negative Laplacian Operator\n\nIn negative Laplacian operator we also have a standard mask, in which center element should be positive. All the elements in the corner should be zero and rest of all the elements in the mask should be -1.\n\nNegative Laplacian operator is use to take out inward edges in an image\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian02.png)\n\n## How it works\n\nLaplacian is a derivative operator; its uses highlight gray level discontinuities in an image and try to deemphasize regions with slowly varying gray levels. \n\nThis operation in result produces such images which have grayish edge lines and other discontinuities on a dark background. T\n\nhis produces inward and outward edges in an image\n\nThe important thing is how to apply these filters onto image. \n\nRemember we can’t apply both the positive and negative Laplacian operator on the same image. \n\nWe have to apply just one but the thing to remember is that if we apply positive Laplacian operator on the image then we subtract the resultant image from the original image to get the sharpened image. \n\nSimilarly if we apply negative Laplacian operator then we have to add the resultant image onto original image to get the sharpened image.\n\nLet’s apply these filters onto an image and see how it will get us inward and outward edges from an image. \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian03.png)\n","slug":"2018-05-22-Laplacian Operator","published":1,"updated":"2018-05-22T08:07:50.828Z","comments":1,"photos":[],"link":"","_id":"cjp6k65la00dw31x74jwjxqon","content":"<p>Laplacian Operator is also a derivative operator which is used to find edges in an image. </p>\n<p>The major difference between Laplacian and other operators like Prewitt, Sobel, Robinson and Kirsch is that these all are first order derivative masks but Laplacian is a second order derivative mask. </p>\n<p>In this mask we have two further classifications one is Positive Laplacian Operator and other is Negative Laplacian Operator.</p>\n<p>Another difference between Laplacian and other operators is that unlike other operators Laplacian didn’t take out edges in any particular direction but it take out edges in following classification.</p>\n<ul>\n<li>Inward Edges</li>\n<li>Outward Edges</li>\n</ul>\n<p>Let’s see that how Laplacian operator works.</p>\n<h2 id=\"Positive-Laplacian-Operator\"><a href=\"#Positive-Laplacian-Operator\" class=\"headerlink\" title=\"Positive Laplacian Operator\"></a>Positive Laplacian Operator</h2><p>In Positive Laplacian we have standard mask in which center element of the mask should be negative </p>\n<p>and corner elements of mask should be zero.</p>\n<p>Positive Laplacian Operator is use to take out outward edges in an image.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian01.png\" alt=\"img\"></p>\n<h2 id=\"Negative-Laplacian-Operator\"><a href=\"#Negative-Laplacian-Operator\" class=\"headerlink\" title=\"Negative Laplacian Operator\"></a>Negative Laplacian Operator</h2><p>In negative Laplacian operator we also have a standard mask, in which center element should be positive. All the elements in the corner should be zero and rest of all the elements in the mask should be -1.</p>\n<p>Negative Laplacian operator is use to take out inward edges in an image</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian02.png\" alt=\"img\"></p>\n<h2 id=\"How-it-works\"><a href=\"#How-it-works\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>Laplacian is a derivative operator; its uses highlight gray level discontinuities in an image and try to deemphasize regions with slowly varying gray levels. </p>\n<p>This operation in result produces such images which have grayish edge lines and other discontinuities on a dark background. T</p>\n<p>his produces inward and outward edges in an image</p>\n<p>The important thing is how to apply these filters onto image. </p>\n<p>Remember we can’t apply both the positive and negative Laplacian operator on the same image. </p>\n<p>We have to apply just one but the thing to remember is that if we apply positive Laplacian operator on the image then we subtract the resultant image from the original image to get the sharpened image. </p>\n<p>Similarly if we apply negative Laplacian operator then we have to add the resultant image onto original image to get the sharpened image.</p>\n<p>Let’s apply these filters onto an image and see how it will get us inward and outward edges from an image. </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>Laplacian Operator is also a derivative operator which is used to find edges in an image. </p>\n<p>The major difference between Laplacian and other operators like Prewitt, Sobel, Robinson and Kirsch is that these all are first order derivative masks but Laplacian is a second order derivative mask. </p>\n<p>In this mask we have two further classifications one is Positive Laplacian Operator and other is Negative Laplacian Operator.</p>\n<p>Another difference between Laplacian and other operators is that unlike other operators Laplacian didn’t take out edges in any particular direction but it take out edges in following classification.</p>\n<ul>\n<li>Inward Edges</li>\n<li>Outward Edges</li>\n</ul>\n<p>Let’s see that how Laplacian operator works.</p>\n<h2 id=\"Positive-Laplacian-Operator\"><a href=\"#Positive-Laplacian-Operator\" class=\"headerlink\" title=\"Positive Laplacian Operator\"></a>Positive Laplacian Operator</h2><p>In Positive Laplacian we have standard mask in which center element of the mask should be negative </p>\n<p>and corner elements of mask should be zero.</p>\n<p>Positive Laplacian Operator is use to take out outward edges in an image.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian01.png\" alt=\"img\"></p>\n<h2 id=\"Negative-Laplacian-Operator\"><a href=\"#Negative-Laplacian-Operator\" class=\"headerlink\" title=\"Negative Laplacian Operator\"></a>Negative Laplacian Operator</h2><p>In negative Laplacian operator we also have a standard mask, in which center element should be positive. All the elements in the corner should be zero and rest of all the elements in the mask should be -1.</p>\n<p>Negative Laplacian operator is use to take out inward edges in an image</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian02.png\" alt=\"img\"></p>\n<h2 id=\"How-it-works\"><a href=\"#How-it-works\" class=\"headerlink\" title=\"How it works\"></a>How it works</h2><p>Laplacian is a derivative operator; its uses highlight gray level discontinuities in an image and try to deemphasize regions with slowly varying gray levels. </p>\n<p>This operation in result produces such images which have grayish edge lines and other discontinuities on a dark background. T</p>\n<p>his produces inward and outward edges in an image</p>\n<p>The important thing is how to apply these filters onto image. </p>\n<p>Remember we can’t apply both the positive and negative Laplacian operator on the same image. </p>\n<p>We have to apply just one but the thing to remember is that if we apply positive Laplacian operator on the image then we subtract the resultant image from the original image to get the sharpened image. </p>\n<p>Similarly if we apply negative Laplacian operator then we have to add the resultant image onto original image to get the sharpened image.</p>\n<p>Let’s apply these filters onto an image and see how it will get us inward and outward edges from an image. </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laplacian03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Frequency domain","date":"2018-05-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg","_content":"\n## Frequency domain analysis\n\nTill now, all the domains in which we have analyzed a signal , we analyze it with respect to time. \n\nBut in frequency domain we don’t analyze signal with respect to time, but with respect of frequency.\n\n## Difference between spatial domain and frequency domain\n\nIn spatial domain, we deal with images as it is. The value of the pixels of the image change with respect to scene. \n\nWhereas in frequency domain, we deal with the rate at which the pixel values are changing in spatial domain.\n\n## Spatial Domain\n\nIn simple spatial domain, we directly deal with the image matrix\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/frequencyD01.png)\n\n## Frequency Domain\n\nWe first transform the image to its frequency distribution. \n\nThen our black box system perform what ever processing it has to performed, \n\nand the output of the black box in this case is not an image, but a transformation. \n\nAfter performing inverse transformation, it is converted into an image which is then viewed in spatial domain.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/frequencyD02.png)\n\n## Transformation\n\nA signal can be converted from time domain into frequency domain using mathematical operators called transforms. There are many kind of transformation that does this. Some of them are given below.\n\n- Fourier Series\n- Fourier transformation\n- Laplace transform\n- Z transform\n\n## Frequency components\n\nAny image in spatial domain can be represented in a frequency domain. \n\nWe will divide frequency components into two major components.\n\n## Low frequency components\n\nLow frequency components in an image correspond to smooth regions.\n\n## High frequency components\n\nHigh frequency components correspond to edges in an image.\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-05-22-Frequency domain.md","raw":"---\nlayout: post\ntitle:  \"Frequency domain\"\ndate:   2018-05-22\ncategories: DIP\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/lenna.jpg\n---\n\n## Frequency domain analysis\n\nTill now, all the domains in which we have analyzed a signal , we analyze it with respect to time. \n\nBut in frequency domain we don’t analyze signal with respect to time, but with respect of frequency.\n\n## Difference between spatial domain and frequency domain\n\nIn spatial domain, we deal with images as it is. The value of the pixels of the image change with respect to scene. \n\nWhereas in frequency domain, we deal with the rate at which the pixel values are changing in spatial domain.\n\n## Spatial Domain\n\nIn simple spatial domain, we directly deal with the image matrix\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/frequencyD01.png)\n\n## Frequency Domain\n\nWe first transform the image to its frequency distribution. \n\nThen our black box system perform what ever processing it has to performed, \n\nand the output of the black box in this case is not an image, but a transformation. \n\nAfter performing inverse transformation, it is converted into an image which is then viewed in spatial domain.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/frequencyD02.png)\n\n## Transformation\n\nA signal can be converted from time domain into frequency domain using mathematical operators called transforms. There are many kind of transformation that does this. Some of them are given below.\n\n- Fourier Series\n- Fourier transformation\n- Laplace transform\n- Z transform\n\n## Frequency components\n\nAny image in spatial domain can be represented in a frequency domain. \n\nWe will divide frequency components into two major components.\n\n## Low frequency components\n\nLow frequency components in an image correspond to smooth regions.\n\n## High frequency components\n\nHigh frequency components correspond to edges in an image.\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2018-05-22-Frequency domain","published":1,"updated":"2018-05-22T13:11:49.754Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ld00dy31x7ihrn07b9","content":"<h2 id=\"Frequency-domain-analysis\"><a href=\"#Frequency-domain-analysis\" class=\"headerlink\" title=\"Frequency domain analysis\"></a>Frequency domain analysis</h2><p>Till now, all the domains in which we have analyzed a signal , we analyze it with respect to time. </p>\n<p>But in frequency domain we don’t analyze signal with respect to time, but with respect of frequency.</p>\n<h2 id=\"Difference-between-spatial-domain-and-frequency-domain\"><a href=\"#Difference-between-spatial-domain-and-frequency-domain\" class=\"headerlink\" title=\"Difference between spatial domain and frequency domain\"></a>Difference between spatial domain and frequency domain</h2><p>In spatial domain, we deal with images as it is. The value of the pixels of the image change with respect to scene. </p>\n<p>Whereas in frequency domain, we deal with the rate at which the pixel values are changing in spatial domain.</p>\n<h2 id=\"Spatial-Domain\"><a href=\"#Spatial-Domain\" class=\"headerlink\" title=\"Spatial Domain\"></a>Spatial Domain</h2><p>In simple spatial domain, we directly deal with the image matrix</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/frequencyD01.png\" alt=\"img\"></p>\n<h2 id=\"Frequency-Domain\"><a href=\"#Frequency-Domain\" class=\"headerlink\" title=\"Frequency Domain\"></a>Frequency Domain</h2><p>We first transform the image to its frequency distribution. </p>\n<p>Then our black box system perform what ever processing it has to performed, </p>\n<p>and the output of the black box in this case is not an image, but a transformation. </p>\n<p>After performing inverse transformation, it is converted into an image which is then viewed in spatial domain.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/frequencyD02.png\" alt=\"img\"></p>\n<h2 id=\"Transformation\"><a href=\"#Transformation\" class=\"headerlink\" title=\"Transformation\"></a>Transformation</h2><p>A signal can be converted from time domain into frequency domain using mathematical operators called transforms. There are many kind of transformation that does this. Some of them are given below.</p>\n<ul>\n<li>Fourier Series</li>\n<li>Fourier transformation</li>\n<li>Laplace transform</li>\n<li>Z transform</li>\n</ul>\n<h2 id=\"Frequency-components\"><a href=\"#Frequency-components\" class=\"headerlink\" title=\"Frequency components\"></a>Frequency components</h2><p>Any image in spatial domain can be represented in a frequency domain. </p>\n<p>We will divide frequency components into two major components.</p>\n<h2 id=\"Low-frequency-components\"><a href=\"#Low-frequency-components\" class=\"headerlink\" title=\"Low frequency components\"></a>Low frequency components</h2><p>Low frequency components in an image correspond to smooth regions.</p>\n<h2 id=\"High-frequency-components\"><a href=\"#High-frequency-components\" class=\"headerlink\" title=\"High frequency components\"></a>High frequency components</h2><p>High frequency components correspond to edges in an image.</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Frequency-domain-analysis\"><a href=\"#Frequency-domain-analysis\" class=\"headerlink\" title=\"Frequency domain analysis\"></a>Frequency domain analysis</h2><p>Till now, all the domains in which we have analyzed a signal , we analyze it with respect to time. </p>\n<p>But in frequency domain we don’t analyze signal with respect to time, but with respect of frequency.</p>\n<h2 id=\"Difference-between-spatial-domain-and-frequency-domain\"><a href=\"#Difference-between-spatial-domain-and-frequency-domain\" class=\"headerlink\" title=\"Difference between spatial domain and frequency domain\"></a>Difference between spatial domain and frequency domain</h2><p>In spatial domain, we deal with images as it is. The value of the pixels of the image change with respect to scene. </p>\n<p>Whereas in frequency domain, we deal with the rate at which the pixel values are changing in spatial domain.</p>\n<h2 id=\"Spatial-Domain\"><a href=\"#Spatial-Domain\" class=\"headerlink\" title=\"Spatial Domain\"></a>Spatial Domain</h2><p>In simple spatial domain, we directly deal with the image matrix</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/frequencyD01.png\" alt=\"img\"></p>\n<h2 id=\"Frequency-Domain\"><a href=\"#Frequency-Domain\" class=\"headerlink\" title=\"Frequency Domain\"></a>Frequency Domain</h2><p>We first transform the image to its frequency distribution. </p>\n<p>Then our black box system perform what ever processing it has to performed, </p>\n<p>and the output of the black box in this case is not an image, but a transformation. </p>\n<p>After performing inverse transformation, it is converted into an image which is then viewed in spatial domain.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/frequencyD02.png\" alt=\"img\"></p>\n<h2 id=\"Transformation\"><a href=\"#Transformation\" class=\"headerlink\" title=\"Transformation\"></a>Transformation</h2><p>A signal can be converted from time domain into frequency domain using mathematical operators called transforms. There are many kind of transformation that does this. Some of them are given below.</p>\n<ul>\n<li>Fourier Series</li>\n<li>Fourier transformation</li>\n<li>Laplace transform</li>\n<li>Z transform</li>\n</ul>\n<h2 id=\"Frequency-components\"><a href=\"#Frequency-components\" class=\"headerlink\" title=\"Frequency components\"></a>Frequency components</h2><p>Any image in spatial domain can be represented in a frequency domain. </p>\n<p>We will divide frequency components into two major components.</p>\n<h2 id=\"Low-frequency-components\"><a href=\"#Low-frequency-components\" class=\"headerlink\" title=\"Low frequency components\"></a>Low frequency components</h2><p>Low frequency components in an image correspond to smooth regions.</p>\n<h2 id=\"High-frequency-components\"><a href=\"#High-frequency-components\" class=\"headerlink\" title=\"High frequency components\"></a>High frequency components</h2><p>High frequency components correspond to edges in an image.</p>\n"},{"layout":"post","title":"Memento Pattern01","date":"2018-05-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Intent\n\nThe intent of this pattern is to capture the internal state of an object without violating encapsulation and thus providing a mean for restoring the object into initial state when needed.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento01.png) \n\n- Memento\n  - Stores internal state of the Originator object. The state can include any number of state variables.\n  - The Memento must have two interfaces.\n    - an interface to the caretaker. This interface must not allow any operations or any access to internal state stored by the memento and thus honors encapsulation. \n    - The other interface is to the originator and allows the originator to access any state variables necessary to for the originator to restore previous state.\n- Originator\n  - Creates a memento object capturing the originators internal state.\n  - Use the memento object to restore its previous state.\n- Caretaker\n  - Responsible for keeping the memento.\n  - The memento is opaque to the caretaker, and the caretaker must not operate on it.\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoPattern011.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento06.png) \n\n## Reference\n\n- <https://www.tutorialspoint.com/design_pattern/memento_pattern.htm>\n- <https://www.oodesign.com/memento-pattern.html>","source":"_posts/2018-05-28-Memento Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Memento Pattern01\"\ndate:   2018-05-28\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Intent\n\nThe intent of this pattern is to capture the internal state of an object without violating encapsulation and thus providing a mean for restoring the object into initial state when needed.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento01.png) \n\n- Memento\n  - Stores internal state of the Originator object. The state can include any number of state variables.\n  - The Memento must have two interfaces.\n    - an interface to the caretaker. This interface must not allow any operations or any access to internal state stored by the memento and thus honors encapsulation. \n    - The other interface is to the originator and allows the originator to access any state variables necessary to for the originator to restore previous state.\n- Originator\n  - Creates a memento object capturing the originators internal state.\n  - Use the memento object to restore its previous state.\n- Caretaker\n  - Responsible for keeping the memento.\n  - The memento is opaque to the caretaker, and the caretaker must not operate on it.\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoPattern011.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento06.png) \n\n## Reference\n\n- <https://www.tutorialspoint.com/design_pattern/memento_pattern.htm>\n- <https://www.oodesign.com/memento-pattern.html>","slug":"2018-05-28-Memento Pattern01","published":1,"updated":"2018-10-25T05:47:18.528Z","comments":1,"photos":[],"link":"","_id":"cjp6k65lf00e031x7rh3n0jfj","content":"<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><p>The intent of this pattern is to capture the internal state of an object without violating encapsulation and thus providing a mean for restoring the object into initial state when needed.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento01.png\" alt=\"img\"> </p>\n<ul>\n<li>Memento<ul>\n<li>Stores internal state of the Originator object. The state can include any number of state variables.</li>\n<li>The Memento must have two interfaces.<ul>\n<li>an interface to the caretaker. This interface must not allow any operations or any access to internal state stored by the memento and thus honors encapsulation. </li>\n<li>The other interface is to the originator and allows the originator to access any state variables necessary to for the originator to restore previous state.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Originator<ul>\n<li>Creates a memento object capturing the originators internal state.</li>\n<li>Use the memento object to restore its previous state.</li>\n</ul>\n</li>\n<li>Caretaker<ul>\n<li>Responsible for keeping the memento.</li>\n<li>The memento is opaque to the caretaker, and the caretaker must not operate on it.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoPattern011.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento06.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/memento_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/memento_pattern.htm</a></li>\n<li><a href=\"https://www.oodesign.com/memento-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/memento-pattern.html</a></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><p>The intent of this pattern is to capture the internal state of an object without violating encapsulation and thus providing a mean for restoring the object into initial state when needed.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento01.png\" alt=\"img\"> </p>\n<ul>\n<li>Memento<ul>\n<li>Stores internal state of the Originator object. The state can include any number of state variables.</li>\n<li>The Memento must have two interfaces.<ul>\n<li>an interface to the caretaker. This interface must not allow any operations or any access to internal state stored by the memento and thus honors encapsulation. </li>\n<li>The other interface is to the originator and allows the originator to access any state variables necessary to for the originator to restore previous state.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Originator<ul>\n<li>Creates a memento object capturing the originators internal state.</li>\n<li>Use the memento object to restore its previous state.</li>\n</ul>\n</li>\n<li>Caretaker<ul>\n<li>Responsible for keeping the memento.</li>\n<li>The memento is opaque to the caretaker, and the caretaker must not operate on it.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoPattern011.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/memento06.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/memento_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/memento_pattern.htm</a></li>\n<li><a href=\"https://www.oodesign.com/memento-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/memento-pattern.html</a></li>\n</ul>\n"},{"layout":"post","title":"Prototype Pattern01","date":"2018-05-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Intent\n\n- specifying the kind of objects to create using a prototypical instance\n- creating new objects by copying this prototype\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto11.png) \n\n- Client\n  - creates a new object by asking a prototype to clone itself.\n- Prototype \n  - declares an interface for cloning itself.\n- ConcretePrototype\n  -  implements the operation for cloning itself.\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto011.png) \n\n## Code\n\nCreate an abstract class implementing *Clonable* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto02.png)\n\nCreate concrete classes extending the above class. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto05.png)\n\nCreate a class to get concrete classes from database and store them in a *Hashtable*.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto06.png)\n\n\n\nPrototypePatternDemo uses ShapeCache class to get clones of shapes stored in a *Hashtable*.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto07.png) \n\n## Reference\n\n<https://www.tutorialspoint.com/design_pattern/prototype_pattern.htm>\n\n<https://www.oodesign.com/prototype-pattern.html>\n","source":"_posts/2018-05-28-Prototype Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Prototype Pattern01\"\ndate:   2018-05-28\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Intent\n\n- specifying the kind of objects to create using a prototypical instance\n- creating new objects by copying this prototype\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto11.png) \n\n- Client\n  - creates a new object by asking a prototype to clone itself.\n- Prototype \n  - declares an interface for cloning itself.\n- ConcretePrototype\n  -  implements the operation for cloning itself.\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto011.png) \n\n## Code\n\nCreate an abstract class implementing *Clonable* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto02.png)\n\nCreate concrete classes extending the above class. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto05.png)\n\nCreate a class to get concrete classes from database and store them in a *Hashtable*.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto06.png)\n\n\n\nPrototypePatternDemo uses ShapeCache class to get clones of shapes stored in a *Hashtable*.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto07.png) \n\n## Reference\n\n<https://www.tutorialspoint.com/design_pattern/prototype_pattern.htm>\n\n<https://www.oodesign.com/prototype-pattern.html>\n","slug":"2018-05-28-Prototype Pattern01","published":1,"updated":"2018-10-25T05:47:33.743Z","comments":1,"photos":[],"link":"","_id":"cjp6k65lg00e231x7nqvzw44s","content":"<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><ul>\n<li>specifying the kind of objects to create using a prototypical instance</li>\n<li>creating new objects by copying this prototype</li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto11.png\" alt=\"img\"> </p>\n<ul>\n<li>Client<ul>\n<li>creates a new object by asking a prototype to clone itself.</li>\n</ul>\n</li>\n<li>Prototype <ul>\n<li>declares an interface for cloning itself.</li>\n</ul>\n</li>\n<li>ConcretePrototype<ul>\n<li>implements the operation for cloning itself.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto011.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p>Create an abstract class implementing <em>Clonable</em> interface.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto02.png\" alt=\"img\"></p>\n<p>Create concrete classes extending the above class. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto05.png\" alt=\"img\"></p>\n<p>Create a class to get concrete classes from database and store them in a <em>Hashtable</em>.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto06.png\" alt=\"img\"></p>\n<p>PrototypePatternDemo uses ShapeCache class to get clones of shapes stored in a <em>Hashtable</em>.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto07.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.tutorialspoint.com/design_pattern/prototype_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/prototype_pattern.htm</a></p>\n<p><a href=\"https://www.oodesign.com/prototype-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/prototype-pattern.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><ul>\n<li>specifying the kind of objects to create using a prototypical instance</li>\n<li>creating new objects by copying this prototype</li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto11.png\" alt=\"img\"> </p>\n<ul>\n<li>Client<ul>\n<li>creates a new object by asking a prototype to clone itself.</li>\n</ul>\n</li>\n<li>Prototype <ul>\n<li>declares an interface for cloning itself.</li>\n</ul>\n</li>\n<li>ConcretePrototype<ul>\n<li>implements the operation for cloning itself.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto011.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p>Create an abstract class implementing <em>Clonable</em> interface.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto02.png\" alt=\"img\"></p>\n<p>Create concrete classes extending the above class. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto05.png\" alt=\"img\"></p>\n<p>Create a class to get concrete classes from database and store them in a <em>Hashtable</em>.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto06.png\" alt=\"img\"></p>\n<p>PrototypePatternDemo uses ShapeCache class to get clones of shapes stored in a <em>Hashtable</em>.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/proto07.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.tutorialspoint.com/design_pattern/prototype_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/prototype_pattern.htm</a></p>\n<p><a href=\"https://www.oodesign.com/prototype-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/prototype-pattern.html</a></p>\n"},{"layout":"post","title":"Prototype Pattern02","date":"2018-05-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nUse the Prototype Pattern when creating an instance of a given class is either expensive or complicated. \n\n## Scenario \n\nYour interactive role playing game has an insatiable appetite for monsters. \n\nAs your heros make their journey through a dynamically created landscape, they encounter an endless chain of foes that must be subdued. \n\nYou’d like the monster’s characteristics to evolve with the changing landscape. \n\nIt doesn’t make a lot of sense for bird-like monsters to follow your characters into underseas realms. \n\nFinally, you’d like to allow advanced players to create their own custom monsters. \n\n## Solution\n\nThe Prototype Pattern allows you to make new instances by copying existing instances. \n\n(In Java this typically means using the clone() method, or de-serialization when you need deep copies.) \n\nA key aspect of this pattern is that the client code can make new instances without knowing which specific class is being instantiated. \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protoMons02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protoMons01.png)\n\n## Benefits\n\n- Hides the complexities of making new instances from the client. \n- Provides the option for the client to generate objects whose type is not known. \n- In some circumstances, copying an object can be more efficient than creating a new object. \n\n## Reference\n\nHead First Design Pattern\n","source":"_posts/2018-05-28-Prototype Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Prototype Pattern02\"\ndate:   2018-05-28\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nUse the Prototype Pattern when creating an instance of a given class is either expensive or complicated. \n\n## Scenario \n\nYour interactive role playing game has an insatiable appetite for monsters. \n\nAs your heros make their journey through a dynamically created landscape, they encounter an endless chain of foes that must be subdued. \n\nYou’d like the monster’s characteristics to evolve with the changing landscape. \n\nIt doesn’t make a lot of sense for bird-like monsters to follow your characters into underseas realms. \n\nFinally, you’d like to allow advanced players to create their own custom monsters. \n\n## Solution\n\nThe Prototype Pattern allows you to make new instances by copying existing instances. \n\n(In Java this typically means using the clone() method, or de-serialization when you need deep copies.) \n\nA key aspect of this pattern is that the client code can make new instances without knowing which specific class is being instantiated. \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protoMons02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protoMons01.png)\n\n## Benefits\n\n- Hides the complexities of making new instances from the client. \n- Provides the option for the client to generate objects whose type is not known. \n- In some circumstances, copying an object can be more efficient than creating a new object. \n\n## Reference\n\nHead First Design Pattern\n","slug":"2018-05-28-Prototype Pattern02","published":1,"updated":"2018-10-25T05:36:36.269Z","comments":1,"photos":[],"link":"","_id":"cjp6k65li00e431x7l6o3ha39","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Prototype Pattern when creating an instance of a given class is either expensive or complicated. </p>\n<h2 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario\"></a>Scenario</h2><p>Your interactive role playing game has an insatiable appetite for monsters. </p>\n<p>As your heros make their journey through a dynamically created landscape, they encounter an endless chain of foes that must be subdued. </p>\n<p>You’d like the monster’s characteristics to evolve with the changing landscape. </p>\n<p>It doesn’t make a lot of sense for bird-like monsters to follow your characters into underseas realms. </p>\n<p>Finally, you’d like to allow advanced players to create their own custom monsters. </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>The Prototype Pattern allows you to make new instances by copying existing instances. </p>\n<p>(In Java this typically means using the clone() method, or de-serialization when you need deep copies.) </p>\n<p>A key aspect of this pattern is that the client code can make new instances without knowing which specific class is being instantiated. </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protoMons02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protoMons01.png\" alt=\"img\"></p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Hides the complexities of making new instances from the client. </li>\n<li>Provides the option for the client to generate objects whose type is not known. </li>\n<li>In some circumstances, copying an object can be more efficient than creating a new object. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Prototype Pattern when creating an instance of a given class is either expensive or complicated. </p>\n<h2 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario\"></a>Scenario</h2><p>Your interactive role playing game has an insatiable appetite for monsters. </p>\n<p>As your heros make their journey through a dynamically created landscape, they encounter an endless chain of foes that must be subdued. </p>\n<p>You’d like the monster’s characteristics to evolve with the changing landscape. </p>\n<p>It doesn’t make a lot of sense for bird-like monsters to follow your characters into underseas realms. </p>\n<p>Finally, you’d like to allow advanced players to create their own custom monsters. </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>The Prototype Pattern allows you to make new instances by copying existing instances. </p>\n<p>(In Java this typically means using the clone() method, or de-serialization when you need deep copies.) </p>\n<p>A key aspect of this pattern is that the client code can make new instances without knowing which specific class is being instantiated. </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protoMons02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protoMons01.png\" alt=\"img\"></p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Hides the complexities of making new instances from the client. </li>\n<li>Provides the option for the client to generate objects whose type is not known. </li>\n<li>In some circumstances, copying an object can be more efficient than creating a new object. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"나이트의 이동","date":"2018-05-26T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n- 전형적인 BFS\n- (1번) 큐에서 deque를 한다\n- 도착지점인지 확인한다. \n  - 도착 지점이면 끝\n  - 도착 지점이 아니라면 계속\n- deque한 지점에서 이동 가능한 곳을 모두 큐에 넣는다\n- 다시 1번부터 반복한다\n\n\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night03.png)\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-05-27-나이트의 이동.md","raw":"---\nlayout: post\ntitle:  \"나이트의 이동\"\ndate:   2018-05-27\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n- 전형적인 BFS\n- (1번) 큐에서 deque를 한다\n- 도착지점인지 확인한다. \n  - 도착 지점이면 끝\n  - 도착 지점이 아니라면 계속\n- deque한 지점에서 이동 가능한 곳을 모두 큐에 넣는다\n- 다시 1번부터 반복한다\n\n\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night03.png)\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2018-05-27-나이트의 이동","published":1,"updated":"2018-05-27T15:42:54.433Z","comments":1,"photos":[],"link":"","_id":"cjp6k65lj00e631x7y2k1toyc","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>전형적인 BFS</li>\n<li>(1번) 큐에서 deque를 한다</li>\n<li>도착지점인지 확인한다. <ul>\n<li>도착 지점이면 끝</li>\n<li>도착 지점이 아니라면 계속</li>\n</ul>\n</li>\n<li>deque한 지점에서 이동 가능한 곳을 모두 큐에 넣는다</li>\n<li>다시 1번부터 반복한다</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>전형적인 BFS</li>\n<li>(1번) 큐에서 deque를 한다</li>\n<li>도착지점인지 확인한다. <ul>\n<li>도착 지점이면 끝</li>\n<li>도착 지점이 아니라면 계속</li>\n</ul>\n</li>\n<li>deque한 지점에서 이동 가능한 곳을 모두 큐에 넣는다</li>\n<li>다시 1번부터 반복한다</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/night03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"State Pattern01","date":"2018-05-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nThe State Pattern allows an object to alter its behavior when its internal state changes. \n\nThe object will appear to change its class. \n\n## Explanation\n\n- The first part of this description makes a lot of sense, right?  Because the pattern encapsulates state into separate classes and delegates to the object representing the current state, we know that behavior changes along with the internal state. The Gumball Machine provides a good example: when the gumball machine is in the NoQuarterState and you insert a quarter, you get different behavior (the machine accepts the quarter) than if you insert a quarter when it’s in the HasQuarterState (the machine rejects the quarter). \n- What about the second part of the definition? What does it mean for an object to “appear to change its class?” Think about it from the perspective of a client: if an object you’re using can completely change its behavior, then it appears to you that the object is actually instantiated from another class. In reality, however, you know that we are using composition to give the appearance of a class change by simply referencing different state objects. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML01.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML04.png) \n\n## Compared to 'Strategy Pattern'\n\nThe State and Strategy Patterns have the same class diagram, but they differ in intent. \n\n- Strategy Pattern \n  - typically configures Context classes with a behavior or algorithm. \n- State Pattern \n  - allows a Context to change its behavior as the state of the Context changes.\n\n## Reference\n\nHead First Design Pattern","source":"_posts/2018-05-31-State Pattern01.md","raw":"---\nlayout: post\ntitle:  \"State Pattern01\"\ndate:   2018-05-31\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nThe State Pattern allows an object to alter its behavior when its internal state changes. \n\nThe object will appear to change its class. \n\n## Explanation\n\n- The first part of this description makes a lot of sense, right?  Because the pattern encapsulates state into separate classes and delegates to the object representing the current state, we know that behavior changes along with the internal state. The Gumball Machine provides a good example: when the gumball machine is in the NoQuarterState and you insert a quarter, you get different behavior (the machine accepts the quarter) than if you insert a quarter when it’s in the HasQuarterState (the machine rejects the quarter). \n- What about the second part of the definition? What does it mean for an object to “appear to change its class?” Think about it from the perspective of a client: if an object you’re using can completely change its behavior, then it appears to you that the object is actually instantiated from another class. In reality, however, you know that we are using composition to give the appearance of a class change by simply referencing different state objects. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML01.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML04.png) \n\n## Compared to 'Strategy Pattern'\n\nThe State and Strategy Patterns have the same class diagram, but they differ in intent. \n\n- Strategy Pattern \n  - typically configures Context classes with a behavior or algorithm. \n- State Pattern \n  - allows a Context to change its behavior as the state of the Context changes.\n\n## Reference\n\nHead First Design Pattern","slug":"2018-05-31-State Pattern01","published":1,"updated":"2018-10-25T05:40:13.757Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ll00e831x7k274i0yy","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The State Pattern allows an object to alter its behavior when its internal state changes. </p>\n<p>The object will appear to change its class. </p>\n<h2 id=\"Explanation\"><a href=\"#Explanation\" class=\"headerlink\" title=\"Explanation\"></a>Explanation</h2><ul>\n<li>The first part of this description makes a lot of sense, right?  Because the pattern encapsulates state into separate classes and delegates to the object representing the current state, we know that behavior changes along with the internal state. The Gumball Machine provides a good example: when the gumball machine is in the NoQuarterState and you insert a quarter, you get different behavior (the machine accepts the quarter) than if you insert a quarter when it’s in the HasQuarterState (the machine rejects the quarter). </li>\n<li>What about the second part of the definition? What does it mean for an object to “appear to change its class?” Think about it from the perspective of a client: if an object you’re using can completely change its behavior, then it appears to you that the object is actually instantiated from another class. In reality, however, you know that we are using composition to give the appearance of a class change by simply referencing different state objects. </li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML01.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML04.png\" alt=\"img\"> </p>\n<h2 id=\"Compared-to-‘Strategy-Pattern’\"><a href=\"#Compared-to-‘Strategy-Pattern’\" class=\"headerlink\" title=\"Compared to ‘Strategy Pattern’\"></a>Compared to ‘Strategy Pattern’</h2><p>The State and Strategy Patterns have the same class diagram, but they differ in intent. </p>\n<ul>\n<li>Strategy Pattern <ul>\n<li>typically configures Context classes with a behavior or algorithm. </li>\n</ul>\n</li>\n<li>State Pattern <ul>\n<li>allows a Context to change its behavior as the state of the Context changes.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The State Pattern allows an object to alter its behavior when its internal state changes. </p>\n<p>The object will appear to change its class. </p>\n<h2 id=\"Explanation\"><a href=\"#Explanation\" class=\"headerlink\" title=\"Explanation\"></a>Explanation</h2><ul>\n<li>The first part of this description makes a lot of sense, right?  Because the pattern encapsulates state into separate classes and delegates to the object representing the current state, we know that behavior changes along with the internal state. The Gumball Machine provides a good example: when the gumball machine is in the NoQuarterState and you insert a quarter, you get different behavior (the machine accepts the quarter) than if you insert a quarter when it’s in the HasQuarterState (the machine rejects the quarter). </li>\n<li>What about the second part of the definition? What does it mean for an object to “appear to change its class?” Think about it from the perspective of a client: if an object you’re using can completely change its behavior, then it appears to you that the object is actually instantiated from another class. In reality, however, you know that we are using composition to give the appearance of a class change by simply referencing different state objects. </li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML01.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/statePatternUML04.png\" alt=\"img\"> </p>\n<h2 id=\"Compared-to-‘Strategy-Pattern’\"><a href=\"#Compared-to-‘Strategy-Pattern’\" class=\"headerlink\" title=\"Compared to ‘Strategy Pattern’\"></a>Compared to ‘Strategy Pattern’</h2><p>The State and Strategy Patterns have the same class diagram, but they differ in intent. </p>\n<ul>\n<li>Strategy Pattern <ul>\n<li>typically configures Context classes with a behavior or algorithm. </li>\n</ul>\n</li>\n<li>State Pattern <ul>\n<li>allows a Context to change its behavior as the state of the Context changes.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"State Pattern02","date":"2018-05-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition \n\n상태에 따라 동일한 작업이 다른 방식으로 실행될 때 해당 상태가 작업을 수행하도록 위임하는 디자인 패턴이다. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sp031.png) \n\n- State\n  - 시스템의 모든 상태에 공통의 인터페이스를 제공\n  - 이 인터페이스를 실체화한 어떤 상태 클래스도 기존 상태 클래스를 대신해 고체해서 사용할 수 있다.\n- State1, State2, State3\n  - Context 객체가 요청한 작업을 자신의 방식으로 실제 실행\n  - 대부분의 경우 다음 상태를 결정해 상태 변경을 Context 객체에 요청하는 역할도 수행 \n- Context\n  - State를 이용하는 역할 수행\n  - 현재 시스템의 상태를 나타내는 상태 변수(state) , 실제 시스템의 상태를 구현하는 여러가지 변수가 있다\n  - 각 상태 클래스에서 상태 변경을 요청해 상태를 바꿀수 있도록 하는 method (setState) 가 제공된다.\n  - Context 요소를 구현한 클래스의 request method는 실제 행위를 실행하는 대신 해당 상태 객체에 행위 실행을 위임\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sp032.png) \n\n- Light \n  - Context\n- State inteface\n  - State\n- ON, OFF\n  - State1, State2\n\n## Reference\n\nJava 객체지향 디자인 패턴 <정인상, 채흥석 지음>","source":"_posts/2018-05-31-State Pattern02.md","raw":"---\nlayout: post\ntitle:  \"State Pattern02\"\ndate:   2018-05-31\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition \n\n상태에 따라 동일한 작업이 다른 방식으로 실행될 때 해당 상태가 작업을 수행하도록 위임하는 디자인 패턴이다. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sp031.png) \n\n- State\n  - 시스템의 모든 상태에 공통의 인터페이스를 제공\n  - 이 인터페이스를 실체화한 어떤 상태 클래스도 기존 상태 클래스를 대신해 고체해서 사용할 수 있다.\n- State1, State2, State3\n  - Context 객체가 요청한 작업을 자신의 방식으로 실제 실행\n  - 대부분의 경우 다음 상태를 결정해 상태 변경을 Context 객체에 요청하는 역할도 수행 \n- Context\n  - State를 이용하는 역할 수행\n  - 현재 시스템의 상태를 나타내는 상태 변수(state) , 실제 시스템의 상태를 구현하는 여러가지 변수가 있다\n  - 각 상태 클래스에서 상태 변경을 요청해 상태를 바꿀수 있도록 하는 method (setState) 가 제공된다.\n  - Context 요소를 구현한 클래스의 request method는 실제 행위를 실행하는 대신 해당 상태 객체에 행위 실행을 위임\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sp032.png) \n\n- Light \n  - Context\n- State inteface\n  - State\n- ON, OFF\n  - State1, State2\n\n## Reference\n\nJava 객체지향 디자인 패턴 <정인상, 채흥석 지음>","slug":"2018-05-31-State Pattern02","published":1,"updated":"2018-10-25T05:36:44.865Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ln00ea31x7x80oi4nq","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>상태에 따라 동일한 작업이 다른 방식으로 실행될 때 해당 상태가 작업을 수행하도록 위임하는 디자인 패턴이다. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sp031.png\" alt=\"img\"> </p>\n<ul>\n<li>State<ul>\n<li>시스템의 모든 상태에 공통의 인터페이스를 제공</li>\n<li>이 인터페이스를 실체화한 어떤 상태 클래스도 기존 상태 클래스를 대신해 고체해서 사용할 수 있다.</li>\n</ul>\n</li>\n<li>State1, State2, State3<ul>\n<li>Context 객체가 요청한 작업을 자신의 방식으로 실제 실행</li>\n<li>대부분의 경우 다음 상태를 결정해 상태 변경을 Context 객체에 요청하는 역할도 수행 </li>\n</ul>\n</li>\n<li>Context<ul>\n<li>State를 이용하는 역할 수행</li>\n<li>현재 시스템의 상태를 나타내는 상태 변수(state) , 실제 시스템의 상태를 구현하는 여러가지 변수가 있다</li>\n<li>각 상태 클래스에서 상태 변경을 요청해 상태를 바꿀수 있도록 하는 method (setState) 가 제공된다.</li>\n<li>Context 요소를 구현한 클래스의 request method는 실제 행위를 실행하는 대신 해당 상태 객체에 행위 실행을 위임</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sp032.png\" alt=\"img\"> </p>\n<ul>\n<li>Light <ul>\n<li>Context</li>\n</ul>\n</li>\n<li>State inteface<ul>\n<li>State</li>\n</ul>\n</li>\n<li>ON, OFF<ul>\n<li>State1, State2</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>상태에 따라 동일한 작업이 다른 방식으로 실행될 때 해당 상태가 작업을 수행하도록 위임하는 디자인 패턴이다. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sp031.png\" alt=\"img\"> </p>\n<ul>\n<li>State<ul>\n<li>시스템의 모든 상태에 공통의 인터페이스를 제공</li>\n<li>이 인터페이스를 실체화한 어떤 상태 클래스도 기존 상태 클래스를 대신해 고체해서 사용할 수 있다.</li>\n</ul>\n</li>\n<li>State1, State2, State3<ul>\n<li>Context 객체가 요청한 작업을 자신의 방식으로 실제 실행</li>\n<li>대부분의 경우 다음 상태를 결정해 상태 변경을 Context 객체에 요청하는 역할도 수행 </li>\n</ul>\n</li>\n<li>Context<ul>\n<li>State를 이용하는 역할 수행</li>\n<li>현재 시스템의 상태를 나타내는 상태 변수(state) , 실제 시스템의 상태를 구현하는 여러가지 변수가 있다</li>\n<li>각 상태 클래스에서 상태 변경을 요청해 상태를 바꿀수 있도록 하는 method (setState) 가 제공된다.</li>\n<li>Context 요소를 구현한 클래스의 request method는 실제 행위를 실행하는 대신 해당 상태 객체에 행위 실행을 위임</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sp032.png\" alt=\"img\"> </p>\n<ul>\n<li>Light <ul>\n<li>Context</li>\n</ul>\n</li>\n<li>State inteface<ul>\n<li>State</li>\n</ul>\n</li>\n<li>ON, OFF<ul>\n<li>State1, State2</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n"},{"layout":"post","title":"촌수 계산","date":"2018-05-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 풀이\n\n- 결국 최단 거리 문제. 따라서 BFS\n\n- 테스트 케이스 대로 그래프를 그리면 다음과 같다\n\n  - 7에서 3까지의 최단 거리를 구하면 된다. \n  - 이는 곧 7에서 3까지의 depth를 구하는 것이다.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family04.png)\n\n\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family03.png)\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-05-28-촌수 계산.md","raw":"---\nlayout: post\ntitle:  \"촌수 계산\"\ndate:   2018-05-28\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 풀이\n\n- 결국 최단 거리 문제. 따라서 BFS\n\n- 테스트 케이스 대로 그래프를 그리면 다음과 같다\n\n  - 7에서 3까지의 최단 거리를 구하면 된다. \n  - 이는 곧 7에서 3까지의 depth를 구하는 것이다.\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family04.png)\n\n\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family03.png)\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2018-05-28-촌수 계산","published":1,"updated":"2018-05-28T08:26:42.840Z","comments":1,"photos":[],"link":"","_id":"cjp6k65lo00ec31x72jwyx3hg","content":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>결국 최단 거리 문제. 따라서 BFS</p>\n</li>\n<li><p>테스트 케이스 대로 그래프를 그리면 다음과 같다</p>\n<ul>\n<li>7에서 3까지의 최단 거리를 구하면 된다. </li>\n<li>이는 곧 7에서 3까지의 depth를 구하는 것이다.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family04.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>결국 최단 거리 문제. 따라서 BFS</p>\n</li>\n<li><p>테스트 케이스 대로 그래프를 그리면 다음과 같다</p>\n<ul>\n<li>7에서 3까지의 최단 거리를 구하면 된다. </li>\n<li>이는 곧 7에서 3까지의 depth를 구하는 것이다.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family04.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/family03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Memento Pattern02","date":"2018-05-27T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nUse the Memento Pattern when you need to be able to return an object to one of its previous states; \n\nfor instance, if your user requests an “undo.” \n\n## Scenario \n\nYour interactive role playing game is hugely successful, and has created a legion of addicts, all trying to get\n to the fabled “level 13.” \n\nAs users progress to more challenging game levels, the odds of encountering a game-ending situation increase. \n\nFans who have spent days progressing to an advanced level are understandably miffed when their character gets snuffed, and they have to start all over. \n\nThe cry goes out for a “save progress” command, so that players can store their game progress and at least recover most of their efforts when their character is unfairly extinguished. \n\nThe “save progress” function needs to be designed to return a resurrected player to the last level she completed successfully. \n\n## Solution\n\nThe Memento has two goals:\n\n- Saving the important state of a system’s key object. \n- Maintaining the key object’s encapsulation. \n\nKeeping the single responsibility principle in mind, \n\nit’s also a good idea to keep the state that you’re saving separate from the key object. \n\nThis separate object that holds the state is known as the Memento object. \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoo01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoo02.png)\n\n## Benefits\n\n- Keeping the saved state external from the key object helps to maintain cohesion. \n- Keeps the key object’s data encapsulated.\n- Provides easy-to-implement recovery capability. \n\n## Reference\n\nHead First Design Pattern\n\n","source":"_posts/2018-05-28-Memento Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Memento Pattern02\"\ndate:   2018-05-28\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nUse the Memento Pattern when you need to be able to return an object to one of its previous states; \n\nfor instance, if your user requests an “undo.” \n\n## Scenario \n\nYour interactive role playing game is hugely successful, and has created a legion of addicts, all trying to get\n to the fabled “level 13.” \n\nAs users progress to more challenging game levels, the odds of encountering a game-ending situation increase. \n\nFans who have spent days progressing to an advanced level are understandably miffed when their character gets snuffed, and they have to start all over. \n\nThe cry goes out for a “save progress” command, so that players can store their game progress and at least recover most of their efforts when their character is unfairly extinguished. \n\nThe “save progress” function needs to be designed to return a resurrected player to the last level she completed successfully. \n\n## Solution\n\nThe Memento has two goals:\n\n- Saving the important state of a system’s key object. \n- Maintaining the key object’s encapsulation. \n\nKeeping the single responsibility principle in mind, \n\nit’s also a good idea to keep the state that you’re saving separate from the key object. \n\nThis separate object that holds the state is known as the Memento object. \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoo01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoo02.png)\n\n## Benefits\n\n- Keeping the saved state external from the key object helps to maintain cohesion. \n- Keeps the key object’s data encapsulated.\n- Provides easy-to-implement recovery capability. \n\n## Reference\n\nHead First Design Pattern\n\n","slug":"2018-05-28-Memento Pattern02","published":1,"updated":"2018-10-25T05:36:27.992Z","comments":1,"photos":[],"link":"","_id":"cjp6k65lq00ee31x7mymdj6ut","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Memento Pattern when you need to be able to return an object to one of its previous states; </p>\n<p>for instance, if your user requests an “undo.” </p>\n<h2 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario\"></a>Scenario</h2><p>Your interactive role playing game is hugely successful, and has created a legion of addicts, all trying to get<br> to the fabled “level 13.” </p>\n<p>As users progress to more challenging game levels, the odds of encountering a game-ending situation increase. </p>\n<p>Fans who have spent days progressing to an advanced level are understandably miffed when their character gets snuffed, and they have to start all over. </p>\n<p>The cry goes out for a “save progress” command, so that players can store their game progress and at least recover most of their efforts when their character is unfairly extinguished. </p>\n<p>The “save progress” function needs to be designed to return a resurrected player to the last level she completed successfully. </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>The Memento has two goals:</p>\n<ul>\n<li>Saving the important state of a system’s key object. </li>\n<li>Maintaining the key object’s encapsulation. </li>\n</ul>\n<p>Keeping the single responsibility principle in mind, </p>\n<p>it’s also a good idea to keep the state that you’re saving separate from the key object. </p>\n<p>This separate object that holds the state is known as the Memento object. </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoo01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoo02.png\" alt=\"img\"></p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Keeping the saved state external from the key object helps to maintain cohesion. </li>\n<li>Keeps the key object’s data encapsulated.</li>\n<li>Provides easy-to-implement recovery capability. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Memento Pattern when you need to be able to return an object to one of its previous states; </p>\n<p>for instance, if your user requests an “undo.” </p>\n<h2 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario\"></a>Scenario</h2><p>Your interactive role playing game is hugely successful, and has created a legion of addicts, all trying to get<br> to the fabled “level 13.” </p>\n<p>As users progress to more challenging game levels, the odds of encountering a game-ending situation increase. </p>\n<p>Fans who have spent days progressing to an advanced level are understandably miffed when their character gets snuffed, and they have to start all over. </p>\n<p>The cry goes out for a “save progress” command, so that players can store their game progress and at least recover most of their efforts when their character is unfairly extinguished. </p>\n<p>The “save progress” function needs to be designed to return a resurrected player to the last level she completed successfully. </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>The Memento has two goals:</p>\n<ul>\n<li>Saving the important state of a system’s key object. </li>\n<li>Maintaining the key object’s encapsulation. </li>\n</ul>\n<p>Keeping the single responsibility principle in mind, </p>\n<p>it’s also a good idea to keep the state that you’re saving separate from the key object. </p>\n<p>This separate object that holds the state is known as the Memento object. </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoo01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mementoo02.png\" alt=\"img\"></p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Keeping the saved state external from the key object helps to maintain cohesion. </li>\n<li>Keeps the key object’s data encapsulated.</li>\n<li>Provides easy-to-implement recovery capability. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Template Method Pattern01","date":"2018-05-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Intent\n\n- Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. \n- Template Method lets subclasses redefine certain steps of an algorithm without letting them to change the algorithm's structure.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate01.png) \n\n- AbstractClass \n  - defines abstract primitive operations that concrete subclasses define to implement steps of an algorithm. \n  - implements a template method which defines the skeleton of an algorithm. The template method calls primitive operations as well as operations defined in AbstractClass or those of other objects.\n- ConcreteClass \n  -  implements the primitive operations to carry out subclass-specific steps of the algorithm. When a concrete class is called the template method code will be executed from the base class while for each method used inside the template method will be called the implementation from the derived class.\n\n## Reference\n\n<https://www.oodesign.com/template-method-pattern.html>","source":"_posts/2018-05-31-Template Method Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Template Method Pattern01\"\ndate:   2018-05-31\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Intent\n\n- Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. \n- Template Method lets subclasses redefine certain steps of an algorithm without letting them to change the algorithm's structure.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate01.png) \n\n- AbstractClass \n  - defines abstract primitive operations that concrete subclasses define to implement steps of an algorithm. \n  - implements a template method which defines the skeleton of an algorithm. The template method calls primitive operations as well as operations defined in AbstractClass or those of other objects.\n- ConcreteClass \n  -  implements the primitive operations to carry out subclass-specific steps of the algorithm. When a concrete class is called the template method code will be executed from the base class while for each method used inside the template method will be called the implementation from the derived class.\n\n## Reference\n\n<https://www.oodesign.com/template-method-pattern.html>","slug":"2018-05-31-Template Method Pattern01","published":1,"updated":"2018-10-25T05:40:21.970Z","comments":1,"photos":[],"link":"","_id":"cjp6k65lt00eg31x7le7j9353","content":"<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><ul>\n<li>Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. </li>\n<li>Template Method lets subclasses redefine certain steps of an algorithm without letting them to change the algorithm’s structure.</li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate01.png\" alt=\"img\"> </p>\n<ul>\n<li>AbstractClass <ul>\n<li>defines abstract primitive operations that concrete subclasses define to implement steps of an algorithm. </li>\n<li>implements a template method which defines the skeleton of an algorithm. The template method calls primitive operations as well as operations defined in AbstractClass or those of other objects.</li>\n</ul>\n</li>\n<li>ConcreteClass <ul>\n<li>implements the primitive operations to carry out subclass-specific steps of the algorithm. When a concrete class is called the template method code will be executed from the base class while for each method used inside the template method will be called the implementation from the derived class.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.oodesign.com/template-method-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/template-method-pattern.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><ul>\n<li>Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. </li>\n<li>Template Method lets subclasses redefine certain steps of an algorithm without letting them to change the algorithm’s structure.</li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate01.png\" alt=\"img\"> </p>\n<ul>\n<li>AbstractClass <ul>\n<li>defines abstract primitive operations that concrete subclasses define to implement steps of an algorithm. </li>\n<li>implements a template method which defines the skeleton of an algorithm. The template method calls primitive operations as well as operations defined in AbstractClass or those of other objects.</li>\n</ul>\n</li>\n<li>ConcreteClass <ul>\n<li>implements the primitive operations to carry out subclass-specific steps of the algorithm. When a concrete class is called the template method code will be executed from the base class while for each method used inside the template method will be called the implementation from the derived class.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.oodesign.com/template-method-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/template-method-pattern.html</a></p>\n"},{"layout":"post","title":"Template Method Pattern02","date":"2018-05-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate02.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate06.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate07.png) \n\n##Reference\n\n<https://www.tutorialspoint.com/design_pattern/template_pattern.htm>","source":"_posts/2018-05-31-Template Method Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Template Method Pattern02\"\ndate:   2018-05-31\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate02.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate06.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate07.png) \n\n##Reference\n\n<https://www.tutorialspoint.com/design_pattern/template_pattern.htm>","slug":"2018-05-31-Template Method Pattern02","published":1,"updated":"2018-10-25T05:40:28.895Z","comments":1,"photos":[],"link":"","_id":"cjp6k65lv00ei31x74xrualm7","content":"<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate02.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate06.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate07.png\" alt=\"img\"> </p>\n<p>##Reference</p>\n<p><a href=\"https://www.tutorialspoint.com/design_pattern/template_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/template_pattern.htm</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate02.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate06.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmplate07.png\" alt=\"img\"> </p>\n<p>##Reference</p>\n<p><a href=\"https://www.tutorialspoint.com/design_pattern/template_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/template_pattern.htm</a></p>\n"},{"layout":"post","title":"Template Method Pattern03","date":"2018-05-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition \n\nThe Template Method Pattern defines the skeleton of an algorithm in a method, deferring some steps to subclasses. \n\nTemplate Method lets subclasses redefine certain steps of an algorithm without changing the algorithm’s structure. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/templateh01.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern01.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern03.png)\n\n## Using the hook \n\nTo use the hook, we override it in our subclass. \n\nHere, the hook controls whether the CaffeineBeverage evaluates a certain part of the algorithm; \n\nthat is, whether it adds a condiment to the beverage. \n\nHow do we know whether the customer wants the condiment? Just ask ! \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern06.png)\n\n## Reference\n\nHead First Design Pattern","source":"_posts/2018-05-31-Template Method Pattern03.md","raw":"---\nlayout: post\ntitle:  \"Template Method Pattern03\"\ndate:   2018-05-31\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition \n\nThe Template Method Pattern defines the skeleton of an algorithm in a method, deferring some steps to subclasses. \n\nTemplate Method lets subclasses redefine certain steps of an algorithm without changing the algorithm’s structure. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/templateh01.png)\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern01.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern03.png)\n\n## Using the hook \n\nTo use the hook, we override it in our subclass. \n\nHere, the hook controls whether the CaffeineBeverage evaluates a certain part of the algorithm; \n\nthat is, whether it adds a condiment to the beverage. \n\nHow do we know whether the customer wants the condiment? Just ask ! \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern06.png)\n\n## Reference\n\nHead First Design Pattern","slug":"2018-05-31-Template Method Pattern03","published":1,"updated":"2018-10-25T05:36:52.797Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ly00ek31x72400u6ci","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Template Method Pattern defines the skeleton of an algorithm in a method, deferring some steps to subclasses. </p>\n<p>Template Method lets subclasses redefine certain steps of an algorithm without changing the algorithm’s structure. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/templateh01.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern01.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern03.png\" alt=\"img\"></p>\n<h2 id=\"Using-the-hook\"><a href=\"#Using-the-hook\" class=\"headerlink\" title=\"Using the hook\"></a>Using the hook</h2><p>To use the hook, we override it in our subclass. </p>\n<p>Here, the hook controls whether the CaffeineBeverage evaluates a certain part of the algorithm; </p>\n<p>that is, whether it adds a condiment to the beverage. </p>\n<p>How do we know whether the customer wants the condiment? Just ask ! </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern06.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Template Method Pattern defines the skeleton of an algorithm in a method, deferring some steps to subclasses. </p>\n<p>Template Method lets subclasses redefine certain steps of an algorithm without changing the algorithm’s structure. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/templateh01.png\" alt=\"img\"></p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern01.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern03.png\" alt=\"img\"></p>\n<h2 id=\"Using-the-hook\"><a href=\"#Using-the-hook\" class=\"headerlink\" title=\"Using the hook\"></a>Using the hook</h2><p>To use the hook, we override it in our subclass. </p>\n<p>Here, the hook controls whether the CaffeineBeverage evaluates a certain part of the algorithm; </p>\n<p>that is, whether it adds a condiment to the beverage. </p>\n<p>How do we know whether the customer wants the condiment? Just ask ! </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tmppattern06.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Template Method Pattern04","date":"2018-05-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition \n\n전체적인 알고리즘은 상위 클래스에서 구현하면서 다른 부분은 하위 클래스에서 구현할 수 있도록 하는 디자인 패턴이다. 전체적인 알고리즘 코드를 재사용하는 데 유용하다.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/template031.png)\n\n- AbstractClass\n  - 템플릿 메서드를 정의하는 클래스\n  - 하위 클래스에 공통 알고리즘을 정의하고, 하위 클래스에서 구현될 기능을 primitive method 또는 hook method로 정의하는 클래스\n- ConcreteClass\n  - 물려받은 primitive method 나 hook method 를 구현하는 클래스\n  - 상위 클래스에서 구현된 템플릿 메서드의 일반적인 알고리즘에서 하위 클래스에 적합하게 primitive method나 hook method를 오버라이드하는 클래스\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/template032.png)\n\n- Motor \n  - AbstractClass\n- HyundaiMotor, LGMotor\n  - ConcreteClass\n- Motor 클래스의 move method \n  - template method \n- Motor 클래스의 moveMotor method \n  - primitive method\n\n## Reference\n\nJava 객체지향 디자인 패턴 <정인상, 채흥석 지음>","source":"_posts/2018-05-31-Template Method Pattern04.md","raw":"---\nlayout: post\ntitle:  \"Template Method Pattern04\"\ndate:   2018-05-31\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition \n\n전체적인 알고리즘은 상위 클래스에서 구현하면서 다른 부분은 하위 클래스에서 구현할 수 있도록 하는 디자인 패턴이다. 전체적인 알고리즘 코드를 재사용하는 데 유용하다.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/template031.png)\n\n- AbstractClass\n  - 템플릿 메서드를 정의하는 클래스\n  - 하위 클래스에 공통 알고리즘을 정의하고, 하위 클래스에서 구현될 기능을 primitive method 또는 hook method로 정의하는 클래스\n- ConcreteClass\n  - 물려받은 primitive method 나 hook method 를 구현하는 클래스\n  - 상위 클래스에서 구현된 템플릿 메서드의 일반적인 알고리즘에서 하위 클래스에 적합하게 primitive method나 hook method를 오버라이드하는 클래스\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/template032.png)\n\n- Motor \n  - AbstractClass\n- HyundaiMotor, LGMotor\n  - ConcreteClass\n- Motor 클래스의 move method \n  - template method \n- Motor 클래스의 moveMotor method \n  - primitive method\n\n## Reference\n\nJava 객체지향 디자인 패턴 <정인상, 채흥석 지음>","slug":"2018-05-31-Template Method Pattern04","published":1,"updated":"2018-10-25T05:37:01.020Z","comments":1,"photos":[],"link":"","_id":"cjp6k65m100em31x7594mle46","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>전체적인 알고리즘은 상위 클래스에서 구현하면서 다른 부분은 하위 클래스에서 구현할 수 있도록 하는 디자인 패턴이다. 전체적인 알고리즘 코드를 재사용하는 데 유용하다.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/template031.png\" alt=\"img\"></p>\n<ul>\n<li>AbstractClass<ul>\n<li>템플릿 메서드를 정의하는 클래스</li>\n<li>하위 클래스에 공통 알고리즘을 정의하고, 하위 클래스에서 구현될 기능을 primitive method 또는 hook method로 정의하는 클래스</li>\n</ul>\n</li>\n<li>ConcreteClass<ul>\n<li>물려받은 primitive method 나 hook method 를 구현하는 클래스</li>\n<li>상위 클래스에서 구현된 템플릿 메서드의 일반적인 알고리즘에서 하위 클래스에 적합하게 primitive method나 hook method를 오버라이드하는 클래스</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/template032.png\" alt=\"img\"></p>\n<ul>\n<li>Motor <ul>\n<li>AbstractClass</li>\n</ul>\n</li>\n<li>HyundaiMotor, LGMotor<ul>\n<li>ConcreteClass</li>\n</ul>\n</li>\n<li>Motor 클래스의 move method <ul>\n<li>template method </li>\n</ul>\n</li>\n<li>Motor 클래스의 moveMotor method <ul>\n<li>primitive method</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>전체적인 알고리즘은 상위 클래스에서 구현하면서 다른 부분은 하위 클래스에서 구현할 수 있도록 하는 디자인 패턴이다. 전체적인 알고리즘 코드를 재사용하는 데 유용하다.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/template031.png\" alt=\"img\"></p>\n<ul>\n<li>AbstractClass<ul>\n<li>템플릿 메서드를 정의하는 클래스</li>\n<li>하위 클래스에 공통 알고리즘을 정의하고, 하위 클래스에서 구현될 기능을 primitive method 또는 hook method로 정의하는 클래스</li>\n</ul>\n</li>\n<li>ConcreteClass<ul>\n<li>물려받은 primitive method 나 hook method 를 구현하는 클래스</li>\n<li>상위 클래스에서 구현된 템플릿 메서드의 일반적인 알고리즘에서 하위 클래스에 적합하게 primitive method나 hook method를 오버라이드하는 클래스</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/template032.png\" alt=\"img\"></p>\n<ul>\n<li>Motor <ul>\n<li>AbstractClass</li>\n</ul>\n</li>\n<li>HyundaiMotor, LGMotor<ul>\n<li>ConcreteClass</li>\n</ul>\n</li>\n<li>Motor 클래스의 move method <ul>\n<li>template method </li>\n</ul>\n</li>\n<li>Motor 클래스의 moveMotor method <ul>\n<li>primitive method</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n"},{"layout":"post","title":"Strategy Pattern01","date":"2018-06-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Motivation\n\nThere are common situations when classes differ only in their behavior. For this cases is a good idea to isolate the algorithms in separate classes in order to have the ability to select different algorithms at runtime. \n\n## Intent\n\nDefine a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern01.png) \n\n-  The context object receives requests from the client and delegates them to the strategy object. Usually the ConcreteStartegy is created by the client and passed to the context. From this point the clients interacts only with the context.\n- Strategy \n  - defines an interface common to all supported algorithms. Context uses this interface to call the algorithm defined by a ConcreteStrategy.\n- Context\n  - contains a reference to a strategy object.\n  - may define an interface that lets strategy accessing its data.\n  - The Context objects contains a reference to the ConcreteStrategy that should be used. When an operation is required then the algorithm is run from the strategy object. The Context is not aware of the strategy implementation. If necessary, addition objects can be defined to pass data from context object to strategy. \n- ConcreteStrategy \n  - each concrete strategy implements an algorithm.\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern06.png)  \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern07.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern08.png) \n\n## Reference\n\n- <https://www.oodesign.com/strategy-pattern.html>\n- <https://www.tutorialspoint.com/design_pattern/strategy_pattern.htm>","source":"_posts/2018-06-06-Strategy Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Strategy Pattern01\"\ndate:   2018-06-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Motivation\n\nThere are common situations when classes differ only in their behavior. For this cases is a good idea to isolate the algorithms in separate classes in order to have the ability to select different algorithms at runtime. \n\n## Intent\n\nDefine a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern01.png) \n\n-  The context object receives requests from the client and delegates them to the strategy object. Usually the ConcreteStartegy is created by the client and passed to the context. From this point the clients interacts only with the context.\n- Strategy \n  - defines an interface common to all supported algorithms. Context uses this interface to call the algorithm defined by a ConcreteStrategy.\n- Context\n  - contains a reference to a strategy object.\n  - may define an interface that lets strategy accessing its data.\n  - The Context objects contains a reference to the ConcreteStrategy that should be used. When an operation is required then the algorithm is run from the strategy object. The Context is not aware of the strategy implementation. If necessary, addition objects can be defined to pass data from context object to strategy. \n- ConcreteStrategy \n  - each concrete strategy implements an algorithm.\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern06.png)  \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern07.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern08.png) \n\n## Reference\n\n- <https://www.oodesign.com/strategy-pattern.html>\n- <https://www.tutorialspoint.com/design_pattern/strategy_pattern.htm>","slug":"2018-06-06-Strategy Pattern01","published":1,"updated":"2018-10-25T05:37:10.185Z","comments":1,"photos":[],"link":"","_id":"cjp6k65m300eo31x7aycrjg6o","content":"<h2 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h2><p>There are common situations when classes differ only in their behavior. For this cases is a good idea to isolate the algorithms in separate classes in order to have the ability to select different algorithms at runtime. </p>\n<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><p>Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern01.png\" alt=\"img\"> </p>\n<ul>\n<li>The context object receives requests from the client and delegates them to the strategy object. Usually the ConcreteStartegy is created by the client and passed to the context. From this point the clients interacts only with the context.</li>\n<li>Strategy <ul>\n<li>defines an interface common to all supported algorithms. Context uses this interface to call the algorithm defined by a ConcreteStrategy.</li>\n</ul>\n</li>\n<li>Context<ul>\n<li>contains a reference to a strategy object.</li>\n<li>may define an interface that lets strategy accessing its data.</li>\n<li>The Context objects contains a reference to the ConcreteStrategy that should be used. When an operation is required then the algorithm is run from the strategy object. The Context is not aware of the strategy implementation. If necessary, addition objects can be defined to pass data from context object to strategy. </li>\n</ul>\n</li>\n<li>ConcreteStrategy <ul>\n<li>each concrete strategy implements an algorithm.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern06.png\" alt=\"img\">  </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern07.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern08.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://www.oodesign.com/strategy-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/strategy-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/strategy_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/strategy_pattern.htm</a></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h2><p>There are common situations when classes differ only in their behavior. For this cases is a good idea to isolate the algorithms in separate classes in order to have the ability to select different algorithms at runtime. </p>\n<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><p>Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern01.png\" alt=\"img\"> </p>\n<ul>\n<li>The context object receives requests from the client and delegates them to the strategy object. Usually the ConcreteStartegy is created by the client and passed to the context. From this point the clients interacts only with the context.</li>\n<li>Strategy <ul>\n<li>defines an interface common to all supported algorithms. Context uses this interface to call the algorithm defined by a ConcreteStrategy.</li>\n</ul>\n</li>\n<li>Context<ul>\n<li>contains a reference to a strategy object.</li>\n<li>may define an interface that lets strategy accessing its data.</li>\n<li>The Context objects contains a reference to the ConcreteStrategy that should be used. When an operation is required then the algorithm is run from the strategy object. The Context is not aware of the strategy implementation. If necessary, addition objects can be defined to pass data from context object to strategy. </li>\n</ul>\n</li>\n<li>ConcreteStrategy <ul>\n<li>each concrete strategy implements an algorithm.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern06.png\" alt=\"img\">  </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern07.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/Strategy Pattern08.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://www.oodesign.com/strategy-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/strategy-pattern.html</a></li>\n<li><a href=\"https://www.tutorialspoint.com/design_pattern/strategy_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/strategy_pattern.htm</a></li>\n</ul>\n"},{"layout":"post","title":"Strategy Pattern03","date":"2018-06-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\n스트레지 패턴은 같은 문제를 해결하는 여러 알고리즘(방식)이 클래스별로 캡슐화되어 있고, 이들이 필요할 때 교체할 수 있도록 함으로써 동일한 문제를 다른 알고리즘으로 해결할 수 있게 하는 디자인 패턴이다.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa031.png) \n\n- Strategy \n  - 인터페이스나 추상 클래스\n  - 외부에서 동일한 방식으로 알고리즘을 호출하는 방법을 명시\n- ConcreteStrategy1, ConcreteStrategy2, ConcreteStrategy3\n  - 명시한 알고리즘을 실제로 구현한 클래스\n- Context\n  - strategy 패턴을 이용하는 역할을 수행\n  - 필요에 따라 동적으로 구체적인 전략을 바꿀수 있도록 setter method 제공\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa032.png) \n\n- Robot, Atom, TeakonV\n\n  - Context\n\n- MovingStrategy, AttackStrategy\n\n  - Strategy\n\n- WalkingStrategy, FlyingStrategy, PunchStrategy, MissileStrategy\n\n  - ConcreteStrategy\n","source":"_posts/2018-06-06-Strategy Pattern03.md","raw":"---\nlayout: post\ntitle:  \"Strategy Pattern03\"\ndate:   2018-06-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\n스트레지 패턴은 같은 문제를 해결하는 여러 알고리즘(방식)이 클래스별로 캡슐화되어 있고, 이들이 필요할 때 교체할 수 있도록 함으로써 동일한 문제를 다른 알고리즘으로 해결할 수 있게 하는 디자인 패턴이다.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa031.png) \n\n- Strategy \n  - 인터페이스나 추상 클래스\n  - 외부에서 동일한 방식으로 알고리즘을 호출하는 방법을 명시\n- ConcreteStrategy1, ConcreteStrategy2, ConcreteStrategy3\n  - 명시한 알고리즘을 실제로 구현한 클래스\n- Context\n  - strategy 패턴을 이용하는 역할을 수행\n  - 필요에 따라 동적으로 구체적인 전략을 바꿀수 있도록 setter method 제공\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa032.png) \n\n- Robot, Atom, TeakonV\n\n  - Context\n\n- MovingStrategy, AttackStrategy\n\n  - Strategy\n\n- WalkingStrategy, FlyingStrategy, PunchStrategy, MissileStrategy\n\n  - ConcreteStrategy\n","slug":"2018-06-06-Strategy Pattern03","published":1,"updated":"2018-10-25T05:37:26.617Z","comments":1,"photos":[],"link":"","_id":"cjp6k65m400eq31x7iblfqxy6","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>스트레지 패턴은 같은 문제를 해결하는 여러 알고리즘(방식)이 클래스별로 캡슐화되어 있고, 이들이 필요할 때 교체할 수 있도록 함으로써 동일한 문제를 다른 알고리즘으로 해결할 수 있게 하는 디자인 패턴이다.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa031.png\" alt=\"img\"> </p>\n<ul>\n<li>Strategy <ul>\n<li>인터페이스나 추상 클래스</li>\n<li>외부에서 동일한 방식으로 알고리즘을 호출하는 방법을 명시</li>\n</ul>\n</li>\n<li>ConcreteStrategy1, ConcreteStrategy2, ConcreteStrategy3<ul>\n<li>명시한 알고리즘을 실제로 구현한 클래스</li>\n</ul>\n</li>\n<li>Context<ul>\n<li>strategy 패턴을 이용하는 역할을 수행</li>\n<li>필요에 따라 동적으로 구체적인 전략을 바꿀수 있도록 setter method 제공</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa032.png\" alt=\"img\"> </p>\n<ul>\n<li><p>Robot, Atom, TeakonV</p>\n<ul>\n<li>Context</li>\n</ul>\n</li>\n<li><p>MovingStrategy, AttackStrategy</p>\n<ul>\n<li>Strategy</li>\n</ul>\n</li>\n<li><p>WalkingStrategy, FlyingStrategy, PunchStrategy, MissileStrategy</p>\n<ul>\n<li>ConcreteStrategy</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>스트레지 패턴은 같은 문제를 해결하는 여러 알고리즘(방식)이 클래스별로 캡슐화되어 있고, 이들이 필요할 때 교체할 수 있도록 함으로써 동일한 문제를 다른 알고리즘으로 해결할 수 있게 하는 디자인 패턴이다.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa031.png\" alt=\"img\"> </p>\n<ul>\n<li>Strategy <ul>\n<li>인터페이스나 추상 클래스</li>\n<li>외부에서 동일한 방식으로 알고리즘을 호출하는 방법을 명시</li>\n</ul>\n</li>\n<li>ConcreteStrategy1, ConcreteStrategy2, ConcreteStrategy3<ul>\n<li>명시한 알고리즘을 실제로 구현한 클래스</li>\n</ul>\n</li>\n<li>Context<ul>\n<li>strategy 패턴을 이용하는 역할을 수행</li>\n<li>필요에 따라 동적으로 구체적인 전략을 바꿀수 있도록 setter method 제공</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa032.png\" alt=\"img\"> </p>\n<ul>\n<li><p>Robot, Atom, TeakonV</p>\n<ul>\n<li>Context</li>\n</ul>\n</li>\n<li><p>MovingStrategy, AttackStrategy</p>\n<ul>\n<li>Strategy</li>\n</ul>\n</li>\n<li><p>WalkingStrategy, FlyingStrategy, PunchStrategy, MissileStrategy</p>\n<ul>\n<li>ConcreteStrategy</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Strategy Pattern02","date":"2018-06-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nThe Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. \n\nStrategy lets the algorithm vary independently from clients that use it. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa07.png)\n\n## Reference\n\nHead First Design Pattern","source":"_posts/2018-06-06-Strategy Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Strategy Pattern02\"\ndate:   2018-06-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nThe Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. \n\nStrategy lets the algorithm vary independently from clients that use it. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa07.png)\n\n## Reference\n\nHead First Design Pattern","slug":"2018-06-06-Strategy Pattern02","published":1,"updated":"2018-10-25T05:37:17.361Z","comments":1,"photos":[],"link":"","_id":"cjp6k65m600es31x7c682qjrt","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. </p>\n<p>Strategy lets the algorithm vary independently from clients that use it. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa07.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. </p>\n<p>Strategy lets the algorithm vary independently from clients that use it. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/stpa07.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Builder Pattern01","date":"2018-06-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Motivation\n\n- Builder pattern builds a complex object using simple objects and using a step by step approach. \n- This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.\n- A Builder class builds the final object step by step. This builder is independent of other objects.\n\n## Intent\n\n- Defines an instance for creating an object but letting subclasses decide which class to instantiate\n- Refers to the newly created object through a common interface\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/builderPattern01.png) \n\n- **Builder** \n  - specifies an abstract interface for creating parts of a Product object.\n- **ConcreteBuilder** \n  - constructs and puts together parts of the product by implementing the Builder interface. It defines and keeps track of the representation it creates and provides an interface for saving the product.\n- **Director**  \n  - constructs the complex object using the Builder interface.\n- **Product** \n  - represents the complex object that is being built.\n\nThe client, that may be either another object or the actual client that calls the main() method of the application, initiates the Builder and Director class. \n\nThe Builder represents the complex object that needs to be built in terms of simpler objects and types. \n\nThe constructor in the Director class receives a Builder object as a parameter from the Client and is responsible for calling the appropriate methods of the Builder class. \n\nIn order to provide the Client with an interface for all concrete Builders, the Builder class should be an abstract one. \n\nThis way you can add new types of complex objects by only defining the structure and reusing the logic for the actual construction process. \n\nThe Client is the only one that needs to know about the new types, the Director needing to know which methods of the Builder to call.\n\n## Reference\n\n<https://www.oodesign.com/builder-pattern.html>\n","source":"_posts/2018-06-08-Builder Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Builder Pattern01\"\ndate:   2018-06-08\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Motivation\n\n- Builder pattern builds a complex object using simple objects and using a step by step approach. \n- This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.\n- A Builder class builds the final object step by step. This builder is independent of other objects.\n\n## Intent\n\n- Defines an instance for creating an object but letting subclasses decide which class to instantiate\n- Refers to the newly created object through a common interface\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/builderPattern01.png) \n\n- **Builder** \n  - specifies an abstract interface for creating parts of a Product object.\n- **ConcreteBuilder** \n  - constructs and puts together parts of the product by implementing the Builder interface. It defines and keeps track of the representation it creates and provides an interface for saving the product.\n- **Director**  \n  - constructs the complex object using the Builder interface.\n- **Product** \n  - represents the complex object that is being built.\n\nThe client, that may be either another object or the actual client that calls the main() method of the application, initiates the Builder and Director class. \n\nThe Builder represents the complex object that needs to be built in terms of simpler objects and types. \n\nThe constructor in the Director class receives a Builder object as a parameter from the Client and is responsible for calling the appropriate methods of the Builder class. \n\nIn order to provide the Client with an interface for all concrete Builders, the Builder class should be an abstract one. \n\nThis way you can add new types of complex objects by only defining the structure and reusing the logic for the actual construction process. \n\nThe Client is the only one that needs to know about the new types, the Director needing to know which methods of the Builder to call.\n\n## Reference\n\n<https://www.oodesign.com/builder-pattern.html>\n","slug":"2018-06-08-Builder Pattern01","published":1,"updated":"2018-10-25T05:37:33.826Z","comments":1,"photos":[],"link":"","_id":"cjp6k65m700eu31x7h4qmuk0s","content":"<h2 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h2><ul>\n<li>Builder pattern builds a complex object using simple objects and using a step by step approach. </li>\n<li>This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.</li>\n<li>A Builder class builds the final object step by step. This builder is independent of other objects.</li>\n</ul>\n<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><ul>\n<li>Defines an instance for creating an object but letting subclasses decide which class to instantiate</li>\n<li>Refers to the newly created object through a common interface</li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/builderPattern01.png\" alt=\"img\"> </p>\n<ul>\n<li><strong>Builder</strong> <ul>\n<li>specifies an abstract interface for creating parts of a Product object.</li>\n</ul>\n</li>\n<li><strong>ConcreteBuilder</strong> <ul>\n<li>constructs and puts together parts of the product by implementing the Builder interface. It defines and keeps track of the representation it creates and provides an interface for saving the product.</li>\n</ul>\n</li>\n<li><strong>Director</strong>  <ul>\n<li>constructs the complex object using the Builder interface.</li>\n</ul>\n</li>\n<li><strong>Product</strong> <ul>\n<li>represents the complex object that is being built.</li>\n</ul>\n</li>\n</ul>\n<p>The client, that may be either another object or the actual client that calls the main() method of the application, initiates the Builder and Director class. </p>\n<p>The Builder represents the complex object that needs to be built in terms of simpler objects and types. </p>\n<p>The constructor in the Director class receives a Builder object as a parameter from the Client and is responsible for calling the appropriate methods of the Builder class. </p>\n<p>In order to provide the Client with an interface for all concrete Builders, the Builder class should be an abstract one. </p>\n<p>This way you can add new types of complex objects by only defining the structure and reusing the logic for the actual construction process. </p>\n<p>The Client is the only one that needs to know about the new types, the Director needing to know which methods of the Builder to call.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.oodesign.com/builder-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/builder-pattern.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h2><ul>\n<li>Builder pattern builds a complex object using simple objects and using a step by step approach. </li>\n<li>This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.</li>\n<li>A Builder class builds the final object step by step. This builder is independent of other objects.</li>\n</ul>\n<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><ul>\n<li>Defines an instance for creating an object but letting subclasses decide which class to instantiate</li>\n<li>Refers to the newly created object through a common interface</li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/builderPattern01.png\" alt=\"img\"> </p>\n<ul>\n<li><strong>Builder</strong> <ul>\n<li>specifies an abstract interface for creating parts of a Product object.</li>\n</ul>\n</li>\n<li><strong>ConcreteBuilder</strong> <ul>\n<li>constructs and puts together parts of the product by implementing the Builder interface. It defines and keeps track of the representation it creates and provides an interface for saving the product.</li>\n</ul>\n</li>\n<li><strong>Director</strong>  <ul>\n<li>constructs the complex object using the Builder interface.</li>\n</ul>\n</li>\n<li><strong>Product</strong> <ul>\n<li>represents the complex object that is being built.</li>\n</ul>\n</li>\n</ul>\n<p>The client, that may be either another object or the actual client that calls the main() method of the application, initiates the Builder and Director class. </p>\n<p>The Builder represents the complex object that needs to be built in terms of simpler objects and types. </p>\n<p>The constructor in the Director class receives a Builder object as a parameter from the Client and is responsible for calling the appropriate methods of the Builder class. </p>\n<p>In order to provide the Client with an interface for all concrete Builders, the Builder class should be an abstract one. </p>\n<p>This way you can add new types of complex objects by only defining the structure and reusing the logic for the actual construction process. </p>\n<p>The Client is the only one that needs to know about the new types, the Director needing to know which methods of the Builder to call.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.oodesign.com/builder-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/builder-pattern.html</a></p>\n"},{"layout":"post","title":"Builder Pattern02","date":"2018-06-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Implementation\n\nWe have considered a business case of fast-food restaurant where a typical meal could be a burger and a cold drink. \n\nBurger could be either a Veg Burger or Chicken Burger and will be packed by a wrapper. \n\nCold drink could be either a coke or pepsi and will be packed in a bottle.\n\nWe are going to create an *Item* interface representing food items such as burgers and cold drinks and concrete classes implementing the *Item* interface and a *Packing* interface representing packaging of food items and concrete classes implementing the *Packing* interface as burger would be packed in wrapper and cold drink would be packed as bottle.\n\nWe then create a *Meal* class having *ArrayList* of *Item* and a *MealBuilder* to build different types of *Meal* objects by combining *Item*. *BuilderPatternDemo*, our demo class will use *MealBuilder* to build a *Meal*.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/builderPattern02.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp01.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp06.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp07.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp08.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp09.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp10.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp11.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp12.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp13.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp14.png) \n\n## Reference\n\n<https://www.tutorialspoint.com/design_pattern/builder_pattern.htm>","source":"_posts/2018-06-08-Builder Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Builder Pattern02\"\ndate:   2018-06-08\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Implementation\n\nWe have considered a business case of fast-food restaurant where a typical meal could be a burger and a cold drink. \n\nBurger could be either a Veg Burger or Chicken Burger and will be packed by a wrapper. \n\nCold drink could be either a coke or pepsi and will be packed in a bottle.\n\nWe are going to create an *Item* interface representing food items such as burgers and cold drinks and concrete classes implementing the *Item* interface and a *Packing* interface representing packaging of food items and concrete classes implementing the *Packing* interface as burger would be packed in wrapper and cold drink would be packed as bottle.\n\nWe then create a *Meal* class having *ArrayList* of *Item* and a *MealBuilder* to build different types of *Meal* objects by combining *Item*. *BuilderPatternDemo*, our demo class will use *MealBuilder* to build a *Meal*.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/builderPattern02.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp01.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp06.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp07.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp08.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp09.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp10.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp11.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp12.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp13.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp14.png) \n\n## Reference\n\n<https://www.tutorialspoint.com/design_pattern/builder_pattern.htm>","slug":"2018-06-08-Builder Pattern02","published":1,"updated":"2018-10-25T05:37:41.568Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ma00ew31x7pn2ty733","content":"<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><p>We have considered a business case of fast-food restaurant where a typical meal could be a burger and a cold drink. </p>\n<p>Burger could be either a Veg Burger or Chicken Burger and will be packed by a wrapper. </p>\n<p>Cold drink could be either a coke or pepsi and will be packed in a bottle.</p>\n<p>We are going to create an <em>Item</em> interface representing food items such as burgers and cold drinks and concrete classes implementing the <em>Item</em> interface and a <em>Packing</em> interface representing packaging of food items and concrete classes implementing the <em>Packing</em> interface as burger would be packed in wrapper and cold drink would be packed as bottle.</p>\n<p>We then create a <em>Meal</em> class having <em>ArrayList</em> of <em>Item</em> and a <em>MealBuilder</em> to build different types of <em>Meal</em> objects by combining <em>Item</em>. <em>BuilderPatternDemo</em>, our demo class will use <em>MealBuilder</em> to build a <em>Meal</em>.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/builderPattern02.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp01.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp06.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp07.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp08.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp09.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp10.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp11.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp12.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp13.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp14.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.tutorialspoint.com/design_pattern/builder_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/builder_pattern.htm</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><p>We have considered a business case of fast-food restaurant where a typical meal could be a burger and a cold drink. </p>\n<p>Burger could be either a Veg Burger or Chicken Burger and will be packed by a wrapper. </p>\n<p>Cold drink could be either a coke or pepsi and will be packed in a bottle.</p>\n<p>We are going to create an <em>Item</em> interface representing food items such as burgers and cold drinks and concrete classes implementing the <em>Item</em> interface and a <em>Packing</em> interface representing packaging of food items and concrete classes implementing the <em>Packing</em> interface as burger would be packed in wrapper and cold drink would be packed as bottle.</p>\n<p>We then create a <em>Meal</em> class having <em>ArrayList</em> of <em>Item</em> and a <em>MealBuilder</em> to build different types of <em>Meal</em> objects by combining <em>Item</em>. <em>BuilderPatternDemo</em>, our demo class will use <em>MealBuilder</em> to build a <em>Meal</em>.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/builderPattern02.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp01.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp06.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp07.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp08.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp09.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp10.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp11.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp12.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp13.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bp14.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.tutorialspoint.com/design_pattern/builder_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/builder_pattern.htm</a></p>\n"},{"layout":"post","title":"탈출","date":"2018-06-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 문제 요약\n\n- 문자\n  - 비버 .\n  - 물 *\n  - 돌 X\n  - 비버굴 D\n  - 고슴도치 굴 S\n- 매 분 1분 마다\n  - 고슴도치\n    - 동서남북으로 이동\n    - 돌을 통과할 수 없다\n  - 물\n    - 동서남북으로 이동\n    - 비어있는 칸으로 확장\n    - 비버의 소굴로 확장할수 없다\n    - 돌을 통과할 수 없다\n\n## 풀이\n\n- 이렇게 풀면 되지 않을까?\n  - 물의 확산 :DFS\n  - 고슴도치의 이동 :BFS\n- 아니다 ! \n  - BFS 만으로 풀 수 있다\n  - 물을 먼저 Enqueue\n  - 고슴도치의 위치를 Enqueue\n  - 하나의 큐에서 진행\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt05.png)\n\n\n\n\n\n","source":"_posts/2018-06-04-탈출.md","raw":"---\nlayout: post\ntitle:  \"탈출\"\ndate:   2018-06-04\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 문제 요약\n\n- 문자\n  - 비버 .\n  - 물 *\n  - 돌 X\n  - 비버굴 D\n  - 고슴도치 굴 S\n- 매 분 1분 마다\n  - 고슴도치\n    - 동서남북으로 이동\n    - 돌을 통과할 수 없다\n  - 물\n    - 동서남북으로 이동\n    - 비어있는 칸으로 확장\n    - 비버의 소굴로 확장할수 없다\n    - 돌을 통과할 수 없다\n\n## 풀이\n\n- 이렇게 풀면 되지 않을까?\n  - 물의 확산 :DFS\n  - 고슴도치의 이동 :BFS\n- 아니다 ! \n  - BFS 만으로 풀 수 있다\n  - 물을 먼저 Enqueue\n  - 고슴도치의 위치를 Enqueue\n  - 하나의 큐에서 진행\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt05.png)\n\n\n\n\n\n","slug":"2018-06-04-탈출","published":1,"updated":"2018-06-07T10:52:34.103Z","comments":1,"photos":[],"link":"","_id":"cjp6k65md00ey31x7mqg0w5ad","content":"<h2 id=\"문제-요약\"><a href=\"#문제-요약\" class=\"headerlink\" title=\"문제 요약\"></a>문제 요약</h2><ul>\n<li>문자<ul>\n<li>비버 .</li>\n<li>물 *</li>\n<li>돌 X</li>\n<li>비버굴 D</li>\n<li>고슴도치 굴 S</li>\n</ul>\n</li>\n<li>매 분 1분 마다<ul>\n<li>고슴도치<ul>\n<li>동서남북으로 이동</li>\n<li>돌을 통과할 수 없다</li>\n</ul>\n</li>\n<li>물<ul>\n<li>동서남북으로 이동</li>\n<li>비어있는 칸으로 확장</li>\n<li>비버의 소굴로 확장할수 없다</li>\n<li>돌을 통과할 수 없다</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>이렇게 풀면 되지 않을까?<ul>\n<li>물의 확산 :DFS</li>\n<li>고슴도치의 이동 :BFS</li>\n</ul>\n</li>\n<li>아니다 ! <ul>\n<li>BFS 만으로 풀 수 있다</li>\n<li>물을 먼저 Enqueue</li>\n<li>고슴도치의 위치를 Enqueue</li>\n<li>하나의 큐에서 진행</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt05.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"문제-요약\"><a href=\"#문제-요약\" class=\"headerlink\" title=\"문제 요약\"></a>문제 요약</h2><ul>\n<li>문자<ul>\n<li>비버 .</li>\n<li>물 *</li>\n<li>돌 X</li>\n<li>비버굴 D</li>\n<li>고슴도치 굴 S</li>\n</ul>\n</li>\n<li>매 분 1분 마다<ul>\n<li>고슴도치<ul>\n<li>동서남북으로 이동</li>\n<li>돌을 통과할 수 없다</li>\n</ul>\n</li>\n<li>물<ul>\n<li>동서남북으로 이동</li>\n<li>비어있는 칸으로 확장</li>\n<li>비버의 소굴로 확장할수 없다</li>\n<li>돌을 통과할 수 없다</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>이렇게 풀면 되지 않을까?<ul>\n<li>물의 확산 :DFS</li>\n<li>고슴도치의 이동 :BFS</li>\n</ul>\n</li>\n<li>아니다 ! <ul>\n<li>BFS 만으로 풀 수 있다</li>\n<li>물을 먼저 Enqueue</li>\n<li>고슴도치의 위치를 Enqueue</li>\n<li>하나의 큐에서 진행</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/outt05.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Builder Pattern03","date":"2018-06-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition \n\nUse the Builder Pattern to encapsulate the construction of a product and allow it to be constructed in steps. \n\n##Scenario\n\nYou’ve just been asked to build a vacation planner for a new theme  park. \n\nPark guests can choose a hotel and various types of admission tickets, make restaurant reservations, and even book special events. \n\nTo create a vacation planner, you need to be able to create structures like this: \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newBuilder01.png) \n\n## You need a flexible design \n\nEach guest’s planner can vary in the number of days and types of activities it includes. \n\nFor instance, a local resident might not need a hotel, but wants to make dinner and special event reservations. Another guest needs a hotel, dinner reservations, and admission tickets. \n\nSo, you need a flexible data structure that can represent guest planners and all their variations; \n\nyou also need to follow a sequence of potentially complex steps to create the planner. \n\nHow can you provide a way to create the complex structure without mixing it with the steps for creating it? \n\n## Solution\n\nRemember Iterator? \n\nWe encapsulated the iteration into a separate object and hid the internal representation of the collection from the client. \n\nIt’s the same idea here: \n\nwe encapsulate the creation of the trip planner in an object (let’s call it a builder), \n\nand have our client ask the builder to construct the trip planner structure for it. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newBuilder02.png) \n\n## Benefits\n\n- Encapsulates the way a complex object is constructed. \n- Allows objects to be constructed in a multistep and varying process (as opposed to one step factories). \n- Hides the internal representation of the product from the client. \n- Product implementations can be swapped in and out because the client only sees an abstract interface. \n\n## Reference\n\nHead First Design Pattern","source":"_posts/2018-06-08-Builder Pattern03.md","raw":"---\nlayout: post\ntitle:  \"Builder Pattern03\"\ndate:   2018-06-08\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition \n\nUse the Builder Pattern to encapsulate the construction of a product and allow it to be constructed in steps. \n\n##Scenario\n\nYou’ve just been asked to build a vacation planner for a new theme  park. \n\nPark guests can choose a hotel and various types of admission tickets, make restaurant reservations, and even book special events. \n\nTo create a vacation planner, you need to be able to create structures like this: \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newBuilder01.png) \n\n## You need a flexible design \n\nEach guest’s planner can vary in the number of days and types of activities it includes. \n\nFor instance, a local resident might not need a hotel, but wants to make dinner and special event reservations. Another guest needs a hotel, dinner reservations, and admission tickets. \n\nSo, you need a flexible data structure that can represent guest planners and all their variations; \n\nyou also need to follow a sequence of potentially complex steps to create the planner. \n\nHow can you provide a way to create the complex structure without mixing it with the steps for creating it? \n\n## Solution\n\nRemember Iterator? \n\nWe encapsulated the iteration into a separate object and hid the internal representation of the collection from the client. \n\nIt’s the same idea here: \n\nwe encapsulate the creation of the trip planner in an object (let’s call it a builder), \n\nand have our client ask the builder to construct the trip planner structure for it. \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newBuilder02.png) \n\n## Benefits\n\n- Encapsulates the way a complex object is constructed. \n- Allows objects to be constructed in a multistep and varying process (as opposed to one step factories). \n- Hides the internal representation of the product from the client. \n- Product implementations can be swapped in and out because the client only sees an abstract interface. \n\n## Reference\n\nHead First Design Pattern","slug":"2018-06-08-Builder Pattern03","published":1,"updated":"2018-10-25T05:37:52.053Z","comments":1,"photos":[],"link":"","_id":"cjp6k65mh00f031x7fmpt0htf","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Builder Pattern to encapsulate the construction of a product and allow it to be constructed in steps. </p>\n<p>##Scenario</p>\n<p>You’ve just been asked to build a vacation planner for a new theme  park. </p>\n<p>Park guests can choose a hotel and various types of admission tickets, make restaurant reservations, and even book special events. </p>\n<p>To create a vacation planner, you need to be able to create structures like this: </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newBuilder01.png\" alt=\"img\"> </p>\n<h2 id=\"You-need-a-flexible-design\"><a href=\"#You-need-a-flexible-design\" class=\"headerlink\" title=\"You need a flexible design\"></a>You need a flexible design</h2><p>Each guest’s planner can vary in the number of days and types of activities it includes. </p>\n<p>For instance, a local resident might not need a hotel, but wants to make dinner and special event reservations. Another guest needs a hotel, dinner reservations, and admission tickets. </p>\n<p>So, you need a flexible data structure that can represent guest planners and all their variations; </p>\n<p>you also need to follow a sequence of potentially complex steps to create the planner. </p>\n<p>How can you provide a way to create the complex structure without mixing it with the steps for creating it? </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>Remember Iterator? </p>\n<p>We encapsulated the iteration into a separate object and hid the internal representation of the collection from the client. </p>\n<p>It’s the same idea here: </p>\n<p>we encapsulate the creation of the trip planner in an object (let’s call it a builder), </p>\n<p>and have our client ask the builder to construct the trip planner structure for it. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newBuilder02.png\" alt=\"img\"> </p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Encapsulates the way a complex object is constructed. </li>\n<li>Allows objects to be constructed in a multistep and varying process (as opposed to one step factories). </li>\n<li>Hides the internal representation of the product from the client. </li>\n<li>Product implementations can be swapped in and out because the client only sees an abstract interface. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Builder Pattern to encapsulate the construction of a product and allow it to be constructed in steps. </p>\n<p>##Scenario</p>\n<p>You’ve just been asked to build a vacation planner for a new theme  park. </p>\n<p>Park guests can choose a hotel and various types of admission tickets, make restaurant reservations, and even book special events. </p>\n<p>To create a vacation planner, you need to be able to create structures like this: </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newBuilder01.png\" alt=\"img\"> </p>\n<h2 id=\"You-need-a-flexible-design\"><a href=\"#You-need-a-flexible-design\" class=\"headerlink\" title=\"You need a flexible design\"></a>You need a flexible design</h2><p>Each guest’s planner can vary in the number of days and types of activities it includes. </p>\n<p>For instance, a local resident might not need a hotel, but wants to make dinner and special event reservations. Another guest needs a hotel, dinner reservations, and admission tickets. </p>\n<p>So, you need a flexible data structure that can represent guest planners and all their variations; </p>\n<p>you also need to follow a sequence of potentially complex steps to create the planner. </p>\n<p>How can you provide a way to create the complex structure without mixing it with the steps for creating it? </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>Remember Iterator? </p>\n<p>We encapsulated the iteration into a separate object and hid the internal representation of the collection from the client. </p>\n<p>It’s the same idea here: </p>\n<p>we encapsulate the creation of the trip planner in an object (let’s call it a builder), </p>\n<p>and have our client ask the builder to construct the trip planner structure for it. </p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newBuilder02.png\" alt=\"img\"> </p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Encapsulates the way a complex object is constructed. </li>\n<li>Allows objects to be constructed in a multistep and varying process (as opposed to one step factories). </li>\n<li>Hides the internal representation of the product from the client. </li>\n<li>Product implementations can be swapped in and out because the client only sees an abstract interface. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Flyweight Pattern01","date":"2018-06-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Motivation\n\nSome programs require a large number of objects that have some shared state among them. \n\nConsider for example a game of war, were there is a large number of soldier objects; \n\na soldier object maintain the graphical representation of a soldier, soldier behavior such as motion, and firing weapons, in addition soldier's health and location on the war terrain. \n\nCreating a large number of soldier objects is a necessity however it would incur a huge memory cost. \n\nNote that although the representation and behavior of a soldier is the same their health and location can vary greatly.\n\n## Intent\n\nTo use sharing to support a large number of objects that have part of their internal state in common where the other part of state can vary.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/FlyweightPattern01.png) \n\n- **Flyweight**\n  - Declares an interface through which flyweights can receive and act on extrinsic state.\n- **ConcreteFlyweight**\n  - Implements the Flyweight interface and stores intrinsic state. A ConcreteFlyweight object must be sharable. The Concrete flyweight object must maintain state that it is intrinsic to it, and must be able to manipulate state that is extrinsic. In the war game example graphical representation is an intrinsic state, where location and health states are extrinsic. Soldier moves, the motion behavior manipulates the external state (location) to create a new location.\n- **FlyweightFactory**  \n  - The factory creates and manages flyweight objects. In addition the factory ensures sharing of the flyweight objects. The factory maintains a pool of different flyweight objects and returns an object from the pool if it is already created, adds one to the pool and returns it in case it is new.\n    In the war example a Soldier Flyweight factory can create two types of flyweights : a Soldier flyweight, as well as a Colonel Flyweight. When the Client asks the Factory for a soldier, the factory checks to see if there is a soldier in the pool, if there is, it is returned to the client, if there is no soldier in pool, a soldier is created, added to pool, and returned to the client, the next time a client asks for a soldier, the soldier created previously is returned, no new soldier is created.\n- **Client**\n  -  A client maintains references to flyweights in addition to computing and maintaining extrinsic state\n\n- A client needs a flyweight object; it calls the factory to get the flyweight object. The factory checks a pool of flyweights to determine if a flyweight object of the requested type is in the pool, if there is, the reference to that object is returned. If there is no object of the required type, the factory creates a flyweight of the requested type, adds it to the pool, and returns a reference to the flyweight. The flyweight maintains intrinsic state (state that is shared among the large number of objects that we have created the flyweight for) and provides methods to manipulate external state (State that vary from object to object and is not common among the objects we have created the flyweight for).\n\n## Reference\n\n<https://www.oodesign.com/flyweight-pattern.html>","source":"_posts/2018-06-08-Flyweight Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Flyweight Pattern01\"\ndate:   2018-06-08\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Motivation\n\nSome programs require a large number of objects that have some shared state among them. \n\nConsider for example a game of war, were there is a large number of soldier objects; \n\na soldier object maintain the graphical representation of a soldier, soldier behavior such as motion, and firing weapons, in addition soldier's health and location on the war terrain. \n\nCreating a large number of soldier objects is a necessity however it would incur a huge memory cost. \n\nNote that although the representation and behavior of a soldier is the same their health and location can vary greatly.\n\n## Intent\n\nTo use sharing to support a large number of objects that have part of their internal state in common where the other part of state can vary.\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/FlyweightPattern01.png) \n\n- **Flyweight**\n  - Declares an interface through which flyweights can receive and act on extrinsic state.\n- **ConcreteFlyweight**\n  - Implements the Flyweight interface and stores intrinsic state. A ConcreteFlyweight object must be sharable. The Concrete flyweight object must maintain state that it is intrinsic to it, and must be able to manipulate state that is extrinsic. In the war game example graphical representation is an intrinsic state, where location and health states are extrinsic. Soldier moves, the motion behavior manipulates the external state (location) to create a new location.\n- **FlyweightFactory**  \n  - The factory creates and manages flyweight objects. In addition the factory ensures sharing of the flyweight objects. The factory maintains a pool of different flyweight objects and returns an object from the pool if it is already created, adds one to the pool and returns it in case it is new.\n    In the war example a Soldier Flyweight factory can create two types of flyweights : a Soldier flyweight, as well as a Colonel Flyweight. When the Client asks the Factory for a soldier, the factory checks to see if there is a soldier in the pool, if there is, it is returned to the client, if there is no soldier in pool, a soldier is created, added to pool, and returned to the client, the next time a client asks for a soldier, the soldier created previously is returned, no new soldier is created.\n- **Client**\n  -  A client maintains references to flyweights in addition to computing and maintaining extrinsic state\n\n- A client needs a flyweight object; it calls the factory to get the flyweight object. The factory checks a pool of flyweights to determine if a flyweight object of the requested type is in the pool, if there is, the reference to that object is returned. If there is no object of the required type, the factory creates a flyweight of the requested type, adds it to the pool, and returns a reference to the flyweight. The flyweight maintains intrinsic state (state that is shared among the large number of objects that we have created the flyweight for) and provides methods to manipulate external state (State that vary from object to object and is not common among the objects we have created the flyweight for).\n\n## Reference\n\n<https://www.oodesign.com/flyweight-pattern.html>","slug":"2018-06-08-Flyweight Pattern01","published":1,"updated":"2018-10-25T05:37:59.489Z","comments":1,"photos":[],"link":"","_id":"cjp6k65mj00f231x784j6l00e","content":"<h2 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h2><p>Some programs require a large number of objects that have some shared state among them. </p>\n<p>Consider for example a game of war, were there is a large number of soldier objects; </p>\n<p>a soldier object maintain the graphical representation of a soldier, soldier behavior such as motion, and firing weapons, in addition soldier’s health and location on the war terrain. </p>\n<p>Creating a large number of soldier objects is a necessity however it would incur a huge memory cost. </p>\n<p>Note that although the representation and behavior of a soldier is the same their health and location can vary greatly.</p>\n<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><p>To use sharing to support a large number of objects that have part of their internal state in common where the other part of state can vary.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/FlyweightPattern01.png\" alt=\"img\"> </p>\n<ul>\n<li><strong>Flyweight</strong><ul>\n<li>Declares an interface through which flyweights can receive and act on extrinsic state.</li>\n</ul>\n</li>\n<li><strong>ConcreteFlyweight</strong><ul>\n<li>Implements the Flyweight interface and stores intrinsic state. A ConcreteFlyweight object must be sharable. The Concrete flyweight object must maintain state that it is intrinsic to it, and must be able to manipulate state that is extrinsic. In the war game example graphical representation is an intrinsic state, where location and health states are extrinsic. Soldier moves, the motion behavior manipulates the external state (location) to create a new location.</li>\n</ul>\n</li>\n<li><strong>FlyweightFactory</strong>  <ul>\n<li>The factory creates and manages flyweight objects. In addition the factory ensures sharing of the flyweight objects. The factory maintains a pool of different flyweight objects and returns an object from the pool if it is already created, adds one to the pool and returns it in case it is new.<br>In the war example a Soldier Flyweight factory can create two types of flyweights : a Soldier flyweight, as well as a Colonel Flyweight. When the Client asks the Factory for a soldier, the factory checks to see if there is a soldier in the pool, if there is, it is returned to the client, if there is no soldier in pool, a soldier is created, added to pool, and returned to the client, the next time a client asks for a soldier, the soldier created previously is returned, no new soldier is created.</li>\n</ul>\n</li>\n<li><p><strong>Client</strong></p>\n<ul>\n<li>A client maintains references to flyweights in addition to computing and maintaining extrinsic state</li>\n</ul>\n</li>\n<li><p>A client needs a flyweight object; it calls the factory to get the flyweight object. The factory checks a pool of flyweights to determine if a flyweight object of the requested type is in the pool, if there is, the reference to that object is returned. If there is no object of the required type, the factory creates a flyweight of the requested type, adds it to the pool, and returns a reference to the flyweight. The flyweight maintains intrinsic state (state that is shared among the large number of objects that we have created the flyweight for) and provides methods to manipulate external state (State that vary from object to object and is not common among the objects we have created the flyweight for).</p>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.oodesign.com/flyweight-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/flyweight-pattern.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h2><p>Some programs require a large number of objects that have some shared state among them. </p>\n<p>Consider for example a game of war, were there is a large number of soldier objects; </p>\n<p>a soldier object maintain the graphical representation of a soldier, soldier behavior such as motion, and firing weapons, in addition soldier’s health and location on the war terrain. </p>\n<p>Creating a large number of soldier objects is a necessity however it would incur a huge memory cost. </p>\n<p>Note that although the representation and behavior of a soldier is the same their health and location can vary greatly.</p>\n<h2 id=\"Intent\"><a href=\"#Intent\" class=\"headerlink\" title=\"Intent\"></a>Intent</h2><p>To use sharing to support a large number of objects that have part of their internal state in common where the other part of state can vary.</p>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/FlyweightPattern01.png\" alt=\"img\"> </p>\n<ul>\n<li><strong>Flyweight</strong><ul>\n<li>Declares an interface through which flyweights can receive and act on extrinsic state.</li>\n</ul>\n</li>\n<li><strong>ConcreteFlyweight</strong><ul>\n<li>Implements the Flyweight interface and stores intrinsic state. A ConcreteFlyweight object must be sharable. The Concrete flyweight object must maintain state that it is intrinsic to it, and must be able to manipulate state that is extrinsic. In the war game example graphical representation is an intrinsic state, where location and health states are extrinsic. Soldier moves, the motion behavior manipulates the external state (location) to create a new location.</li>\n</ul>\n</li>\n<li><strong>FlyweightFactory</strong>  <ul>\n<li>The factory creates and manages flyweight objects. In addition the factory ensures sharing of the flyweight objects. The factory maintains a pool of different flyweight objects and returns an object from the pool if it is already created, adds one to the pool and returns it in case it is new.<br>In the war example a Soldier Flyweight factory can create two types of flyweights : a Soldier flyweight, as well as a Colonel Flyweight. When the Client asks the Factory for a soldier, the factory checks to see if there is a soldier in the pool, if there is, it is returned to the client, if there is no soldier in pool, a soldier is created, added to pool, and returned to the client, the next time a client asks for a soldier, the soldier created previously is returned, no new soldier is created.</li>\n</ul>\n</li>\n<li><p><strong>Client</strong></p>\n<ul>\n<li>A client maintains references to flyweights in addition to computing and maintaining extrinsic state</li>\n</ul>\n</li>\n<li><p>A client needs a flyweight object; it calls the factory to get the flyweight object. The factory checks a pool of flyweights to determine if a flyweight object of the requested type is in the pool, if there is, the reference to that object is returned. If there is no object of the required type, the factory creates a flyweight of the requested type, adds it to the pool, and returns a reference to the flyweight. The flyweight maintains intrinsic state (state that is shared among the large number of objects that we have created the flyweight for) and provides methods to manipulate external state (State that vary from object to object and is not common among the objects we have created the flyweight for).</p>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.oodesign.com/flyweight-pattern.html\" target=\"_blank\" rel=\"noopener\">https://www.oodesign.com/flyweight-pattern.html</a></p>\n"},{"layout":"post","title":"Flyweight Pattern02","date":"2018-06-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Implementation\n\nWe are going to create a *Shape* interface and concrete class *Circle* implementing the *Shape* interface.\n\n A factory class *ShapeFactory* is defined as a next step.\n\n*ShapeFactory* has a *HashMap* of *Circle* having key as color of the *Circle* object. \n\nWhenever a request comes to create a circle of particular color to *ShapeFactory*, \n\nit checks the circle object in its *HashMap*, if object of *Circle*found, that object is returned otherwise a new object is created, stored in hashmap for future use, and returned to client.\n\n*FlyWeightPatternDemo*, our demo class, will use *ShapeFactory* to get a *Shape*object. \n\nIt will pass information (*red / green / blue/ black / white*) to *ShapeFactory* to get the circle of desired color it needs.\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight011.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight022.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight033.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight044.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight055.png)  \n\n## Reference\n\n<https://www.tutorialspoint.com/design_pattern/flyweight_pattern.htm>","source":"_posts/2018-06-08-Flyweight Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Flyweight Pattern02\"\ndate:   2018-06-08\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Implementation\n\nWe are going to create a *Shape* interface and concrete class *Circle* implementing the *Shape* interface.\n\n A factory class *ShapeFactory* is defined as a next step.\n\n*ShapeFactory* has a *HashMap* of *Circle* having key as color of the *Circle* object. \n\nWhenever a request comes to create a circle of particular color to *ShapeFactory*, \n\nit checks the circle object in its *HashMap*, if object of *Circle*found, that object is returned otherwise a new object is created, stored in hashmap for future use, and returned to client.\n\n*FlyWeightPatternDemo*, our demo class, will use *ShapeFactory* to get a *Shape*object. \n\nIt will pass information (*red / green / blue/ black / white*) to *ShapeFactory* to get the circle of desired color it needs.\n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight011.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight022.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight033.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight044.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight055.png)  \n\n## Reference\n\n<https://www.tutorialspoint.com/design_pattern/flyweight_pattern.htm>","slug":"2018-06-08-Flyweight Pattern02","published":1,"updated":"2018-10-25T05:38:06.247Z","comments":1,"photos":[],"link":"","_id":"cjp6k65mk00f431x7khbealpv","content":"<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><p>We are going to create a <em>Shape</em> interface and concrete class <em>Circle</em> implementing the <em>Shape</em> interface.</p>\n<p> A factory class <em>ShapeFactory</em> is defined as a next step.</p>\n<p><em>ShapeFactory</em> has a <em>HashMap</em> of <em>Circle</em> having key as color of the <em>Circle</em> object. </p>\n<p>Whenever a request comes to create a circle of particular color to <em>ShapeFactory</em>, </p>\n<p>it checks the circle object in its <em>HashMap</em>, if object of <em>Circle</em>found, that object is returned otherwise a new object is created, stored in hashmap for future use, and returned to client.</p>\n<p><em>FlyWeightPatternDemo</em>, our demo class, will use <em>ShapeFactory</em> to get a <em>Shape</em>object. </p>\n<p>It will pass information (<em>red / green / blue/ black / white</em>) to <em>ShapeFactory</em> to get the circle of desired color it needs.</p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight022.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight033.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight044.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight055.png\" alt=\"img\">  </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.tutorialspoint.com/design_pattern/flyweight_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/flyweight_pattern.htm</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><p>We are going to create a <em>Shape</em> interface and concrete class <em>Circle</em> implementing the <em>Shape</em> interface.</p>\n<p> A factory class <em>ShapeFactory</em> is defined as a next step.</p>\n<p><em>ShapeFactory</em> has a <em>HashMap</em> of <em>Circle</em> having key as color of the <em>Circle</em> object. </p>\n<p>Whenever a request comes to create a circle of particular color to <em>ShapeFactory</em>, </p>\n<p>it checks the circle object in its <em>HashMap</em>, if object of <em>Circle</em>found, that object is returned otherwise a new object is created, stored in hashmap for future use, and returned to client.</p>\n<p><em>FlyWeightPatternDemo</em>, our demo class, will use <em>ShapeFactory</em> to get a <em>Shape</em>object. </p>\n<p>It will pass information (<em>red / green / blue/ black / white</em>) to <em>ShapeFactory</em> to get the circle of desired color it needs.</p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight022.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight033.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight044.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flyweight055.png\" alt=\"img\">  </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.tutorialspoint.com/design_pattern/flyweight_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/flyweight_pattern.htm</a></p>\n"},{"layout":"post","title":"Flyweight Pattern03","date":"2018-06-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nUse the Flyweight Pattern when one instance of a class can be used to provide many “virtual instances.” \n\n## Scenario \n\nYou want to add trees as objects in your hot new landscape design application. \n\nIn your application, trees don’t really do very much; \n\nthey have an X-Y location, and they can draw themselves dynamically, depending on how old they are. \n\nThe thing is, a user might want to have lots and lots of trees in one of their home landscape designs. \n\nIt might look something like this: \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fly031.png)\n\n## dilemma \n\nWhen they create large groves of trees, the app starts getting sluggish... \n\n## Solution\n\nWhat if, instead of having thousands of Tree objects, \n\nyou could redesign your system so that you’ve got only one instance of Tree, and a client object that maintains the state of ALL your trees? \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fly032.png)\n\n## Benefits\n\n- Reduces the number of object instances at runtime, saving memory. \n- Centralizes state for many “virtual” objects into a single location. \n\n## Reference\n\nHead First Design Pattern","source":"_posts/2018-06-08-Flyweight Pattern03.md","raw":"---\nlayout: post\ntitle:  \"Flyweight Pattern03\"\ndate:   2018-06-08\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nUse the Flyweight Pattern when one instance of a class can be used to provide many “virtual instances.” \n\n## Scenario \n\nYou want to add trees as objects in your hot new landscape design application. \n\nIn your application, trees don’t really do very much; \n\nthey have an X-Y location, and they can draw themselves dynamically, depending on how old they are. \n\nThe thing is, a user might want to have lots and lots of trees in one of their home landscape designs. \n\nIt might look something like this: \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fly031.png)\n\n## dilemma \n\nWhen they create large groves of trees, the app starts getting sluggish... \n\n## Solution\n\nWhat if, instead of having thousands of Tree objects, \n\nyou could redesign your system so that you’ve got only one instance of Tree, and a client object that maintains the state of ALL your trees? \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fly032.png)\n\n## Benefits\n\n- Reduces the number of object instances at runtime, saving memory. \n- Centralizes state for many “virtual” objects into a single location. \n\n## Reference\n\nHead First Design Pattern","slug":"2018-06-08-Flyweight Pattern03","published":1,"updated":"2018-10-25T05:38:12.135Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ml00f631x7wsw1nk67","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Flyweight Pattern when one instance of a class can be used to provide many “virtual instances.” </p>\n<h2 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario\"></a>Scenario</h2><p>You want to add trees as objects in your hot new landscape design application. </p>\n<p>In your application, trees don’t really do very much; </p>\n<p>they have an X-Y location, and they can draw themselves dynamically, depending on how old they are. </p>\n<p>The thing is, a user might want to have lots and lots of trees in one of their home landscape designs. </p>\n<p>It might look something like this: </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fly031.png\" alt=\"img\"></p>\n<h2 id=\"dilemma\"><a href=\"#dilemma\" class=\"headerlink\" title=\"dilemma\"></a>dilemma</h2><p>When they create large groves of trees, the app starts getting sluggish… </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>What if, instead of having thousands of Tree objects, </p>\n<p>you could redesign your system so that you’ve got only one instance of Tree, and a client object that maintains the state of ALL your trees? </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fly032.png\" alt=\"img\"></p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Reduces the number of object instances at runtime, saving memory. </li>\n<li>Centralizes state for many “virtual” objects into a single location. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>Use the Flyweight Pattern when one instance of a class can be used to provide many “virtual instances.” </p>\n<h2 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario\"></a>Scenario</h2><p>You want to add trees as objects in your hot new landscape design application. </p>\n<p>In your application, trees don’t really do very much; </p>\n<p>they have an X-Y location, and they can draw themselves dynamically, depending on how old they are. </p>\n<p>The thing is, a user might want to have lots and lots of trees in one of their home landscape designs. </p>\n<p>It might look something like this: </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fly031.png\" alt=\"img\"></p>\n<h2 id=\"dilemma\"><a href=\"#dilemma\" class=\"headerlink\" title=\"dilemma\"></a>dilemma</h2><p>When they create large groves of trees, the app starts getting sluggish… </p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>What if, instead of having thousands of Tree objects, </p>\n<p>you could redesign your system so that you’ve got only one instance of Tree, and a client object that maintains the state of ALL your trees? </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fly032.png\" alt=\"img\"></p>\n<h2 id=\"Benefits\"><a href=\"#Benefits\" class=\"headerlink\" title=\"Benefits\"></a>Benefits</h2><ul>\n<li>Reduces the number of object instances at runtime, saving memory. </li>\n<li>Centralizes state for many “virtual” objects into a single location. </li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Command Pattern01","date":"2018-06-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nThe Command Pattern encapsulates a request as an object, \n\nthereby letting you parameterize other objects with different requests, queue or log requests, and support undoable operations.\n\n## Explanation\n\n- Let’s step through this. We know that a command object encapsulates a request by binding together a set of actions on a specific receiver. To achieve this, it packages the actions and the receiver up into an object that exposes just one method, execute(). When called, execute() causes the actions to be invoked on the receiver. From the outside, no other objects really know what actions get performed on what receiver; they just know that if they call the execute() method, their request will be serviced. \n- We’ve also seen a couple examples of parameterizing an object with a command. Back at the diner, the Waitress was parameterized with multiple orders throughout the day. In the simple remote control, we first loaded the button slot with a “light on” command and then later replaced it with a “garage door open” command. Like the Waitress, your remote slot didn’t care what command object it had, as long as it implemented the Command interface. \n\n- What we haven’t encountered yet is using commands to implement queues and logs and support undo operations. Don’t worry, those are pretty straightforward extensions of the basic Command Pattern and we will get to them soon. We can also easily support what’s known as the Meta Command Pattern once we have the basics in place. The Meta Command Pattern allows you to create macros of commands so that you can execute multiple commands at once.  \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern01.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern06.png) \n\n## Undo\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern07.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern08.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern09.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern10.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern11.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern12.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern13.png) \n\n## Reference\n\nHead First Design Pattern\n\n","source":"_posts/2018-06-11-Command Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Command Pattern01\"\ndate:   2018-06-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nThe Command Pattern encapsulates a request as an object, \n\nthereby letting you parameterize other objects with different requests, queue or log requests, and support undoable operations.\n\n## Explanation\n\n- Let’s step through this. We know that a command object encapsulates a request by binding together a set of actions on a specific receiver. To achieve this, it packages the actions and the receiver up into an object that exposes just one method, execute(). When called, execute() causes the actions to be invoked on the receiver. From the outside, no other objects really know what actions get performed on what receiver; they just know that if they call the execute() method, their request will be serviced. \n- We’ve also seen a couple examples of parameterizing an object with a command. Back at the diner, the Waitress was parameterized with multiple orders throughout the day. In the simple remote control, we first loaded the button slot with a “light on” command and then later replaced it with a “garage door open” command. Like the Waitress, your remote slot didn’t care what command object it had, as long as it implemented the Command interface. \n\n- What we haven’t encountered yet is using commands to implement queues and logs and support undo operations. Don’t worry, those are pretty straightforward extensions of the basic Command Pattern and we will get to them soon. We can also easily support what’s known as the Meta Command Pattern once we have the basics in place. The Meta Command Pattern allows you to create macros of commands so that you can execute multiple commands at once.  \n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern01.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern02.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern03.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern05.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern06.png) \n\n## Undo\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern07.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern08.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern09.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern10.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern11.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern12.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern13.png) \n\n## Reference\n\nHead First Design Pattern\n\n","slug":"2018-06-11-Command Pattern01","published":1,"updated":"2018-10-25T05:38:18.129Z","comments":1,"photos":[],"link":"","_id":"cjp6k65mm00f831x7xv414615","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Command Pattern encapsulates a request as an object, </p>\n<p>thereby letting you parameterize other objects with different requests, queue or log requests, and support undoable operations.</p>\n<h2 id=\"Explanation\"><a href=\"#Explanation\" class=\"headerlink\" title=\"Explanation\"></a>Explanation</h2><ul>\n<li>Let’s step through this. We know that a command object encapsulates a request by binding together a set of actions on a specific receiver. To achieve this, it packages the actions and the receiver up into an object that exposes just one method, execute(). When called, execute() causes the actions to be invoked on the receiver. From the outside, no other objects really know what actions get performed on what receiver; they just know that if they call the execute() method, their request will be serviced. </li>\n<li><p>We’ve also seen a couple examples of parameterizing an object with a command. Back at the diner, the Waitress was parameterized with multiple orders throughout the day. In the simple remote control, we first loaded the button slot with a “light on” command and then later replaced it with a “garage door open” command. Like the Waitress, your remote slot didn’t care what command object it had, as long as it implemented the Command interface. </p>\n</li>\n<li><p>What we haven’t encountered yet is using commands to implement queues and logs and support undo operations. Don’t worry, those are pretty straightforward extensions of the basic Command Pattern and we will get to them soon. We can also easily support what’s known as the Meta Command Pattern once we have the basics in place. The Meta Command Pattern allows you to create macros of commands so that you can execute multiple commands at once.  </p>\n</li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern01.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern06.png\" alt=\"img\"> </p>\n<h2 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern07.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern08.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern09.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern10.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern11.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern12.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern13.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Command Pattern encapsulates a request as an object, </p>\n<p>thereby letting you parameterize other objects with different requests, queue or log requests, and support undoable operations.</p>\n<h2 id=\"Explanation\"><a href=\"#Explanation\" class=\"headerlink\" title=\"Explanation\"></a>Explanation</h2><ul>\n<li>Let’s step through this. We know that a command object encapsulates a request by binding together a set of actions on a specific receiver. To achieve this, it packages the actions and the receiver up into an object that exposes just one method, execute(). When called, execute() causes the actions to be invoked on the receiver. From the outside, no other objects really know what actions get performed on what receiver; they just know that if they call the execute() method, their request will be serviced. </li>\n<li><p>We’ve also seen a couple examples of parameterizing an object with a command. Back at the diner, the Waitress was parameterized with multiple orders throughout the day. In the simple remote control, we first loaded the button slot with a “light on” command and then later replaced it with a “garage door open” command. Like the Waitress, your remote slot didn’t care what command object it had, as long as it implemented the Command interface. </p>\n</li>\n<li><p>What we haven’t encountered yet is using commands to implement queues and logs and support undo operations. Don’t worry, those are pretty straightforward extensions of the basic Command Pattern and we will get to them soon. We can also easily support what’s known as the Meta Command Pattern once we have the basics in place. The Meta Command Pattern allows you to create macros of commands so that you can execute multiple commands at once.  </p>\n</li>\n</ul>\n<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern01.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern02.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern03.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern05.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern06.png\" alt=\"img\"> </p>\n<h2 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern07.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern08.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern09.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern10.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern11.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern12.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/commandPattern13.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Command Pattern02","date":"2018-06-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command01.png) \n\n## Code\n\n- Create a command interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command02.png) \n\n- Create a request class.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command03.png) \n\n- Create concrete classes implementing the *Order* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command05.png) \n\n- Create command invoker class.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command06.png) \n\n- Use the Broker class to take and execute commands.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command07.png) \n\n- Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command08.png) \n\n## Reference\n\n<https://www.tutorialspoint.com/design_pattern/command_pattern.htm>\n\n","source":"_posts/2018-06-11-Command Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Command Pattern02\"\ndate:   2018-06-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command01.png) \n\n## Code\n\n- Create a command interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command02.png) \n\n- Create a request class.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command03.png) \n\n- Create concrete classes implementing the *Order* interface.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command05.png) \n\n- Create command invoker class.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command06.png) \n\n- Use the Broker class to take and execute commands.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command07.png) \n\n- Result\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command08.png) \n\n## Reference\n\n<https://www.tutorialspoint.com/design_pattern/command_pattern.htm>\n\n","slug":"2018-06-11-Command Pattern02","published":1,"updated":"2018-10-25T05:38:24.510Z","comments":1,"photos":[],"link":"","_id":"cjp6k65mq00fa31x7dsv3dq5l","content":"<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command01.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><ul>\n<li>Create a command interface.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command02.png\" alt=\"img\"> </p>\n<ul>\n<li>Create a request class.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command03.png\" alt=\"img\"> </p>\n<ul>\n<li>Create concrete classes implementing the <em>Order</em> interface.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command05.png\" alt=\"img\"> </p>\n<ul>\n<li>Create command invoker class.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command06.png\" alt=\"img\"> </p>\n<ul>\n<li>Use the Broker class to take and execute commands.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command07.png\" alt=\"img\"> </p>\n<ul>\n<li>Result</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command08.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.tutorialspoint.com/design_pattern/command_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/command_pattern.htm</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command01.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><ul>\n<li>Create a command interface.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command02.png\" alt=\"img\"> </p>\n<ul>\n<li>Create a request class.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command03.png\" alt=\"img\"> </p>\n<ul>\n<li>Create concrete classes implementing the <em>Order</em> interface.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command05.png\" alt=\"img\"> </p>\n<ul>\n<li>Create command invoker class.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command06.png\" alt=\"img\"> </p>\n<ul>\n<li>Use the Broker class to take and execute commands.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command07.png\" alt=\"img\"> </p>\n<ul>\n<li>Result</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/command08.png\" alt=\"img\"> </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.tutorialspoint.com/design_pattern/command_pattern.htm\" target=\"_blank\" rel=\"noopener\">https://www.tutorialspoint.com/design_pattern/command_pattern.htm</a></p>\n"},{"layout":"post","title":"Decorator Pattern01","date":"2018-06-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nThe Decorator Pattern attaches additional responsibilities to an object dynamically. \n\nDecorators provide a flexible alternative to subclassing for extending functionality. \n\n## Class diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco01.png) \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco09.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco02.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco08.png)\n\n## Real World Decorators: Java I/O \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco10.png)\n\n## Reference\n\nHead First Design Pattern\n","source":"_posts/2018-06-11-Decorator Pattern01.md","raw":"---\nlayout: post\ntitle:  \"Decorator Pattern01\"\ndate:   2018-06-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nThe Decorator Pattern attaches additional responsibilities to an object dynamically. \n\nDecorators provide a flexible alternative to subclassing for extending functionality. \n\n## Class diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco01.png) \n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco09.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco02.png) \n\n## Code\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco04.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco08.png)\n\n## Real World Decorators: Java I/O \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco10.png)\n\n## Reference\n\nHead First Design Pattern\n","slug":"2018-06-11-Decorator Pattern01","published":1,"updated":"2018-10-25T05:38:31.946Z","comments":1,"photos":[],"link":"","_id":"cjp6k65mr00fc31x7kf3scoij","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Decorator Pattern attaches additional responsibilities to an object dynamically. </p>\n<p>Decorators provide a flexible alternative to subclassing for extending functionality. </p>\n<h2 id=\"Class-diagram\"><a href=\"#Class-diagram\" class=\"headerlink\" title=\"Class diagram\"></a>Class diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco01.png\" alt=\"img\"> </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco09.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco02.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco08.png\" alt=\"img\"></p>\n<h2 id=\"Real-World-Decorators-Java-I-O\"><a href=\"#Real-World-Decorators-Java-I-O\" class=\"headerlink\" title=\"Real World Decorators: Java I/O\"></a>Real World Decorators: Java I/O</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco10.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Decorator Pattern attaches additional responsibilities to an object dynamically. </p>\n<p>Decorators provide a flexible alternative to subclassing for extending functionality. </p>\n<h2 id=\"Class-diagram\"><a href=\"#Class-diagram\" class=\"headerlink\" title=\"Class diagram\"></a>Class diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco01.png\" alt=\"img\"> </p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco09.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco02.png\" alt=\"img\"> </p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco04.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco08.png\" alt=\"img\"></p>\n<h2 id=\"Real-World-Decorators-Java-I-O\"><a href=\"#Real-World-Decorators-Java-I-O\" class=\"headerlink\" title=\"Real World Decorators: Java I/O\"></a>Real World Decorators: Java I/O</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/deco10.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"Command Pattern03","date":"2018-06-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/com01.png) \n\n- Command\n  - 싱핼됭 기능에 대한 인터페이스. 실행될 기능을 execute method로 선언\n- ConcreteCommand\n  - 실제로 실행되는 기능을 구현.\n  - 즉, Command라는 인터페이스를 구현\n- Invoker \n  - 기능의 실행을 요청하는 호출자 클래스\n- Receiver\n  - ConcreteCommand 에서 execute method를 구현할 때 필요한 클래스\n  - 즉, Concrete Command 의 기능을 실행하기 위해 사용하는 수신자 클래스\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/com02.png) \n\n- Button\n  - Invoker\n- LampOnCommand, LampOffCommand\n  - ConcreteCommand\n- Lamp\n  - Receiver\n\n## Reference\n\nJava 객체지향 디자인 패턴 <정인상, 채흥석 지음>\n\n","source":"_posts/2018-06-11-Command Pattern03.md","raw":"---\nlayout: post\ntitle:  \"Command Pattern03\"\ndate:   2018-06-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/com01.png) \n\n- Command\n  - 싱핼됭 기능에 대한 인터페이스. 실행될 기능을 execute method로 선언\n- ConcreteCommand\n  - 실제로 실행되는 기능을 구현.\n  - 즉, Command라는 인터페이스를 구현\n- Invoker \n  - 기능의 실행을 요청하는 호출자 클래스\n- Receiver\n  - ConcreteCommand 에서 execute method를 구현할 때 필요한 클래스\n  - 즉, Concrete Command 의 기능을 실행하기 위해 사용하는 수신자 클래스\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/com02.png) \n\n- Button\n  - Invoker\n- LampOnCommand, LampOffCommand\n  - ConcreteCommand\n- Lamp\n  - Receiver\n\n## Reference\n\nJava 객체지향 디자인 패턴 <정인상, 채흥석 지음>\n\n","slug":"2018-06-11-Command Pattern03","published":1,"updated":"2018-10-25T05:38:40.201Z","comments":1,"photos":[],"link":"","_id":"cjp6k65mt00fe31x7dx5132sh","content":"<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/com01.png\" alt=\"img\"> </p>\n<ul>\n<li>Command<ul>\n<li>싱핼됭 기능에 대한 인터페이스. 실행될 기능을 execute method로 선언</li>\n</ul>\n</li>\n<li>ConcreteCommand<ul>\n<li>실제로 실행되는 기능을 구현.</li>\n<li>즉, Command라는 인터페이스를 구현</li>\n</ul>\n</li>\n<li>Invoker <ul>\n<li>기능의 실행을 요청하는 호출자 클래스</li>\n</ul>\n</li>\n<li>Receiver<ul>\n<li>ConcreteCommand 에서 execute method를 구현할 때 필요한 클래스</li>\n<li>즉, Concrete Command 의 기능을 실행하기 위해 사용하는 수신자 클래스</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/com02.png\" alt=\"img\"> </p>\n<ul>\n<li>Button<ul>\n<li>Invoker</li>\n</ul>\n</li>\n<li>LampOnCommand, LampOffCommand<ul>\n<li>ConcreteCommand</li>\n</ul>\n</li>\n<li>Lamp<ul>\n<li>Receiver</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Class-Diagram\"><a href=\"#Class-Diagram\" class=\"headerlink\" title=\"Class Diagram\"></a>Class Diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/com01.png\" alt=\"img\"> </p>\n<ul>\n<li>Command<ul>\n<li>싱핼됭 기능에 대한 인터페이스. 실행될 기능을 execute method로 선언</li>\n</ul>\n</li>\n<li>ConcreteCommand<ul>\n<li>실제로 실행되는 기능을 구현.</li>\n<li>즉, Command라는 인터페이스를 구현</li>\n</ul>\n</li>\n<li>Invoker <ul>\n<li>기능의 실행을 요청하는 호출자 클래스</li>\n</ul>\n</li>\n<li>Receiver<ul>\n<li>ConcreteCommand 에서 execute method를 구현할 때 필요한 클래스</li>\n<li>즉, Concrete Command 의 기능을 실행하기 위해 사용하는 수신자 클래스</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/com02.png\" alt=\"img\"> </p>\n<ul>\n<li>Button<ul>\n<li>Invoker</li>\n</ul>\n</li>\n<li>LampOnCommand, LampOffCommand<ul>\n<li>ConcreteCommand</li>\n</ul>\n</li>\n<li>Lamp<ul>\n<li>Receiver</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n"},{"layout":"post","title":"Decorator Pattern02","date":"2018-06-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\n기본 기능에 추가할 수 있는 많은 종류의 부가 기능에서 파생되는 다양한 조합을 동적으로 구현할 수 있는 패턴이다.\n\n## Class diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dec01.png) \n\n- Componet\n  - 기본 기능을 뜻하는 ConcreteComponent 와 추가 기능을 뜻하는 Decorator의 공통 기능을 정의\n  - 즉, 클라이언트는 Component를 통해 실제 객체를 사용\n- ConcreteComponent\n  - 기본 기능을 구현하는 클래스\n- Decorator\n  - 많은 수가 존재하는 구체적인 Decorator의 공통 기능을 제공\n- ConcreteDecoratorA, ConcreteDecoratorB\n  - Decorator의 하위 클래스로 기본 기능에 추가되는 개별적이 기능\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dec02.png)\n\n- Display\n  - Component\n- RoadDisplay\n  - ConcreteComponent\n- DisplayDecorator\n  - Decorator\n- LaneDecorator, TrafficDecorator, CrossingDecorator\n  - ConcreteDecorator\n\n## Reference\n\nJava 객체 지향 디자인 패턴 <정인상, 채흥석 지음>\n","source":"_posts/2018-06-11-Decorator Pattern02.md","raw":"---\nlayout: post\ntitle:  \"Decorator Pattern02\"\ndate:   2018-06-06\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\n기본 기능에 추가할 수 있는 많은 종류의 부가 기능에서 파생되는 다양한 조합을 동적으로 구현할 수 있는 패턴이다.\n\n## Class diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dec01.png) \n\n- Componet\n  - 기본 기능을 뜻하는 ConcreteComponent 와 추가 기능을 뜻하는 Decorator의 공통 기능을 정의\n  - 즉, 클라이언트는 Component를 통해 실제 객체를 사용\n- ConcreteComponent\n  - 기본 기능을 구현하는 클래스\n- Decorator\n  - 많은 수가 존재하는 구체적인 Decorator의 공통 기능을 제공\n- ConcreteDecoratorA, ConcreteDecoratorB\n  - Decorator의 하위 클래스로 기본 기능에 추가되는 개별적이 기능\n\n## Example\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dec02.png)\n\n- Display\n  - Component\n- RoadDisplay\n  - ConcreteComponent\n- DisplayDecorator\n  - Decorator\n- LaneDecorator, TrafficDecorator, CrossingDecorator\n  - ConcreteDecorator\n\n## Reference\n\nJava 객체 지향 디자인 패턴 <정인상, 채흥석 지음>\n","slug":"2018-06-11-Decorator Pattern02","published":1,"updated":"2018-10-25T05:38:48.530Z","comments":1,"photos":[],"link":"","_id":"cjp6k65mu00fg31x745u0733a","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>기본 기능에 추가할 수 있는 많은 종류의 부가 기능에서 파생되는 다양한 조합을 동적으로 구현할 수 있는 패턴이다.</p>\n<h2 id=\"Class-diagram\"><a href=\"#Class-diagram\" class=\"headerlink\" title=\"Class diagram\"></a>Class diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dec01.png\" alt=\"img\"> </p>\n<ul>\n<li>Componet<ul>\n<li>기본 기능을 뜻하는 ConcreteComponent 와 추가 기능을 뜻하는 Decorator의 공통 기능을 정의</li>\n<li>즉, 클라이언트는 Component를 통해 실제 객체를 사용</li>\n</ul>\n</li>\n<li>ConcreteComponent<ul>\n<li>기본 기능을 구현하는 클래스</li>\n</ul>\n</li>\n<li>Decorator<ul>\n<li>많은 수가 존재하는 구체적인 Decorator의 공통 기능을 제공</li>\n</ul>\n</li>\n<li>ConcreteDecoratorA, ConcreteDecoratorB<ul>\n<li>Decorator의 하위 클래스로 기본 기능에 추가되는 개별적이 기능</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dec02.png\" alt=\"img\"></p>\n<ul>\n<li>Display<ul>\n<li>Component</li>\n</ul>\n</li>\n<li>RoadDisplay<ul>\n<li>ConcreteComponent</li>\n</ul>\n</li>\n<li>DisplayDecorator<ul>\n<li>Decorator</li>\n</ul>\n</li>\n<li>LaneDecorator, TrafficDecorator, CrossingDecorator<ul>\n<li>ConcreteDecorator</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체 지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>기본 기능에 추가할 수 있는 많은 종류의 부가 기능에서 파생되는 다양한 조합을 동적으로 구현할 수 있는 패턴이다.</p>\n<h2 id=\"Class-diagram\"><a href=\"#Class-diagram\" class=\"headerlink\" title=\"Class diagram\"></a>Class diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dec01.png\" alt=\"img\"> </p>\n<ul>\n<li>Componet<ul>\n<li>기본 기능을 뜻하는 ConcreteComponent 와 추가 기능을 뜻하는 Decorator의 공통 기능을 정의</li>\n<li>즉, 클라이언트는 Component를 통해 실제 객체를 사용</li>\n</ul>\n</li>\n<li>ConcreteComponent<ul>\n<li>기본 기능을 구현하는 클래스</li>\n</ul>\n</li>\n<li>Decorator<ul>\n<li>많은 수가 존재하는 구체적인 Decorator의 공통 기능을 제공</li>\n</ul>\n</li>\n<li>ConcreteDecoratorA, ConcreteDecoratorB<ul>\n<li>Decorator의 하위 클래스로 기본 기능에 추가되는 개별적이 기능</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dec02.png\" alt=\"img\"></p>\n<ul>\n<li>Display<ul>\n<li>Component</li>\n</ul>\n</li>\n<li>RoadDisplay<ul>\n<li>ConcreteComponent</li>\n</ul>\n</li>\n<li>DisplayDecorator<ul>\n<li>Decorator</li>\n</ul>\n</li>\n<li>LaneDecorator, TrafficDecorator, CrossingDecorator<ul>\n<li>ConcreteDecorator</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Java 객체 지향 디자인 패턴 &lt;정인상, 채흥석 지음&gt;</p>\n"},{"layout":"post","title":"Iterator Pattern","date":"2018-06-16T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## Definition\n\nThe Iterator Pattern provides a way to access the elements of an aggregate object sequentially without exposing its underlying representation. \n\n## Class diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator01.png)\n\n## Example\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator03.png)\n\n## Reference\n\nHead First Design Pattern\n","source":"_posts/2018-06-17-Iterator Pattern.md","raw":"---\nlayout: post\ntitle:  \"Iterator Pattern\"\ndate:   2018-06-17\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## Definition\n\nThe Iterator Pattern provides a way to access the elements of an aggregate object sequentially without exposing its underlying representation. \n\n## Class diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator01.png)\n\n## Example\n\n ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator03.png)\n\n## Reference\n\nHead First Design Pattern\n","slug":"2018-06-17-Iterator Pattern","published":1,"updated":"2018-10-25T05:38:56.790Z","comments":1,"photos":[],"link":"","_id":"cjp6k65n400fi31x7z5gosygn","content":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Iterator Pattern provides a way to access the elements of an aggregate object sequentially without exposing its underlying representation. </p>\n<h2 id=\"Class-diagram\"><a href=\"#Class-diagram\" class=\"headerlink\" title=\"Class diagram\"></a>Class diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator01.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator03.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Definition\"><a href=\"#Definition\" class=\"headerlink\" title=\"Definition\"></a>Definition</h2><p>The Iterator Pattern provides a way to access the elements of an aggregate object sequentially without exposing its underlying representation. </p>\n<h2 id=\"Class-diagram\"><a href=\"#Class-diagram\" class=\"headerlink\" title=\"Class diagram\"></a>Class diagram</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator01.png\" alt=\"img\"></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><p> <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iterator03.png\" alt=\"img\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Head First Design Pattern</p>\n"},{"layout":"post","title":"스타트링크","date":"2018-05-31T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n## 문제 요약\n\n- F층으로 이루어진 건물\n- 스타트 링크는 G층\n- 현재 위치 S층\n\n- U \n  - 위로 U층을 감\n- D\n  - 아래로 D층을 감\n- U층 위, 또는 D층 아래에 해당하는 층이 없을 때는, \n  - 엘리베이터는 움직이지 않는다\n\n- S층에서 G층 가려면 버튼을 적어도 몇번 눌러야해????\n- 갈수 없다면  \"use the stairs\" 출력\n\n## 풀이\n\n- 전형적인 BFS\n- 큐에서 deque를 한다 .... A\n- 도착지점인지 확인한다. \n  - 도착 지점이면 끝\n  - 도착 지점이 아니라면 계속\n- deque한 지점에서 이동 가능한 곳을 모두 큐에 넣는다\n  - 이동 가능 한 곳\n    - U층을 더 했을 때, 꼭대기 층 이하이어야함\n    - D층을 뺐을 때, 1층 이상이어야함 \n- 다시 A부터 반복한다\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink03.png)\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-06-01-스타트링크.md","raw":"---\nlayout: post\ntitle:  \"스타트링크\"\ndate:   2018-06-01\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n## 문제 요약\n\n- F층으로 이루어진 건물\n- 스타트 링크는 G층\n- 현재 위치 S층\n\n- U \n  - 위로 U층을 감\n- D\n  - 아래로 D층을 감\n- U층 위, 또는 D층 아래에 해당하는 층이 없을 때는, \n  - 엘리베이터는 움직이지 않는다\n\n- S층에서 G층 가려면 버튼을 적어도 몇번 눌러야해????\n- 갈수 없다면  \"use the stairs\" 출력\n\n## 풀이\n\n- 전형적인 BFS\n- 큐에서 deque를 한다 .... A\n- 도착지점인지 확인한다. \n  - 도착 지점이면 끝\n  - 도착 지점이 아니라면 계속\n- deque한 지점에서 이동 가능한 곳을 모두 큐에 넣는다\n  - 이동 가능 한 곳\n    - U층을 더 했을 때, 꼭대기 층 이하이어야함\n    - D층을 뺐을 때, 1층 이상이어야함 \n- 다시 A부터 반복한다\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink03.png)\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2018-06-01-스타트링크","published":1,"updated":"2018-06-01T08:55:28.962Z","comments":1,"photos":[],"link":"","_id":"cjp6k65n600fk31x7nigv6m39","content":"<h2 id=\"문제-요약\"><a href=\"#문제-요약\" class=\"headerlink\" title=\"문제 요약\"></a>문제 요약</h2><ul>\n<li>F층으로 이루어진 건물</li>\n<li>스타트 링크는 G층</li>\n<li><p>현재 위치 S층</p>\n</li>\n<li><p>U </p>\n<ul>\n<li>위로 U층을 감</li>\n</ul>\n</li>\n<li>D<ul>\n<li>아래로 D층을 감</li>\n</ul>\n</li>\n<li><p>U층 위, 또는 D층 아래에 해당하는 층이 없을 때는, </p>\n<ul>\n<li>엘리베이터는 움직이지 않는다</li>\n</ul>\n</li>\n<li><p>S층에서 G층 가려면 버튼을 적어도 몇번 눌러야해????</p>\n</li>\n<li>갈수 없다면  “use the stairs” 출력</li>\n</ul>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>전형적인 BFS</li>\n<li>큐에서 deque를 한다 …. A</li>\n<li>도착지점인지 확인한다. <ul>\n<li>도착 지점이면 끝</li>\n<li>도착 지점이 아니라면 계속</li>\n</ul>\n</li>\n<li>deque한 지점에서 이동 가능한 곳을 모두 큐에 넣는다<ul>\n<li>이동 가능 한 곳<ul>\n<li>U층을 더 했을 때, 꼭대기 층 이하이어야함</li>\n<li>D층을 뺐을 때, 1층 이상이어야함 </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>다시 A부터 반복한다</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"문제-요약\"><a href=\"#문제-요약\" class=\"headerlink\" title=\"문제 요약\"></a>문제 요약</h2><ul>\n<li>F층으로 이루어진 건물</li>\n<li>스타트 링크는 G층</li>\n<li><p>현재 위치 S층</p>\n</li>\n<li><p>U </p>\n<ul>\n<li>위로 U층을 감</li>\n</ul>\n</li>\n<li>D<ul>\n<li>아래로 D층을 감</li>\n</ul>\n</li>\n<li><p>U층 위, 또는 D층 아래에 해당하는 층이 없을 때는, </p>\n<ul>\n<li>엘리베이터는 움직이지 않는다</li>\n</ul>\n</li>\n<li><p>S층에서 G층 가려면 버튼을 적어도 몇번 눌러야해????</p>\n</li>\n<li>갈수 없다면  “use the stairs” 출력</li>\n</ul>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li>전형적인 BFS</li>\n<li>큐에서 deque를 한다 …. A</li>\n<li>도착지점인지 확인한다. <ul>\n<li>도착 지점이면 끝</li>\n<li>도착 지점이 아니라면 계속</li>\n</ul>\n</li>\n<li>deque한 지점에서 이동 가능한 곳을 모두 큐에 넣는다<ul>\n<li>이동 가능 한 곳<ul>\n<li>U층을 더 했을 때, 꼭대기 층 이하이어야함</li>\n<li>D층을 뺐을 때, 1층 이상이어야함 </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>다시 A부터 반복한다</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startLink03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"HTML","date":"2018-07-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cs_img.jpg","_content":"\n## HTML\n\nHTML 의 본질 : 정보\n\n- HyperText \n\n  - 하이퍼텍스트를 가장 중요한 특징으로 하는\n\n- Markup\n\n  - 마크업이라는 형식을 가진 \n\n- Language\n\n  - 컴퓨터 프로그래밍 언어\n\n  \n\n## Tag & 속성\n\n```html\n<a href=\"test.com\" target=\"_blank\" title=\"test\">test</a>\n```\n\n- a\n  - 태그\n- href / target / title\n  - 속성\n\n## ordered list & unordered list\n\n```html\n<ol>\n\t<li> test1 </li>\n\t<li> test2 </li>\n\t<li> test3 </li>\n\t<li> test4 </li>\n<ol>\n<ul>\n\t<li> test1 </li>\n\t<li> test2 </li>\n\t<li> test3 </li>\n\t<li> test4 </li>\n<ul>\n```\n\n## 문서 구조\n\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <title> </title>\n        <meta charset=\"utf-8\">\n    </head>\n    <body>\n    </body>\t\n</html>\n```\n\n## DOCTYPE\n\nDcocument type declaration\n\n브라우저에게 이것은 어떤 표준을 따르고 있는 태그들이야! 라고 말함\n\n- html 5\n  -  <!DOCTYPE html>\n\n## p\n\n단락\n\n## br\n\n줄바꿈 \n\n## img\n\n```html\n<img src=\"test.jpg\" width=\"200\" height=\"330\" alt=\"test image\" title=\"test image\">\n```\n\n## table\n\n```html\n<table border=\"2\">\n    <tr>\n        <td>이름</td>     <td>성별</td>   <td>주소</td>\n    </tr>\n    <tr>\n        <td>최진혁</td>  <td>남</td>      <td >청주</td>\n    </tr>\n    <tr>\n        <td>최유빈</td>  <td>여</td>      <td>청주</td>\n    </tr>\n</table>\n```\n\n```html\n<table border=\"2\">\n    <thead>\n        <tr>\n            <th>이름</th>     <th>성별</th>   <th>주소</th> <th>회비</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>최진혁</td>  <td>남</td>      <td >청주</td> <td>1000</td>\n        </tr>\n        <tr>\n            <td>최유빈</td>  <td>여</td>      <td>청주</td> <td>500</td>\n        </tr>\n    </tbody>\n    <tfoot>\n        <tr>\n            <td>합계</td>  <td></td>      <td></td> <td>1500</td>\n        </tr>\n    </tfoot>\n</table>\n```\n\n```html\n<table border=\"2\">\n    <thead>\n        <tr>\n            <th>이름</th>     <th>성별</th>   <th>주소</th> <th>회비</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>최진혁</td>  <td>남</td>      <td rowspan=\"2\">청주</td> <td>1000</td>\n        </tr>\n        <tr>\n            <td>최유빈</td>  <td>여</td>      <td>500</td>\n        </tr>\n    </tbody>\n    <tfoot>\n        <tr>\n            <td colspan=\"3\">합계</td>      <td>1500</td>\n        </tr>\n    </tfoot>\n \n</table>\n```\n\n## form\n\n```html\n<form action=\"http://localhost/login.php\">\n    <p>아이디 : <input type=\"text\" name=\"id\"></p>\n    <p>비밀번호 : <input type=\"password\" name=\"pwd\"></p>\n    <p>주소 : <input type=\"text\" name=\"address\"></p>\n    <input type=\"submit\">\n</form>\n```\n\n#### 텍스트 입력\n\n```html\n<form action=\"\">\n        <p>text : <input type=\"text\" name=\"id\" value=\"default value\"></p>\n        <p>password : <input type=\"password\" name=\"pwd\" value=\"default value\"></p>\n        <p>textarea :\n            <textarea cols=\"50\" rows=\"2\">default value</textarea>\n        </p>\n    </form>\n```\n\n#### Dropdown list\n\n```html\n<form action=\"http://localhost/color.php\">\n            <h1>색상</h1>\n            <select name=\"color\">\n                <option value=\"red\">붉은색</option>\n                <option value=\"black\">검은색</option>\n                <option value=\"blue\">파란색</option>\n            </select>\n            <h1>색상2 (다중선택)</h1>\n            <select name=\"color2\" multiple>\n                <option value=\"red\">붉은색</option>\n                <option value=\"black\">검은색</option>\n                <option value=\"blue\">파란색</option>\n            </select>\n            <input type=\"submit\">\n</form>\n```\n\n#### Radio button, Check box\n\n```html\n <form action=\"http://localhost/order.php\">\n            <p>\n                <h1>색상(단일선택)</h1>\n                붉은색 : <input type=\"radio\" name=\"color\" value=\"red\">\n                검은색 : <input type=\"radio\" name=\"color\" value=\"black\" checked>\n                파란색 : <input type=\"radio\" name=\"color\" value=\"blue\">\n            </p>\n            <p>\n                <h1>사이즈(다중선택)</h1>\n                95 : <input type=\"checkbox\" name=\"size\" value=\"95\">\n                100 : <input type=\"checkbox\" name=\"size\" value=\"100\" checked>\n                105 : <input type=\"checkbox\" name=\"size\" value=\"105\" checked>\n            </p>\n            <input type=\"submit\">\n</form>\n```\n\n#### Button\n\n```html\n<form action=\"http://localhost/form.php\">\n        <input type=\"text\">\n        <input type=\"submit\" value=\"전송\">\n        <input type=\"button\" value=\"버튼\" onclick=\"alert('hello world')\">\n        <input type=\"reset\">\n</form>\n```\n\n#### Hidden field\n\n```html\n <form action=\"http://localhost/hidden.php\">\n            <input type=\"text\" name=\"id\">\n            <input type=\"hidden\" name=\"hide\" value=\"egoing\">\n            <input type=\"submit\">\n</form>\n```\n\n#### Label\n\n```html\n<form action=\"\"> \n\t<p> \n\t\t<label for=\"id_txt\">text:</label> \n\t\t<input id=\"id_txt\" name=\"id\" type=\"text\" value=\"default value\"/> \n\t</p> \n\t<p> \n\t\t<label for=\"password\">password:</label> \n\t\t<input id=\"password\" name=\"pwd\" type=\"password\" value=\"default value\"/></p> \n\t<p> \n\t\t<label>textarea: \n\t\t\t<textarea cols=\"50\" rows=\"2\">default value</textarea> \n\t\t</label> \n\t</p> \n \n\t<p> \n\t\t<label> \n\t\t\t<input name=\"color\" type=\"checkbox\" value=\"red\">붉은색 \n\t\t</label> \n \n        <label for=\"color_blue\"> \n            <input id=\"color_blue\" name=\"color\" type=\"checkbox\" value=\"blue\">파란색 \n        </label> \n\t</p> \n</form> \n```\n\n#### Method\n\n```html\n<form action=\"http://localhost/method.php\" method=\"post\">\n            <input type=\"text\" name=\"id\">\n            <input type=\"password\" name=\"pwd\">\n            <input type=\"submit\">\n</form>\n```\n\n#### 파일 업로드\n\n```html\n<form action=\"http://localhost/upload.php\" method=\"post\" enctype=\"multipart/form-data\">\n            <input type=\"file\" name=\"profile\">\n            <input type=\"submit\">\n</form>\n```\n\n## semantic\n\n```\n<header>\n</header>\n\n<nav>\n</nav>\n\n<section>\n\t<article>\n\t</article>\n\t\n\t<article>\n\t</article>\n</section>\n\n<footer>\n</footer>\n```\n\n## Reference\n\n생활코딩\n","source":"_posts/2018-07-05-HTML.md","raw":"---\nlayout: post\ntitle:  \"HTML\"\ndate:   2018-07-05\ncategories: cs\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cs_img.jpg\n---\n\n## HTML\n\nHTML 의 본질 : 정보\n\n- HyperText \n\n  - 하이퍼텍스트를 가장 중요한 특징으로 하는\n\n- Markup\n\n  - 마크업이라는 형식을 가진 \n\n- Language\n\n  - 컴퓨터 프로그래밍 언어\n\n  \n\n## Tag & 속성\n\n```html\n<a href=\"test.com\" target=\"_blank\" title=\"test\">test</a>\n```\n\n- a\n  - 태그\n- href / target / title\n  - 속성\n\n## ordered list & unordered list\n\n```html\n<ol>\n\t<li> test1 </li>\n\t<li> test2 </li>\n\t<li> test3 </li>\n\t<li> test4 </li>\n<ol>\n<ul>\n\t<li> test1 </li>\n\t<li> test2 </li>\n\t<li> test3 </li>\n\t<li> test4 </li>\n<ul>\n```\n\n## 문서 구조\n\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <title> </title>\n        <meta charset=\"utf-8\">\n    </head>\n    <body>\n    </body>\t\n</html>\n```\n\n## DOCTYPE\n\nDcocument type declaration\n\n브라우저에게 이것은 어떤 표준을 따르고 있는 태그들이야! 라고 말함\n\n- html 5\n  -  <!DOCTYPE html>\n\n## p\n\n단락\n\n## br\n\n줄바꿈 \n\n## img\n\n```html\n<img src=\"test.jpg\" width=\"200\" height=\"330\" alt=\"test image\" title=\"test image\">\n```\n\n## table\n\n```html\n<table border=\"2\">\n    <tr>\n        <td>이름</td>     <td>성별</td>   <td>주소</td>\n    </tr>\n    <tr>\n        <td>최진혁</td>  <td>남</td>      <td >청주</td>\n    </tr>\n    <tr>\n        <td>최유빈</td>  <td>여</td>      <td>청주</td>\n    </tr>\n</table>\n```\n\n```html\n<table border=\"2\">\n    <thead>\n        <tr>\n            <th>이름</th>     <th>성별</th>   <th>주소</th> <th>회비</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>최진혁</td>  <td>남</td>      <td >청주</td> <td>1000</td>\n        </tr>\n        <tr>\n            <td>최유빈</td>  <td>여</td>      <td>청주</td> <td>500</td>\n        </tr>\n    </tbody>\n    <tfoot>\n        <tr>\n            <td>합계</td>  <td></td>      <td></td> <td>1500</td>\n        </tr>\n    </tfoot>\n</table>\n```\n\n```html\n<table border=\"2\">\n    <thead>\n        <tr>\n            <th>이름</th>     <th>성별</th>   <th>주소</th> <th>회비</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>최진혁</td>  <td>남</td>      <td rowspan=\"2\">청주</td> <td>1000</td>\n        </tr>\n        <tr>\n            <td>최유빈</td>  <td>여</td>      <td>500</td>\n        </tr>\n    </tbody>\n    <tfoot>\n        <tr>\n            <td colspan=\"3\">합계</td>      <td>1500</td>\n        </tr>\n    </tfoot>\n \n</table>\n```\n\n## form\n\n```html\n<form action=\"http://localhost/login.php\">\n    <p>아이디 : <input type=\"text\" name=\"id\"></p>\n    <p>비밀번호 : <input type=\"password\" name=\"pwd\"></p>\n    <p>주소 : <input type=\"text\" name=\"address\"></p>\n    <input type=\"submit\">\n</form>\n```\n\n#### 텍스트 입력\n\n```html\n<form action=\"\">\n        <p>text : <input type=\"text\" name=\"id\" value=\"default value\"></p>\n        <p>password : <input type=\"password\" name=\"pwd\" value=\"default value\"></p>\n        <p>textarea :\n            <textarea cols=\"50\" rows=\"2\">default value</textarea>\n        </p>\n    </form>\n```\n\n#### Dropdown list\n\n```html\n<form action=\"http://localhost/color.php\">\n            <h1>색상</h1>\n            <select name=\"color\">\n                <option value=\"red\">붉은색</option>\n                <option value=\"black\">검은색</option>\n                <option value=\"blue\">파란색</option>\n            </select>\n            <h1>색상2 (다중선택)</h1>\n            <select name=\"color2\" multiple>\n                <option value=\"red\">붉은색</option>\n                <option value=\"black\">검은색</option>\n                <option value=\"blue\">파란색</option>\n            </select>\n            <input type=\"submit\">\n</form>\n```\n\n#### Radio button, Check box\n\n```html\n <form action=\"http://localhost/order.php\">\n            <p>\n                <h1>색상(단일선택)</h1>\n                붉은색 : <input type=\"radio\" name=\"color\" value=\"red\">\n                검은색 : <input type=\"radio\" name=\"color\" value=\"black\" checked>\n                파란색 : <input type=\"radio\" name=\"color\" value=\"blue\">\n            </p>\n            <p>\n                <h1>사이즈(다중선택)</h1>\n                95 : <input type=\"checkbox\" name=\"size\" value=\"95\">\n                100 : <input type=\"checkbox\" name=\"size\" value=\"100\" checked>\n                105 : <input type=\"checkbox\" name=\"size\" value=\"105\" checked>\n            </p>\n            <input type=\"submit\">\n</form>\n```\n\n#### Button\n\n```html\n<form action=\"http://localhost/form.php\">\n        <input type=\"text\">\n        <input type=\"submit\" value=\"전송\">\n        <input type=\"button\" value=\"버튼\" onclick=\"alert('hello world')\">\n        <input type=\"reset\">\n</form>\n```\n\n#### Hidden field\n\n```html\n <form action=\"http://localhost/hidden.php\">\n            <input type=\"text\" name=\"id\">\n            <input type=\"hidden\" name=\"hide\" value=\"egoing\">\n            <input type=\"submit\">\n</form>\n```\n\n#### Label\n\n```html\n<form action=\"\"> \n\t<p> \n\t\t<label for=\"id_txt\">text:</label> \n\t\t<input id=\"id_txt\" name=\"id\" type=\"text\" value=\"default value\"/> \n\t</p> \n\t<p> \n\t\t<label for=\"password\">password:</label> \n\t\t<input id=\"password\" name=\"pwd\" type=\"password\" value=\"default value\"/></p> \n\t<p> \n\t\t<label>textarea: \n\t\t\t<textarea cols=\"50\" rows=\"2\">default value</textarea> \n\t\t</label> \n\t</p> \n \n\t<p> \n\t\t<label> \n\t\t\t<input name=\"color\" type=\"checkbox\" value=\"red\">붉은색 \n\t\t</label> \n \n        <label for=\"color_blue\"> \n            <input id=\"color_blue\" name=\"color\" type=\"checkbox\" value=\"blue\">파란색 \n        </label> \n\t</p> \n</form> \n```\n\n#### Method\n\n```html\n<form action=\"http://localhost/method.php\" method=\"post\">\n            <input type=\"text\" name=\"id\">\n            <input type=\"password\" name=\"pwd\">\n            <input type=\"submit\">\n</form>\n```\n\n#### 파일 업로드\n\n```html\n<form action=\"http://localhost/upload.php\" method=\"post\" enctype=\"multipart/form-data\">\n            <input type=\"file\" name=\"profile\">\n            <input type=\"submit\">\n</form>\n```\n\n## semantic\n\n```\n<header>\n</header>\n\n<nav>\n</nav>\n\n<section>\n\t<article>\n\t</article>\n\t\n\t<article>\n\t</article>\n</section>\n\n<footer>\n</footer>\n```\n\n## Reference\n\n생활코딩\n","slug":"2018-07-05-HTML","published":1,"updated":"2018-07-07T04:26:12.475Z","comments":1,"photos":[],"link":"","_id":"cjp6k65nf00fm31x7ji7j4ht6","content":"<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><p>HTML 의 본질 : 정보</p>\n<ul>\n<li><p>HyperText </p>\n<ul>\n<li>하이퍼텍스트를 가장 중요한 특징으로 하는</li>\n</ul>\n</li>\n<li><p>Markup</p>\n<ul>\n<li>마크업이라는 형식을 가진 </li>\n</ul>\n</li>\n<li><p>Language</p>\n<ul>\n<li>컴퓨터 프로그래밍 언어</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Tag-amp-속성\"><a href=\"#Tag-amp-속성\" class=\"headerlink\" title=\"Tag &amp; 속성\"></a>Tag &amp; 속성</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"test.com\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"test\"</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>a<ul>\n<li>태그</li>\n</ul>\n</li>\n<li>href / target / title<ul>\n<li>속성</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ordered-list-amp-unordered-list\"><a href=\"#ordered-list-amp-unordered-list\" class=\"headerlink\" title=\"ordered list &amp; unordered list\"></a>ordered list &amp; unordered list</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test1 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test2 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test3 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test4 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test1 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test2 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test3 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test4 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"문서-구조\"><a href=\"#문서-구조\" class=\"headerlink\" title=\"문서 구조\"></a>문서 구조</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;title&gt; &lt;/title&gt;</span><br><span class=\"line\">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">    &lt;/body&gt;\t</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"DOCTYPE\"><a href=\"#DOCTYPE\" class=\"headerlink\" title=\"DOCTYPE\"></a>DOCTYPE</h2><p>Dcocument type declaration</p>\n<p>브라우저에게 이것은 어떤 표준을 따르고 있는 태그들이야! 라고 말함</p>\n<ul>\n<li>html 5<ul>\n<li>&lt;!DOCTYPE html&gt;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"p\"><a href=\"#p\" class=\"headerlink\" title=\"p\"></a>p</h2><p>단락</p>\n<h2 id=\"br\"><a href=\"#br\" class=\"headerlink\" title=\"br\"></a>br</h2><p>줄바꿈 </p>\n<h2 id=\"img\"><a href=\"#img\" class=\"headerlink\" title=\"img\"></a>img</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"test.jpg\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"330\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"test image\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"test image\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>이름<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>     <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>성별<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>   <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>주소<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최진혁<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>남<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span> &gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최유빈<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>여<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>이름<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>     <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>성별<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>   <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>주소<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>회비<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최진혁<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>남<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span> &gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1000<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최유빈<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>여<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>500<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>합계<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1500<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>이름<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>     <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>성별<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>   <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>주소<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>회비<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최진혁<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>남<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">rowspan</span>=<span class=\"string\">\"2\"</span>&gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1000<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최유빈<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>여<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>500<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"3\"</span>&gt;</span>합계<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1500<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"form\"><a href=\"#form\" class=\"headerlink\" title=\"form\"></a>form</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/login.php\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>아이디 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>비밀번호 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pwd\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>주소 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"address\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"텍스트-입력\"><a href=\"#텍스트-입력\" class=\"headerlink\" title=\"텍스트 입력\"></a>텍스트 입력</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>text : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"default value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>password : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pwd\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"default value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>textarea :</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"50\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"2\"</span>&gt;</span>default value<span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Dropdown-list\"><a href=\"#Dropdown-list\" class=\"headerlink\" title=\"Dropdown list\"></a>Dropdown list</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/color.php\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>색상<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span>붉은색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"black\"</span>&gt;</span>검은색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span>파란색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>색상2 (다중선택)<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color2\"</span> <span class=\"attr\">multiple</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span>붉은색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"black\"</span>&gt;</span>검은색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span>파란색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Radio-button-Check-box\"><a href=\"#Radio-button-Check-box\" class=\"headerlink\" title=\"Radio button, Check box\"></a>Radio button, Check box</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/order.php\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>색상(단일선택)<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">                붉은색 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span></span><br><span class=\"line\">                검은색 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"black\"</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\">                파란색 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>사이즈(다중선택)<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">                95 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"size\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"95\"</span>&gt;</span></span><br><span class=\"line\">                100 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"size\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\">                105 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"size\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"105\"</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Button\"><a href=\"#Button\" class=\"headerlink\" title=\"Button\"></a>Button</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/form.php\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"전송\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"버튼\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"alert('hello world')\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"reset\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Hidden-field\"><a href=\"#Hidden-field\" class=\"headerlink\" title=\"Hidden field\"></a>Hidden field</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/hidden.php\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hide\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"egoing\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Label\"><a href=\"#Label\" class=\"headerlink\" title=\"Label\"></a>Label</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"id_txt\"</span>&gt;</span>text:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"id_txt\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"default value\"</span>/&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"password\"</span>&gt;</span>password:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pwd\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"default value\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>textarea: </span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"50\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"2\"</span>&gt;</span>default value<span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\"> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span>붉은색 </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"color_blue\"</span>&gt;</span> </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"color_blue\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span>파란색 </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Method\"><a href=\"#Method\" class=\"headerlink\" title=\"Method\"></a>Method</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/method.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pwd\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"파일-업로드\"><a href=\"#파일-업로드\" class=\"headerlink\" title=\"파일 업로드\"></a>파일 업로드</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/upload.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"profile\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"semantic\"><a href=\"#semantic\" class=\"headerlink\" title=\"semantic\"></a>semantic</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;header&gt;</span><br><span class=\"line\">&lt;/header&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;nav&gt;</span><br><span class=\"line\">&lt;/nav&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;section&gt;</span><br><span class=\"line\">\t&lt;article&gt;</span><br><span class=\"line\">\t&lt;/article&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;article&gt;</span><br><span class=\"line\">\t&lt;/article&gt;</span><br><span class=\"line\">&lt;/section&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;footer&gt;</span><br><span class=\"line\">&lt;/footer&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>생활코딩</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><p>HTML 의 본질 : 정보</p>\n<ul>\n<li><p>HyperText </p>\n<ul>\n<li>하이퍼텍스트를 가장 중요한 특징으로 하는</li>\n</ul>\n</li>\n<li><p>Markup</p>\n<ul>\n<li>마크업이라는 형식을 가진 </li>\n</ul>\n</li>\n<li><p>Language</p>\n<ul>\n<li>컴퓨터 프로그래밍 언어</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Tag-amp-속성\"><a href=\"#Tag-amp-속성\" class=\"headerlink\" title=\"Tag &amp; 속성\"></a>Tag &amp; 속성</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"test.com\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"test\"</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>a<ul>\n<li>태그</li>\n</ul>\n</li>\n<li>href / target / title<ul>\n<li>속성</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ordered-list-amp-unordered-list\"><a href=\"#ordered-list-amp-unordered-list\" class=\"headerlink\" title=\"ordered list &amp; unordered list\"></a>ordered list &amp; unordered list</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test1 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test2 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test3 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test4 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test1 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test2 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test3 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> test4 <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"문서-구조\"><a href=\"#문서-구조\" class=\"headerlink\" title=\"문서 구조\"></a>문서 구조</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;title&gt; &lt;/title&gt;</span><br><span class=\"line\">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">    &lt;/body&gt;\t</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"DOCTYPE\"><a href=\"#DOCTYPE\" class=\"headerlink\" title=\"DOCTYPE\"></a>DOCTYPE</h2><p>Dcocument type declaration</p>\n<p>브라우저에게 이것은 어떤 표준을 따르고 있는 태그들이야! 라고 말함</p>\n<ul>\n<li>html 5<ul>\n<li>&lt;!DOCTYPE html&gt;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"p\"><a href=\"#p\" class=\"headerlink\" title=\"p\"></a>p</h2><p>단락</p>\n<h2 id=\"br\"><a href=\"#br\" class=\"headerlink\" title=\"br\"></a>br</h2><p>줄바꿈 </p>\n<h2 id=\"img\"><a href=\"#img\" class=\"headerlink\" title=\"img\"></a>img</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"test.jpg\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"330\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"test image\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"test image\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>이름<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>     <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>성별<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>   <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>주소<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최진혁<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>남<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span> &gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최유빈<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>여<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>이름<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>     <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>성별<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>   <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>주소<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>회비<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최진혁<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>남<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span> &gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1000<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최유빈<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>여<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>500<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>합계<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1500<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>이름<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>     <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>성별<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span>   <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>주소<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>회비<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최진혁<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>남<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">rowspan</span>=<span class=\"string\">\"2\"</span>&gt;</span>청주<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1000<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>최유빈<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>여<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>500<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"3\"</span>&gt;</span>합계<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1500<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"form\"><a href=\"#form\" class=\"headerlink\" title=\"form\"></a>form</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/login.php\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>아이디 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>비밀번호 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pwd\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>주소 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"address\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"텍스트-입력\"><a href=\"#텍스트-입력\" class=\"headerlink\" title=\"텍스트 입력\"></a>텍스트 입력</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>text : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"default value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>password : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pwd\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"default value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>textarea :</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"50\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"2\"</span>&gt;</span>default value<span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Dropdown-list\"><a href=\"#Dropdown-list\" class=\"headerlink\" title=\"Dropdown list\"></a>Dropdown list</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/color.php\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>색상<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span>붉은색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"black\"</span>&gt;</span>검은색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span>파란색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>색상2 (다중선택)<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color2\"</span> <span class=\"attr\">multiple</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span>붉은색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"black\"</span>&gt;</span>검은색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span>파란색<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Radio-button-Check-box\"><a href=\"#Radio-button-Check-box\" class=\"headerlink\" title=\"Radio button, Check box\"></a>Radio button, Check box</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/order.php\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>색상(단일선택)<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">                붉은색 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span></span><br><span class=\"line\">                검은색 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"black\"</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\">                파란색 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>사이즈(다중선택)<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">                95 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"size\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"95\"</span>&gt;</span></span><br><span class=\"line\">                100 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"size\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\">                105 : <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"size\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"105\"</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Button\"><a href=\"#Button\" class=\"headerlink\" title=\"Button\"></a>Button</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/form.php\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"전송\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"버튼\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"alert('hello world')\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"reset\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Hidden-field\"><a href=\"#Hidden-field\" class=\"headerlink\" title=\"Hidden field\"></a>Hidden field</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/hidden.php\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hide\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"egoing\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Label\"><a href=\"#Label\" class=\"headerlink\" title=\"Label\"></a>Label</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"id_txt\"</span>&gt;</span>text:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"id_txt\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"default value\"</span>/&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"password\"</span>&gt;</span>password:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pwd\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"default value\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>textarea: </span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"50\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"2\"</span>&gt;</span>default value<span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\"> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span>붉은색 </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"color_blue\"</span>&gt;</span> </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"color_blue\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span>파란색 </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Method\"><a href=\"#Method\" class=\"headerlink\" title=\"Method\"></a>Method</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/method.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pwd\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"파일-업로드\"><a href=\"#파일-업로드\" class=\"headerlink\" title=\"파일 업로드\"></a>파일 업로드</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"http://localhost/upload.php\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"profile\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"semantic\"><a href=\"#semantic\" class=\"headerlink\" title=\"semantic\"></a>semantic</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;header&gt;</span><br><span class=\"line\">&lt;/header&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;nav&gt;</span><br><span class=\"line\">&lt;/nav&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;section&gt;</span><br><span class=\"line\">\t&lt;article&gt;</span><br><span class=\"line\">\t&lt;/article&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;article&gt;</span><br><span class=\"line\">\t&lt;/article&gt;</span><br><span class=\"line\">&lt;/section&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;footer&gt;</span><br><span class=\"line\">&lt;/footer&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>생활코딩</p>\n"},{"layout":"post","title":"CSS","date":"2018-07-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cs_img.jpg","_content":"\n## HTML에 CSS 삽입하는 방법\n\n1. inline \n\n   ```html\n    <h1 style=\"color:red\">Hello World</h1>\n   ```\n\n2. style tag\n\n   ```html\n    <style>\n         h2{color:blue}\n    </style>\n   ```\n\n## 선택자(selector)와 선언(declaration)\n\n1. 선택하고 (선택자)\n\n2. 선택한 대상에게 효과 (선언)\n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/selector.png)\n\n## 선택자의 종류\n\n1. 아이디 선택자\n\n   ```html\n   <!DOCTYPE html>\n   <html>\n     <head>\n       <style>\n         li{\n           color:red;\n           text-decoration:underline;\n         }\n         #select{\n           font-size:50px;\n         }\n       </style>\n     </head>\n     <body>\n       <ul>\n         <li>HTML</li>\n         <li id=\"select\">CSS</li>\n         <li>JavaScript</li>\n       </ul>\n     </body>\n   </html>\n   ```\n\n2. 클래스 선택자\n\n   ```html\n   <!DOCTYPE html>\n   <html>\n     <head>\n       <style>\n         li{\n           color:red;\n           text-decoration:underline;\n         }\n         #select{\n           font-size:50px;\n         }\n         .deactive{\n             text-decoration: line-through;\n         }\n       </style>\n     </head>\n     <body>\n       <h1 class=\"deactive\">수업의 순서</h1>\n       <ul>\n         <li class=\"deactive\">HTML</li>\n         <li id=\"select\">CSS</li>\n         <li class=\"deactive\">JavaScript</li>\n       </ul>\n     </body>\n   </html>\n   ```\n\n## 부모 자식 선택자\n\n```html\n<style>\n      ul li{\n        color:red;\n      }\n      #lecture>li{\n        border:1px solid red;\n      }\n      ul,ol{\n        background-color: powderblue;\n      }\n</style>\n```\n\n## 상속\n\n부모 엘리먼트의 속성을 자식 엘리먼트가 물려받는 것.\n\n모든 속성이 상속을 지원하는 것은 아님.\n\n## Cascading\n\nCSS : Cascading Style Sheet\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n      li{color:red;}\n      #idsel{color:blue;}\n      .classsel{color:green;}\n    </style>\n  </head>\n  <body>\n    <ul>\n      <li>html</li>\n      <li id=\"idsel\" class=\"classsel\" style=\"color:powderblue\">css</li>\n      <li>javascript</li>\n    </ul>\n    <ol>\n      <li>style attribute</li>\n      <li>id selector</li>\n      <li>class selector</li>\n      <li>tag selector</li>\n    </ol>\n  </body>\n</html>\n```\n\n하나의 태그에 중첩해서 css 적용하면 ?\n\nstyle attribute > id selector > class selector > tag selector \n\n왜?\n\n더 구체적이고 명시적인 style attribute의 우선순위가 가장 높아\n\n\n\n다음과 같이 하면 가장 우선순위가 높아져\n\n```html\nli{color: red !important}\n```\n\n## inline, block level\n\n- 화면 전체를 사용하는 태그 => block element\n- 화면의 일부를 차지하는 태그 => inline level element\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <style>\n        h1,a{border:1px solid red;}\n        h1{display: inline;}\n        a{display:block;}\n    </style>\n  </head>\n  <body>\n    <h1>Hello world</h1>\n    안녕하세요. <a href=\"https://opentutorials.org\">생활코딩</a>입니다.\n  </body>\n</html>\n```\n\n## box model\n\n```html\n<html>\n  <head>\n    <style>\n      p,a {\n        border: 10px solid red;\n        padding: 20px;\n        margin: 50px;\n        height: 30px;\n      }    \n    </style>\n  </head>\n  <body>\n    <p>\n      test\n    </p>\n    <p>\n      kojunhee\n    </p>\n    안녕하세요. <a href=\"test.com\"> 고준희</a>입니다.\n  </body>  \n</html>\n```\n\n## box sizing\n\n```html\n    <!doctype html>\n    <html>\n    <head>\n        <style>\n            *{\n                box-sizing:border-box;\n            }\n            div{\n                margin:10px;\n                width:150px;\n            }\n            #small{\n                border:10px solid black;\n            }\n            #large{\n                border:30px solid black;\n            }\n        </style>\n    </head>\n    <body>\n           <div id=\"small\">Hello</div>\n           <div id=\"large\">Hello</div>\n    </body>\n    </html>\n```\n\n## margin-collapsing\n\n위 태그와 아래 태그의 마진 값 중에 더 큰 값이 두 태그 사이의 간경이 됨\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n      <style>\n          h1{\n              border:1px solid red;\n              margin:100px;\n          }\n      </style>\n  </head>\n  <body>\n  <h1>Hello world</h1>\n  <h1>Hello world</h1>\n  </body>\n</html>\n```\n\n\n\nparent element가 시각적인 요소가 없는 투명한 상태일 때,\n\nparent element 의 마진값과 child element의 마진 값 중에 \n\n큰 쪽의 margin값이 child element의 margin값으로 사용\n\n```html\n<!doctype html>\n<html>\n<head>\n    <style>\n        #parent{\n/*            border:1px solid tomato;*/\n            margin-top:100px;\n        }\n        #child{\n            background-color: powderblue;\n            margin-top:50px;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"parent\">\n        <div id=\"child\">\n            Hello world\n        </div>\n    </div>\n</body>\n</html>\n```\n\n\n\n어떤 태그의 시각적인 요소가 없다면 그 태그의 margin 값은 위 쪽의 margin 값과 아랜 쪽의 margin 중에 더 큰 값이 그 태그의 마진 값이 됨 \n\n```html\n<!doctype html>\n<html>\n<head>\n    <style>\n        #empty{\n            margin-top:50px;\n            margin-bottom: 100px;\n/*            border:1px solid tomato;*/\n        }\n        #normal{\n            background-color: powderblue;\n            margin-top:100px;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"empty\"></div>\n    <div id=\"normal\">normal</div>\n</body>\n</html>\n```\n\n## 포지션\n\nelement의 위치를 지정\n\n1. static, relative\n2. absolute\n3. fixed\n\n## flex\n\n#### Layout 방법\n\n1. table\n2. position\n3. float\n4. flex. 가장 트렌디\n\n#### flex의 기본\n\n```html\n<!doctype>\n<html>\n<head>\n    <style>\n        .container{\n            background-color: powderblue;\n            height:200px;\n            display:flex;\n            flex-direction:row;\n        }\n        .item{\n            background-color: tomato;\n            color:white;\n            border:1px solid white;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"item\">1</div>\n        <div class=\"item\">2</div>\n        <div class=\"item\">3</div>\n        <div class=\"item\">4</div>\n        <div class=\"item\">5</div>\n    </div>\n</body>\n</html>\n```\n\n#### grow & shrink\n\n아이템이 작아지고, 커지는 비율을 지정하는 방법\n\n#### Holy Grail layout\n\n성배 레이아웃\n\n## Reference\n\n생활코딩\n\n\n\n \n\n","source":"_posts/2018-07-06-CSS.md","raw":"---\nlayout: post\ntitle:  \"CSS\"\ndate:   2018-07-06\ncategories: cs\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cs_img.jpg\n---\n\n## HTML에 CSS 삽입하는 방법\n\n1. inline \n\n   ```html\n    <h1 style=\"color:red\">Hello World</h1>\n   ```\n\n2. style tag\n\n   ```html\n    <style>\n         h2{color:blue}\n    </style>\n   ```\n\n## 선택자(selector)와 선언(declaration)\n\n1. 선택하고 (선택자)\n\n2. 선택한 대상에게 효과 (선언)\n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/selector.png)\n\n## 선택자의 종류\n\n1. 아이디 선택자\n\n   ```html\n   <!DOCTYPE html>\n   <html>\n     <head>\n       <style>\n         li{\n           color:red;\n           text-decoration:underline;\n         }\n         #select{\n           font-size:50px;\n         }\n       </style>\n     </head>\n     <body>\n       <ul>\n         <li>HTML</li>\n         <li id=\"select\">CSS</li>\n         <li>JavaScript</li>\n       </ul>\n     </body>\n   </html>\n   ```\n\n2. 클래스 선택자\n\n   ```html\n   <!DOCTYPE html>\n   <html>\n     <head>\n       <style>\n         li{\n           color:red;\n           text-decoration:underline;\n         }\n         #select{\n           font-size:50px;\n         }\n         .deactive{\n             text-decoration: line-through;\n         }\n       </style>\n     </head>\n     <body>\n       <h1 class=\"deactive\">수업의 순서</h1>\n       <ul>\n         <li class=\"deactive\">HTML</li>\n         <li id=\"select\">CSS</li>\n         <li class=\"deactive\">JavaScript</li>\n       </ul>\n     </body>\n   </html>\n   ```\n\n## 부모 자식 선택자\n\n```html\n<style>\n      ul li{\n        color:red;\n      }\n      #lecture>li{\n        border:1px solid red;\n      }\n      ul,ol{\n        background-color: powderblue;\n      }\n</style>\n```\n\n## 상속\n\n부모 엘리먼트의 속성을 자식 엘리먼트가 물려받는 것.\n\n모든 속성이 상속을 지원하는 것은 아님.\n\n## Cascading\n\nCSS : Cascading Style Sheet\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n      li{color:red;}\n      #idsel{color:blue;}\n      .classsel{color:green;}\n    </style>\n  </head>\n  <body>\n    <ul>\n      <li>html</li>\n      <li id=\"idsel\" class=\"classsel\" style=\"color:powderblue\">css</li>\n      <li>javascript</li>\n    </ul>\n    <ol>\n      <li>style attribute</li>\n      <li>id selector</li>\n      <li>class selector</li>\n      <li>tag selector</li>\n    </ol>\n  </body>\n</html>\n```\n\n하나의 태그에 중첩해서 css 적용하면 ?\n\nstyle attribute > id selector > class selector > tag selector \n\n왜?\n\n더 구체적이고 명시적인 style attribute의 우선순위가 가장 높아\n\n\n\n다음과 같이 하면 가장 우선순위가 높아져\n\n```html\nli{color: red !important}\n```\n\n## inline, block level\n\n- 화면 전체를 사용하는 태그 => block element\n- 화면의 일부를 차지하는 태그 => inline level element\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <style>\n        h1,a{border:1px solid red;}\n        h1{display: inline;}\n        a{display:block;}\n    </style>\n  </head>\n  <body>\n    <h1>Hello world</h1>\n    안녕하세요. <a href=\"https://opentutorials.org\">생활코딩</a>입니다.\n  </body>\n</html>\n```\n\n## box model\n\n```html\n<html>\n  <head>\n    <style>\n      p,a {\n        border: 10px solid red;\n        padding: 20px;\n        margin: 50px;\n        height: 30px;\n      }    \n    </style>\n  </head>\n  <body>\n    <p>\n      test\n    </p>\n    <p>\n      kojunhee\n    </p>\n    안녕하세요. <a href=\"test.com\"> 고준희</a>입니다.\n  </body>  \n</html>\n```\n\n## box sizing\n\n```html\n    <!doctype html>\n    <html>\n    <head>\n        <style>\n            *{\n                box-sizing:border-box;\n            }\n            div{\n                margin:10px;\n                width:150px;\n            }\n            #small{\n                border:10px solid black;\n            }\n            #large{\n                border:30px solid black;\n            }\n        </style>\n    </head>\n    <body>\n           <div id=\"small\">Hello</div>\n           <div id=\"large\">Hello</div>\n    </body>\n    </html>\n```\n\n## margin-collapsing\n\n위 태그와 아래 태그의 마진 값 중에 더 큰 값이 두 태그 사이의 간경이 됨\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n      <style>\n          h1{\n              border:1px solid red;\n              margin:100px;\n          }\n      </style>\n  </head>\n  <body>\n  <h1>Hello world</h1>\n  <h1>Hello world</h1>\n  </body>\n</html>\n```\n\n\n\nparent element가 시각적인 요소가 없는 투명한 상태일 때,\n\nparent element 의 마진값과 child element의 마진 값 중에 \n\n큰 쪽의 margin값이 child element의 margin값으로 사용\n\n```html\n<!doctype html>\n<html>\n<head>\n    <style>\n        #parent{\n/*            border:1px solid tomato;*/\n            margin-top:100px;\n        }\n        #child{\n            background-color: powderblue;\n            margin-top:50px;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"parent\">\n        <div id=\"child\">\n            Hello world\n        </div>\n    </div>\n</body>\n</html>\n```\n\n\n\n어떤 태그의 시각적인 요소가 없다면 그 태그의 margin 값은 위 쪽의 margin 값과 아랜 쪽의 margin 중에 더 큰 값이 그 태그의 마진 값이 됨 \n\n```html\n<!doctype html>\n<html>\n<head>\n    <style>\n        #empty{\n            margin-top:50px;\n            margin-bottom: 100px;\n/*            border:1px solid tomato;*/\n        }\n        #normal{\n            background-color: powderblue;\n            margin-top:100px;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"empty\"></div>\n    <div id=\"normal\">normal</div>\n</body>\n</html>\n```\n\n## 포지션\n\nelement의 위치를 지정\n\n1. static, relative\n2. absolute\n3. fixed\n\n## flex\n\n#### Layout 방법\n\n1. table\n2. position\n3. float\n4. flex. 가장 트렌디\n\n#### flex의 기본\n\n```html\n<!doctype>\n<html>\n<head>\n    <style>\n        .container{\n            background-color: powderblue;\n            height:200px;\n            display:flex;\n            flex-direction:row;\n        }\n        .item{\n            background-color: tomato;\n            color:white;\n            border:1px solid white;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"item\">1</div>\n        <div class=\"item\">2</div>\n        <div class=\"item\">3</div>\n        <div class=\"item\">4</div>\n        <div class=\"item\">5</div>\n    </div>\n</body>\n</html>\n```\n\n#### grow & shrink\n\n아이템이 작아지고, 커지는 비율을 지정하는 방법\n\n#### Holy Grail layout\n\n성배 레이아웃\n\n## Reference\n\n생활코딩\n\n\n\n \n\n","slug":"2018-07-06-CSS","published":1,"updated":"2018-07-07T05:18:34.622Z","comments":1,"photos":[],"link":"","_id":"cjp6k65nm00fo31x7gxttlkgx","content":"<h2 id=\"HTML에-CSS-삽입하는-방법\"><a href=\"#HTML에-CSS-삽입하는-방법\" class=\"headerlink\" title=\"HTML에 CSS 삽입하는 방법\"></a>HTML에 CSS 삽입하는 방법</h2><ol>\n<li><p>inline </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:red\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>style tag</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">     h2&#123;color:blue&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"선택자-selector-와-선언-declaration\"><a href=\"#선택자-selector-와-선언-declaration\" class=\"headerlink\" title=\"선택자(selector)와 선언(declaration)\"></a>선택자(selector)와 선언(declaration)</h2><ol>\n<li><p>선택하고 (선택자)</p>\n</li>\n<li><p>선택한 대상에게 효과 (선언)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/selector.png\" alt=\"img\"></p>\n</li>\n</ol>\n<h2 id=\"선택자의-종류\"><a href=\"#선택자의-종류\" class=\"headerlink\" title=\"선택자의 종류\"></a>선택자의 종류</h2><ol>\n<li><p>아이디 선택자</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      li&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        color:red;</span></span><br><span class=\"line\"><span class=\"undefined\">        text-decoration:underline;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      #select&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        font-size:50px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">id</span>=<span class=\"string\">\"select\"</span>&gt;</span>CSS<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>JavaScript<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>클래스 선택자</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      li&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        color:red;</span></span><br><span class=\"line\"><span class=\"undefined\">        text-decoration:underline;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      #select&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        font-size:50px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      .deactive&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          text-decoration: line-through;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"deactive\"</span>&gt;</span>수업의 순서<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"deactive\"</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">id</span>=<span class=\"string\">\"select\"</span>&gt;</span>CSS<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"deactive\"</span>&gt;</span>JavaScript<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"부모-자식-선택자\"><a href=\"#부모-자식-선택자\" class=\"headerlink\" title=\"부모 자식 선택자\"></a>부모 자식 선택자</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      ul li&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        color:red;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      #lecture&gt;li&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        border:1px solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      ul,ol&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-color: powderblue;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"상속\"><a href=\"#상속\" class=\"headerlink\" title=\"상속\"></a>상속</h2><p>부모 엘리먼트의 속성을 자식 엘리먼트가 물려받는 것.</p>\n<p>모든 속성이 상속을 지원하는 것은 아님.</p>\n<h2 id=\"Cascading\"><a href=\"#Cascading\" class=\"headerlink\" title=\"Cascading\"></a>Cascading</h2><p>CSS : Cascading Style Sheet</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      li&#123;color:red;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      #idsel&#123;color:blue;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      .classsel&#123;color:green;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>html<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">id</span>=<span class=\"string\">\"idsel\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"classsel\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:powderblue\"</span>&gt;</span>css<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>javascript<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>style attribute<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>id selector<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>class selector<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>tag selector<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>하나의 태그에 중첩해서 css 적용하면 ?</p>\n<p>style attribute &gt; id selector &gt; class selector &gt; tag selector </p>\n<p>왜?</p>\n<p>더 구체적이고 명시적인 style attribute의 우선순위가 가장 높아</p>\n<p>다음과 같이 하면 가장 우선순위가 높아져</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li&#123;color: red !important&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"inline-block-level\"><a href=\"#inline-block-level\" class=\"headerlink\" title=\"inline, block level\"></a>inline, block level</h2><ul>\n<li>화면 전체를 사용하는 태그 =&gt; block element</li>\n<li>화면의 일부를 차지하는 태그 =&gt; inline level element</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        h1,a&#123;border:1px solid red;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        h1&#123;display: inline;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        a&#123;display:block;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    안녕하세요. <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://opentutorials.org\"</span>&gt;</span>생활코딩<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>입니다.</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"box-model\"><a href=\"#box-model\" class=\"headerlink\" title=\"box model\"></a>box model</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      p,a &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        border: 10px solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">        padding: 20px;</span></span><br><span class=\"line\"><span class=\"undefined\">        margin: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;    </span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      test</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      kojunhee</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    안녕하세요. <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"test.com\"</span>&gt;</span> 고준희<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>입니다.</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"box-sizing\"><a href=\"#box-sizing\" class=\"headerlink\" title=\"box sizing\"></a>box sizing</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        *&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            box-sizing:border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        div&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin:10px;</span></span><br><span class=\"line\"><span class=\"undefined\">            width:150px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        #small&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            border:10px solid black;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        #large&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            border:30px solid black;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"small\"</span>&gt;</span>Hello<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"large\"</span>&gt;</span>Hello<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"margin-collapsing\"><a href=\"#margin-collapsing\" class=\"headerlink\" title=\"margin-collapsing\"></a>margin-collapsing</h2><p>위 태그와 아래 태그의 마진 값 중에 더 큰 값이 두 태그 사이의 간경이 됨</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">          h1&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">              border:1px solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">              margin:100px;</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>parent element가 시각적인 요소가 없는 투명한 상태일 때,</p>\n<p>parent element 의 마진값과 child element의 마진 값 중에 </p>\n<p>큰 쪽의 margin값이 child element의 margin값으로 사용</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        #parent&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">/*            border:1px solid tomato;*/</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-top:100px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        #child&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: powderblue;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-top:50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"parent\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"child\"</span>&gt;</span></span><br><span class=\"line\">            Hello world</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>어떤 태그의 시각적인 요소가 없다면 그 태그의 margin 값은 위 쪽의 margin 값과 아랜 쪽의 margin 중에 더 큰 값이 그 태그의 마진 값이 됨 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        #empty&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-top:50px;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-bottom: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">/*            border:1px solid tomato;*/</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        #normal&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: powderblue;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-top:100px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"empty\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"normal\"</span>&gt;</span>normal<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"포지션\"><a href=\"#포지션\" class=\"headerlink\" title=\"포지션\"></a>포지션</h2><p>element의 위치를 지정</p>\n<ol>\n<li>static, relative</li>\n<li>absolute</li>\n<li>fixed</li>\n</ol>\n<h2 id=\"flex\"><a href=\"#flex\" class=\"headerlink\" title=\"flex\"></a>flex</h2><h4 id=\"Layout-방법\"><a href=\"#Layout-방법\" class=\"headerlink\" title=\"Layout 방법\"></a>Layout 방법</h4><ol>\n<li>table</li>\n<li>position</li>\n<li>float</li>\n<li>flex. 가장 트렌디</li>\n</ol>\n<h4 id=\"flex의-기본\"><a href=\"#flex의-기본\" class=\"headerlink\" title=\"flex의 기본\"></a>flex의 기본</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        .container&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: powderblue;</span></span><br><span class=\"line\"><span class=\"undefined\">            height:200px;</span></span><br><span class=\"line\"><span class=\"undefined\">            display:flex;</span></span><br><span class=\"line\"><span class=\"undefined\">            flex-direction:row;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .item&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: tomato;</span></span><br><span class=\"line\"><span class=\"undefined\">            color:white;</span></span><br><span class=\"line\"><span class=\"undefined\">            border:1px solid white;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"grow-amp-shrink\"><a href=\"#grow-amp-shrink\" class=\"headerlink\" title=\"grow &amp; shrink\"></a>grow &amp; shrink</h4><p>아이템이 작아지고, 커지는 비율을 지정하는 방법</p>\n<h4 id=\"Holy-Grail-layout\"><a href=\"#Holy-Grail-layout\" class=\"headerlink\" title=\"Holy Grail layout\"></a>Holy Grail layout</h4><p>성배 레이아웃</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>생활코딩</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"HTML에-CSS-삽입하는-방법\"><a href=\"#HTML에-CSS-삽입하는-방법\" class=\"headerlink\" title=\"HTML에 CSS 삽입하는 방법\"></a>HTML에 CSS 삽입하는 방법</h2><ol>\n<li><p>inline </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:red\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>style tag</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">     h2&#123;color:blue&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"선택자-selector-와-선언-declaration\"><a href=\"#선택자-selector-와-선언-declaration\" class=\"headerlink\" title=\"선택자(selector)와 선언(declaration)\"></a>선택자(selector)와 선언(declaration)</h2><ol>\n<li><p>선택하고 (선택자)</p>\n</li>\n<li><p>선택한 대상에게 효과 (선언)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/selector.png\" alt=\"img\"></p>\n</li>\n</ol>\n<h2 id=\"선택자의-종류\"><a href=\"#선택자의-종류\" class=\"headerlink\" title=\"선택자의 종류\"></a>선택자의 종류</h2><ol>\n<li><p>아이디 선택자</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      li&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        color:red;</span></span><br><span class=\"line\"><span class=\"undefined\">        text-decoration:underline;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      #select&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        font-size:50px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">id</span>=<span class=\"string\">\"select\"</span>&gt;</span>CSS<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>JavaScript<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>클래스 선택자</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      li&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        color:red;</span></span><br><span class=\"line\"><span class=\"undefined\">        text-decoration:underline;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      #select&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        font-size:50px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      .deactive&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          text-decoration: line-through;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"deactive\"</span>&gt;</span>수업의 순서<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"deactive\"</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">id</span>=<span class=\"string\">\"select\"</span>&gt;</span>CSS<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"deactive\"</span>&gt;</span>JavaScript<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"부모-자식-선택자\"><a href=\"#부모-자식-선택자\" class=\"headerlink\" title=\"부모 자식 선택자\"></a>부모 자식 선택자</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      ul li&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        color:red;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      #lecture&gt;li&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        border:1px solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      ul,ol&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-color: powderblue;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"상속\"><a href=\"#상속\" class=\"headerlink\" title=\"상속\"></a>상속</h2><p>부모 엘리먼트의 속성을 자식 엘리먼트가 물려받는 것.</p>\n<p>모든 속성이 상속을 지원하는 것은 아님.</p>\n<h2 id=\"Cascading\"><a href=\"#Cascading\" class=\"headerlink\" title=\"Cascading\"></a>Cascading</h2><p>CSS : Cascading Style Sheet</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      li&#123;color:red;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      #idsel&#123;color:blue;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      .classsel&#123;color:green;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>html<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">id</span>=<span class=\"string\">\"idsel\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"classsel\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:powderblue\"</span>&gt;</span>css<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>javascript<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>style attribute<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>id selector<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>class selector<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>tag selector<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>하나의 태그에 중첩해서 css 적용하면 ?</p>\n<p>style attribute &gt; id selector &gt; class selector &gt; tag selector </p>\n<p>왜?</p>\n<p>더 구체적이고 명시적인 style attribute의 우선순위가 가장 높아</p>\n<p>다음과 같이 하면 가장 우선순위가 높아져</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li&#123;color: red !important&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"inline-block-level\"><a href=\"#inline-block-level\" class=\"headerlink\" title=\"inline, block level\"></a>inline, block level</h2><ul>\n<li>화면 전체를 사용하는 태그 =&gt; block element</li>\n<li>화면의 일부를 차지하는 태그 =&gt; inline level element</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        h1,a&#123;border:1px solid red;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        h1&#123;display: inline;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        a&#123;display:block;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    안녕하세요. <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://opentutorials.org\"</span>&gt;</span>생활코딩<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>입니다.</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"box-model\"><a href=\"#box-model\" class=\"headerlink\" title=\"box model\"></a>box model</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      p,a &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        border: 10px solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">        padding: 20px;</span></span><br><span class=\"line\"><span class=\"undefined\">        margin: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 30px;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;    </span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      test</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      kojunhee</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    안녕하세요. <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"test.com\"</span>&gt;</span> 고준희<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>입니다.</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"box-sizing\"><a href=\"#box-sizing\" class=\"headerlink\" title=\"box sizing\"></a>box sizing</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        *&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            box-sizing:border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        div&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin:10px;</span></span><br><span class=\"line\"><span class=\"undefined\">            width:150px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        #small&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            border:10px solid black;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        #large&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            border:30px solid black;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"small\"</span>&gt;</span>Hello<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"large\"</span>&gt;</span>Hello<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"margin-collapsing\"><a href=\"#margin-collapsing\" class=\"headerlink\" title=\"margin-collapsing\"></a>margin-collapsing</h2><p>위 태그와 아래 태그의 마진 값 중에 더 큰 값이 두 태그 사이의 간경이 됨</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">          h1&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">              border:1px solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">              margin:100px;</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>parent element가 시각적인 요소가 없는 투명한 상태일 때,</p>\n<p>parent element 의 마진값과 child element의 마진 값 중에 </p>\n<p>큰 쪽의 margin값이 child element의 margin값으로 사용</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        #parent&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">/*            border:1px solid tomato;*/</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-top:100px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        #child&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: powderblue;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-top:50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"parent\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"child\"</span>&gt;</span></span><br><span class=\"line\">            Hello world</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>어떤 태그의 시각적인 요소가 없다면 그 태그의 margin 값은 위 쪽의 margin 값과 아랜 쪽의 margin 중에 더 큰 값이 그 태그의 마진 값이 됨 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        #empty&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-top:50px;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-bottom: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">/*            border:1px solid tomato;*/</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        #normal&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: powderblue;</span></span><br><span class=\"line\"><span class=\"undefined\">            margin-top:100px;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"empty\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"normal\"</span>&gt;</span>normal<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"포지션\"><a href=\"#포지션\" class=\"headerlink\" title=\"포지션\"></a>포지션</h2><p>element의 위치를 지정</p>\n<ol>\n<li>static, relative</li>\n<li>absolute</li>\n<li>fixed</li>\n</ol>\n<h2 id=\"flex\"><a href=\"#flex\" class=\"headerlink\" title=\"flex\"></a>flex</h2><h4 id=\"Layout-방법\"><a href=\"#Layout-방법\" class=\"headerlink\" title=\"Layout 방법\"></a>Layout 방법</h4><ol>\n<li>table</li>\n<li>position</li>\n<li>float</li>\n<li>flex. 가장 트렌디</li>\n</ol>\n<h4 id=\"flex의-기본\"><a href=\"#flex의-기본\" class=\"headerlink\" title=\"flex의 기본\"></a>flex의 기본</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        .container&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: powderblue;</span></span><br><span class=\"line\"><span class=\"undefined\">            height:200px;</span></span><br><span class=\"line\"><span class=\"undefined\">            display:flex;</span></span><br><span class=\"line\"><span class=\"undefined\">            flex-direction:row;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        .item&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            background-color: tomato;</span></span><br><span class=\"line\"><span class=\"undefined\">            color:white;</span></span><br><span class=\"line\"><span class=\"undefined\">            border:1px solid white;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"grow-amp-shrink\"><a href=\"#grow-amp-shrink\" class=\"headerlink\" title=\"grow &amp; shrink\"></a>grow &amp; shrink</h4><p>아이템이 작아지고, 커지는 비율을 지정하는 방법</p>\n<h4 id=\"Holy-Grail-layout\"><a href=\"#Holy-Grail-layout\" class=\"headerlink\" title=\"Holy Grail layout\"></a>Holy Grail layout</h4><p>성배 레이아웃</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>생활코딩</p>\n"},{"layout":"post","title":"마지막 생존자","date":"2018-07-17T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://koitp.org/problem/SDS_TEST_SURVIVOR/read/>\n\n## 풀이\n\n이차원 배열을 순차탐색하여, 해당 index와 주변 8개의 값을 체크한다.\n\n쉬운 문제인데, 오랜만에 알고리즘 문제를 푸니 오래걸렸다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity03.png)\n\n","source":"_posts/2018-07-18-마지막 생존자.md","raw":"---\nlayout: post\ntitle:  \"마지막 생존자\"\ndate:   2018-07-18\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://koitp.org/problem/SDS_TEST_SURVIVOR/read/>\n\n## 풀이\n\n이차원 배열을 순차탐색하여, 해당 index와 주변 8개의 값을 체크한다.\n\n쉬운 문제인데, 오랜만에 알고리즘 문제를 푸니 오래걸렸다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity03.png)\n\n","slug":"2018-07-18-마지막 생존자","published":1,"updated":"2018-07-19T05:48:08.352Z","comments":1,"photos":[],"link":"","_id":"cjp6k65no00fq31x7612y4s8e","content":"<p><a href=\"https://koitp.org/problem/SDS_TEST_SURVIVOR/read/\" target=\"_blank\" rel=\"noopener\">https://koitp.org/problem/SDS_TEST_SURVIVOR/read/</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>이차원 배열을 순차탐색하여, 해당 index와 주변 8개의 값을 체크한다.</p>\n<p>쉬운 문제인데, 오랜만에 알고리즘 문제를 푸니 오래걸렸다.</p>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://koitp.org/problem/SDS_TEST_SURVIVOR/read/\" target=\"_blank\" rel=\"noopener\">https://koitp.org/problem/SDS_TEST_SURVIVOR/read/</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>이차원 배열을 순차탐색하여, 해당 index와 주변 8개의 값을 체크한다.</p>\n<p>쉬운 문제인데, 오랜만에 알고리즘 문제를 푸니 오래걸렸다.</p>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsCity03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"쉬어가는 페이지","date":"2018-07-17T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://koitp.org/problem/SDS_TEST_PAGE/read/>\n\n## 풀이\n\ns에 j 를 더한 값이 쉬어 가는 page 인지 체크.\n\n쉬운 문제인데, 오랜만에 알고리즘 문제를 푸니 오래걸렸다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsTest01.png)![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsTest02.png)\n","source":"_posts/2018-07-18-쉬어가는 페이지.md","raw":"---\nlayout: post\ntitle:  \"쉬어가는 페이지\"\ndate:   2018-07-18\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://koitp.org/problem/SDS_TEST_PAGE/read/>\n\n## 풀이\n\ns에 j 를 더한 값이 쉬어 가는 page 인지 체크.\n\n쉬운 문제인데, 오랜만에 알고리즘 문제를 푸니 오래걸렸다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsTest01.png)![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsTest02.png)\n","slug":"2018-07-18-쉬어가는 페이지","published":1,"updated":"2018-07-19T04:32:06.395Z","comments":1,"photos":[],"link":"","_id":"cjp6k65nq00fs31x77jwmtbce","content":"<p><a href=\"https://koitp.org/problem/SDS_TEST_PAGE/read/\" target=\"_blank\" rel=\"noopener\">https://koitp.org/problem/SDS_TEST_PAGE/read/</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>s에 j 를 더한 값이 쉬어 가는 page 인지 체크.</p>\n<p>쉬운 문제인데, 오랜만에 알고리즘 문제를 푸니 오래걸렸다.</p>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsTest01.png\" alt=\"img\"><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsTest02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://koitp.org/problem/SDS_TEST_PAGE/read/\" target=\"_blank\" rel=\"noopener\">https://koitp.org/problem/SDS_TEST_PAGE/read/</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>s에 j 를 더한 값이 쉬어 가는 page 인지 체크.</p>\n<p>쉬운 문제인데, 오랜만에 알고리즘 문제를 푸니 오래걸렸다.</p>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsTest01.png\" alt=\"img\"><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sdsTest02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"드래곤 커브","date":"2018-08-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/15685>\n\n삼성 코딩 테스트 보러 가서 풀지 못한 문제이다. 시뮬레이션 문제이다.\n\n## 풀이\n\n우선 규칙을 찾아야한다.\n\n시작점이 (4,2), 첫 시작방향이 북쪽(1), 차원이 3차원을 그림으로 그려 확인해보자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon01.png)\n\n이를 숫자를 이용해 테이블로 나타내면 다음과 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon02.png)\n\n위의 테이블에서 알 수 있듯이, n차원의 요소들은 n-1차원의 요소들을 그대로 가지고, +1씩 더한 요소들을 추가적으로 가진다.\n\n여기서 중요한 것은, 남쪽 방향(3)은 다음 차례에서 동쪽 방향(0)으로 추가된다\n\n따라서 다음과 같은 플로우로 문제를 푼다.\n\n1. 드레곤 커브의 개수 만큼 어레이리스트를 생성한다.\n2. 바로 전 리스트 요소 복사하고 새로운 요소를 추가함으로써, i번째 어레이리스트를 setting 한다. \n3. i번째 어레이리스트를 map에 그린다.\n4. 2번과 3번의 작업을 모두 마치고, 직사각형의 개수를 count 한다.\n\n##  코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon05.png)","source":"_posts/2018-08-30-드래곤커브.md","raw":"---\nlayout: post\ntitle:  \"드래곤 커브\"\ndate:   2018-08-30\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/15685>\n\n삼성 코딩 테스트 보러 가서 풀지 못한 문제이다. 시뮬레이션 문제이다.\n\n## 풀이\n\n우선 규칙을 찾아야한다.\n\n시작점이 (4,2), 첫 시작방향이 북쪽(1), 차원이 3차원을 그림으로 그려 확인해보자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon01.png)\n\n이를 숫자를 이용해 테이블로 나타내면 다음과 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon02.png)\n\n위의 테이블에서 알 수 있듯이, n차원의 요소들은 n-1차원의 요소들을 그대로 가지고, +1씩 더한 요소들을 추가적으로 가진다.\n\n여기서 중요한 것은, 남쪽 방향(3)은 다음 차례에서 동쪽 방향(0)으로 추가된다\n\n따라서 다음과 같은 플로우로 문제를 푼다.\n\n1. 드레곤 커브의 개수 만큼 어레이리스트를 생성한다.\n2. 바로 전 리스트 요소 복사하고 새로운 요소를 추가함으로써, i번째 어레이리스트를 setting 한다. \n3. i번째 어레이리스트를 map에 그린다.\n4. 2번과 3번의 작업을 모두 마치고, 직사각형의 개수를 count 한다.\n\n##  코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon05.png)","slug":"2018-08-30-드래곤커브","published":1,"updated":"2018-08-30T09:34:23.621Z","comments":1,"photos":[],"link":"","_id":"cjp6k65nv00fu31x7wal0laum","content":"<p><a href=\"https://www.acmicpc.net/problem/15685\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/15685</a></p>\n<p>삼성 코딩 테스트 보러 가서 풀지 못한 문제이다. 시뮬레이션 문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>우선 규칙을 찾아야한다.</p>\n<p>시작점이 (4,2), 첫 시작방향이 북쪽(1), 차원이 3차원을 그림으로 그려 확인해보자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon01.png\" alt=\"img\"></p>\n<p>이를 숫자를 이용해 테이블로 나타내면 다음과 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon02.png\" alt=\"img\"></p>\n<p>위의 테이블에서 알 수 있듯이, n차원의 요소들은 n-1차원의 요소들을 그대로 가지고, +1씩 더한 요소들을 추가적으로 가진다.</p>\n<p>여기서 중요한 것은, 남쪽 방향(3)은 다음 차례에서 동쪽 방향(0)으로 추가된다</p>\n<p>따라서 다음과 같은 플로우로 문제를 푼다.</p>\n<ol>\n<li>드레곤 커브의 개수 만큼 어레이리스트를 생성한다.</li>\n<li>바로 전 리스트 요소 복사하고 새로운 요소를 추가함으로써, i번째 어레이리스트를 setting 한다. </li>\n<li>i번째 어레이리스트를 map에 그린다.</li>\n<li>2번과 3번의 작업을 모두 마치고, 직사각형의 개수를 count 한다.</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon05.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/15685\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/15685</a></p>\n<p>삼성 코딩 테스트 보러 가서 풀지 못한 문제이다. 시뮬레이션 문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>우선 규칙을 찾아야한다.</p>\n<p>시작점이 (4,2), 첫 시작방향이 북쪽(1), 차원이 3차원을 그림으로 그려 확인해보자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon01.png\" alt=\"img\"></p>\n<p>이를 숫자를 이용해 테이블로 나타내면 다음과 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon02.png\" alt=\"img\"></p>\n<p>위의 테이블에서 알 수 있듯이, n차원의 요소들은 n-1차원의 요소들을 그대로 가지고, +1씩 더한 요소들을 추가적으로 가진다.</p>\n<p>여기서 중요한 것은, 남쪽 방향(3)은 다음 차례에서 동쪽 방향(0)으로 추가된다</p>\n<p>따라서 다음과 같은 플로우로 문제를 푼다.</p>\n<ol>\n<li>드레곤 커브의 개수 만큼 어레이리스트를 생성한다.</li>\n<li>바로 전 리스트 요소 복사하고 새로운 요소를 추가함으로써, i번째 어레이리스트를 setting 한다. </li>\n<li>i번째 어레이리스트를 map에 그린다.</li>\n<li>2번과 3번의 작업을 모두 마치고, 직사각형의 개수를 count 한다.</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dragon05.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"경사로","date":"2018-08-31T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14890>\n\n삼성 코딩 테스트 기출 문제이다.\n\n시뮬레이션 문제이다.\n\n## 풀이\n\n1. 행을 모두 체크한다.\n\n   - i행의 j열은 세 가지 경우로 나뉜다.\n\n     - j+1열과 같은 높이\n       - j+1열을 체크한다.\n     - j+1열 높이보다 1작음\n       - 왼쪽 방향으로 경사로를 세울 수 있는지 체크한다. \n       - 다음 그림과 같이 1번 지점은 j+1열 높이보다 1 작기 때문에 2번 방향으로 체크한다.\n\n     ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy011.png)\n\n     - j+1열 높이보다 1높음\n       - 오른쪽 방향으로 경사로를 세울 수 있는지 체크한다. \n       - 다음 그림과 같이 1번 지점은 j+1열 높이보다 1 높기 때문에 2번 방향으로 체크한다. \n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy002.png)\n\n2. 열을 모두 체크한다.\n\n   행을 체크하는 경우와 동일하다.\n\n\n\n코드로 옮기는 것이 쉽지 않아 해설을 보고 해결했다.\n\n##  코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy06.png)","source":"_posts/2018-09-01-경사로.md","raw":"---\nlayout: post\ntitle:  \"경사로\"\ndate:   2018-09-01\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14890>\n\n삼성 코딩 테스트 기출 문제이다.\n\n시뮬레이션 문제이다.\n\n## 풀이\n\n1. 행을 모두 체크한다.\n\n   - i행의 j열은 세 가지 경우로 나뉜다.\n\n     - j+1열과 같은 높이\n       - j+1열을 체크한다.\n     - j+1열 높이보다 1작음\n       - 왼쪽 방향으로 경사로를 세울 수 있는지 체크한다. \n       - 다음 그림과 같이 1번 지점은 j+1열 높이보다 1 작기 때문에 2번 방향으로 체크한다.\n\n     ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy011.png)\n\n     - j+1열 높이보다 1높음\n       - 오른쪽 방향으로 경사로를 세울 수 있는지 체크한다. \n       - 다음 그림과 같이 1번 지점은 j+1열 높이보다 1 높기 때문에 2번 방향으로 체크한다. \n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy002.png)\n\n2. 열을 모두 체크한다.\n\n   행을 체크하는 경우와 동일하다.\n\n\n\n코드로 옮기는 것이 쉽지 않아 해설을 보고 해결했다.\n\n##  코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy06.png)","slug":"2018-09-01-경사로","published":1,"updated":"2018-09-02T09:08:17.189Z","comments":1,"photos":[],"link":"","_id":"cjp6k65o100fw31x7oaqed6km","content":"<p><a href=\"https://www.acmicpc.net/problem/14890\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14890</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>시뮬레이션 문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>행을 모두 체크한다.</p>\n<ul>\n<li><p>i행의 j열은 세 가지 경우로 나뉜다.</p>\n<ul>\n<li>j+1열과 같은 높이<ul>\n<li>j+1열을 체크한다.</li>\n</ul>\n</li>\n<li>j+1열 높이보다 1작음<ul>\n<li>왼쪽 방향으로 경사로를 세울 수 있는지 체크한다. </li>\n<li>다음 그림과 같이 1번 지점은 j+1열 높이보다 1 작기 때문에 2번 방향으로 체크한다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy011.png\" alt=\"img\"></p>\n<ul>\n<li>j+1열 높이보다 1높음<ul>\n<li>오른쪽 방향으로 경사로를 세울 수 있는지 체크한다. </li>\n<li>다음 그림과 같이 1번 지점은 j+1열 높이보다 1 높기 때문에 2번 방향으로 체크한다. </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy002.png\" alt=\"img\"></p>\n</li>\n<li><p>열을 모두 체크한다.</p>\n<p>행을 체크하는 경우와 동일하다.</p>\n</li>\n</ol>\n<p>코드로 옮기는 것이 쉽지 않아 해설을 보고 해결했다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy06.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14890\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14890</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>시뮬레이션 문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>행을 모두 체크한다.</p>\n<ul>\n<li><p>i행의 j열은 세 가지 경우로 나뉜다.</p>\n<ul>\n<li>j+1열과 같은 높이<ul>\n<li>j+1열을 체크한다.</li>\n</ul>\n</li>\n<li>j+1열 높이보다 1작음<ul>\n<li>왼쪽 방향으로 경사로를 세울 수 있는지 체크한다. </li>\n<li>다음 그림과 같이 1번 지점은 j+1열 높이보다 1 작기 때문에 2번 방향으로 체크한다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy011.png\" alt=\"img\"></p>\n<ul>\n<li>j+1열 높이보다 1높음<ul>\n<li>오른쪽 방향으로 경사로를 세울 수 있는지 체크한다. </li>\n<li>다음 그림과 같이 1번 지점은 j+1열 높이보다 1 높기 때문에 2번 방향으로 체크한다. </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy002.png\" alt=\"img\"></p>\n</li>\n<li><p>열을 모두 체크한다.</p>\n<p>행을 체크하는 경우와 동일하다.</p>\n</li>\n</ol>\n<p>코드로 옮기는 것이 쉽지 않아 해설을 보고 해결했다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayy06.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"스타트와링크","date":"2018-08-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14889>\n\n삼성 코딩 테스트 기출 문제이다.\n\n시뮬레이션 + 조합 으로 해결하였다.\n\n## 풀이\n\n플로우는 다음과 같다.\n\n1. 팀을 배분한다.\n2. 배분한 팀 각각의 능력치의 합을 구한다.\n3. 두 팀 간의 능력치 차이를 구한다.\n\n\n\n우선, 팀을 배분하는 방법부터 보자.\n\n총 6명이 있다고 하자 : 1번, 2번, 3번, 4번, 5번, 6번\n\n6명이므로 3명 / 3명으로 팀을 나누어야한다.\n\n1번은 5명 중 2명과 팀을 이룬다. 즉, <sub>5</sub>C<sub>2</sub>\n\n- (1, 2, 3)\n- (1, 2, 4)\n- (1, 2, 5)\n- (1, 2, 6)\n- (1, 3, 4)\n- (1, 3, 5)\n- (1, 3, 6)\n- (1, 4, 5)\n- (1, 4, 6)\n- (1, 5, 6)\n\n위와 같이 1번이 팀을 이루면, 나머지 사람들이 자동적으로 팀을 이루게 된다.\n\n\n\n이제, 배분한 팀 각각의 능력치의 합을 구한다.\n\n(1, 2, 3) 을 예로 들자. 1번이 2번, 3번과 팀을 이루었으니 (4, 5, 6)이 한 팀을 이룬다.\n\n- (1, 2, 3) 팀의 능력치의 합\n  - S12 + S13 + S21 + S23 + S31 + S32\n- (4, 5, 6) 팀의 능력치의 합\n  -  S45 + S46 + S54 + 56 + S64 + S65\n\n다음 배열을 이용해 계산한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam03.png)\n\n\n\n마지막으로, 두 팀 간의 능력치 차이를 구한다.\n\n위에서 배분한 팀 각각의 능력치의 합을 구하였으므로, 쉽게 차를 구할 수 있다.\n\n##  코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam02.png)\n\n","source":"_posts/2018-08-31-스타트와링크.md","raw":"---\nlayout: post\ntitle:  \"스타트와링크\"\ndate:   2018-08-31\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14889>\n\n삼성 코딩 테스트 기출 문제이다.\n\n시뮬레이션 + 조합 으로 해결하였다.\n\n## 풀이\n\n플로우는 다음과 같다.\n\n1. 팀을 배분한다.\n2. 배분한 팀 각각의 능력치의 합을 구한다.\n3. 두 팀 간의 능력치 차이를 구한다.\n\n\n\n우선, 팀을 배분하는 방법부터 보자.\n\n총 6명이 있다고 하자 : 1번, 2번, 3번, 4번, 5번, 6번\n\n6명이므로 3명 / 3명으로 팀을 나누어야한다.\n\n1번은 5명 중 2명과 팀을 이룬다. 즉, <sub>5</sub>C<sub>2</sub>\n\n- (1, 2, 3)\n- (1, 2, 4)\n- (1, 2, 5)\n- (1, 2, 6)\n- (1, 3, 4)\n- (1, 3, 5)\n- (1, 3, 6)\n- (1, 4, 5)\n- (1, 4, 6)\n- (1, 5, 6)\n\n위와 같이 1번이 팀을 이루면, 나머지 사람들이 자동적으로 팀을 이루게 된다.\n\n\n\n이제, 배분한 팀 각각의 능력치의 합을 구한다.\n\n(1, 2, 3) 을 예로 들자. 1번이 2번, 3번과 팀을 이루었으니 (4, 5, 6)이 한 팀을 이룬다.\n\n- (1, 2, 3) 팀의 능력치의 합\n  - S12 + S13 + S21 + S23 + S31 + S32\n- (4, 5, 6) 팀의 능력치의 합\n  -  S45 + S46 + S54 + 56 + S64 + S65\n\n다음 배열을 이용해 계산한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam03.png)\n\n\n\n마지막으로, 두 팀 간의 능력치 차이를 구한다.\n\n위에서 배분한 팀 각각의 능력치의 합을 구하였으므로, 쉽게 차를 구할 수 있다.\n\n##  코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam02.png)\n\n","slug":"2018-08-31-스타트와링크","published":1,"updated":"2018-08-31T12:29:42.631Z","comments":1,"photos":[],"link":"","_id":"cjp6k65o300fy31x7tuk0r8fy","content":"<p><a href=\"https://www.acmicpc.net/problem/14889\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14889</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>시뮬레이션 + 조합 으로 해결하였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>플로우는 다음과 같다.</p>\n<ol>\n<li>팀을 배분한다.</li>\n<li>배분한 팀 각각의 능력치의 합을 구한다.</li>\n<li>두 팀 간의 능력치 차이를 구한다.</li>\n</ol>\n<p>우선, 팀을 배분하는 방법부터 보자.</p>\n<p>총 6명이 있다고 하자 : 1번, 2번, 3번, 4번, 5번, 6번</p>\n<p>6명이므로 3명 / 3명으로 팀을 나누어야한다.</p>\n<p>1번은 5명 중 2명과 팀을 이룬다. 즉, <sub>5</sub>C<sub>2</sub></p>\n<ul>\n<li>(1, 2, 3)</li>\n<li>(1, 2, 4)</li>\n<li>(1, 2, 5)</li>\n<li>(1, 2, 6)</li>\n<li>(1, 3, 4)</li>\n<li>(1, 3, 5)</li>\n<li>(1, 3, 6)</li>\n<li>(1, 4, 5)</li>\n<li>(1, 4, 6)</li>\n<li>(1, 5, 6)</li>\n</ul>\n<p>위와 같이 1번이 팀을 이루면, 나머지 사람들이 자동적으로 팀을 이루게 된다.</p>\n<p>이제, 배분한 팀 각각의 능력치의 합을 구한다.</p>\n<p>(1, 2, 3) 을 예로 들자. 1번이 2번, 3번과 팀을 이루었으니 (4, 5, 6)이 한 팀을 이룬다.</p>\n<ul>\n<li>(1, 2, 3) 팀의 능력치의 합<ul>\n<li>S12 + S13 + S21 + S23 + S31 + S32</li>\n</ul>\n</li>\n<li>(4, 5, 6) 팀의 능력치의 합<ul>\n<li>S45 + S46 + S54 + 56 + S64 + S65</li>\n</ul>\n</li>\n</ul>\n<p>다음 배열을 이용해 계산한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam03.png\" alt=\"img\"></p>\n<p>마지막으로, 두 팀 간의 능력치 차이를 구한다.</p>\n<p>위에서 배분한 팀 각각의 능력치의 합을 구하였으므로, 쉽게 차를 구할 수 있다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14889\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14889</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>시뮬레이션 + 조합 으로 해결하였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>플로우는 다음과 같다.</p>\n<ol>\n<li>팀을 배분한다.</li>\n<li>배분한 팀 각각의 능력치의 합을 구한다.</li>\n<li>두 팀 간의 능력치 차이를 구한다.</li>\n</ol>\n<p>우선, 팀을 배분하는 방법부터 보자.</p>\n<p>총 6명이 있다고 하자 : 1번, 2번, 3번, 4번, 5번, 6번</p>\n<p>6명이므로 3명 / 3명으로 팀을 나누어야한다.</p>\n<p>1번은 5명 중 2명과 팀을 이룬다. 즉, <sub>5</sub>C<sub>2</sub></p>\n<ul>\n<li>(1, 2, 3)</li>\n<li>(1, 2, 4)</li>\n<li>(1, 2, 5)</li>\n<li>(1, 2, 6)</li>\n<li>(1, 3, 4)</li>\n<li>(1, 3, 5)</li>\n<li>(1, 3, 6)</li>\n<li>(1, 4, 5)</li>\n<li>(1, 4, 6)</li>\n<li>(1, 5, 6)</li>\n</ul>\n<p>위와 같이 1번이 팀을 이루면, 나머지 사람들이 자동적으로 팀을 이루게 된다.</p>\n<p>이제, 배분한 팀 각각의 능력치의 합을 구한다.</p>\n<p>(1, 2, 3) 을 예로 들자. 1번이 2번, 3번과 팀을 이루었으니 (4, 5, 6)이 한 팀을 이룬다.</p>\n<ul>\n<li>(1, 2, 3) 팀의 능력치의 합<ul>\n<li>S12 + S13 + S21 + S23 + S31 + S32</li>\n</ul>\n</li>\n<li>(4, 5, 6) 팀의 능력치의 합<ul>\n<li>S45 + S46 + S54 + 56 + S64 + S65</li>\n</ul>\n</li>\n</ul>\n<p>다음 배열을 이용해 계산한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam03.png\" alt=\"img\"></p>\n<p>마지막으로, 두 팀 간의 능력치 차이를 구한다.</p>\n<p>위에서 배분한 팀 각각의 능력치의 합을 구하였으므로, 쉽게 차를 구할 수 있다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/startTeam02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"톱니바퀴","date":"2018-09-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14891>\n\n삼성 코딩 테스트 기출 문제이다.\n\n시뮬레이션 문제이다.\n\n시간이 많이 걸렸지만, 쉬운문제였다.\n\n## 풀이\n\n다음 톱니바퀴 상태를 예로 들자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear01.png)\n\n이를 테이블로 나타내면 다음과 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear02.png)\n\n위의 테이블에서 같읕 색깔의 네모로 체크 된 것이 맞닿는 부분이다.\n\n\n\n3번 톱니바퀴를 돌린다고 하면,\n\n- 3번 톱니바퀴 기준, 왼쪽 톱니바퀴들을 모두 확인한다.\n  - 2번 톱니바퀴와 닿는 부분이 같은 극이기 때문에 회전하지 못한다. 더 이상 왼쪽 톱니바퀴들을 확인하지 않는다.\n\n- 3번 톱니바퀴 기준, 오른쪽 톱니바퀴들을 모두 확인한다.\n  - 4번 톱니바퀴와 닿는 부분이 다른 극이기 때문에 회전할 수 있다. \n\n- 각 톱니바퀴들을 모두 회전시킨다.(shift)\n\n##  코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear06.png)","source":"_posts/2018-09-04-톱니바퀴.md","raw":"---\nlayout: post\ntitle:  \"톱니바퀴\"\ndate:   2018-09-04\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14891>\n\n삼성 코딩 테스트 기출 문제이다.\n\n시뮬레이션 문제이다.\n\n시간이 많이 걸렸지만, 쉬운문제였다.\n\n## 풀이\n\n다음 톱니바퀴 상태를 예로 들자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear01.png)\n\n이를 테이블로 나타내면 다음과 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear02.png)\n\n위의 테이블에서 같읕 색깔의 네모로 체크 된 것이 맞닿는 부분이다.\n\n\n\n3번 톱니바퀴를 돌린다고 하면,\n\n- 3번 톱니바퀴 기준, 왼쪽 톱니바퀴들을 모두 확인한다.\n  - 2번 톱니바퀴와 닿는 부분이 같은 극이기 때문에 회전하지 못한다. 더 이상 왼쪽 톱니바퀴들을 확인하지 않는다.\n\n- 3번 톱니바퀴 기준, 오른쪽 톱니바퀴들을 모두 확인한다.\n  - 4번 톱니바퀴와 닿는 부분이 다른 극이기 때문에 회전할 수 있다. \n\n- 각 톱니바퀴들을 모두 회전시킨다.(shift)\n\n##  코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear06.png)","slug":"2018-09-04-톱니바퀴","published":1,"updated":"2018-09-04T08:12:23.142Z","comments":1,"photos":[],"link":"","_id":"cjp6k65o600g031x7rzeomqeq","content":"<p><a href=\"https://www.acmicpc.net/problem/14891\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14891</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>시뮬레이션 문제이다.</p>\n<p>시간이 많이 걸렸지만, 쉬운문제였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>다음 톱니바퀴 상태를 예로 들자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear01.png\" alt=\"img\"></p>\n<p>이를 테이블로 나타내면 다음과 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear02.png\" alt=\"img\"></p>\n<p>위의 테이블에서 같읕 색깔의 네모로 체크 된 것이 맞닿는 부분이다.</p>\n<p>3번 톱니바퀴를 돌린다고 하면,</p>\n<ul>\n<li><p>3번 톱니바퀴 기준, 왼쪽 톱니바퀴들을 모두 확인한다.</p>\n<ul>\n<li>2번 톱니바퀴와 닿는 부분이 같은 극이기 때문에 회전하지 못한다. 더 이상 왼쪽 톱니바퀴들을 확인하지 않는다.</li>\n</ul>\n</li>\n<li><p>3번 톱니바퀴 기준, 오른쪽 톱니바퀴들을 모두 확인한다.</p>\n<ul>\n<li>4번 톱니바퀴와 닿는 부분이 다른 극이기 때문에 회전할 수 있다. </li>\n</ul>\n</li>\n<li><p>각 톱니바퀴들을 모두 회전시킨다.(shift)</p>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear06.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14891\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14891</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>시뮬레이션 문제이다.</p>\n<p>시간이 많이 걸렸지만, 쉬운문제였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>다음 톱니바퀴 상태를 예로 들자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear01.png\" alt=\"img\"></p>\n<p>이를 테이블로 나타내면 다음과 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear02.png\" alt=\"img\"></p>\n<p>위의 테이블에서 같읕 색깔의 네모로 체크 된 것이 맞닿는 부분이다.</p>\n<p>3번 톱니바퀴를 돌린다고 하면,</p>\n<ul>\n<li><p>3번 톱니바퀴 기준, 왼쪽 톱니바퀴들을 모두 확인한다.</p>\n<ul>\n<li>2번 톱니바퀴와 닿는 부분이 같은 극이기 때문에 회전하지 못한다. 더 이상 왼쪽 톱니바퀴들을 확인하지 않는다.</li>\n</ul>\n</li>\n<li><p>3번 톱니바퀴 기준, 오른쪽 톱니바퀴들을 모두 확인한다.</p>\n<ul>\n<li>4번 톱니바퀴와 닿는 부분이 다른 극이기 때문에 회전할 수 있다. </li>\n</ul>\n</li>\n<li><p>각 톱니바퀴들을 모두 회전시킨다.(shift)</p>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/gear06.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"연산자 끼워넣기","date":"2018-09-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14888>\n\n삼성 코딩 테스트 기출 문제이다.\n\n시간 초과가 났다.\n\n## 오답 풀이\n\n다음의 예를 보자.\n\n숫자 : 1 2 3 4 5 6\n\n연산자 : 2 1 1 1\n\n<br>\n\n따라서 연산자는 다음과 같다.\n\n +, +, -, *, /\n\n<br>\n\n경우의 수는 같은 것을 포함하는 순열이다. \n\n5! / 2!\n\n<br>\n\n각각의 경우에 숫자를 이용해 계산을 하고, 계산 값들 중에 최소값, 최대값을 찾는다.\n\n##  오답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator03.png)\n\n\n\n## 정답 풀이\n\n시뮬렌이션 문제라고 생각했다.\n\n해설을 보고 완전 탐색 문제란 것을 알았다. 따라서 BFS or DFS 로 풀 수 있다. 익숙한 BFS로 해결하였다.\n\n<br>\n\n다음의 예시에서 나올 수 있는 모든 경우의 수를 그림으로 그려보자.\n\n숫자 : 1, 2, 3, 4 \n\n연산자 : +, +, * \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOp10.png)\n\n<br>\n\n문제에서 주어진대로, 숫자는 순서를 그대로 유지한다. \n\n1 다음에 오는 숫자는 2다. 1과 2를 계산할 수 있는 연산자는 + 와 * 이다. 이 두 경우를 큐에 넣는다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper05.png)\n\n1+2 와 3 을 계산 할 수 있는 연산자는 +와 * 이다. 이 두 경우를 큐에 넣는다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper06.png)\n\n이와 같은 방식으로 모든 경우의 수를 큐에 넣는다. \n\n모든 연산자를 사용 했을 때(트리의 마지막 depth)가 최종 결과값 이므로, 이들 중에 최대값 및 최소값을 구한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOp11.png)\n\n## 정답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper03.png)\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-09-05-연산자 끼워넣기.md","raw":"---\nlayout: post\ntitle:  \"연산자 끼워넣기\"\ndate:   2018-09-05\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14888>\n\n삼성 코딩 테스트 기출 문제이다.\n\n시간 초과가 났다.\n\n## 오답 풀이\n\n다음의 예를 보자.\n\n숫자 : 1 2 3 4 5 6\n\n연산자 : 2 1 1 1\n\n<br>\n\n따라서 연산자는 다음과 같다.\n\n +, +, -, *, /\n\n<br>\n\n경우의 수는 같은 것을 포함하는 순열이다. \n\n5! / 2!\n\n<br>\n\n각각의 경우에 숫자를 이용해 계산을 하고, 계산 값들 중에 최소값, 최대값을 찾는다.\n\n##  오답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator03.png)\n\n\n\n## 정답 풀이\n\n시뮬렌이션 문제라고 생각했다.\n\n해설을 보고 완전 탐색 문제란 것을 알았다. 따라서 BFS or DFS 로 풀 수 있다. 익숙한 BFS로 해결하였다.\n\n<br>\n\n다음의 예시에서 나올 수 있는 모든 경우의 수를 그림으로 그려보자.\n\n숫자 : 1, 2, 3, 4 \n\n연산자 : +, +, * \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOp10.png)\n\n<br>\n\n문제에서 주어진대로, 숫자는 순서를 그대로 유지한다. \n\n1 다음에 오는 숫자는 2다. 1과 2를 계산할 수 있는 연산자는 + 와 * 이다. 이 두 경우를 큐에 넣는다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper05.png)\n\n1+2 와 3 을 계산 할 수 있는 연산자는 +와 * 이다. 이 두 경우를 큐에 넣는다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper06.png)\n\n이와 같은 방식으로 모든 경우의 수를 큐에 넣는다. \n\n모든 연산자를 사용 했을 때(트리의 마지막 depth)가 최종 결과값 이므로, 이들 중에 최대값 및 최소값을 구한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOp11.png)\n\n## 정답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper03.png)\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2018-09-05-연산자 끼워넣기","published":1,"updated":"2018-09-06T10:28:12.120Z","comments":1,"photos":[],"link":"","_id":"cjp6k65o900g231x7da875lvo","content":"<p><a href=\"https://www.acmicpc.net/problem/14888\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14888</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>시간 초과가 났다.</p>\n<h2 id=\"오답-풀이\"><a href=\"#오답-풀이\" class=\"headerlink\" title=\"오답 풀이\"></a>오답 풀이</h2><p>다음의 예를 보자.</p>\n<p>숫자 : 1 2 3 4 5 6</p>\n<p>연산자 : 2 1 1 1</p>\n<p><br></p>\n<p>따라서 연산자는 다음과 같다.</p>\n<p> +, +, -, *, /</p>\n<p><br></p>\n<p>경우의 수는 같은 것을 포함하는 순열이다. </p>\n<p>5! / 2!</p>\n<p><br></p>\n<p>각각의 경우에 숫자를 이용해 계산을 하고, 계산 값들 중에 최소값, 최대값을 찾는다.</p>\n<h2 id=\"오답-코드\"><a href=\"#오답-코드\" class=\"headerlink\" title=\"오답 코드\"></a>오답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator03.png\" alt=\"img\"></p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><p>시뮬렌이션 문제라고 생각했다.</p>\n<p>해설을 보고 완전 탐색 문제란 것을 알았다. 따라서 BFS or DFS 로 풀 수 있다. 익숙한 BFS로 해결하였다.</p>\n<p><br></p>\n<p>다음의 예시에서 나올 수 있는 모든 경우의 수를 그림으로 그려보자.</p>\n<p>숫자 : 1, 2, 3, 4 </p>\n<p>연산자 : +, +, * </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOp10.png\" alt=\"img\"></p>\n<p><br></p>\n<p>문제에서 주어진대로, 숫자는 순서를 그대로 유지한다. </p>\n<p>1 다음에 오는 숫자는 2다. 1과 2를 계산할 수 있는 연산자는 + 와 * 이다. 이 두 경우를 큐에 넣는다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper05.png\" alt=\"img\"></p>\n<p>1+2 와 3 을 계산 할 수 있는 연산자는 +와 * 이다. 이 두 경우를 큐에 넣는다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper06.png\" alt=\"img\"></p>\n<p>이와 같은 방식으로 모든 경우의 수를 큐에 넣는다. </p>\n<p>모든 연산자를 사용 했을 때(트리의 마지막 depth)가 최종 결과값 이므로, 이들 중에 최대값 및 최소값을 구한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOp11.png\" alt=\"img\"></p>\n<h2 id=\"정답-코드\"><a href=\"#정답-코드\" class=\"headerlink\" title=\"정답 코드\"></a>정답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14888\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14888</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>시간 초과가 났다.</p>\n<h2 id=\"오답-풀이\"><a href=\"#오답-풀이\" class=\"headerlink\" title=\"오답 풀이\"></a>오답 풀이</h2><p>다음의 예를 보자.</p>\n<p>숫자 : 1 2 3 4 5 6</p>\n<p>연산자 : 2 1 1 1</p>\n<p><br></p>\n<p>따라서 연산자는 다음과 같다.</p>\n<p> +, +, -, *, /</p>\n<p><br></p>\n<p>경우의 수는 같은 것을 포함하는 순열이다. </p>\n<p>5! / 2!</p>\n<p><br></p>\n<p>각각의 경우에 숫자를 이용해 계산을 하고, 계산 값들 중에 최소값, 최대값을 찾는다.</p>\n<h2 id=\"오답-코드\"><a href=\"#오답-코드\" class=\"headerlink\" title=\"오답 코드\"></a>오답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/putOperator03.png\" alt=\"img\"></p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><p>시뮬렌이션 문제라고 생각했다.</p>\n<p>해설을 보고 완전 탐색 문제란 것을 알았다. 따라서 BFS or DFS 로 풀 수 있다. 익숙한 BFS로 해결하였다.</p>\n<p><br></p>\n<p>다음의 예시에서 나올 수 있는 모든 경우의 수를 그림으로 그려보자.</p>\n<p>숫자 : 1, 2, 3, 4 </p>\n<p>연산자 : +, +, * </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOp10.png\" alt=\"img\"></p>\n<p><br></p>\n<p>문제에서 주어진대로, 숫자는 순서를 그대로 유지한다. </p>\n<p>1 다음에 오는 숫자는 2다. 1과 2를 계산할 수 있는 연산자는 + 와 * 이다. 이 두 경우를 큐에 넣는다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper05.png\" alt=\"img\"></p>\n<p>1+2 와 3 을 계산 할 수 있는 연산자는 +와 * 이다. 이 두 경우를 큐에 넣는다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper06.png\" alt=\"img\"></p>\n<p>이와 같은 방식으로 모든 경우의 수를 큐에 넣는다. </p>\n<p>모든 연산자를 사용 했을 때(트리의 마지막 depth)가 최종 결과값 이므로, 이들 중에 최대값 및 최소값을 구한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOp11.png\" alt=\"img\"></p>\n<h2 id=\"정답-코드\"><a href=\"#정답-코드\" class=\"headerlink\" title=\"정답 코드\"></a>정답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/newOper03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"치킨 배달","date":"2018-07-31T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/4991>\n\n삼성 알고리즘 시험 보러 가서 못 푼 문제이다. \n\n1. 다시 푸는데 오랜 걸렸다. ( 2018.08.01 ) : 조합 + BFS\n2. 다시 푸는데 30분도 안걸렸다. ( 2018.10.01 ) : DFS\n\n## 첫 번째 풀이\n\n1. 치킨집 K개 중에 M개를 고르는 경우의 수를 구한다. (조합)\n2. 선택되지 않은 치킨집은 빈 칸으로 만든다.\n3. 각 집을 출발점으로 가장 가까운 치킨집까지의 거리를 구한다 (BFS)\n\n## 첫 번째 풀이 예시\n\n- 다음과 같이 치킨집이 3개가 있다고 하자. \n  - 0번 치킨집\n  - 1번 치킨집\n  - 2번 치킨집\n- 최대 2개의 치킨집을 선택하는 경우의 수는 다음과 같다.\n  - 0번, 1번 — A\n  - 0번, 2번 — B\n  - 1번, 2번 — C \n- A를 생각해보자. \n  - 2번이 선택되지 않았기 때문에, 2번 치킨집을 폐업 시킨다.\n  - 각 집의 위치에서 BFS를 실행한다. 이는 각 집에서 가장 가까운 치킨 집과의 거리를 구하기 위함이다.\n- B, C도 위와 같은 작업을 반복한다.\n\n## 첫 번째 풀이 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken07.png)\n\n## 두 번째 풀이\n\n1. 치킨을 선택하여 List에 저장한다. (DFS)\n2. 각 집에서 선택된 치킨집 까지의 거리를 계산한다.\n\n\n\n치킨집이 A, B, C, D 네 개 있고, 최대 3개 선택을 한다고 했을 때, DFS는 다음과 같이 진행된다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende02.png)\n\n## 두 번째 풀이 코드 \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende05.png)","source":"_posts/2018-08-01-치킨배달.md","raw":"---\nlayout: post\ntitle:  \"치킨 배달\"\ndate:   2018-08-01\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/4991>\n\n삼성 알고리즘 시험 보러 가서 못 푼 문제이다. \n\n1. 다시 푸는데 오랜 걸렸다. ( 2018.08.01 ) : 조합 + BFS\n2. 다시 푸는데 30분도 안걸렸다. ( 2018.10.01 ) : DFS\n\n## 첫 번째 풀이\n\n1. 치킨집 K개 중에 M개를 고르는 경우의 수를 구한다. (조합)\n2. 선택되지 않은 치킨집은 빈 칸으로 만든다.\n3. 각 집을 출발점으로 가장 가까운 치킨집까지의 거리를 구한다 (BFS)\n\n## 첫 번째 풀이 예시\n\n- 다음과 같이 치킨집이 3개가 있다고 하자. \n  - 0번 치킨집\n  - 1번 치킨집\n  - 2번 치킨집\n- 최대 2개의 치킨집을 선택하는 경우의 수는 다음과 같다.\n  - 0번, 1번 — A\n  - 0번, 2번 — B\n  - 1번, 2번 — C \n- A를 생각해보자. \n  - 2번이 선택되지 않았기 때문에, 2번 치킨집을 폐업 시킨다.\n  - 각 집의 위치에서 BFS를 실행한다. 이는 각 집에서 가장 가까운 치킨 집과의 거리를 구하기 위함이다.\n- B, C도 위와 같은 작업을 반복한다.\n\n## 첫 번째 풀이 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken07.png)\n\n## 두 번째 풀이\n\n1. 치킨을 선택하여 List에 저장한다. (DFS)\n2. 각 집에서 선택된 치킨집 까지의 거리를 계산한다.\n\n\n\n치킨집이 A, B, C, D 네 개 있고, 최대 3개 선택을 한다고 했을 때, DFS는 다음과 같이 진행된다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende02.png)\n\n## 두 번째 풀이 코드 \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende05.png)","slug":"2018-08-01-치킨배달","published":1,"updated":"2018-10-01T08:26:14.535Z","comments":1,"photos":[],"link":"","_id":"cjp6k65oa00g431x75ws8edlf","content":"<p><a href=\"https://www.acmicpc.net/problem/4991\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/4991</a></p>\n<p>삼성 알고리즘 시험 보러 가서 못 푼 문제이다. </p>\n<ol>\n<li>다시 푸는데 오랜 걸렸다. ( 2018.08.01 ) : 조합 + BFS</li>\n<li>다시 푸는데 30분도 안걸렸다. ( 2018.10.01 ) : DFS</li>\n</ol>\n<h2 id=\"첫-번째-풀이\"><a href=\"#첫-번째-풀이\" class=\"headerlink\" title=\"첫 번째 풀이\"></a>첫 번째 풀이</h2><ol>\n<li>치킨집 K개 중에 M개를 고르는 경우의 수를 구한다. (조합)</li>\n<li>선택되지 않은 치킨집은 빈 칸으로 만든다.</li>\n<li>각 집을 출발점으로 가장 가까운 치킨집까지의 거리를 구한다 (BFS)</li>\n</ol>\n<h2 id=\"첫-번째-풀이-예시\"><a href=\"#첫-번째-풀이-예시\" class=\"headerlink\" title=\"첫 번째 풀이 예시\"></a>첫 번째 풀이 예시</h2><ul>\n<li>다음과 같이 치킨집이 3개가 있다고 하자. <ul>\n<li>0번 치킨집</li>\n<li>1번 치킨집</li>\n<li>2번 치킨집</li>\n</ul>\n</li>\n<li>최대 2개의 치킨집을 선택하는 경우의 수는 다음과 같다.<ul>\n<li>0번, 1번 — A</li>\n<li>0번, 2번 — B</li>\n<li>1번, 2번 — C </li>\n</ul>\n</li>\n<li>A를 생각해보자. <ul>\n<li>2번이 선택되지 않았기 때문에, 2번 치킨집을 폐업 시킨다.</li>\n<li>각 집의 위치에서 BFS를 실행한다. 이는 각 집에서 가장 가까운 치킨 집과의 거리를 구하기 위함이다.</li>\n</ul>\n</li>\n<li>B, C도 위와 같은 작업을 반복한다.</li>\n</ul>\n<h2 id=\"첫-번째-풀이-코드\"><a href=\"#첫-번째-풀이-코드\" class=\"headerlink\" title=\"첫 번째 풀이 코드\"></a>첫 번째 풀이 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken07.png\" alt=\"img\"></p>\n<h2 id=\"두-번째-풀이\"><a href=\"#두-번째-풀이\" class=\"headerlink\" title=\"두 번째 풀이\"></a>두 번째 풀이</h2><ol>\n<li>치킨을 선택하여 List에 저장한다. (DFS)</li>\n<li>각 집에서 선택된 치킨집 까지의 거리를 계산한다.</li>\n</ol>\n<p>치킨집이 A, B, C, D 네 개 있고, 최대 3개 선택을 한다고 했을 때, DFS는 다음과 같이 진행된다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende02.png\" alt=\"img\"></p>\n<h2 id=\"두-번째-풀이-코드\"><a href=\"#두-번째-풀이-코드\" class=\"headerlink\" title=\"두 번째 풀이 코드\"></a>두 번째 풀이 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende05.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/4991\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/4991</a></p>\n<p>삼성 알고리즘 시험 보러 가서 못 푼 문제이다. </p>\n<ol>\n<li>다시 푸는데 오랜 걸렸다. ( 2018.08.01 ) : 조합 + BFS</li>\n<li>다시 푸는데 30분도 안걸렸다. ( 2018.10.01 ) : DFS</li>\n</ol>\n<h2 id=\"첫-번째-풀이\"><a href=\"#첫-번째-풀이\" class=\"headerlink\" title=\"첫 번째 풀이\"></a>첫 번째 풀이</h2><ol>\n<li>치킨집 K개 중에 M개를 고르는 경우의 수를 구한다. (조합)</li>\n<li>선택되지 않은 치킨집은 빈 칸으로 만든다.</li>\n<li>각 집을 출발점으로 가장 가까운 치킨집까지의 거리를 구한다 (BFS)</li>\n</ol>\n<h2 id=\"첫-번째-풀이-예시\"><a href=\"#첫-번째-풀이-예시\" class=\"headerlink\" title=\"첫 번째 풀이 예시\"></a>첫 번째 풀이 예시</h2><ul>\n<li>다음과 같이 치킨집이 3개가 있다고 하자. <ul>\n<li>0번 치킨집</li>\n<li>1번 치킨집</li>\n<li>2번 치킨집</li>\n</ul>\n</li>\n<li>최대 2개의 치킨집을 선택하는 경우의 수는 다음과 같다.<ul>\n<li>0번, 1번 — A</li>\n<li>0번, 2번 — B</li>\n<li>1번, 2번 — C </li>\n</ul>\n</li>\n<li>A를 생각해보자. <ul>\n<li>2번이 선택되지 않았기 때문에, 2번 치킨집을 폐업 시킨다.</li>\n<li>각 집의 위치에서 BFS를 실행한다. 이는 각 집에서 가장 가까운 치킨 집과의 거리를 구하기 위함이다.</li>\n</ul>\n</li>\n<li>B, C도 위와 같은 작업을 반복한다.</li>\n</ul>\n<h2 id=\"첫-번째-풀이-코드\"><a href=\"#첫-번째-풀이-코드\" class=\"headerlink\" title=\"첫 번째 풀이 코드\"></a>첫 번째 풀이 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chicken07.png\" alt=\"img\"></p>\n<h2 id=\"두-번째-풀이\"><a href=\"#두-번째-풀이\" class=\"headerlink\" title=\"두 번째 풀이\"></a>두 번째 풀이</h2><ol>\n<li>치킨을 선택하여 List에 저장한다. (DFS)</li>\n<li>각 집에서 선택된 치킨집 까지의 거리를 계산한다.</li>\n</ol>\n<p>치킨집이 A, B, C, D 네 개 있고, 최대 3개 선택을 한다고 했을 때, DFS는 다음과 같이 진행된다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende02.png\" alt=\"img\"></p>\n<h2 id=\"두-번째-풀이-코드\"><a href=\"#두-번째-풀이-코드\" class=\"headerlink\" title=\"두 번째 풀이 코드\"></a>두 번째 풀이 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/chickende05.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"순환 공간","date":"2018-07-18T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://koitp.org/problem/SDS_TEST_SPACE/read/>\n\n## 오답\n\nBFS 로 풀었을 때는 메모리 초과가 뜬다.\n\n## 해결\n\n시뮬레이션으로 풀면 해결된다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/spacere01.png)\n\n- 1번\n  - 돌아가지 않고 직접 가는 경우이다. \n  - 시작점과 도착점 사이의 절대값을 구한다.\n- 2번\n  - 돌아가는 경우이다.\n  - 행과 열의 대소 비교를 통해 구한다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/spacere02.png)\n\n","source":"_posts/2018-07-19-순환 공간.md","raw":"---\nlayout: post\ntitle:  \"순환 공간\"\ndate:   2018-07-19\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://koitp.org/problem/SDS_TEST_SPACE/read/>\n\n## 오답\n\nBFS 로 풀었을 때는 메모리 초과가 뜬다.\n\n## 해결\n\n시뮬레이션으로 풀면 해결된다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/spacere01.png)\n\n- 1번\n  - 돌아가지 않고 직접 가는 경우이다. \n  - 시작점과 도착점 사이의 절대값을 구한다.\n- 2번\n  - 돌아가는 경우이다.\n  - 행과 열의 대소 비교를 통해 구한다.\n\n## 결과\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/spacere02.png)\n\n","slug":"2018-07-19-순환 공간","published":1,"updated":"2018-08-29T11:01:49.782Z","comments":1,"photos":[],"link":"","_id":"cjp6k65oc00g631x7st9jtso5","content":"<p><a href=\"https://koitp.org/problem/SDS_TEST_SPACE/read/\" target=\"_blank\" rel=\"noopener\">https://koitp.org/problem/SDS_TEST_SPACE/read/</a></p>\n<h2 id=\"오답\"><a href=\"#오답\" class=\"headerlink\" title=\"오답\"></a>오답</h2><p>BFS 로 풀었을 때는 메모리 초과가 뜬다.</p>\n<h2 id=\"해결\"><a href=\"#해결\" class=\"headerlink\" title=\"해결\"></a>해결</h2><p>시뮬레이션으로 풀면 해결된다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/spacere01.png\" alt=\"img\"></p>\n<ul>\n<li>1번<ul>\n<li>돌아가지 않고 직접 가는 경우이다. </li>\n<li>시작점과 도착점 사이의 절대값을 구한다.</li>\n</ul>\n</li>\n<li>2번<ul>\n<li>돌아가는 경우이다.</li>\n<li>행과 열의 대소 비교를 통해 구한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/spacere02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://koitp.org/problem/SDS_TEST_SPACE/read/\" target=\"_blank\" rel=\"noopener\">https://koitp.org/problem/SDS_TEST_SPACE/read/</a></p>\n<h2 id=\"오답\"><a href=\"#오답\" class=\"headerlink\" title=\"오답\"></a>오답</h2><p>BFS 로 풀었을 때는 메모리 초과가 뜬다.</p>\n<h2 id=\"해결\"><a href=\"#해결\" class=\"headerlink\" title=\"해결\"></a>해결</h2><p>시뮬레이션으로 풀면 해결된다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/spacere01.png\" alt=\"img\"></p>\n<ul>\n<li>1번<ul>\n<li>돌아가지 않고 직접 가는 경우이다. </li>\n<li>시작점과 도착점 사이의 절대값을 구한다.</li>\n</ul>\n</li>\n<li>2번<ul>\n<li>돌아가는 경우이다.</li>\n<li>행과 열의 대소 비교를 통해 구한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/spacere02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"View","date":"2018-09-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh&categoryId=AV134DPqAA8CFAYh&categoryType=CODE>\n\nSW Expert Academy [D2]\n\n쉬운 문제이다.\n\n## 풀이\n\ni번째 빌딩에서 조망권이 확보 되는 세대는 다음과 같은 조건을 충족시킨다.\n\n1. i번째 빌딩 높이 > i-1번째, i-2번째, i+1번째, i+2번째 빌딩 높이\n\n2. 세대 수 =  i번째 빌딩 높이 - max( i-1번째, i-2번째, i+1번째, i+2번째 빌딩 높이)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/viewww.png)\n\n\n\n\n\n","source":"_posts/2018-09-09-View.md","raw":"---\nlayout: post\ntitle:  \"View\"\ndate:   2018-09-09\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh&categoryId=AV134DPqAA8CFAYh&categoryType=CODE>\n\nSW Expert Academy [D2]\n\n쉬운 문제이다.\n\n## 풀이\n\ni번째 빌딩에서 조망권이 확보 되는 세대는 다음과 같은 조건을 충족시킨다.\n\n1. i번째 빌딩 높이 > i-1번째, i-2번째, i+1번째, i+2번째 빌딩 높이\n\n2. 세대 수 =  i번째 빌딩 높이 - max( i-1번째, i-2번째, i+1번째, i+2번째 빌딩 높이)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/viewww.png)\n\n\n\n\n\n","slug":"2018-09-09-View","published":1,"updated":"2018-09-10T07:58:22.461Z","comments":1,"photos":[],"link":"","_id":"cjp6k65oe00g831x7a45bq3rx","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh&amp;categoryId=AV134DPqAA8CFAYh&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh&amp;categoryId=AV134DPqAA8CFAYh&amp;categoryType=CODE</a></p>\n<p>SW Expert Academy [D2]</p>\n<p>쉬운 문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>i번째 빌딩에서 조망권이 확보 되는 세대는 다음과 같은 조건을 충족시킨다.</p>\n<ol>\n<li><p>i번째 빌딩 높이 &gt; i-1번째, i-2번째, i+1번째, i+2번째 빌딩 높이</p>\n</li>\n<li><p>세대 수 =  i번째 빌딩 높이 - max( i-1번째, i-2번째, i+1번째, i+2번째 빌딩 높이)</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/viewww.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh&amp;categoryId=AV134DPqAA8CFAYh&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh&amp;categoryId=AV134DPqAA8CFAYh&amp;categoryType=CODE</a></p>\n<p>SW Expert Academy [D2]</p>\n<p>쉬운 문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>i번째 빌딩에서 조망권이 확보 되는 세대는 다음과 같은 조건을 충족시킨다.</p>\n<ol>\n<li><p>i번째 빌딩 높이 &gt; i-1번째, i-2번째, i+1번째, i+2번째 빌딩 높이</p>\n</li>\n<li><p>세대 수 =  i번째 빌딩 높이 - max( i-1번째, i-2번째, i+1번째, i+2번째 빌딩 높이)</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/viewww.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"퇴사","date":"2018-09-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14501>\n\n삼성 코딩 테스트 기출 문제이다.\n\nBFS로 풀었다. 계속 틀렸다고 나온다. \n\n그래서 DFS로 다시 풀었다. \n\nDP 로도 풀 수 있다고 한다.\n\n## 예시\n\n다음의 예시로 설명하겠다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired01.png)\n\n## BFS 오답 풀이\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired02.png)\n\n위의 그림과 같이, 시작 날짜를 다르게 하여 BFS를 모두 실행한다.\n\n더 이상 자식 노드가 없을 때가 마지막이므로, 이 때 이익 합을 계산한다.\n\n## BFS 오답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired05.png)\n\n## DFS 정답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired06.png)\n\n\n\n","source":"_posts/2018-09-08-퇴사.md","raw":"---\nlayout: post\ntitle:  \"퇴사\"\ndate:   2018-09-08\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14501>\n\n삼성 코딩 테스트 기출 문제이다.\n\nBFS로 풀었다. 계속 틀렸다고 나온다. \n\n그래서 DFS로 다시 풀었다. \n\nDP 로도 풀 수 있다고 한다.\n\n## 예시\n\n다음의 예시로 설명하겠다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired01.png)\n\n## BFS 오답 풀이\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired02.png)\n\n위의 그림과 같이, 시작 날짜를 다르게 하여 BFS를 모두 실행한다.\n\n더 이상 자식 노드가 없을 때가 마지막이므로, 이 때 이익 합을 계산한다.\n\n## BFS 오답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired05.png)\n\n## DFS 정답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired06.png)\n\n\n\n","slug":"2018-09-08-퇴사","published":1,"updated":"2018-09-08T05:44:27.748Z","comments":1,"photos":[],"link":"","_id":"cjp6k65oh00ga31x7yqo1w3hy","content":"<p><a href=\"https://www.acmicpc.net/problem/14501\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14501</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>BFS로 풀었다. 계속 틀렸다고 나온다. </p>\n<p>그래서 DFS로 다시 풀었다. </p>\n<p>DP 로도 풀 수 있다고 한다.</p>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><p>다음의 예시로 설명하겠다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired01.png\" alt=\"img\"></p>\n<h2 id=\"BFS-오답-풀이\"><a href=\"#BFS-오답-풀이\" class=\"headerlink\" title=\"BFS 오답 풀이\"></a>BFS 오답 풀이</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired02.png\" alt=\"img\"></p>\n<p>위의 그림과 같이, 시작 날짜를 다르게 하여 BFS를 모두 실행한다.</p>\n<p>더 이상 자식 노드가 없을 때가 마지막이므로, 이 때 이익 합을 계산한다.</p>\n<h2 id=\"BFS-오답-코드\"><a href=\"#BFS-오답-코드\" class=\"headerlink\" title=\"BFS 오답 코드\"></a>BFS 오답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired05.png\" alt=\"img\"></p>\n<h2 id=\"DFS-정답-코드\"><a href=\"#DFS-정답-코드\" class=\"headerlink\" title=\"DFS 정답 코드\"></a>DFS 정답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired06.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14501\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14501</a></p>\n<p>삼성 코딩 테스트 기출 문제이다.</p>\n<p>BFS로 풀었다. 계속 틀렸다고 나온다. </p>\n<p>그래서 DFS로 다시 풀었다. </p>\n<p>DP 로도 풀 수 있다고 한다.</p>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><p>다음의 예시로 설명하겠다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired01.png\" alt=\"img\"></p>\n<h2 id=\"BFS-오답-풀이\"><a href=\"#BFS-오답-풀이\" class=\"headerlink\" title=\"BFS 오답 풀이\"></a>BFS 오답 풀이</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired02.png\" alt=\"img\"></p>\n<p>위의 그림과 같이, 시작 날짜를 다르게 하여 BFS를 모두 실행한다.</p>\n<p>더 이상 자식 노드가 없을 때가 마지막이므로, 이 때 이익 합을 계산한다.</p>\n<h2 id=\"BFS-오답-코드\"><a href=\"#BFS-오답-코드\" class=\"headerlink\" title=\"BFS 오답 코드\"></a>BFS 오답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired05.png\" alt=\"img\"></p>\n<h2 id=\"DFS-정답-코드\"><a href=\"#DFS-정답-코드\" class=\"headerlink\" title=\"DFS 정답 코드\"></a>DFS 정답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/fired06.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"로봇청소기","date":"2018-09-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14503>\n\n삼성 기출문제이다.\n\n매우 어려운 문제였다. 문제 이해 자체가 어렵다.\n\nBFS로 해결할 수 있다.\n\n## 풀이\n\n1. 현재 위치를 청소한다.\n\n2. 현재위치에서 바라보는 방향의 왼쪽 방향을 확인한다. \n\n   ( 이 작업을 4번 진행한다. 그렇다면, 현재위치의 동서남북 모든 방향을 확인 할 수 있다.)\n\n3. 청소를 해야할 구역이고, 아직 방문하지 않았으면 방문한다.\n\n4. 네 방향 모두 청소가 이미 되어있거나 벽인 경우에는, 바라보는 방향을 유지한 채로 한 칸 후진한다.\n\n5. 네 방향 모두 청소가 이미 되어있거나 벽이면서, 뒤쪽 방향이 벽이라 후진도 할 수 없는 경우에는 작동을 멈춘다.\n\n<br>\n\n다음  그림에서와 같이 처음 시작은 (7,4) 에서 시작하고, 방향은 북쪽(0)을 바라보고 있다고 하자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt02.png)\n\n최종 움직임은 다음과 같이 그려질 것이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt03.png)\n\n다음 그림의 파란색 지점에서 어떻게 움직이는지 확인해보자. 파란색 지점은 (8,4) 에서 동쪽(1)을 바라보고 있다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt01.png)\n\n우선 파란색 지점의 방향에서 왼쪽방향(동쪽의 서쪽 방향) 인 북쪽(0)을 확인한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt04.png)\n\n이미 방문하였으므로, 이제 북쪽의 왼쪽방향인 서쪽방향을 확인한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt05.png)\n\n이미 방문하였으므로, 이제 서쪽의 왼쪽방향인 남쪽방향을 확인한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt06.png)\n\n아직 방문하지 않았고, 청소를 해야하는 구역이므로 방문한다. 따라서 다음과 같이 이동을 하게 된다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt07.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt099.png)\n\n","source":"_posts/2018-09-13-로봇청소기.md","raw":"---\nlayout: post\ntitle:  \"로봇청소기\"\ndate:   2018-09-13\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14503>\n\n삼성 기출문제이다.\n\n매우 어려운 문제였다. 문제 이해 자체가 어렵다.\n\nBFS로 해결할 수 있다.\n\n## 풀이\n\n1. 현재 위치를 청소한다.\n\n2. 현재위치에서 바라보는 방향의 왼쪽 방향을 확인한다. \n\n   ( 이 작업을 4번 진행한다. 그렇다면, 현재위치의 동서남북 모든 방향을 확인 할 수 있다.)\n\n3. 청소를 해야할 구역이고, 아직 방문하지 않았으면 방문한다.\n\n4. 네 방향 모두 청소가 이미 되어있거나 벽인 경우에는, 바라보는 방향을 유지한 채로 한 칸 후진한다.\n\n5. 네 방향 모두 청소가 이미 되어있거나 벽이면서, 뒤쪽 방향이 벽이라 후진도 할 수 없는 경우에는 작동을 멈춘다.\n\n<br>\n\n다음  그림에서와 같이 처음 시작은 (7,4) 에서 시작하고, 방향은 북쪽(0)을 바라보고 있다고 하자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt02.png)\n\n최종 움직임은 다음과 같이 그려질 것이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt03.png)\n\n다음 그림의 파란색 지점에서 어떻게 움직이는지 확인해보자. 파란색 지점은 (8,4) 에서 동쪽(1)을 바라보고 있다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt01.png)\n\n우선 파란색 지점의 방향에서 왼쪽방향(동쪽의 서쪽 방향) 인 북쪽(0)을 확인한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt04.png)\n\n이미 방문하였으므로, 이제 북쪽의 왼쪽방향인 서쪽방향을 확인한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt05.png)\n\n이미 방문하였으므로, 이제 서쪽의 왼쪽방향인 남쪽방향을 확인한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt06.png)\n\n아직 방문하지 않았고, 청소를 해야하는 구역이므로 방문한다. 따라서 다음과 같이 이동을 하게 된다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt07.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt099.png)\n\n","slug":"2018-09-13-로봇청소기","published":1,"updated":"2018-09-13T01:24:58.543Z","comments":1,"photos":[],"link":"","_id":"cjp6k65oj00gc31x7a9bfb2ao","content":"<p><a href=\"https://www.acmicpc.net/problem/14503\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14503</a></p>\n<p>삼성 기출문제이다.</p>\n<p>매우 어려운 문제였다. 문제 이해 자체가 어렵다.</p>\n<p>BFS로 해결할 수 있다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>현재 위치를 청소한다.</p>\n</li>\n<li><p>현재위치에서 바라보는 방향의 왼쪽 방향을 확인한다. </p>\n<p>( 이 작업을 4번 진행한다. 그렇다면, 현재위치의 동서남북 모든 방향을 확인 할 수 있다.)</p>\n</li>\n<li><p>청소를 해야할 구역이고, 아직 방문하지 않았으면 방문한다.</p>\n</li>\n<li><p>네 방향 모두 청소가 이미 되어있거나 벽인 경우에는, 바라보는 방향을 유지한 채로 한 칸 후진한다.</p>\n</li>\n<li><p>네 방향 모두 청소가 이미 되어있거나 벽이면서, 뒤쪽 방향이 벽이라 후진도 할 수 없는 경우에는 작동을 멈춘다.</p>\n</li>\n</ol>\n<p><br></p>\n<p>다음  그림에서와 같이 처음 시작은 (7,4) 에서 시작하고, 방향은 북쪽(0)을 바라보고 있다고 하자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt02.png\" alt=\"img\"></p>\n<p>최종 움직임은 다음과 같이 그려질 것이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt03.png\" alt=\"img\"></p>\n<p>다음 그림의 파란색 지점에서 어떻게 움직이는지 확인해보자. 파란색 지점은 (8,4) 에서 동쪽(1)을 바라보고 있다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt01.png\" alt=\"img\"></p>\n<p>우선 파란색 지점의 방향에서 왼쪽방향(동쪽의 서쪽 방향) 인 북쪽(0)을 확인한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt04.png\" alt=\"img\"></p>\n<p>이미 방문하였으므로, 이제 북쪽의 왼쪽방향인 서쪽방향을 확인한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt05.png\" alt=\"img\"></p>\n<p>이미 방문하였으므로, 이제 서쪽의 왼쪽방향인 남쪽방향을 확인한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt06.png\" alt=\"img\"></p>\n<p>아직 방문하지 않았고, 청소를 해야하는 구역이므로 방문한다. 따라서 다음과 같이 이동을 하게 된다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt07.png\" alt=\"img\"></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt099.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14503\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14503</a></p>\n<p>삼성 기출문제이다.</p>\n<p>매우 어려운 문제였다. 문제 이해 자체가 어렵다.</p>\n<p>BFS로 해결할 수 있다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>현재 위치를 청소한다.</p>\n</li>\n<li><p>현재위치에서 바라보는 방향의 왼쪽 방향을 확인한다. </p>\n<p>( 이 작업을 4번 진행한다. 그렇다면, 현재위치의 동서남북 모든 방향을 확인 할 수 있다.)</p>\n</li>\n<li><p>청소를 해야할 구역이고, 아직 방문하지 않았으면 방문한다.</p>\n</li>\n<li><p>네 방향 모두 청소가 이미 되어있거나 벽인 경우에는, 바라보는 방향을 유지한 채로 한 칸 후진한다.</p>\n</li>\n<li><p>네 방향 모두 청소가 이미 되어있거나 벽이면서, 뒤쪽 방향이 벽이라 후진도 할 수 없는 경우에는 작동을 멈춘다.</p>\n</li>\n</ol>\n<p><br></p>\n<p>다음  그림에서와 같이 처음 시작은 (7,4) 에서 시작하고, 방향은 북쪽(0)을 바라보고 있다고 하자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt02.png\" alt=\"img\"></p>\n<p>최종 움직임은 다음과 같이 그려질 것이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt03.png\" alt=\"img\"></p>\n<p>다음 그림의 파란색 지점에서 어떻게 움직이는지 확인해보자. 파란색 지점은 (8,4) 에서 동쪽(1)을 바라보고 있다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt01.png\" alt=\"img\"></p>\n<p>우선 파란색 지점의 방향에서 왼쪽방향(동쪽의 서쪽 방향) 인 북쪽(0)을 확인한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt04.png\" alt=\"img\"></p>\n<p>이미 방문하였으므로, 이제 북쪽의 왼쪽방향인 서쪽방향을 확인한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt05.png\" alt=\"img\"></p>\n<p>이미 방문하였으므로, 이제 서쪽의 왼쪽방향인 남쪽방향을 확인한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt06.png\" alt=\"img\"></p>\n<p>아직 방문하지 않았고, 청소를 해야하는 구역이므로 방문한다. 따라서 다음과 같이 이동을 하게 된다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt07.png\" alt=\"img\"></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/robottt099.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"콩 많이 심기","date":"2018-09-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do>\n\nSW Expert Academy [D4]\n\n## 정답 풀이\n\n1. 모든 판에 콩을 심었다고 가정하고 시작한다.\n\n2. 콩이 심은 판 사이의 거리가 2이면 콩을 지운다.\n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean01.png)\n\n   위의 그림처럼, 빨간색 원이 기준이 된다. \n\n   기준을 중심으로 길이가 2인 판에 콩이 있으면 콩을 없앤다. 파란색 네모 부분이 길이가 2인 지점이다.\n\n   그리고 기준을 다음 칸으로 옮겨서 같은 작업을 반복한다.\n\n## 정답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean03.png)\n\n\n\n\n\n","source":"_posts/2018-09-11-콩 많이 심기.md","raw":"---\nlayout: post\ntitle:  \"콩 많이 심기\"\ndate:   2018-09-11\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do>\n\nSW Expert Academy [D4]\n\n## 정답 풀이\n\n1. 모든 판에 콩을 심었다고 가정하고 시작한다.\n\n2. 콩이 심은 판 사이의 거리가 2이면 콩을 지운다.\n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean01.png)\n\n   위의 그림처럼, 빨간색 원이 기준이 된다. \n\n   기준을 중심으로 길이가 2인 판에 콩이 있으면 콩을 없앤다. 파란색 네모 부분이 길이가 2인 지점이다.\n\n   그리고 기준을 다음 칸으로 옮겨서 같은 작업을 반복한다.\n\n## 정답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean03.png)\n\n\n\n\n\n","slug":"2018-09-11-콩 많이 심기","published":1,"updated":"2018-09-11T06:41:08.134Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ok00ge31x7x66v88p5","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do</a></p>\n<p>SW Expert Academy [D4]</p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><ol>\n<li><p>모든 판에 콩을 심었다고 가정하고 시작한다.</p>\n</li>\n<li><p>콩이 심은 판 사이의 거리가 2이면 콩을 지운다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean01.png\" alt=\"img\"></p>\n<p>위의 그림처럼, 빨간색 원이 기준이 된다. </p>\n<p>기준을 중심으로 길이가 2인 판에 콩이 있으면 콩을 없앤다. 파란색 네모 부분이 길이가 2인 지점이다.</p>\n<p>그리고 기준을 다음 칸으로 옮겨서 같은 작업을 반복한다.</p>\n</li>\n</ol>\n<h2 id=\"정답-코드\"><a href=\"#정답-코드\" class=\"headerlink\" title=\"정답 코드\"></a>정답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do</a></p>\n<p>SW Expert Academy [D4]</p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><ol>\n<li><p>모든 판에 콩을 심었다고 가정하고 시작한다.</p>\n</li>\n<li><p>콩이 심은 판 사이의 거리가 2이면 콩을 지운다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean01.png\" alt=\"img\"></p>\n<p>위의 그림처럼, 빨간색 원이 기준이 된다. </p>\n<p>기준을 중심으로 길이가 2인 판에 콩이 있으면 콩을 없앤다. 파란색 네모 부분이 길이가 2인 지점이다.</p>\n<p>그리고 기준을 다음 칸으로 옮겨서 같은 작업을 반복한다.</p>\n</li>\n</ol>\n<h2 id=\"정답-코드\"><a href=\"#정답-코드\" class=\"headerlink\" title=\"정답 코드\"></a>정답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bean03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"테트로미노","date":"2018-09-17T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14500>\n\n삼성 기출문제이다. 매우 어려운 문제였다. \n\n처음에, 도형의 모든 경우의 수를 하나 하나 놓아봐서 최대값을 구해야하는지 생각했다.\n\n하지만, DFS로 해결할 수 있다.\n\n## 풀이\n\n다음 그림과 같이 DFS를 이용하여 최대한 깊이 탐색한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr03.png)\n\nㅗ 모양을 제외한 모양은 DFS로 탐색이 가능하다. 4개의 탐색(깊이 3) 까지 마쳤을 때, 최대값을 계산한다. \n\nㅗ 모양은 현재 위치를 기준으로 동, 서, 남, 북을 조사하여 4개 중에 최소 값을 빼서 최대값을 계산할 수 있다.\n\n다음 그림처럼 A를 기준으로 B, C, D, E 네 방향을 탐색한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr07.png)\n\n만약에, E가 B, C, D, E 네 개 중에 최소값이라면, 다음 그림처럼 E를 제외하고 합을 구한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr08.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr06.png)","source":"_posts/2018-09-18-테트로미노.md","raw":"---\nlayout: post\ntitle:  \"테트로미노\"\ndate:   2018-09-18\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14500>\n\n삼성 기출문제이다. 매우 어려운 문제였다. \n\n처음에, 도형의 모든 경우의 수를 하나 하나 놓아봐서 최대값을 구해야하는지 생각했다.\n\n하지만, DFS로 해결할 수 있다.\n\n## 풀이\n\n다음 그림과 같이 DFS를 이용하여 최대한 깊이 탐색한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr03.png)\n\nㅗ 모양을 제외한 모양은 DFS로 탐색이 가능하다. 4개의 탐색(깊이 3) 까지 마쳤을 때, 최대값을 계산한다. \n\nㅗ 모양은 현재 위치를 기준으로 동, 서, 남, 북을 조사하여 4개 중에 최소 값을 빼서 최대값을 계산할 수 있다.\n\n다음 그림처럼 A를 기준으로 B, C, D, E 네 방향을 탐색한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr07.png)\n\n만약에, E가 B, C, D, E 네 개 중에 최소값이라면, 다음 그림처럼 E를 제외하고 합을 구한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr08.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr06.png)","slug":"2018-09-18-테트로미노","published":1,"updated":"2018-09-18T10:10:55.554Z","comments":1,"photos":[],"link":"","_id":"cjp6k65op00gg31x72tc4fke5","content":"<p><a href=\"https://www.acmicpc.net/problem/14500\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14500</a></p>\n<p>삼성 기출문제이다. 매우 어려운 문제였다. </p>\n<p>처음에, 도형의 모든 경우의 수를 하나 하나 놓아봐서 최대값을 구해야하는지 생각했다.</p>\n<p>하지만, DFS로 해결할 수 있다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>다음 그림과 같이 DFS를 이용하여 최대한 깊이 탐색한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr03.png\" alt=\"img\"></p>\n<p>ㅗ 모양을 제외한 모양은 DFS로 탐색이 가능하다. 4개의 탐색(깊이 3) 까지 마쳤을 때, 최대값을 계산한다. </p>\n<p>ㅗ 모양은 현재 위치를 기준으로 동, 서, 남, 북을 조사하여 4개 중에 최소 값을 빼서 최대값을 계산할 수 있다.</p>\n<p>다음 그림처럼 A를 기준으로 B, C, D, E 네 방향을 탐색한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr07.png\" alt=\"img\"></p>\n<p>만약에, E가 B, C, D, E 네 개 중에 최소값이라면, 다음 그림처럼 E를 제외하고 합을 구한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr08.png\" alt=\"img\"></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr06.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14500\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14500</a></p>\n<p>삼성 기출문제이다. 매우 어려운 문제였다. </p>\n<p>처음에, 도형의 모든 경우의 수를 하나 하나 놓아봐서 최대값을 구해야하는지 생각했다.</p>\n<p>하지만, DFS로 해결할 수 있다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>다음 그림과 같이 DFS를 이용하여 최대한 깊이 탐색한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr03.png\" alt=\"img\"></p>\n<p>ㅗ 모양을 제외한 모양은 DFS로 탐색이 가능하다. 4개의 탐색(깊이 3) 까지 마쳤을 때, 최대값을 계산한다. </p>\n<p>ㅗ 모양은 현재 위치를 기준으로 동, 서, 남, 북을 조사하여 4개 중에 최소 값을 빼서 최대값을 계산할 수 있다.</p>\n<p>다음 그림처럼 A를 기준으로 B, C, D, E 네 방향을 탐색한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr07.png\" alt=\"img\"></p>\n<p>만약에, E가 B, C, D, E 네 개 중에 최소값이라면, 다음 그림처럼 E를 제외하고 합을 구한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr08.png\" alt=\"img\"></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ttr06.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"사다리 조작","date":"2018-09-18T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14499>\n\n삼성 기출문제이다. DFS 문제이다.\n\n어려웠다. 해설을 보고 이해를 했지만, 직집 해결해보기 위해 며칠 동안 붙잡고 있던 문제이다.\n\n## 풀이\n\n1. 사다리를 어떻게 코드로 표현해야 하는지 파악한다.\n2. 사디리는 어디에 둘 수 있는지 파악한다.\n3. 탐색을 어떻게 진행할지 생각한다.\n\n\n\n사다리를 코드로 표현하는 방법은 다음 그림과 같이 이차원 배열을 이용한다. 사다리를 1과 2로 표현한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr02.png)\n\n\n\n사다리를 둘 수 있는 곳의 조건은 다음과 같다.\n\n1. i행의 j번째의 값과 j+1번째의 값이 0 : 연속되지 않고, 사다리를 둘 수 있는 빈 칸 이라는 의미\n2. j+1<=n : 동일한 행에 사다리를 둘 수 있다는 의미\n\n\n\n탐색은 DFS로 진행한다. 사다리는 최대 3개 까지 둘 수 있다.\n\n사다리를 최대 0개 둘 수 있는 경우, 최대 1개 둘수 있는 경우, 최대 2개 둘수 있는 경우, 최대 3개 둘수 있는 경우로 나눈다.\n\n각 경우에서 DFS를 시작한다. 설명을 위해 빈 칸을 A, B, C.. 로 표현하였다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/speLadder01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/speLadder02.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr05.png)","source":"_posts/2018-09-20-사다리 조작.md","raw":"---\nlayout: post\ntitle:  \"사다리 조작\"\ndate:   2018-09-19\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14499>\n\n삼성 기출문제이다. DFS 문제이다.\n\n어려웠다. 해설을 보고 이해를 했지만, 직집 해결해보기 위해 며칠 동안 붙잡고 있던 문제이다.\n\n## 풀이\n\n1. 사다리를 어떻게 코드로 표현해야 하는지 파악한다.\n2. 사디리는 어디에 둘 수 있는지 파악한다.\n3. 탐색을 어떻게 진행할지 생각한다.\n\n\n\n사다리를 코드로 표현하는 방법은 다음 그림과 같이 이차원 배열을 이용한다. 사다리를 1과 2로 표현한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr02.png)\n\n\n\n사다리를 둘 수 있는 곳의 조건은 다음과 같다.\n\n1. i행의 j번째의 값과 j+1번째의 값이 0 : 연속되지 않고, 사다리를 둘 수 있는 빈 칸 이라는 의미\n2. j+1<=n : 동일한 행에 사다리를 둘 수 있다는 의미\n\n\n\n탐색은 DFS로 진행한다. 사다리는 최대 3개 까지 둘 수 있다.\n\n사다리를 최대 0개 둘 수 있는 경우, 최대 1개 둘수 있는 경우, 최대 2개 둘수 있는 경우, 최대 3개 둘수 있는 경우로 나눈다.\n\n각 경우에서 DFS를 시작한다. 설명을 위해 빈 칸을 A, B, C.. 로 표현하였다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/speLadder01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/speLadder02.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr05.png)","slug":"2018-09-20-사다리 조작","published":1,"updated":"2018-09-30T13:52:09.438Z","comments":1,"photos":[],"link":"","_id":"cjp6k65oq00gi31x7re59bw9g","content":"<p><a href=\"https://www.acmicpc.net/problem/14499\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14499</a></p>\n<p>삼성 기출문제이다. DFS 문제이다.</p>\n<p>어려웠다. 해설을 보고 이해를 했지만, 직집 해결해보기 위해 며칠 동안 붙잡고 있던 문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>사다리를 어떻게 코드로 표현해야 하는지 파악한다.</li>\n<li>사디리는 어디에 둘 수 있는지 파악한다.</li>\n<li>탐색을 어떻게 진행할지 생각한다.</li>\n</ol>\n<p>사다리를 코드로 표현하는 방법은 다음 그림과 같이 이차원 배열을 이용한다. 사다리를 1과 2로 표현한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr02.png\" alt=\"img\"></p>\n<p>사다리를 둘 수 있는 곳의 조건은 다음과 같다.</p>\n<ol>\n<li>i행의 j번째의 값과 j+1번째의 값이 0 : 연속되지 않고, 사다리를 둘 수 있는 빈 칸 이라는 의미</li>\n<li>j+1&lt;=n : 동일한 행에 사다리를 둘 수 있다는 의미</li>\n</ol>\n<p>탐색은 DFS로 진행한다. 사다리는 최대 3개 까지 둘 수 있다.</p>\n<p>사다리를 최대 0개 둘 수 있는 경우, 최대 1개 둘수 있는 경우, 최대 2개 둘수 있는 경우, 최대 3개 둘수 있는 경우로 나눈다.</p>\n<p>각 경우에서 DFS를 시작한다. 설명을 위해 빈 칸을 A, B, C.. 로 표현하였다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/speLadder01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/speLadder02.png\" alt=\"img\"></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr05.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14499\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14499</a></p>\n<p>삼성 기출문제이다. DFS 문제이다.</p>\n<p>어려웠다. 해설을 보고 이해를 했지만, 직집 해결해보기 위해 며칠 동안 붙잡고 있던 문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>사다리를 어떻게 코드로 표현해야 하는지 파악한다.</li>\n<li>사디리는 어디에 둘 수 있는지 파악한다.</li>\n<li>탐색을 어떻게 진행할지 생각한다.</li>\n</ol>\n<p>사다리를 코드로 표현하는 방법은 다음 그림과 같이 이차원 배열을 이용한다. 사다리를 1과 2로 표현한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr02.png\" alt=\"img\"></p>\n<p>사다리를 둘 수 있는 곳의 조건은 다음과 같다.</p>\n<ol>\n<li>i행의 j번째의 값과 j+1번째의 값이 0 : 연속되지 않고, 사다리를 둘 수 있는 빈 칸 이라는 의미</li>\n<li>j+1&lt;=n : 동일한 행에 사다리를 둘 수 있다는 의미</li>\n</ol>\n<p>탐색은 DFS로 진행한다. 사다리는 최대 3개 까지 둘 수 있다.</p>\n<p>사다리를 최대 0개 둘 수 있는 경우, 최대 1개 둘수 있는 경우, 최대 2개 둘수 있는 경우, 최대 3개 둘수 있는 경우로 나눈다.</p>\n<p>각 경우에서 DFS를 시작한다. 설명을 위해 빈 칸을 A, B, C.. 로 표현하였다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/speLadder01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/speLadder02.png\" alt=\"img\"></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/laddeerr05.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"주사위 굴리기","date":"2018-09-18T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/14499>\n\n삼성 기출문제이다. 쉬운 문제이다. 문제 이해만 잘 하면 된다. \n\n## 풀이\n\n문제의 핵심은 주사위를 '옮기는 것' 아니라, '굴리는 것'이다.\n\n다음 그림과 같이 처음 상태에서 동, 서, 북, 남으로 굴림에 따라서 방향에 대한 값이 바뀐다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dice011.png)\n\n회전하고 문제에서 주어진 대로 풀면 된다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee04.png)\n\n","source":"_posts/2018-09-19-주사위 굴리기.md","raw":"---\nlayout: post\ntitle:  \"주사위 굴리기\"\ndate:   2018-09-19\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/14499>\n\n삼성 기출문제이다. 쉬운 문제이다. 문제 이해만 잘 하면 된다. \n\n## 풀이\n\n문제의 핵심은 주사위를 '옮기는 것' 아니라, '굴리는 것'이다.\n\n다음 그림과 같이 처음 상태에서 동, 서, 북, 남으로 굴림에 따라서 방향에 대한 값이 바뀐다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dice011.png)\n\n회전하고 문제에서 주어진 대로 풀면 된다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee04.png)\n\n","slug":"2018-09-19-주사위 굴리기","published":1,"updated":"2018-09-19T14:58:48.876Z","comments":1,"photos":[],"link":"","_id":"cjp6k65or00gk31x7kae02x2s","content":"<p><a href=\"https://www.acmicpc.net/problem/14499\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14499</a></p>\n<p>삼성 기출문제이다. 쉬운 문제이다. 문제 이해만 잘 하면 된다. </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>문제의 핵심은 주사위를 ‘옮기는 것’ 아니라, ‘굴리는 것’이다.</p>\n<p>다음 그림과 같이 처음 상태에서 동, 서, 북, 남으로 굴림에 따라서 방향에 대한 값이 바뀐다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dice011.png\" alt=\"img\"></p>\n<p>회전하고 문제에서 주어진 대로 풀면 된다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee04.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/14499\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/14499</a></p>\n<p>삼성 기출문제이다. 쉬운 문제이다. 문제 이해만 잘 하면 된다. </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>문제의 핵심은 주사위를 ‘옮기는 것’ 아니라, ‘굴리는 것’이다.</p>\n<p>다음 그림과 같이 처음 상태에서 동, 서, 북, 남으로 굴림에 따라서 방향에 대한 값이 바뀐다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dice011.png\" alt=\"img\"></p>\n<p>회전하고 문제에서 주어진 대로 풀면 된다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dicee04.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"백만장자프로젝트","date":"2018-09-09T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LrsUaDxcDFAXc&categoryId=AV5LrsUaDxcDFAXc&categoryType=CODE>\n\nSW Expert Academy [D2]\n\n쉬운 문제였지만, 시간 초과가 나서 다시 풀었다.\n\n## 오답 풀이\n\ni 날에 샀다면, x(>i) 날에 팔아 이득을 챙기면 된다. \n\n여기서 포인트는 max(이득(x)) 를 찾아야 한다는 것이다. 다음의 식을 얻을 수 있다.\n\nsum += max(이득(x))  - 이득(i)\n\n내가 풀이한 코드는, 루프를 두 개 돌리는 것이다. 이렇게 하면, 시간 초과가 발생한다. O(N^2)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill01.png)\n\n## 오답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill02.png)\n\n## 정답 풀이\n\n O(N)으로 풀 수 있다.\n\n마지막 날부터 시작해서 1일까지 순차 탐색을 해서, 각 날짜의 최대값을 구하는 것이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill04.png)\n\n그리고 이익의 합을 계산한다.\n\n## 정답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill03.png)\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-09-10-백만 장자 프로젝트 .md","raw":"---\nlayout: post\ntitle:  \"백만장자프로젝트\"\ndate:   2018-09-10\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LrsUaDxcDFAXc&categoryId=AV5LrsUaDxcDFAXc&categoryType=CODE>\n\nSW Expert Academy [D2]\n\n쉬운 문제였지만, 시간 초과가 나서 다시 풀었다.\n\n## 오답 풀이\n\ni 날에 샀다면, x(>i) 날에 팔아 이득을 챙기면 된다. \n\n여기서 포인트는 max(이득(x)) 를 찾아야 한다는 것이다. 다음의 식을 얻을 수 있다.\n\nsum += max(이득(x))  - 이득(i)\n\n내가 풀이한 코드는, 루프를 두 개 돌리는 것이다. 이렇게 하면, 시간 초과가 발생한다. O(N^2)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill01.png)\n\n## 오답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill02.png)\n\n## 정답 풀이\n\n O(N)으로 풀 수 있다.\n\n마지막 날부터 시작해서 1일까지 순차 탐색을 해서, 각 날짜의 최대값을 구하는 것이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill04.png)\n\n그리고 이익의 합을 계산한다.\n\n## 정답 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill03.png)\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2018-09-10-백만 장자 프로젝트 ","published":1,"updated":"2018-09-10T07:30:40.041Z","comments":1,"photos":[],"link":"","_id":"cjp6k65os00gm31x7pwt441ln","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LrsUaDxcDFAXc&amp;categoryId=AV5LrsUaDxcDFAXc&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LrsUaDxcDFAXc&amp;categoryId=AV5LrsUaDxcDFAXc&amp;categoryType=CODE</a></p>\n<p>SW Expert Academy [D2]</p>\n<p>쉬운 문제였지만, 시간 초과가 나서 다시 풀었다.</p>\n<h2 id=\"오답-풀이\"><a href=\"#오답-풀이\" class=\"headerlink\" title=\"오답 풀이\"></a>오답 풀이</h2><p>i 날에 샀다면, x(&gt;i) 날에 팔아 이득을 챙기면 된다. </p>\n<p>여기서 포인트는 max(이득(x)) 를 찾아야 한다는 것이다. 다음의 식을 얻을 수 있다.</p>\n<p>sum += max(이득(x))  - 이득(i)</p>\n<p>내가 풀이한 코드는, 루프를 두 개 돌리는 것이다. 이렇게 하면, 시간 초과가 발생한다. O(N^2)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill01.png\" alt=\"img\"></p>\n<h2 id=\"오답-코드\"><a href=\"#오답-코드\" class=\"headerlink\" title=\"오답 코드\"></a>오답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill02.png\" alt=\"img\"></p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><p> O(N)으로 풀 수 있다.</p>\n<p>마지막 날부터 시작해서 1일까지 순차 탐색을 해서, 각 날짜의 최대값을 구하는 것이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill04.png\" alt=\"img\"></p>\n<p>그리고 이익의 합을 계산한다.</p>\n<h2 id=\"정답-코드\"><a href=\"#정답-코드\" class=\"headerlink\" title=\"정답 코드\"></a>정답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LrsUaDxcDFAXc&amp;categoryId=AV5LrsUaDxcDFAXc&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LrsUaDxcDFAXc&amp;categoryId=AV5LrsUaDxcDFAXc&amp;categoryType=CODE</a></p>\n<p>SW Expert Academy [D2]</p>\n<p>쉬운 문제였지만, 시간 초과가 나서 다시 풀었다.</p>\n<h2 id=\"오답-풀이\"><a href=\"#오답-풀이\" class=\"headerlink\" title=\"오답 풀이\"></a>오답 풀이</h2><p>i 날에 샀다면, x(&gt;i) 날에 팔아 이득을 챙기면 된다. </p>\n<p>여기서 포인트는 max(이득(x)) 를 찾아야 한다는 것이다. 다음의 식을 얻을 수 있다.</p>\n<p>sum += max(이득(x))  - 이득(i)</p>\n<p>내가 풀이한 코드는, 루프를 두 개 돌리는 것이다. 이렇게 하면, 시간 초과가 발생한다. O(N^2)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill01.png\" alt=\"img\"></p>\n<h2 id=\"오답-코드\"><a href=\"#오답-코드\" class=\"headerlink\" title=\"오답 코드\"></a>오답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill02.png\" alt=\"img\"></p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><p> O(N)으로 풀 수 있다.</p>\n<p>마지막 날부터 시작해서 1일까지 순차 탐색을 해서, 각 날짜의 최대값을 구하는 것이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill04.png\" alt=\"img\"></p>\n<p>그리고 이익의 합을 계산한다.</p>\n<h2 id=\"정답-코드\"><a href=\"#정답-코드\" class=\"headerlink\" title=\"정답 코드\"></a>정답 코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mill03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"2048","date":"2018-09-23T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/12100>\n\n삼성 기출문제이다. DFS 문제이다. 블록을 이동하는 것이 어려운 문제였다.\n\n## 풀이\n\n블록을 5번 이동 시키는 것은 다음 그림과 같이 DFS로 구현한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204801.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204802.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204803.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204804.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204805.png)\n\n문제의 핵심은 블록을 이동하는 것이다. 블록 이동을 구현하기 위해 Queue를 사용한다.\n\nmoveBlocks 메소드가 이를 구현한 코드이다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204806.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204807.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204808.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204809.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204810.png)","source":"_posts/2018-09-24-2048.md","raw":"---\nlayout: post\ntitle:  \"2048\"\ndate:   2018-09-24\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/12100>\n\n삼성 기출문제이다. DFS 문제이다. 블록을 이동하는 것이 어려운 문제였다.\n\n## 풀이\n\n블록을 5번 이동 시키는 것은 다음 그림과 같이 DFS로 구현한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204801.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204802.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204803.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204804.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204805.png)\n\n문제의 핵심은 블록을 이동하는 것이다. 블록 이동을 구현하기 위해 Queue를 사용한다.\n\nmoveBlocks 메소드가 이를 구현한 코드이다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204806.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204807.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204808.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204809.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204810.png)","slug":"2018-09-24-2048","published":1,"updated":"2018-09-24T14:35:47.831Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ot00go31x7ak4g44le","content":"<p><a href=\"https://www.acmicpc.net/problem/12100\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/12100</a></p>\n<p>삼성 기출문제이다. DFS 문제이다. 블록을 이동하는 것이 어려운 문제였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>블록을 5번 이동 시키는 것은 다음 그림과 같이 DFS로 구현한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204801.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204802.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204803.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204804.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204805.png\" alt=\"img\"></p>\n<p>문제의 핵심은 블록을 이동하는 것이다. 블록 이동을 구현하기 위해 Queue를 사용한다.</p>\n<p>moveBlocks 메소드가 이를 구현한 코드이다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204806.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204807.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204808.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204809.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204810.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/12100\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/12100</a></p>\n<p>삼성 기출문제이다. DFS 문제이다. 블록을 이동하는 것이 어려운 문제였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>블록을 5번 이동 시키는 것은 다음 그림과 같이 DFS로 구현한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204801.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204802.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204803.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204804.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204805.png\" alt=\"img\"></p>\n<p>문제의 핵심은 블록을 이동하는 것이다. 블록 이동을 구현하기 위해 Queue를 사용한다.</p>\n<p>moveBlocks 메소드가 이를 구현한 코드이다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204806.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204807.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204808.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204809.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/204810.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"시험감독","date":"2018-09-23T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/13458>\n\n삼성 기출문제이다. 매우 쉬운 문제였다. \n\n## 풀이\n\n문제에서 주어진 대로 풀면 된다.\n\n처음에 틀렸다. \n\nans 변수를 int로 선언하였을 때는 틀렸다고 나온다.\n\nlong 형으로 선언하였더니 맞았다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/exameSee.png)\n\n","source":"_posts/2018-09-24-시험감독.md","raw":"---\nlayout: post\ntitle:  \"시험감독\"\ndate:   2018-09-24\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/13458>\n\n삼성 기출문제이다. 매우 쉬운 문제였다. \n\n## 풀이\n\n문제에서 주어진 대로 풀면 된다.\n\n처음에 틀렸다. \n\nans 변수를 int로 선언하였을 때는 틀렸다고 나온다.\n\nlong 형으로 선언하였더니 맞았다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/exameSee.png)\n\n","slug":"2018-09-24-시험감독","published":1,"updated":"2018-09-24T03:26:34.200Z","comments":1,"photos":[],"link":"","_id":"cjp6k65ox00gq31x7o5wey5yu","content":"<p><a href=\"https://www.acmicpc.net/problem/13458\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/13458</a></p>\n<p>삼성 기출문제이다. 매우 쉬운 문제였다. </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>문제에서 주어진 대로 풀면 된다.</p>\n<p>처음에 틀렸다. </p>\n<p>ans 변수를 int로 선언하였을 때는 틀렸다고 나온다.</p>\n<p>long 형으로 선언하였더니 맞았다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/exameSee.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/13458\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/13458</a></p>\n<p>삼성 기출문제이다. 매우 쉬운 문제였다. </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>문제에서 주어진 대로 풀면 된다.</p>\n<p>처음에 틀렸다. </p>\n<p>ans 변수를 int로 선언하였을 때는 틀렸다고 나온다.</p>\n<p>long 형으로 선언하였더니 맞았다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/exameSee.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"뱀","date":"2018-09-23T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/3190>\n\n삼성 기출문제이다. 쉬운 문제였다. \n\n## 풀이\n\n핵심은 뱀의 이동 흔적을 남기는 것이다. 이를 위해, Queue를 사용하였다.\n\n- 뱀이 머리만 이동할 경우\n  - 이동할 위치를 Enqueue\n\n- 뱀이 완전히 한 칸 이동할 경우\n  - 뱀의 시작점(Queue에 가장 먼저 Enqueue된 요소)을 Dequeue\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove04.png)\n\n","source":"_posts/2018-09-24-뱀.md","raw":"---\nlayout: post\ntitle:  \"뱀\"\ndate:   2018-09-24\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/3190>\n\n삼성 기출문제이다. 쉬운 문제였다. \n\n## 풀이\n\n핵심은 뱀의 이동 흔적을 남기는 것이다. 이를 위해, Queue를 사용하였다.\n\n- 뱀이 머리만 이동할 경우\n  - 이동할 위치를 Enqueue\n\n- 뱀이 완전히 한 칸 이동할 경우\n  - 뱀의 시작점(Queue에 가장 먼저 Enqueue된 요소)을 Dequeue\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove04.png)\n\n","slug":"2018-09-24-뱀","published":1,"updated":"2018-09-24T08:36:02.701Z","comments":1,"photos":[],"link":"","_id":"cjp6k65oy00gs31x7gs3fpkld","content":"<p><a href=\"https://www.acmicpc.net/problem/3190\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3190</a></p>\n<p>삼성 기출문제이다. 쉬운 문제였다. </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>핵심은 뱀의 이동 흔적을 남기는 것이다. 이를 위해, Queue를 사용하였다.</p>\n<ul>\n<li><p>뱀이 머리만 이동할 경우</p>\n<ul>\n<li>이동할 위치를 Enqueue</li>\n</ul>\n</li>\n<li><p>뱀이 완전히 한 칸 이동할 경우</p>\n<ul>\n<li>뱀의 시작점(Queue에 가장 먼저 Enqueue된 요소)을 Dequeue</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove04.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/3190\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/3190</a></p>\n<p>삼성 기출문제이다. 쉬운 문제였다. </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>핵심은 뱀의 이동 흔적을 남기는 것이다. 이를 위해, Queue를 사용하였다.</p>\n<ul>\n<li><p>뱀이 머리만 이동할 경우</p>\n<ul>\n<li>이동할 위치를 Enqueue</li>\n</ul>\n</li>\n<li><p>뱀이 완전히 한 칸 이동할 경우</p>\n<ul>\n<li>뱀의 시작점(Queue에 가장 먼저 Enqueue된 요소)을 Dequeue</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/snakeMove04.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"감시","date":"2018-09-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/15683>\n\n어려웠다. BFS로 시도하였지만, 실패하였다.\n\n해설을 보고 DFS로 풀었다.\n\n## 풀이\n\n1. 이전 감시 상태를 가져와 복사한다. (깊은 복사)\n2. 감시 가능 지역을 표시한다.\n3. 다음 cctv를 탐색한다.\n\n탐색 순서를 설명하기 위해 다음 표를 보자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt01.png)\n\n위의 표에서 감시 카메라는 A, B, C 세 개가 있다. \n\nA와 B 는 상하 / 좌우 를 감시할 수 있고, C는 상하좌우를 감시할 수 있다.\n\n탐색 순서는 다음 그림과 같이 나타낼 수 있다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt02.png)\n\nDFS이다. 최대한 깊이 탐색을 한다. 노랑색의 1~4 번 순서대로 탐색이 진행된다.\n\n## 개념\n\n배열을 매개변수로 전달했을 때, call by reference이다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt06.png)","source":"_posts/2018-09-12-감시.md","raw":"---\nlayout: post\ntitle:  \"감시\"\ndate:   2018-09-12\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/15683>\n\n어려웠다. BFS로 시도하였지만, 실패하였다.\n\n해설을 보고 DFS로 풀었다.\n\n## 풀이\n\n1. 이전 감시 상태를 가져와 복사한다. (깊은 복사)\n2. 감시 가능 지역을 표시한다.\n3. 다음 cctv를 탐색한다.\n\n탐색 순서를 설명하기 위해 다음 표를 보자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt01.png)\n\n위의 표에서 감시 카메라는 A, B, C 세 개가 있다. \n\nA와 B 는 상하 / 좌우 를 감시할 수 있고, C는 상하좌우를 감시할 수 있다.\n\n탐색 순서는 다음 그림과 같이 나타낼 수 있다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt02.png)\n\nDFS이다. 최대한 깊이 탐색을 한다. 노랑색의 1~4 번 순서대로 탐색이 진행된다.\n\n## 개념\n\n배열을 매개변수로 전달했을 때, call by reference이다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt06.png)","slug":"2018-09-12-감시","published":1,"updated":"2018-09-12T08:13:00.087Z","comments":1,"photos":[],"link":"","_id":"cjp6k65oz00gu31x7ekc28ah0","content":"<p><a href=\"https://www.acmicpc.net/problem/15683\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/15683</a></p>\n<p>어려웠다. BFS로 시도하였지만, 실패하였다.</p>\n<p>해설을 보고 DFS로 풀었다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>이전 감시 상태를 가져와 복사한다. (깊은 복사)</li>\n<li>감시 가능 지역을 표시한다.</li>\n<li>다음 cctv를 탐색한다.</li>\n</ol>\n<p>탐색 순서를 설명하기 위해 다음 표를 보자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt01.png\" alt=\"img\"></p>\n<p>위의 표에서 감시 카메라는 A, B, C 세 개가 있다. </p>\n<p>A와 B 는 상하 / 좌우 를 감시할 수 있고, C는 상하좌우를 감시할 수 있다.</p>\n<p>탐색 순서는 다음 그림과 같이 나타낼 수 있다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt02.png\" alt=\"img\"></p>\n<p>DFS이다. 최대한 깊이 탐색을 한다. 노랑색의 1~4 번 순서대로 탐색이 진행된다.</p>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><p>배열을 매개변수로 전달했을 때, call by reference이다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt06.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/15683\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/15683</a></p>\n<p>어려웠다. BFS로 시도하였지만, 실패하였다.</p>\n<p>해설을 보고 DFS로 풀었다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>이전 감시 상태를 가져와 복사한다. (깊은 복사)</li>\n<li>감시 가능 지역을 표시한다.</li>\n<li>다음 cctv를 탐색한다.</li>\n</ol>\n<p>탐색 순서를 설명하기 위해 다음 표를 보자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt01.png\" alt=\"img\"></p>\n<p>위의 표에서 감시 카메라는 A, B, C 세 개가 있다. </p>\n<p>A와 B 는 상하 / 좌우 를 감시할 수 있고, C는 상하좌우를 감시할 수 있다.</p>\n<p>탐색 순서는 다음 그림과 같이 나타낼 수 있다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt02.png\" alt=\"img\"></p>\n<p>DFS이다. 최대한 깊이 탐색을 한다. 노랑색의 1~4 번 순서대로 탐색이 진행된다.</p>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><p>배열을 매개변수로 전달했을 때, call by reference이다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/detectt06.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"구슬탈출2","date":"2018-09-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/13460>\n\n삼성 기출문제이다. 해설을 보고 이해하였다.\n\n## 풀이\n\n1. 완전탐색이고 최소 횟수를 구하는 것이므로, BFS를 사용한다.\n2. 삼성 기출 문제 '2048' 에서 블록 이동이 문제 해결의 관건이듯이, 이 문제 역시 공을 이동하는 것이 문제 해결의 관건이다. \n\n<br>\n\n구슬 이동 방법 : 상대 공을 무시하고 각자 공을 이동시킴\n\n- B가 구멍에 빠지는 경우 : 큐에 넣지 않고 넘긴다\n- B와 R이 겹치는 경우 : B와 R의 초기 상태를 확인해서 이동한다.\n  - 예를 들어, 동쪽으로 이동하는 경우, 초기에 B가 R의 왼쪽에 있었다고 하자.\n  - 그렇다면, B를 R의 왼쪽으로 한 칸 이동시켜야한다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove05.png)","source":"_posts/2018-09-26-구슬탈출2.md","raw":"---\nlayout: post\ntitle:  \"구슬탈출2\"\ndate:   2018-09-26\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/13460>\n\n삼성 기출문제이다. 해설을 보고 이해하였다.\n\n## 풀이\n\n1. 완전탐색이고 최소 횟수를 구하는 것이므로, BFS를 사용한다.\n2. 삼성 기출 문제 '2048' 에서 블록 이동이 문제 해결의 관건이듯이, 이 문제 역시 공을 이동하는 것이 문제 해결의 관건이다. \n\n<br>\n\n구슬 이동 방법 : 상대 공을 무시하고 각자 공을 이동시킴\n\n- B가 구멍에 빠지는 경우 : 큐에 넣지 않고 넘긴다\n- B와 R이 겹치는 경우 : B와 R의 초기 상태를 확인해서 이동한다.\n  - 예를 들어, 동쪽으로 이동하는 경우, 초기에 B가 R의 왼쪽에 있었다고 하자.\n  - 그렇다면, B를 R의 왼쪽으로 한 칸 이동시켜야한다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove05.png)","slug":"2018-09-26-구슬탈출2","published":1,"updated":"2018-09-26T08:28:21.523Z","comments":1,"photos":[],"link":"","_id":"cjp6k65p400gw31x7r4bu5glm","content":"<p><a href=\"https://www.acmicpc.net/problem/13460\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/13460</a></p>\n<p>삼성 기출문제이다. 해설을 보고 이해하였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>완전탐색이고 최소 횟수를 구하는 것이므로, BFS를 사용한다.</li>\n<li>삼성 기출 문제 ‘2048’ 에서 블록 이동이 문제 해결의 관건이듯이, 이 문제 역시 공을 이동하는 것이 문제 해결의 관건이다. </li>\n</ol>\n<p><br></p>\n<p>구슬 이동 방법 : 상대 공을 무시하고 각자 공을 이동시킴</p>\n<ul>\n<li>B가 구멍에 빠지는 경우 : 큐에 넣지 않고 넘긴다</li>\n<li>B와 R이 겹치는 경우 : B와 R의 초기 상태를 확인해서 이동한다.<ul>\n<li>예를 들어, 동쪽으로 이동하는 경우, 초기에 B가 R의 왼쪽에 있었다고 하자.</li>\n<li>그렇다면, B를 R의 왼쪽으로 한 칸 이동시켜야한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove05.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/13460\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/13460</a></p>\n<p>삼성 기출문제이다. 해설을 보고 이해하였다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>완전탐색이고 최소 횟수를 구하는 것이므로, BFS를 사용한다.</li>\n<li>삼성 기출 문제 ‘2048’ 에서 블록 이동이 문제 해결의 관건이듯이, 이 문제 역시 공을 이동하는 것이 문제 해결의 관건이다. </li>\n</ol>\n<p><br></p>\n<p>구슬 이동 방법 : 상대 공을 무시하고 각자 공을 이동시킴</p>\n<ul>\n<li>B가 구멍에 빠지는 경우 : 큐에 넣지 않고 넘긴다</li>\n<li>B와 R이 겹치는 경우 : B와 R의 초기 상태를 확인해서 이동한다.<ul>\n<li>예를 들어, 동쪽으로 이동하는 경우, 초기에 B가 R의 왼쪽에 있었다고 하자.</li>\n<li>그렇다면, B를 R의 왼쪽으로 한 칸 이동시켜야한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ballmove05.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"실패율","date":"2018-09-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.welcomekakao.com/learn/courses/30/lessons/42889?language=java>\n\n2019 카카오 신입 공채 1차 코딩 테스트\n\n## 풀이\n\n1. stages 배열을 순회하며 각 스테이지마다 남아 있는 인원수를 체크한다.\n2. 각 스테이지마다 실패율을 계산하여 스테이지 번호와 실패율을 리스트에 저장한다.\n3. 리스트를 실패율을 기준으로 내림차순 정렬한다.\n\n\n\n예를 들어, 스테이지 개수는 5개, 사용자가 각 스테이지에 현재 도전중인 스테이지 번호는 [2, 1, 2, 6, 2, 4, 3, 3]  \n\n각 스테이지의 실패율은 다음 그림과 같이 구한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failStage01.png)\n\n## 개념\n\nJava 에서 정렬하기 위해서 java.util.Collections 클래스의 메소드인 sort()를 사용한다.\n\n객체를 원소로 가진 리스트를 정렬하고자 할 때는, 객체가 Comparable interface를 구현해야 한다.\n\n본 문제에서는 Fail class를 원소로 가지는 arrayList를, Fail class의 rate를 기준으로 내림차순 정렬하고 있다.\n\n이를 위해, Fail class에 compareTo 메소드를 오버라이딩하고 있다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failStage02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failrate033.png)","source":"_posts/2018-09-30-실패율.md","raw":"---\nlayout: post\ntitle:  \"실패율\"\ndate:   2018-09-30\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.welcomekakao.com/learn/courses/30/lessons/42889?language=java>\n\n2019 카카오 신입 공채 1차 코딩 테스트\n\n## 풀이\n\n1. stages 배열을 순회하며 각 스테이지마다 남아 있는 인원수를 체크한다.\n2. 각 스테이지마다 실패율을 계산하여 스테이지 번호와 실패율을 리스트에 저장한다.\n3. 리스트를 실패율을 기준으로 내림차순 정렬한다.\n\n\n\n예를 들어, 스테이지 개수는 5개, 사용자가 각 스테이지에 현재 도전중인 스테이지 번호는 [2, 1, 2, 6, 2, 4, 3, 3]  \n\n각 스테이지의 실패율은 다음 그림과 같이 구한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failStage01.png)\n\n## 개념\n\nJava 에서 정렬하기 위해서 java.util.Collections 클래스의 메소드인 sort()를 사용한다.\n\n객체를 원소로 가진 리스트를 정렬하고자 할 때는, 객체가 Comparable interface를 구현해야 한다.\n\n본 문제에서는 Fail class를 원소로 가지는 arrayList를, Fail class의 rate를 기준으로 내림차순 정렬하고 있다.\n\n이를 위해, Fail class에 compareTo 메소드를 오버라이딩하고 있다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failStage02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failrate033.png)","slug":"2018-09-30-실패율","published":1,"updated":"2018-09-30T13:33:43.290Z","comments":1,"photos":[],"link":"","_id":"cjp6k65p600gy31x7jwd53as0","content":"<p><a href=\"https://www.welcomekakao.com/learn/courses/30/lessons/42889?language=java\" target=\"_blank\" rel=\"noopener\">https://www.welcomekakao.com/learn/courses/30/lessons/42889?language=java</a></p>\n<p>2019 카카오 신입 공채 1차 코딩 테스트</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>stages 배열을 순회하며 각 스테이지마다 남아 있는 인원수를 체크한다.</li>\n<li>각 스테이지마다 실패율을 계산하여 스테이지 번호와 실패율을 리스트에 저장한다.</li>\n<li>리스트를 실패율을 기준으로 내림차순 정렬한다.</li>\n</ol>\n<p>예를 들어, 스테이지 개수는 5개, 사용자가 각 스테이지에 현재 도전중인 스테이지 번호는 [2, 1, 2, 6, 2, 4, 3, 3]  </p>\n<p>각 스테이지의 실패율은 다음 그림과 같이 구한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failStage01.png\" alt=\"img\"></p>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><p>Java 에서 정렬하기 위해서 java.util.Collections 클래스의 메소드인 sort()를 사용한다.</p>\n<p>객체를 원소로 가진 리스트를 정렬하고자 할 때는, 객체가 Comparable interface를 구현해야 한다.</p>\n<p>본 문제에서는 Fail class를 원소로 가지는 arrayList를, Fail class의 rate를 기준으로 내림차순 정렬하고 있다.</p>\n<p>이를 위해, Fail class에 compareTo 메소드를 오버라이딩하고 있다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failStage02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failrate033.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.welcomekakao.com/learn/courses/30/lessons/42889?language=java\" target=\"_blank\" rel=\"noopener\">https://www.welcomekakao.com/learn/courses/30/lessons/42889?language=java</a></p>\n<p>2019 카카오 신입 공채 1차 코딩 테스트</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>stages 배열을 순회하며 각 스테이지마다 남아 있는 인원수를 체크한다.</li>\n<li>각 스테이지마다 실패율을 계산하여 스테이지 번호와 실패율을 리스트에 저장한다.</li>\n<li>리스트를 실패율을 기준으로 내림차순 정렬한다.</li>\n</ol>\n<p>예를 들어, 스테이지 개수는 5개, 사용자가 각 스테이지에 현재 도전중인 스테이지 번호는 [2, 1, 2, 6, 2, 4, 3, 3]  </p>\n<p>각 스테이지의 실패율은 다음 그림과 같이 구한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failStage01.png\" alt=\"img\"></p>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><p>Java 에서 정렬하기 위해서 java.util.Collections 클래스의 메소드인 sort()를 사용한다.</p>\n<p>객체를 원소로 가진 리스트를 정렬하고자 할 때는, 객체가 Comparable interface를 구현해야 한다.</p>\n<p>본 문제에서는 Fail class를 원소로 가지는 arrayList를, Fail class의 rate를 기준으로 내림차순 정렬하고 있다.</p>\n<p>이를 위해, Fail class에 compareTo 메소드를 오버라이딩하고 있다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failStage02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/failrate033.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Introduction","date":"2018-09-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## 운영체제란\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss1011.png)\n\n- 컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 다른 모든 소프트웨어와 하드웨어를 연결하느 소픝웨어 계층\n  - 협의의 운영체제(커널)\n    - 운영체제의 핵심 부분, 메모리에 상주하는부분\n  - 광의의 운영체제\n    - 커널 뿐만 아니라 각족 주변 시스템 유틸리티를 포함한 개념\n\n## 운영체제의 목표\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss102.png)\n\n- 컴퓨터 시스템을 편리하게 사용하도록 환경 제공\n  - 운영체제는 동시 사용자/프로그램들이 각각 독자적으로 컴퓨터에서 수행되는 것 같은 환상 제공\n  - 하드웨어를 직접 다루는 복잡한 부분을 운영체제가 대행\n- 컴퓨터 시슴템의 자원을 효율적으로 관리 (*)\n  - 프로세서, 기억장치, 입출력 장치 등의 효율적관리\n    - 사용자간의 형평성 있는 자원 분배\n    - 주언진 자원으로 최대한의 성능을 내도록\n  - 사용자 및 운영체제 자신의 보호\n  - 프로세스, 파일, 메시지 등을 관리\n\n## 운영체제의 분류\n\n- 동시작업 가능 여부\n  - 단일 작업(single tasking)\n    - MS-DON 프롬프르 상에서는 한 명령의 수행을 끝내기 전에 다른 명령을 수행시킬 수 없음\n  - 다중 작업(multi tasking)\n    - 동시에 두개 이상의 작업 처리\n    - UNIX/MS Windows 등에서는 한 명령의 수행이 끝나기 전에 다른 명령이나 프로그램을 수행할 수 있음\n- 사용자의 수\n  - 단일 사용자\n    - MS-DOS, MS Windows\n  - 다중 사용자\n    - UNIX, NT server\n- 처리 방식\n  - 일괄처리(batch processing)\n    - 작업 요청의 일정량 모아서 한꺼번에 처리\n    - 작업이 완전 종료될 때까지 기다려야함\n    - 초기 Punch Card 처리 시스템\n  - 시분할(time sharing)\n    - 여러 작업을 수행할때 컴퓨터 처리 능력을 일정한 시간 단위로 분할하여 사용\n    - interactive한 방식\n    - 짧은 응답시간을 가짐\n  - 실시간(Realtime OS)\n    - 정해진 시간안에 어떠한 일이 반드시 종료됨이 보장되어야 하는 실시간 시스템을 위한 OS\n    - 원자로/공장제어, 미사일제어, 반도체 장비, 로보트제어\n    - Hard realtime system / Soft realtime system\n\n## 몇 가지 용어\n\n- Multitasking\n  - 여러 프로그램을 동시에 수행한다는 뜻\n- Multiprogramming\n  - 메모리에 여러 프로그램이 올라가 있음을 강조\n- Time sharing\n  - CPU의 시간을 분할하여 나누어쓴다는 의미\n- Multiprocessor\n  - 하나의 컴퓨터에 CPU가 여러개 붙어 있음을 의미\n\n## 운영 체제의 예\n\n- UNIX 계열\n  - 대형 컴퓨터를 위한 OS\n  - 코드의 대부분을 C언어로 작성\n  - 소스 코드 공개\n  - 높은 이식성\n    - 하나의 컴퓨터에서 돌아가는 UNIX를 전혀 다른 컴퓨터에 이식하기 쉬움\n  - 최소한의 커널 구조\n    - 핵심적인 것만 커널에 넣음\n  - 다양한 버전\n    - System V, FreeBSD, SunOS, Solaris\n    - Linux\n- Windows 계열\n  - DOS\n    - MS사에서 개인용 PC를 위해 개발\n    - 메모리 관리 능력의 한계 \n  - MS Windows \n    - 다중 작업용 GUI 기반 OS\n    - 풍부한 지원 소프트웨어\n\n## 운영체제의 구조\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss103.png)\n","source":"_posts/2018-10-01-Introduction.md","raw":"---\nlayout: post\ntitle:  \"Introduction\"\ndate:   2018-10-01\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## 운영체제란\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss1011.png)\n\n- 컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 다른 모든 소프트웨어와 하드웨어를 연결하느 소픝웨어 계층\n  - 협의의 운영체제(커널)\n    - 운영체제의 핵심 부분, 메모리에 상주하는부분\n  - 광의의 운영체제\n    - 커널 뿐만 아니라 각족 주변 시스템 유틸리티를 포함한 개념\n\n## 운영체제의 목표\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss102.png)\n\n- 컴퓨터 시스템을 편리하게 사용하도록 환경 제공\n  - 운영체제는 동시 사용자/프로그램들이 각각 독자적으로 컴퓨터에서 수행되는 것 같은 환상 제공\n  - 하드웨어를 직접 다루는 복잡한 부분을 운영체제가 대행\n- 컴퓨터 시슴템의 자원을 효율적으로 관리 (*)\n  - 프로세서, 기억장치, 입출력 장치 등의 효율적관리\n    - 사용자간의 형평성 있는 자원 분배\n    - 주언진 자원으로 최대한의 성능을 내도록\n  - 사용자 및 운영체제 자신의 보호\n  - 프로세스, 파일, 메시지 등을 관리\n\n## 운영체제의 분류\n\n- 동시작업 가능 여부\n  - 단일 작업(single tasking)\n    - MS-DON 프롬프르 상에서는 한 명령의 수행을 끝내기 전에 다른 명령을 수행시킬 수 없음\n  - 다중 작업(multi tasking)\n    - 동시에 두개 이상의 작업 처리\n    - UNIX/MS Windows 등에서는 한 명령의 수행이 끝나기 전에 다른 명령이나 프로그램을 수행할 수 있음\n- 사용자의 수\n  - 단일 사용자\n    - MS-DOS, MS Windows\n  - 다중 사용자\n    - UNIX, NT server\n- 처리 방식\n  - 일괄처리(batch processing)\n    - 작업 요청의 일정량 모아서 한꺼번에 처리\n    - 작업이 완전 종료될 때까지 기다려야함\n    - 초기 Punch Card 처리 시스템\n  - 시분할(time sharing)\n    - 여러 작업을 수행할때 컴퓨터 처리 능력을 일정한 시간 단위로 분할하여 사용\n    - interactive한 방식\n    - 짧은 응답시간을 가짐\n  - 실시간(Realtime OS)\n    - 정해진 시간안에 어떠한 일이 반드시 종료됨이 보장되어야 하는 실시간 시스템을 위한 OS\n    - 원자로/공장제어, 미사일제어, 반도체 장비, 로보트제어\n    - Hard realtime system / Soft realtime system\n\n## 몇 가지 용어\n\n- Multitasking\n  - 여러 프로그램을 동시에 수행한다는 뜻\n- Multiprogramming\n  - 메모리에 여러 프로그램이 올라가 있음을 강조\n- Time sharing\n  - CPU의 시간을 분할하여 나누어쓴다는 의미\n- Multiprocessor\n  - 하나의 컴퓨터에 CPU가 여러개 붙어 있음을 의미\n\n## 운영 체제의 예\n\n- UNIX 계열\n  - 대형 컴퓨터를 위한 OS\n  - 코드의 대부분을 C언어로 작성\n  - 소스 코드 공개\n  - 높은 이식성\n    - 하나의 컴퓨터에서 돌아가는 UNIX를 전혀 다른 컴퓨터에 이식하기 쉬움\n  - 최소한의 커널 구조\n    - 핵심적인 것만 커널에 넣음\n  - 다양한 버전\n    - System V, FreeBSD, SunOS, Solaris\n    - Linux\n- Windows 계열\n  - DOS\n    - MS사에서 개인용 PC를 위해 개발\n    - 메모리 관리 능력의 한계 \n  - MS Windows \n    - 다중 작업용 GUI 기반 OS\n    - 풍부한 지원 소프트웨어\n\n## 운영체제의 구조\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss103.png)\n","slug":"2018-10-01-Introduction","published":1,"updated":"2018-10-01T12:30:00.302Z","comments":1,"photos":[],"link":"","_id":"cjp6k65p700h031x77w1a7n13","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"운영체제란\"><a href=\"#운영체제란\" class=\"headerlink\" title=\"운영체제란\"></a>운영체제란</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss1011.png\" alt=\"img\"></p>\n<ul>\n<li>컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 다른 모든 소프트웨어와 하드웨어를 연결하느 소픝웨어 계층<ul>\n<li>협의의 운영체제(커널)<ul>\n<li>운영체제의 핵심 부분, 메모리에 상주하는부분</li>\n</ul>\n</li>\n<li>광의의 운영체제<ul>\n<li>커널 뿐만 아니라 각족 주변 시스템 유틸리티를 포함한 개념</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"운영체제의-목표\"><a href=\"#운영체제의-목표\" class=\"headerlink\" title=\"운영체제의 목표\"></a>운영체제의 목표</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss102.png\" alt=\"img\"></p>\n<ul>\n<li>컴퓨터 시스템을 편리하게 사용하도록 환경 제공<ul>\n<li>운영체제는 동시 사용자/프로그램들이 각각 독자적으로 컴퓨터에서 수행되는 것 같은 환상 제공</li>\n<li>하드웨어를 직접 다루는 복잡한 부분을 운영체제가 대행</li>\n</ul>\n</li>\n<li>컴퓨터 시슴템의 자원을 효율적으로 관리 (*)<ul>\n<li>프로세서, 기억장치, 입출력 장치 등의 효율적관리<ul>\n<li>사용자간의 형평성 있는 자원 분배</li>\n<li>주언진 자원으로 최대한의 성능을 내도록</li>\n</ul>\n</li>\n<li>사용자 및 운영체제 자신의 보호</li>\n<li>프로세스, 파일, 메시지 등을 관리</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"운영체제의-분류\"><a href=\"#운영체제의-분류\" class=\"headerlink\" title=\"운영체제의 분류\"></a>운영체제의 분류</h2><ul>\n<li>동시작업 가능 여부<ul>\n<li>단일 작업(single tasking)<ul>\n<li>MS-DON 프롬프르 상에서는 한 명령의 수행을 끝내기 전에 다른 명령을 수행시킬 수 없음</li>\n</ul>\n</li>\n<li>다중 작업(multi tasking)<ul>\n<li>동시에 두개 이상의 작업 처리</li>\n<li>UNIX/MS Windows 등에서는 한 명령의 수행이 끝나기 전에 다른 명령이나 프로그램을 수행할 수 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>사용자의 수<ul>\n<li>단일 사용자<ul>\n<li>MS-DOS, MS Windows</li>\n</ul>\n</li>\n<li>다중 사용자<ul>\n<li>UNIX, NT server</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>처리 방식<ul>\n<li>일괄처리(batch processing)<ul>\n<li>작업 요청의 일정량 모아서 한꺼번에 처리</li>\n<li>작업이 완전 종료될 때까지 기다려야함</li>\n<li>초기 Punch Card 처리 시스템</li>\n</ul>\n</li>\n<li>시분할(time sharing)<ul>\n<li>여러 작업을 수행할때 컴퓨터 처리 능력을 일정한 시간 단위로 분할하여 사용</li>\n<li>interactive한 방식</li>\n<li>짧은 응답시간을 가짐</li>\n</ul>\n</li>\n<li>실시간(Realtime OS)<ul>\n<li>정해진 시간안에 어떠한 일이 반드시 종료됨이 보장되어야 하는 실시간 시스템을 위한 OS</li>\n<li>원자로/공장제어, 미사일제어, 반도체 장비, 로보트제어</li>\n<li>Hard realtime system / Soft realtime system</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"몇-가지-용어\"><a href=\"#몇-가지-용어\" class=\"headerlink\" title=\"몇 가지 용어\"></a>몇 가지 용어</h2><ul>\n<li>Multitasking<ul>\n<li>여러 프로그램을 동시에 수행한다는 뜻</li>\n</ul>\n</li>\n<li>Multiprogramming<ul>\n<li>메모리에 여러 프로그램이 올라가 있음을 강조</li>\n</ul>\n</li>\n<li>Time sharing<ul>\n<li>CPU의 시간을 분할하여 나누어쓴다는 의미</li>\n</ul>\n</li>\n<li>Multiprocessor<ul>\n<li>하나의 컴퓨터에 CPU가 여러개 붙어 있음을 의미</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"운영-체제의-예\"><a href=\"#운영-체제의-예\" class=\"headerlink\" title=\"운영 체제의 예\"></a>운영 체제의 예</h2><ul>\n<li>UNIX 계열<ul>\n<li>대형 컴퓨터를 위한 OS</li>\n<li>코드의 대부분을 C언어로 작성</li>\n<li>소스 코드 공개</li>\n<li>높은 이식성<ul>\n<li>하나의 컴퓨터에서 돌아가는 UNIX를 전혀 다른 컴퓨터에 이식하기 쉬움</li>\n</ul>\n</li>\n<li>최소한의 커널 구조<ul>\n<li>핵심적인 것만 커널에 넣음</li>\n</ul>\n</li>\n<li>다양한 버전<ul>\n<li>System V, FreeBSD, SunOS, Solaris</li>\n<li>Linux</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Windows 계열<ul>\n<li>DOS<ul>\n<li>MS사에서 개인용 PC를 위해 개발</li>\n<li>메모리 관리 능력의 한계 </li>\n</ul>\n</li>\n<li>MS Windows <ul>\n<li>다중 작업용 GUI 기반 OS</li>\n<li>풍부한 지원 소프트웨어</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"운영체제의-구조\"><a href=\"#운영체제의-구조\" class=\"headerlink\" title=\"운영체제의 구조\"></a>운영체제의 구조</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss103.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"운영체제란\"><a href=\"#운영체제란\" class=\"headerlink\" title=\"운영체제란\"></a>운영체제란</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss1011.png\" alt=\"img\"></p>\n<ul>\n<li>컴퓨터 하드웨어 바로 위에 설치되어 사용자 및 다른 모든 소프트웨어와 하드웨어를 연결하느 소픝웨어 계층<ul>\n<li>협의의 운영체제(커널)<ul>\n<li>운영체제의 핵심 부분, 메모리에 상주하는부분</li>\n</ul>\n</li>\n<li>광의의 운영체제<ul>\n<li>커널 뿐만 아니라 각족 주변 시스템 유틸리티를 포함한 개념</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"운영체제의-목표\"><a href=\"#운영체제의-목표\" class=\"headerlink\" title=\"운영체제의 목표\"></a>운영체제의 목표</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss102.png\" alt=\"img\"></p>\n<ul>\n<li>컴퓨터 시스템을 편리하게 사용하도록 환경 제공<ul>\n<li>운영체제는 동시 사용자/프로그램들이 각각 독자적으로 컴퓨터에서 수행되는 것 같은 환상 제공</li>\n<li>하드웨어를 직접 다루는 복잡한 부분을 운영체제가 대행</li>\n</ul>\n</li>\n<li>컴퓨터 시슴템의 자원을 효율적으로 관리 (*)<ul>\n<li>프로세서, 기억장치, 입출력 장치 등의 효율적관리<ul>\n<li>사용자간의 형평성 있는 자원 분배</li>\n<li>주언진 자원으로 최대한의 성능을 내도록</li>\n</ul>\n</li>\n<li>사용자 및 운영체제 자신의 보호</li>\n<li>프로세스, 파일, 메시지 등을 관리</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"운영체제의-분류\"><a href=\"#운영체제의-분류\" class=\"headerlink\" title=\"운영체제의 분류\"></a>운영체제의 분류</h2><ul>\n<li>동시작업 가능 여부<ul>\n<li>단일 작업(single tasking)<ul>\n<li>MS-DON 프롬프르 상에서는 한 명령의 수행을 끝내기 전에 다른 명령을 수행시킬 수 없음</li>\n</ul>\n</li>\n<li>다중 작업(multi tasking)<ul>\n<li>동시에 두개 이상의 작업 처리</li>\n<li>UNIX/MS Windows 등에서는 한 명령의 수행이 끝나기 전에 다른 명령이나 프로그램을 수행할 수 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>사용자의 수<ul>\n<li>단일 사용자<ul>\n<li>MS-DOS, MS Windows</li>\n</ul>\n</li>\n<li>다중 사용자<ul>\n<li>UNIX, NT server</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>처리 방식<ul>\n<li>일괄처리(batch processing)<ul>\n<li>작업 요청의 일정량 모아서 한꺼번에 처리</li>\n<li>작업이 완전 종료될 때까지 기다려야함</li>\n<li>초기 Punch Card 처리 시스템</li>\n</ul>\n</li>\n<li>시분할(time sharing)<ul>\n<li>여러 작업을 수행할때 컴퓨터 처리 능력을 일정한 시간 단위로 분할하여 사용</li>\n<li>interactive한 방식</li>\n<li>짧은 응답시간을 가짐</li>\n</ul>\n</li>\n<li>실시간(Realtime OS)<ul>\n<li>정해진 시간안에 어떠한 일이 반드시 종료됨이 보장되어야 하는 실시간 시스템을 위한 OS</li>\n<li>원자로/공장제어, 미사일제어, 반도체 장비, 로보트제어</li>\n<li>Hard realtime system / Soft realtime system</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"몇-가지-용어\"><a href=\"#몇-가지-용어\" class=\"headerlink\" title=\"몇 가지 용어\"></a>몇 가지 용어</h2><ul>\n<li>Multitasking<ul>\n<li>여러 프로그램을 동시에 수행한다는 뜻</li>\n</ul>\n</li>\n<li>Multiprogramming<ul>\n<li>메모리에 여러 프로그램이 올라가 있음을 강조</li>\n</ul>\n</li>\n<li>Time sharing<ul>\n<li>CPU의 시간을 분할하여 나누어쓴다는 의미</li>\n</ul>\n</li>\n<li>Multiprocessor<ul>\n<li>하나의 컴퓨터에 CPU가 여러개 붙어 있음을 의미</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"운영-체제의-예\"><a href=\"#운영-체제의-예\" class=\"headerlink\" title=\"운영 체제의 예\"></a>운영 체제의 예</h2><ul>\n<li>UNIX 계열<ul>\n<li>대형 컴퓨터를 위한 OS</li>\n<li>코드의 대부분을 C언어로 작성</li>\n<li>소스 코드 공개</li>\n<li>높은 이식성<ul>\n<li>하나의 컴퓨터에서 돌아가는 UNIX를 전혀 다른 컴퓨터에 이식하기 쉬움</li>\n</ul>\n</li>\n<li>최소한의 커널 구조<ul>\n<li>핵심적인 것만 커널에 넣음</li>\n</ul>\n</li>\n<li>다양한 버전<ul>\n<li>System V, FreeBSD, SunOS, Solaris</li>\n<li>Linux</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Windows 계열<ul>\n<li>DOS<ul>\n<li>MS사에서 개인용 PC를 위해 개발</li>\n<li>메모리 관리 능력의 한계 </li>\n</ul>\n</li>\n<li>MS Windows <ul>\n<li>다중 작업용 GUI 기반 OS</li>\n<li>풍부한 지원 소프트웨어</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"운영체제의-구조\"><a href=\"#운영체제의-구조\" class=\"headerlink\" title=\"운영체제의 구조\"></a>운영체제의 구조</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss103.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"System Structure, Program Execution","date":"2018-09-30T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## 컴퓨터 시스템 구조\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os101.png)\n\n- mode bit\n  - 사용자 프로그램의 잘못된 수행으로 다른 프로그램 및 운영체제에 피해가 가지 않도록 하기 위한 보호 장치 필요\n  - 0\n    - 운영체제가 CPU를 가지고 있음\n    - 모든 인스트럭션 수행 가능\n  - 1\n    - 사용자 프로그램이 CPU를 가지고 있음\n    - 한정된 인스턱션만 수행 가능\n- timer\n  - 특정 프로그램이 CPU 독점 막기위해 이게 필요\n  - 정해진 시간 흐른 뒤 운영체제에게 제어권 넘어가도록 interrupt 발생시킴\n  - 매 클럭마다 1씨 감소\n  - 타이머 값이 0 이 되면 언터럽트 발생\n  - time sharing 구현 위해 널리 이용\n- device controller\n  - IO 장치 전담하는 작은 CPU\n  - 제어 정보를 위해 control register, status register를 가짐\n  - local buffer를 가짐 (일종의 data register)\n  - IO는 실제 deivce 와 local buffer 사이에서 일어남\n  - IO가 끝나면 인터럽트로 CPU에 그 사실을 알림\n  - device driver : OS 코드 중 각 장치별 처리 루틴 (소프트웨어)\n  - divce controller : 각 장치를 통제하는 작은 CPU (하드웨어)\n- DMA controller\n  - 직접 메모리에 접근할 수 있는 컨트롤러\n  - IO 장치가 인터럽트 너무 많이 거니까 CPU가 너무 많이 방해 받아서 DMA controller가 필요\n  - CPU의 중재 없이 device의 buffer storage의 내용을 메모리에 block 단위로 직접 전송\n\n## I/O\n\n- 운영체제를 통해서 함\n- 사용자 프로그램은 I/O를 어덯게?\n  - system call을 함 (운영체제의 함수를 호출)\n  - 인터럽트를 직접 걸어서(trap) mode bit이 0으로 바껴\n\n## 동기식 입출력과 비동기식 입출력\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss0111.png)\n\n- 두 경우 모두 io 완료는 인터럽트로알려줌\n- syncronous I/O\n  - I/O 요청 후 입출력 작업이 완료 된 후에야 제어가 사용자 프로그램에게 넘어감\n  - 구현 방법 1\n    - io가 긑날떄 까지 cpu낭비\n    - 매시점 하나의 io만 일어남\n  - 구현 방법2\n    - io가 완료될때까지 해당 프로그램에게서 cpu를 빼앗음\n    - io 처리를 기다리는 줄에 그 프로그램을 줄 세움\n    - 다른 프로그램에게 cpu를 줌\n- asyncronous I/O\n  - I/O가 시작된후 입출력 작업이 끝나기를 기다리지 않고 제어가 사용자 프로그램에게 즉시 넘어감\n\n## Interrupt\n\n- 인터럽트 당한 시점의 레티스터와 program counter를 save한 후 CPU의 제어를 인터럽트 처리 루틴에 넘김\n- 인터럽트 : 하드웨어가 발생 시킨 인터럽트\n- trap : 소프트웨어 인터럽트\n  - Eception : 프로그램이 오류를 범함\n  - System call : 프로그램이 커널 함수를 호출하는 경우\n- 인터럽트 백터\n  - 해당 인터럽트의 처리 루틴 주소를 가지고 있음\n- 인터럽트 처리 루틴 (인터럽트 핸들러)\n  - 해당 인터럽트를 처리하는 커널 함수\n\n## System call\n\n- 사용자 프로글매이 운영체제의 서비스를 받기 위해 커널 함수를 호출 하는 것\n- 사용자 프로그램이 의도적으로 인터럽트 라인 세팅하면, CPU는 하던일을 멈추고 CPU의 제어권이 사용자 프로그램에서 운영체제에게 넘어감\n\n## 프로그램의 실행\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os103.png)\n\n- vitual memory\n  - 프로그램 실행 시키면 각 프로그램의 주소 공간이 만들어짐\n- pysical memory\n  - 커널은 항상 상주\n  - 당장 필요한 것만 올려둠\n- swap area\n  - 메모리의 연장 공간으로 사용\n- address tranlation\n  - virtial memory의 주소가 물리주소로 바뀜\n\n## 커널 주소 공간의 내용\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os104.png)\n\n- code\n- data\n  - 하드웨어를 관리하기 위한 자료구조를 가지고 잇음\n  - 각 프로그램들을 관리하기 위한 자료구조를 가지고 잇음 \n- stack\n  - 함수를 호출하거나 할때 스택을 사용\n\n## 사용자 프로그램이 사용하는 함수\n\n- 함수\n  - 사용자 정의 함수\n    - 자신의 프로그램에서 정의한 함수\n  - 라이브러리 함수\n    - 자신의 프로그램에서 정의하지 않고 갖다 쓴 함수\n    - 자신의 프로그램 실행 파일에 포함되어 있음\n  - 커널 함수\n    - 운영체제 프로그램의 함수\n    - 커널 함수의 호출 == 시스템 콜\n\n## 프로그램의 실행\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss0112.png)\n\n시스템 콜을 하면 커널 모드가 되고, 시스템 콜 끝나면 다시 A가 cpu 제어권을 가짐","source":"_posts/2018-10-01-System Structure, Program Execution.md","raw":"---\n\nlayout: post\ntitle:  \"System Structure, Program Execution\"\ndate:   2018-10-01\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## 컴퓨터 시스템 구조\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os101.png)\n\n- mode bit\n  - 사용자 프로그램의 잘못된 수행으로 다른 프로그램 및 운영체제에 피해가 가지 않도록 하기 위한 보호 장치 필요\n  - 0\n    - 운영체제가 CPU를 가지고 있음\n    - 모든 인스트럭션 수행 가능\n  - 1\n    - 사용자 프로그램이 CPU를 가지고 있음\n    - 한정된 인스턱션만 수행 가능\n- timer\n  - 특정 프로그램이 CPU 독점 막기위해 이게 필요\n  - 정해진 시간 흐른 뒤 운영체제에게 제어권 넘어가도록 interrupt 발생시킴\n  - 매 클럭마다 1씨 감소\n  - 타이머 값이 0 이 되면 언터럽트 발생\n  - time sharing 구현 위해 널리 이용\n- device controller\n  - IO 장치 전담하는 작은 CPU\n  - 제어 정보를 위해 control register, status register를 가짐\n  - local buffer를 가짐 (일종의 data register)\n  - IO는 실제 deivce 와 local buffer 사이에서 일어남\n  - IO가 끝나면 인터럽트로 CPU에 그 사실을 알림\n  - device driver : OS 코드 중 각 장치별 처리 루틴 (소프트웨어)\n  - divce controller : 각 장치를 통제하는 작은 CPU (하드웨어)\n- DMA controller\n  - 직접 메모리에 접근할 수 있는 컨트롤러\n  - IO 장치가 인터럽트 너무 많이 거니까 CPU가 너무 많이 방해 받아서 DMA controller가 필요\n  - CPU의 중재 없이 device의 buffer storage의 내용을 메모리에 block 단위로 직접 전송\n\n## I/O\n\n- 운영체제를 통해서 함\n- 사용자 프로그램은 I/O를 어덯게?\n  - system call을 함 (운영체제의 함수를 호출)\n  - 인터럽트를 직접 걸어서(trap) mode bit이 0으로 바껴\n\n## 동기식 입출력과 비동기식 입출력\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss0111.png)\n\n- 두 경우 모두 io 완료는 인터럽트로알려줌\n- syncronous I/O\n  - I/O 요청 후 입출력 작업이 완료 된 후에야 제어가 사용자 프로그램에게 넘어감\n  - 구현 방법 1\n    - io가 긑날떄 까지 cpu낭비\n    - 매시점 하나의 io만 일어남\n  - 구현 방법2\n    - io가 완료될때까지 해당 프로그램에게서 cpu를 빼앗음\n    - io 처리를 기다리는 줄에 그 프로그램을 줄 세움\n    - 다른 프로그램에게 cpu를 줌\n- asyncronous I/O\n  - I/O가 시작된후 입출력 작업이 끝나기를 기다리지 않고 제어가 사용자 프로그램에게 즉시 넘어감\n\n## Interrupt\n\n- 인터럽트 당한 시점의 레티스터와 program counter를 save한 후 CPU의 제어를 인터럽트 처리 루틴에 넘김\n- 인터럽트 : 하드웨어가 발생 시킨 인터럽트\n- trap : 소프트웨어 인터럽트\n  - Eception : 프로그램이 오류를 범함\n  - System call : 프로그램이 커널 함수를 호출하는 경우\n- 인터럽트 백터\n  - 해당 인터럽트의 처리 루틴 주소를 가지고 있음\n- 인터럽트 처리 루틴 (인터럽트 핸들러)\n  - 해당 인터럽트를 처리하는 커널 함수\n\n## System call\n\n- 사용자 프로글매이 운영체제의 서비스를 받기 위해 커널 함수를 호출 하는 것\n- 사용자 프로그램이 의도적으로 인터럽트 라인 세팅하면, CPU는 하던일을 멈추고 CPU의 제어권이 사용자 프로그램에서 운영체제에게 넘어감\n\n## 프로그램의 실행\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os103.png)\n\n- vitual memory\n  - 프로그램 실행 시키면 각 프로그램의 주소 공간이 만들어짐\n- pysical memory\n  - 커널은 항상 상주\n  - 당장 필요한 것만 올려둠\n- swap area\n  - 메모리의 연장 공간으로 사용\n- address tranlation\n  - virtial memory의 주소가 물리주소로 바뀜\n\n## 커널 주소 공간의 내용\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os104.png)\n\n- code\n- data\n  - 하드웨어를 관리하기 위한 자료구조를 가지고 잇음\n  - 각 프로그램들을 관리하기 위한 자료구조를 가지고 잇음 \n- stack\n  - 함수를 호출하거나 할때 스택을 사용\n\n## 사용자 프로그램이 사용하는 함수\n\n- 함수\n  - 사용자 정의 함수\n    - 자신의 프로그램에서 정의한 함수\n  - 라이브러리 함수\n    - 자신의 프로그램에서 정의하지 않고 갖다 쓴 함수\n    - 자신의 프로그램 실행 파일에 포함되어 있음\n  - 커널 함수\n    - 운영체제 프로그램의 함수\n    - 커널 함수의 호출 == 시스템 콜\n\n## 프로그램의 실행\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss0112.png)\n\n시스템 콜을 하면 커널 모드가 되고, 시스템 콜 끝나면 다시 A가 cpu 제어권을 가짐","slug":"2018-10-01-System Structure, Program Execution","published":1,"updated":"2018-10-01T12:36:24.083Z","comments":1,"photos":[],"link":"","_id":"cjp6k65pf00h231x7pxrxt8il","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"컴퓨터-시스템-구조\"><a href=\"#컴퓨터-시스템-구조\" class=\"headerlink\" title=\"컴퓨터 시스템 구조\"></a>컴퓨터 시스템 구조</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os101.png\" alt=\"img\"></p>\n<ul>\n<li>mode bit<ul>\n<li>사용자 프로그램의 잘못된 수행으로 다른 프로그램 및 운영체제에 피해가 가지 않도록 하기 위한 보호 장치 필요</li>\n<li>0<ul>\n<li>운영체제가 CPU를 가지고 있음</li>\n<li>모든 인스트럭션 수행 가능</li>\n</ul>\n</li>\n<li>1<ul>\n<li>사용자 프로그램이 CPU를 가지고 있음</li>\n<li>한정된 인스턱션만 수행 가능</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>timer<ul>\n<li>특정 프로그램이 CPU 독점 막기위해 이게 필요</li>\n<li>정해진 시간 흐른 뒤 운영체제에게 제어권 넘어가도록 interrupt 발생시킴</li>\n<li>매 클럭마다 1씨 감소</li>\n<li>타이머 값이 0 이 되면 언터럽트 발생</li>\n<li>time sharing 구현 위해 널리 이용</li>\n</ul>\n</li>\n<li>device controller<ul>\n<li>IO 장치 전담하는 작은 CPU</li>\n<li>제어 정보를 위해 control register, status register를 가짐</li>\n<li>local buffer를 가짐 (일종의 data register)</li>\n<li>IO는 실제 deivce 와 local buffer 사이에서 일어남</li>\n<li>IO가 끝나면 인터럽트로 CPU에 그 사실을 알림</li>\n<li>device driver : OS 코드 중 각 장치별 처리 루틴 (소프트웨어)</li>\n<li>divce controller : 각 장치를 통제하는 작은 CPU (하드웨어)</li>\n</ul>\n</li>\n<li>DMA controller<ul>\n<li>직접 메모리에 접근할 수 있는 컨트롤러</li>\n<li>IO 장치가 인터럽트 너무 많이 거니까 CPU가 너무 많이 방해 받아서 DMA controller가 필요</li>\n<li>CPU의 중재 없이 device의 buffer storage의 내용을 메모리에 block 단위로 직접 전송</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"I-O\"><a href=\"#I-O\" class=\"headerlink\" title=\"I/O\"></a>I/O</h2><ul>\n<li>운영체제를 통해서 함</li>\n<li>사용자 프로그램은 I/O를 어덯게?<ul>\n<li>system call을 함 (운영체제의 함수를 호출)</li>\n<li>인터럽트를 직접 걸어서(trap) mode bit이 0으로 바껴</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"동기식-입출력과-비동기식-입출력\"><a href=\"#동기식-입출력과-비동기식-입출력\" class=\"headerlink\" title=\"동기식 입출력과 비동기식 입출력\"></a>동기식 입출력과 비동기식 입출력</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss0111.png\" alt=\"img\"></p>\n<ul>\n<li>두 경우 모두 io 완료는 인터럽트로알려줌</li>\n<li>syncronous I/O<ul>\n<li>I/O 요청 후 입출력 작업이 완료 된 후에야 제어가 사용자 프로그램에게 넘어감</li>\n<li>구현 방법 1<ul>\n<li>io가 긑날떄 까지 cpu낭비</li>\n<li>매시점 하나의 io만 일어남</li>\n</ul>\n</li>\n<li>구현 방법2<ul>\n<li>io가 완료될때까지 해당 프로그램에게서 cpu를 빼앗음</li>\n<li>io 처리를 기다리는 줄에 그 프로그램을 줄 세움</li>\n<li>다른 프로그램에게 cpu를 줌</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>asyncronous I/O<ul>\n<li>I/O가 시작된후 입출력 작업이 끝나기를 기다리지 않고 제어가 사용자 프로그램에게 즉시 넘어감</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Interrupt\"><a href=\"#Interrupt\" class=\"headerlink\" title=\"Interrupt\"></a>Interrupt</h2><ul>\n<li>인터럽트 당한 시점의 레티스터와 program counter를 save한 후 CPU의 제어를 인터럽트 처리 루틴에 넘김</li>\n<li>인터럽트 : 하드웨어가 발생 시킨 인터럽트</li>\n<li>trap : 소프트웨어 인터럽트<ul>\n<li>Eception : 프로그램이 오류를 범함</li>\n<li>System call : 프로그램이 커널 함수를 호출하는 경우</li>\n</ul>\n</li>\n<li>인터럽트 백터<ul>\n<li>해당 인터럽트의 처리 루틴 주소를 가지고 있음</li>\n</ul>\n</li>\n<li>인터럽트 처리 루틴 (인터럽트 핸들러)<ul>\n<li>해당 인터럽트를 처리하는 커널 함수</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"System-call\"><a href=\"#System-call\" class=\"headerlink\" title=\"System call\"></a>System call</h2><ul>\n<li>사용자 프로글매이 운영체제의 서비스를 받기 위해 커널 함수를 호출 하는 것</li>\n<li>사용자 프로그램이 의도적으로 인터럽트 라인 세팅하면, CPU는 하던일을 멈추고 CPU의 제어권이 사용자 프로그램에서 운영체제에게 넘어감</li>\n</ul>\n<h2 id=\"프로그램의-실행\"><a href=\"#프로그램의-실행\" class=\"headerlink\" title=\"프로그램의 실행\"></a>프로그램의 실행</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os103.png\" alt=\"img\"></p>\n<ul>\n<li>vitual memory<ul>\n<li>프로그램 실행 시키면 각 프로그램의 주소 공간이 만들어짐</li>\n</ul>\n</li>\n<li>pysical memory<ul>\n<li>커널은 항상 상주</li>\n<li>당장 필요한 것만 올려둠</li>\n</ul>\n</li>\n<li>swap area<ul>\n<li>메모리의 연장 공간으로 사용</li>\n</ul>\n</li>\n<li>address tranlation<ul>\n<li>virtial memory의 주소가 물리주소로 바뀜</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"커널-주소-공간의-내용\"><a href=\"#커널-주소-공간의-내용\" class=\"headerlink\" title=\"커널 주소 공간의 내용\"></a>커널 주소 공간의 내용</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os104.png\" alt=\"img\"></p>\n<ul>\n<li>code</li>\n<li>data<ul>\n<li>하드웨어를 관리하기 위한 자료구조를 가지고 잇음</li>\n<li>각 프로그램들을 관리하기 위한 자료구조를 가지고 잇음 </li>\n</ul>\n</li>\n<li>stack<ul>\n<li>함수를 호출하거나 할때 스택을 사용</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"사용자-프로그램이-사용하는-함수\"><a href=\"#사용자-프로그램이-사용하는-함수\" class=\"headerlink\" title=\"사용자 프로그램이 사용하는 함수\"></a>사용자 프로그램이 사용하는 함수</h2><ul>\n<li>함수<ul>\n<li>사용자 정의 함수<ul>\n<li>자신의 프로그램에서 정의한 함수</li>\n</ul>\n</li>\n<li>라이브러리 함수<ul>\n<li>자신의 프로그램에서 정의하지 않고 갖다 쓴 함수</li>\n<li>자신의 프로그램 실행 파일에 포함되어 있음</li>\n</ul>\n</li>\n<li>커널 함수<ul>\n<li>운영체제 프로그램의 함수</li>\n<li>커널 함수의 호출 == 시스템 콜</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로그램의-실행-1\"><a href=\"#프로그램의-실행-1\" class=\"headerlink\" title=\"프로그램의 실행\"></a>프로그램의 실행</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss0112.png\" alt=\"img\"></p>\n<p>시스템 콜을 하면 커널 모드가 되고, 시스템 콜 끝나면 다시 A가 cpu 제어권을 가짐</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"컴퓨터-시스템-구조\"><a href=\"#컴퓨터-시스템-구조\" class=\"headerlink\" title=\"컴퓨터 시스템 구조\"></a>컴퓨터 시스템 구조</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os101.png\" alt=\"img\"></p>\n<ul>\n<li>mode bit<ul>\n<li>사용자 프로그램의 잘못된 수행으로 다른 프로그램 및 운영체제에 피해가 가지 않도록 하기 위한 보호 장치 필요</li>\n<li>0<ul>\n<li>운영체제가 CPU를 가지고 있음</li>\n<li>모든 인스트럭션 수행 가능</li>\n</ul>\n</li>\n<li>1<ul>\n<li>사용자 프로그램이 CPU를 가지고 있음</li>\n<li>한정된 인스턱션만 수행 가능</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>timer<ul>\n<li>특정 프로그램이 CPU 독점 막기위해 이게 필요</li>\n<li>정해진 시간 흐른 뒤 운영체제에게 제어권 넘어가도록 interrupt 발생시킴</li>\n<li>매 클럭마다 1씨 감소</li>\n<li>타이머 값이 0 이 되면 언터럽트 발생</li>\n<li>time sharing 구현 위해 널리 이용</li>\n</ul>\n</li>\n<li>device controller<ul>\n<li>IO 장치 전담하는 작은 CPU</li>\n<li>제어 정보를 위해 control register, status register를 가짐</li>\n<li>local buffer를 가짐 (일종의 data register)</li>\n<li>IO는 실제 deivce 와 local buffer 사이에서 일어남</li>\n<li>IO가 끝나면 인터럽트로 CPU에 그 사실을 알림</li>\n<li>device driver : OS 코드 중 각 장치별 처리 루틴 (소프트웨어)</li>\n<li>divce controller : 각 장치를 통제하는 작은 CPU (하드웨어)</li>\n</ul>\n</li>\n<li>DMA controller<ul>\n<li>직접 메모리에 접근할 수 있는 컨트롤러</li>\n<li>IO 장치가 인터럽트 너무 많이 거니까 CPU가 너무 많이 방해 받아서 DMA controller가 필요</li>\n<li>CPU의 중재 없이 device의 buffer storage의 내용을 메모리에 block 단위로 직접 전송</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"I-O\"><a href=\"#I-O\" class=\"headerlink\" title=\"I/O\"></a>I/O</h2><ul>\n<li>운영체제를 통해서 함</li>\n<li>사용자 프로그램은 I/O를 어덯게?<ul>\n<li>system call을 함 (운영체제의 함수를 호출)</li>\n<li>인터럽트를 직접 걸어서(trap) mode bit이 0으로 바껴</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"동기식-입출력과-비동기식-입출력\"><a href=\"#동기식-입출력과-비동기식-입출력\" class=\"headerlink\" title=\"동기식 입출력과 비동기식 입출력\"></a>동기식 입출력과 비동기식 입출력</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss0111.png\" alt=\"img\"></p>\n<ul>\n<li>두 경우 모두 io 완료는 인터럽트로알려줌</li>\n<li>syncronous I/O<ul>\n<li>I/O 요청 후 입출력 작업이 완료 된 후에야 제어가 사용자 프로그램에게 넘어감</li>\n<li>구현 방법 1<ul>\n<li>io가 긑날떄 까지 cpu낭비</li>\n<li>매시점 하나의 io만 일어남</li>\n</ul>\n</li>\n<li>구현 방법2<ul>\n<li>io가 완료될때까지 해당 프로그램에게서 cpu를 빼앗음</li>\n<li>io 처리를 기다리는 줄에 그 프로그램을 줄 세움</li>\n<li>다른 프로그램에게 cpu를 줌</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>asyncronous I/O<ul>\n<li>I/O가 시작된후 입출력 작업이 끝나기를 기다리지 않고 제어가 사용자 프로그램에게 즉시 넘어감</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Interrupt\"><a href=\"#Interrupt\" class=\"headerlink\" title=\"Interrupt\"></a>Interrupt</h2><ul>\n<li>인터럽트 당한 시점의 레티스터와 program counter를 save한 후 CPU의 제어를 인터럽트 처리 루틴에 넘김</li>\n<li>인터럽트 : 하드웨어가 발생 시킨 인터럽트</li>\n<li>trap : 소프트웨어 인터럽트<ul>\n<li>Eception : 프로그램이 오류를 범함</li>\n<li>System call : 프로그램이 커널 함수를 호출하는 경우</li>\n</ul>\n</li>\n<li>인터럽트 백터<ul>\n<li>해당 인터럽트의 처리 루틴 주소를 가지고 있음</li>\n</ul>\n</li>\n<li>인터럽트 처리 루틴 (인터럽트 핸들러)<ul>\n<li>해당 인터럽트를 처리하는 커널 함수</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"System-call\"><a href=\"#System-call\" class=\"headerlink\" title=\"System call\"></a>System call</h2><ul>\n<li>사용자 프로글매이 운영체제의 서비스를 받기 위해 커널 함수를 호출 하는 것</li>\n<li>사용자 프로그램이 의도적으로 인터럽트 라인 세팅하면, CPU는 하던일을 멈추고 CPU의 제어권이 사용자 프로그램에서 운영체제에게 넘어감</li>\n</ul>\n<h2 id=\"프로그램의-실행\"><a href=\"#프로그램의-실행\" class=\"headerlink\" title=\"프로그램의 실행\"></a>프로그램의 실행</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os103.png\" alt=\"img\"></p>\n<ul>\n<li>vitual memory<ul>\n<li>프로그램 실행 시키면 각 프로그램의 주소 공간이 만들어짐</li>\n</ul>\n</li>\n<li>pysical memory<ul>\n<li>커널은 항상 상주</li>\n<li>당장 필요한 것만 올려둠</li>\n</ul>\n</li>\n<li>swap area<ul>\n<li>메모리의 연장 공간으로 사용</li>\n</ul>\n</li>\n<li>address tranlation<ul>\n<li>virtial memory의 주소가 물리주소로 바뀜</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"커널-주소-공간의-내용\"><a href=\"#커널-주소-공간의-내용\" class=\"headerlink\" title=\"커널 주소 공간의 내용\"></a>커널 주소 공간의 내용</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os104.png\" alt=\"img\"></p>\n<ul>\n<li>code</li>\n<li>data<ul>\n<li>하드웨어를 관리하기 위한 자료구조를 가지고 잇음</li>\n<li>각 프로그램들을 관리하기 위한 자료구조를 가지고 잇음 </li>\n</ul>\n</li>\n<li>stack<ul>\n<li>함수를 호출하거나 할때 스택을 사용</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"사용자-프로그램이-사용하는-함수\"><a href=\"#사용자-프로그램이-사용하는-함수\" class=\"headerlink\" title=\"사용자 프로그램이 사용하는 함수\"></a>사용자 프로그램이 사용하는 함수</h2><ul>\n<li>함수<ul>\n<li>사용자 정의 함수<ul>\n<li>자신의 프로그램에서 정의한 함수</li>\n</ul>\n</li>\n<li>라이브러리 함수<ul>\n<li>자신의 프로그램에서 정의하지 않고 갖다 쓴 함수</li>\n<li>자신의 프로그램 실행 파일에 포함되어 있음</li>\n</ul>\n</li>\n<li>커널 함수<ul>\n<li>운영체제 프로그램의 함수</li>\n<li>커널 함수의 호출 == 시스템 콜</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로그램의-실행-1\"><a href=\"#프로그램의-실행-1\" class=\"headerlink\" title=\"프로그램의 실행\"></a>프로그램의 실행</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/oss0112.png\" alt=\"img\"></p>\n<p>시스템 콜을 하면 커널 모드가 되고, 시스템 콜 끝나면 다시 A가 cpu 제어권을 가짐</p>\n"},{"layout":"post","title":"오픈채팅방","date":"2018-09-29T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.welcomekakao.com/learn/courses/30/lessons/42888?language=java>\n\n2019 카카오 신입 공채 1차 코딩 테스트\n\n## 풀이\n\n1. HashMap으로 이름 변경 이력을 저장한다. \n\n   ( key : id / value : name )\n\n2. records 배열을 순회하며 리턴할 배열을 생성한다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/openChat01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/openChat02.png)","source":"_posts/2018-09-30-오픈채팅방.md","raw":"---\nlayout: post\ntitle:  \"오픈채팅방\"\ndate:   2018-09-30\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.welcomekakao.com/learn/courses/30/lessons/42888?language=java>\n\n2019 카카오 신입 공채 1차 코딩 테스트\n\n## 풀이\n\n1. HashMap으로 이름 변경 이력을 저장한다. \n\n   ( key : id / value : name )\n\n2. records 배열을 순회하며 리턴할 배열을 생성한다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/openChat01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/openChat02.png)","slug":"2018-09-30-오픈채팅방","published":1,"updated":"2018-09-30T08:05:34.412Z","comments":1,"photos":[],"link":"","_id":"cjp6k65pl00h531x79n9hftmz","content":"<p><a href=\"https://www.welcomekakao.com/learn/courses/30/lessons/42888?language=java\" target=\"_blank\" rel=\"noopener\">https://www.welcomekakao.com/learn/courses/30/lessons/42888?language=java</a></p>\n<p>2019 카카오 신입 공채 1차 코딩 테스트</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>HashMap으로 이름 변경 이력을 저장한다. </p>\n<p>( key : id / value : name )</p>\n</li>\n<li><p>records 배열을 순회하며 리턴할 배열을 생성한다.</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/openChat01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/openChat02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.welcomekakao.com/learn/courses/30/lessons/42888?language=java\" target=\"_blank\" rel=\"noopener\">https://www.welcomekakao.com/learn/courses/30/lessons/42888?language=java</a></p>\n<p>2019 카카오 신입 공채 1차 코딩 테스트</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>HashMap으로 이름 변경 이력을 저장한다. </p>\n<p>( key : id / value : name )</p>\n</li>\n<li><p>records 배열을 순회하며 리턴할 배열을 생성한다.</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/openChat01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/openChat02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Process Management","date":"2018-10-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## 프로세스 생성\n\n- 부모 프로세스가 자식 프로세스 생성\n- 프로세스의 트리(계층 구조) 생성\n- 프로세스는 자원을 필요로 함\n  - 운영체제로부터 받는다\n  - 부모와 공유한다\n- 주소 공간\n  - 자식은 부모의 공간을 복사\n  - 자식은 그 공간에 새로운 프로그램을 올림\n- 유닉스의 예 : 복제 생성하고 덮어씌움\n  - fork() 시스템 콜이 새로운 프로세스를 복제 생성\n    - 부모를 그대로 복사\n    - 주소 공간 할당\n  - exec()\n    - fork 다음에 이어지는  exec() 시스템 콜을 통해 새로운 프로그램을 메모리에 올림 (덮어 씌움)\n\n## 프로세스 종료\n\n- exit\n  - exit 시스템 콜을 통해 프로세스가 마지막 명령을 수행한후 운영체제에게 이를 알려줌\n  - 자식이 부모에게 output data를 보냄(via wait system call)\n  - 프로세의 각종 자원들이 운영체제에게 반납됨\n- abort\n  - 부모 프로세스가 자식의 수행을 종료시킴\n  - 자식이 할당 자원의 한계치를 넘어섬\n  - 자식에게 할당된 테스크가 더 이사 필요하지 않음\n  - 부모가 종료하는 경우\n    - 운영체제는 부모 프로세스가 종료하는 경우 자식이 더 이상 수행되도록 두지 않음\n    - 단계적인 종료\n\n## fork() system call\n\n왼쪽은 부모, 오른쪽은 자식. 자식은 fork() 이후의 라인부터 실행\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100401.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100402.png)\n\n## exec() system call\n\n새로운 프로그램을 덮어씌움. \n\n부모가 자식을 만든다음에, 자식은 오른쪽의 date라는 프로그램으로 완전히 덮어씌었음\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100403.png)\n\n## wait() system call\n\n프로세스 A가 wait() system call을 하면, \n\n커널은 child가 종료될 때까지 프로세스 A를 slepp 시킴(block 상태)\n\nchild process가 종료되면 커널은 프로세스 A를 깨움(ready 상태)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100404.png)\n\n## exit() system call\n\n프로세스의 종료\n\n- 자발적 종료\n  - 마지막 statement 수행 후에 exit() 시스템 콜 통해\n  - 프로그램에 명싱적으로 적어주지 않아도 main 함수가 리턴되는 위치에 컴파일러가 넣어줌\n- 비자발적 종료\n  - 부모가 자식을 죽임\n    - 자식이 한계치 넘어서는 자원 자원 요청\n    - 자식에게 할당된 테스크가 더이상 필요하지 않음\n  - 키모드로 kill, break 친 경우\n  - 부모가 종료하는 경우\n    - 부모가 종료하기 전에 자식들이 먼저 종료됨\n\n## 프로세스 간 협력\n\n- 독릭접 프로세스\n  - 프로세는 각자의 주소 공간을 가지고 수행되므로 원친적으로 하나의 프로세스가 다른 프로세스의 수행에 영향을 미치지 못함\n- 협력 프로세스\n  - 하나의 프로세스가 다른 프로세싀의 수행에 여향을 미칠 수 있음\n- 프로세스 간 협력 메커니즘(IPC : Interprocess Communication)\n  - 메세지를 전달하는 방법 (message passing)\n    - 커널을 통해 메세지 전달\n  - 주소 공간을 공유하는 방법 (shraed memory)\n    - 서로 다른 프로세 간에도 일부 주소 공간을 공유하게하는 메커니즘\n\n## IPC\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100405.png)\n\n## Message Passing\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100406.png)\n\n- Direcit Communicaiton\n  - 통신하려는 프로세스의 이름을 명시적으료 표시\n\n- Indirecit Communicaiton\n  - mailbot or port 를 통해 메시지를 간접 전달\n\n","source":"_posts/2018-10-04-Process Managemnet.md","raw":"---\nlayout: post\ntitle:  \"Process Management\"\ndate:   2018-10-04\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## 프로세스 생성\n\n- 부모 프로세스가 자식 프로세스 생성\n- 프로세스의 트리(계층 구조) 생성\n- 프로세스는 자원을 필요로 함\n  - 운영체제로부터 받는다\n  - 부모와 공유한다\n- 주소 공간\n  - 자식은 부모의 공간을 복사\n  - 자식은 그 공간에 새로운 프로그램을 올림\n- 유닉스의 예 : 복제 생성하고 덮어씌움\n  - fork() 시스템 콜이 새로운 프로세스를 복제 생성\n    - 부모를 그대로 복사\n    - 주소 공간 할당\n  - exec()\n    - fork 다음에 이어지는  exec() 시스템 콜을 통해 새로운 프로그램을 메모리에 올림 (덮어 씌움)\n\n## 프로세스 종료\n\n- exit\n  - exit 시스템 콜을 통해 프로세스가 마지막 명령을 수행한후 운영체제에게 이를 알려줌\n  - 자식이 부모에게 output data를 보냄(via wait system call)\n  - 프로세의 각종 자원들이 운영체제에게 반납됨\n- abort\n  - 부모 프로세스가 자식의 수행을 종료시킴\n  - 자식이 할당 자원의 한계치를 넘어섬\n  - 자식에게 할당된 테스크가 더 이사 필요하지 않음\n  - 부모가 종료하는 경우\n    - 운영체제는 부모 프로세스가 종료하는 경우 자식이 더 이상 수행되도록 두지 않음\n    - 단계적인 종료\n\n## fork() system call\n\n왼쪽은 부모, 오른쪽은 자식. 자식은 fork() 이후의 라인부터 실행\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100401.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100402.png)\n\n## exec() system call\n\n새로운 프로그램을 덮어씌움. \n\n부모가 자식을 만든다음에, 자식은 오른쪽의 date라는 프로그램으로 완전히 덮어씌었음\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100403.png)\n\n## wait() system call\n\n프로세스 A가 wait() system call을 하면, \n\n커널은 child가 종료될 때까지 프로세스 A를 slepp 시킴(block 상태)\n\nchild process가 종료되면 커널은 프로세스 A를 깨움(ready 상태)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100404.png)\n\n## exit() system call\n\n프로세스의 종료\n\n- 자발적 종료\n  - 마지막 statement 수행 후에 exit() 시스템 콜 통해\n  - 프로그램에 명싱적으로 적어주지 않아도 main 함수가 리턴되는 위치에 컴파일러가 넣어줌\n- 비자발적 종료\n  - 부모가 자식을 죽임\n    - 자식이 한계치 넘어서는 자원 자원 요청\n    - 자식에게 할당된 테스크가 더이상 필요하지 않음\n  - 키모드로 kill, break 친 경우\n  - 부모가 종료하는 경우\n    - 부모가 종료하기 전에 자식들이 먼저 종료됨\n\n## 프로세스 간 협력\n\n- 독릭접 프로세스\n  - 프로세는 각자의 주소 공간을 가지고 수행되므로 원친적으로 하나의 프로세스가 다른 프로세스의 수행에 영향을 미치지 못함\n- 협력 프로세스\n  - 하나의 프로세스가 다른 프로세싀의 수행에 여향을 미칠 수 있음\n- 프로세스 간 협력 메커니즘(IPC : Interprocess Communication)\n  - 메세지를 전달하는 방법 (message passing)\n    - 커널을 통해 메세지 전달\n  - 주소 공간을 공유하는 방법 (shraed memory)\n    - 서로 다른 프로세 간에도 일부 주소 공간을 공유하게하는 메커니즘\n\n## IPC\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100405.png)\n\n## Message Passing\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100406.png)\n\n- Direcit Communicaiton\n  - 통신하려는 프로세스의 이름을 명시적으료 표시\n\n- Indirecit Communicaiton\n  - mailbot or port 를 통해 메시지를 간접 전달\n\n","slug":"2018-10-04-Process Managemnet","published":1,"updated":"2018-10-04T06:02:19.461Z","comments":1,"photos":[],"link":"","_id":"cjp6k65pn00h731x7ym7i3isq","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"프로세스-생성\"><a href=\"#프로세스-생성\" class=\"headerlink\" title=\"프로세스 생성\"></a>프로세스 생성</h2><ul>\n<li>부모 프로세스가 자식 프로세스 생성</li>\n<li>프로세스의 트리(계층 구조) 생성</li>\n<li>프로세스는 자원을 필요로 함<ul>\n<li>운영체제로부터 받는다</li>\n<li>부모와 공유한다</li>\n</ul>\n</li>\n<li>주소 공간<ul>\n<li>자식은 부모의 공간을 복사</li>\n<li>자식은 그 공간에 새로운 프로그램을 올림</li>\n</ul>\n</li>\n<li>유닉스의 예 : 복제 생성하고 덮어씌움<ul>\n<li>fork() 시스템 콜이 새로운 프로세스를 복제 생성<ul>\n<li>부모를 그대로 복사</li>\n<li>주소 공간 할당</li>\n</ul>\n</li>\n<li>exec()<ul>\n<li>fork 다음에 이어지는  exec() 시스템 콜을 통해 새로운 프로그램을 메모리에 올림 (덮어 씌움)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로세스-종료\"><a href=\"#프로세스-종료\" class=\"headerlink\" title=\"프로세스 종료\"></a>프로세스 종료</h2><ul>\n<li>exit<ul>\n<li>exit 시스템 콜을 통해 프로세스가 마지막 명령을 수행한후 운영체제에게 이를 알려줌</li>\n<li>자식이 부모에게 output data를 보냄(via wait system call)</li>\n<li>프로세의 각종 자원들이 운영체제에게 반납됨</li>\n</ul>\n</li>\n<li>abort<ul>\n<li>부모 프로세스가 자식의 수행을 종료시킴</li>\n<li>자식이 할당 자원의 한계치를 넘어섬</li>\n<li>자식에게 할당된 테스크가 더 이사 필요하지 않음</li>\n<li>부모가 종료하는 경우<ul>\n<li>운영체제는 부모 프로세스가 종료하는 경우 자식이 더 이상 수행되도록 두지 않음</li>\n<li>단계적인 종료</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"fork-system-call\"><a href=\"#fork-system-call\" class=\"headerlink\" title=\"fork() system call\"></a>fork() system call</h2><p>왼쪽은 부모, 오른쪽은 자식. 자식은 fork() 이후의 라인부터 실행</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100401.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100402.png\" alt=\"img\"></p>\n<h2 id=\"exec-system-call\"><a href=\"#exec-system-call\" class=\"headerlink\" title=\"exec() system call\"></a>exec() system call</h2><p>새로운 프로그램을 덮어씌움. </p>\n<p>부모가 자식을 만든다음에, 자식은 오른쪽의 date라는 프로그램으로 완전히 덮어씌었음</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100403.png\" alt=\"img\"></p>\n<h2 id=\"wait-system-call\"><a href=\"#wait-system-call\" class=\"headerlink\" title=\"wait() system call\"></a>wait() system call</h2><p>프로세스 A가 wait() system call을 하면, </p>\n<p>커널은 child가 종료될 때까지 프로세스 A를 slepp 시킴(block 상태)</p>\n<p>child process가 종료되면 커널은 프로세스 A를 깨움(ready 상태)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100404.png\" alt=\"img\"></p>\n<h2 id=\"exit-system-call\"><a href=\"#exit-system-call\" class=\"headerlink\" title=\"exit() system call\"></a>exit() system call</h2><p>프로세스의 종료</p>\n<ul>\n<li>자발적 종료<ul>\n<li>마지막 statement 수행 후에 exit() 시스템 콜 통해</li>\n<li>프로그램에 명싱적으로 적어주지 않아도 main 함수가 리턴되는 위치에 컴파일러가 넣어줌</li>\n</ul>\n</li>\n<li>비자발적 종료<ul>\n<li>부모가 자식을 죽임<ul>\n<li>자식이 한계치 넘어서는 자원 자원 요청</li>\n<li>자식에게 할당된 테스크가 더이상 필요하지 않음</li>\n</ul>\n</li>\n<li>키모드로 kill, break 친 경우</li>\n<li>부모가 종료하는 경우<ul>\n<li>부모가 종료하기 전에 자식들이 먼저 종료됨</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로세스-간-협력\"><a href=\"#프로세스-간-협력\" class=\"headerlink\" title=\"프로세스 간 협력\"></a>프로세스 간 협력</h2><ul>\n<li>독릭접 프로세스<ul>\n<li>프로세는 각자의 주소 공간을 가지고 수행되므로 원친적으로 하나의 프로세스가 다른 프로세스의 수행에 영향을 미치지 못함</li>\n</ul>\n</li>\n<li>협력 프로세스<ul>\n<li>하나의 프로세스가 다른 프로세싀의 수행에 여향을 미칠 수 있음</li>\n</ul>\n</li>\n<li>프로세스 간 협력 메커니즘(IPC : Interprocess Communication)<ul>\n<li>메세지를 전달하는 방법 (message passing)<ul>\n<li>커널을 통해 메세지 전달</li>\n</ul>\n</li>\n<li>주소 공간을 공유하는 방법 (shraed memory)<ul>\n<li>서로 다른 프로세 간에도 일부 주소 공간을 공유하게하는 메커니즘</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"IPC\"><a href=\"#IPC\" class=\"headerlink\" title=\"IPC\"></a>IPC</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100405.png\" alt=\"img\"></p>\n<h2 id=\"Message-Passing\"><a href=\"#Message-Passing\" class=\"headerlink\" title=\"Message Passing\"></a>Message Passing</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100406.png\" alt=\"img\"></p>\n<ul>\n<li><p>Direcit Communicaiton</p>\n<ul>\n<li>통신하려는 프로세스의 이름을 명시적으료 표시</li>\n</ul>\n</li>\n<li><p>Indirecit Communicaiton</p>\n<ul>\n<li>mailbot or port 를 통해 메시지를 간접 전달</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"프로세스-생성\"><a href=\"#프로세스-생성\" class=\"headerlink\" title=\"프로세스 생성\"></a>프로세스 생성</h2><ul>\n<li>부모 프로세스가 자식 프로세스 생성</li>\n<li>프로세스의 트리(계층 구조) 생성</li>\n<li>프로세스는 자원을 필요로 함<ul>\n<li>운영체제로부터 받는다</li>\n<li>부모와 공유한다</li>\n</ul>\n</li>\n<li>주소 공간<ul>\n<li>자식은 부모의 공간을 복사</li>\n<li>자식은 그 공간에 새로운 프로그램을 올림</li>\n</ul>\n</li>\n<li>유닉스의 예 : 복제 생성하고 덮어씌움<ul>\n<li>fork() 시스템 콜이 새로운 프로세스를 복제 생성<ul>\n<li>부모를 그대로 복사</li>\n<li>주소 공간 할당</li>\n</ul>\n</li>\n<li>exec()<ul>\n<li>fork 다음에 이어지는  exec() 시스템 콜을 통해 새로운 프로그램을 메모리에 올림 (덮어 씌움)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로세스-종료\"><a href=\"#프로세스-종료\" class=\"headerlink\" title=\"프로세스 종료\"></a>프로세스 종료</h2><ul>\n<li>exit<ul>\n<li>exit 시스템 콜을 통해 프로세스가 마지막 명령을 수행한후 운영체제에게 이를 알려줌</li>\n<li>자식이 부모에게 output data를 보냄(via wait system call)</li>\n<li>프로세의 각종 자원들이 운영체제에게 반납됨</li>\n</ul>\n</li>\n<li>abort<ul>\n<li>부모 프로세스가 자식의 수행을 종료시킴</li>\n<li>자식이 할당 자원의 한계치를 넘어섬</li>\n<li>자식에게 할당된 테스크가 더 이사 필요하지 않음</li>\n<li>부모가 종료하는 경우<ul>\n<li>운영체제는 부모 프로세스가 종료하는 경우 자식이 더 이상 수행되도록 두지 않음</li>\n<li>단계적인 종료</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"fork-system-call\"><a href=\"#fork-system-call\" class=\"headerlink\" title=\"fork() system call\"></a>fork() system call</h2><p>왼쪽은 부모, 오른쪽은 자식. 자식은 fork() 이후의 라인부터 실행</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100401.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100402.png\" alt=\"img\"></p>\n<h2 id=\"exec-system-call\"><a href=\"#exec-system-call\" class=\"headerlink\" title=\"exec() system call\"></a>exec() system call</h2><p>새로운 프로그램을 덮어씌움. </p>\n<p>부모가 자식을 만든다음에, 자식은 오른쪽의 date라는 프로그램으로 완전히 덮어씌었음</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100403.png\" alt=\"img\"></p>\n<h2 id=\"wait-system-call\"><a href=\"#wait-system-call\" class=\"headerlink\" title=\"wait() system call\"></a>wait() system call</h2><p>프로세스 A가 wait() system call을 하면, </p>\n<p>커널은 child가 종료될 때까지 프로세스 A를 slepp 시킴(block 상태)</p>\n<p>child process가 종료되면 커널은 프로세스 A를 깨움(ready 상태)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100404.png\" alt=\"img\"></p>\n<h2 id=\"exit-system-call\"><a href=\"#exit-system-call\" class=\"headerlink\" title=\"exit() system call\"></a>exit() system call</h2><p>프로세스의 종료</p>\n<ul>\n<li>자발적 종료<ul>\n<li>마지막 statement 수행 후에 exit() 시스템 콜 통해</li>\n<li>프로그램에 명싱적으로 적어주지 않아도 main 함수가 리턴되는 위치에 컴파일러가 넣어줌</li>\n</ul>\n</li>\n<li>비자발적 종료<ul>\n<li>부모가 자식을 죽임<ul>\n<li>자식이 한계치 넘어서는 자원 자원 요청</li>\n<li>자식에게 할당된 테스크가 더이상 필요하지 않음</li>\n</ul>\n</li>\n<li>키모드로 kill, break 친 경우</li>\n<li>부모가 종료하는 경우<ul>\n<li>부모가 종료하기 전에 자식들이 먼저 종료됨</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로세스-간-협력\"><a href=\"#프로세스-간-협력\" class=\"headerlink\" title=\"프로세스 간 협력\"></a>프로세스 간 협력</h2><ul>\n<li>독릭접 프로세스<ul>\n<li>프로세는 각자의 주소 공간을 가지고 수행되므로 원친적으로 하나의 프로세스가 다른 프로세스의 수행에 영향을 미치지 못함</li>\n</ul>\n</li>\n<li>협력 프로세스<ul>\n<li>하나의 프로세스가 다른 프로세싀의 수행에 여향을 미칠 수 있음</li>\n</ul>\n</li>\n<li>프로세스 간 협력 메커니즘(IPC : Interprocess Communication)<ul>\n<li>메세지를 전달하는 방법 (message passing)<ul>\n<li>커널을 통해 메세지 전달</li>\n</ul>\n</li>\n<li>주소 공간을 공유하는 방법 (shraed memory)<ul>\n<li>서로 다른 프로세 간에도 일부 주소 공간을 공유하게하는 메커니즘</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"IPC\"><a href=\"#IPC\" class=\"headerlink\" title=\"IPC\"></a>IPC</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100405.png\" alt=\"img\"></p>\n<h2 id=\"Message-Passing\"><a href=\"#Message-Passing\" class=\"headerlink\" title=\"Message Passing\"></a>Message Passing</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100406.png\" alt=\"img\"></p>\n<ul>\n<li><p>Direcit Communicaiton</p>\n<ul>\n<li>통신하려는 프로세스의 이름을 명시적으료 표시</li>\n</ul>\n</li>\n<li><p>Indirecit Communicaiton</p>\n<ul>\n<li>mailbot or port 를 통해 메시지를 간접 전달</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"벽돌깨기","date":"2018-10-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRQm6qfL0DFAUo&categoryId=AWXRQm6qfL0DFAUo&categoryType=CODE&&&>\n\n어려운 문제는 아니다. 방향은 잡았는데, 코드로 구현하는데 오래 걸렸다.\n\n## 풀이\n\n1. 구슬 선택 : DFS\n2. 벽돌 깨기 : 재귀\n\n\n\nDFS는 다음 그림과 같이 진행한다. 구슬을 쏠 수 있는 칼럼은 0, 1, 2, 3 으로 4개가 있다고 하면,\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick02.png)\n\n재귀는 다음 그림과 같이 구현한다. 3을 기준으로 벽돌을 깬다고 하면, \n\n3 기준 동서남북을 체크한다. 3의 동쪽을 깨는 중에, 9가 나오기 때문에, 9 위치에서 다시 재귀 함수를 호출 한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick01.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick07.png)","source":"_posts/2018-10-04-벽돌깨기.md","raw":"---\nlayout: post\ntitle:  \"벽돌깨기\"\ndate:   2018-10-04\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRQm6qfL0DFAUo&categoryId=AWXRQm6qfL0DFAUo&categoryType=CODE&&&>\n\n어려운 문제는 아니다. 방향은 잡았는데, 코드로 구현하는데 오래 걸렸다.\n\n## 풀이\n\n1. 구슬 선택 : DFS\n2. 벽돌 깨기 : 재귀\n\n\n\nDFS는 다음 그림과 같이 진행한다. 구슬을 쏠 수 있는 칼럼은 0, 1, 2, 3 으로 4개가 있다고 하면,\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick02.png)\n\n재귀는 다음 그림과 같이 구현한다. 3을 기준으로 벽돌을 깬다고 하면, \n\n3 기준 동서남북을 체크한다. 3의 동쪽을 깨는 중에, 9가 나오기 때문에, 9 위치에서 다시 재귀 함수를 호출 한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick01.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick07.png)","slug":"2018-10-04-벽돌깨기","published":1,"updated":"2018-10-04T04:51:46.338Z","comments":1,"photos":[],"link":"","_id":"cjp6k65pq00h931x7jmqqmgpz","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRQm6qfL0DFAUo&amp;categoryId=AWXRQm6qfL0DFAUo&amp;categoryType=CODE&amp;&amp;&amp;\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRQm6qfL0DFAUo&amp;categoryId=AWXRQm6qfL0DFAUo&amp;categoryType=CODE&amp;&amp;&amp;</a></p>\n<p>어려운 문제는 아니다. 방향은 잡았는데, 코드로 구현하는데 오래 걸렸다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>구슬 선택 : DFS</li>\n<li>벽돌 깨기 : 재귀</li>\n</ol>\n<p>DFS는 다음 그림과 같이 진행한다. 구슬을 쏠 수 있는 칼럼은 0, 1, 2, 3 으로 4개가 있다고 하면,</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick02.png\" alt=\"img\"></p>\n<p>재귀는 다음 그림과 같이 구현한다. 3을 기준으로 벽돌을 깬다고 하면, </p>\n<p>3 기준 동서남북을 체크한다. 3의 동쪽을 깨는 중에, 9가 나오기 때문에, 9 위치에서 다시 재귀 함수를 호출 한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick01.png\" alt=\"img\"></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick07.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRQm6qfL0DFAUo&amp;categoryId=AWXRQm6qfL0DFAUo&amp;categoryType=CODE&amp;&amp;&amp;\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRQm6qfL0DFAUo&amp;categoryId=AWXRQm6qfL0DFAUo&amp;categoryType=CODE&amp;&amp;&amp;</a></p>\n<p>어려운 문제는 아니다. 방향은 잡았는데, 코드로 구현하는데 오래 걸렸다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>구슬 선택 : DFS</li>\n<li>벽돌 깨기 : 재귀</li>\n</ol>\n<p>DFS는 다음 그림과 같이 진행한다. 구슬을 쏠 수 있는 칼럼은 0, 1, 2, 3 으로 4개가 있다고 하면,</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick02.png\" alt=\"img\"></p>\n<p>재귀는 다음 그림과 같이 구현한다. 3을 기준으로 벽돌을 깬다고 하면, </p>\n<p>3 기준 동서남북을 체크한다. 3의 동쪽을 깨는 중에, 9가 나오기 때문에, 9 위치에서 다시 재귀 함수를 호출 한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick01.png\" alt=\"img\"></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/breakBrick07.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Process","date":"2018-10-02T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## Process\n\n실행중인 프로그램\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100201.png)\n\n## Context\n\n- CPU 수행상태를 나타내는 하드웨어 문맥\n\n- Prgram Counter\n- 각종 register에 무엇을 저장하고 있나\n\n- 프로세스의 주소 공간\n  - code data stack에 어떤 값이 들어있나\n- 프로세스 관련 커널 자료 구조\n  - 운영체제가 프로세스의 어떤 값을 가지고 있나\n  - PCB\n  - Kernel stack\n    - 프로세스마다 별도로 가지고 있어\n\n## 프로세스의 상태 (Process State)\n\n프로세스는 상태가 변경되며 수행된다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100202.png)\n\n- Running\n  - CPU를 잡고 instruction을 수행중인 상태\n- Ready\n  - CPU를 기다리는 상태(메모리 등 다른 조건을 모두 만족하고)\n- Blocked (wait, sleep)\n  - CPU를 주어도 당장 instruction을 수행할 수 없는 상태 \n  - 프로세스 자신이 요청한 event(io같은거)가 만족되지않아 이를 기다리는 상태\n  - 자신이 요청한 event 만족되면 ready\n- New \n  - 프로세스가 생성중인 상태\n- Terminated\n  - execution이 끝난 상태\n- Suspended (stopped)\n  - 프로세스는 통째로 메모리에서 쫓겨남\n  - 디스크에 swap out 된다\n  - 외부에서 resume해 주어야 active\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100203.png)\n\n## PCB\n\n운영체제가 각 프로세스를 관리하기 위해 프로세스당 유지하는 정보\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100204.png) \n\n- OS가 관리상 사용하는 부분\n- CPU 수행 관련 하드웨어 값\n- 메모리 관련\n- 파일 관련\n\n## 문맥 교환 (context switch)\n\nCPU를 한 프로세스에서 다른 프로세스로 넘겨누는 과정\n\nsystem call이나 interrupt 발생시 context switch가 반드시 일어나는 것은 아님\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100205.png) \n\n## 프로세스 스케쥴링 큐의 모습\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100206.png) \n\n## 스케쥴러\n\n- Long-term scheduler (job scheduler)\n  - 메모리를 어떤 프로세스에게 줄지 결정\n  - 시작 프로세스 중 어떤 것들을 ready queue로 보낼지 결정\n- Short-term scheduler (cpu scheduler)\n  - 어떤 프로세스에게 cpu 줄지 결정\n  - 어떤 프로세스를 다음번에 running시킬지 결정\n- Medum-term scheduler (swapper)\n  - 메모리에 많은 프로그램이 올라가있으면 일부를 골라서 쫓아내\n  - 프로세스에게서 메모리를 뺏는 문제\n\n## Thread\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100207.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100208.png) \n\n- 프로세스의 내부의 CPU 수행단위\n- 프로세스 하나에서 공유할수 있는건 다 공유\n- 스레드의 구성\n  - PC\n  - register set\n  - stack space\n- 스레드끼리 공유하는부분 (task)\n  - code section\n  - data sectin\n  - OS resources\n- 장점\n  - Responsiveness\n    - if one thread is blocked(network), another thread continues(display)\n  - Resource Sharing\n    - n threads can shre code, data, resource of the process\n  - Economy\n  - Utilization of MP(Multi Processor) Architectures","source":"_posts/2018-10-03-Process.md","raw":"---\nlayout: post\ntitle:  \"Process\"\ndate:   2018-10-03\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## Process\n\n실행중인 프로그램\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100201.png)\n\n## Context\n\n- CPU 수행상태를 나타내는 하드웨어 문맥\n\n- Prgram Counter\n- 각종 register에 무엇을 저장하고 있나\n\n- 프로세스의 주소 공간\n  - code data stack에 어떤 값이 들어있나\n- 프로세스 관련 커널 자료 구조\n  - 운영체제가 프로세스의 어떤 값을 가지고 있나\n  - PCB\n  - Kernel stack\n    - 프로세스마다 별도로 가지고 있어\n\n## 프로세스의 상태 (Process State)\n\n프로세스는 상태가 변경되며 수행된다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100202.png)\n\n- Running\n  - CPU를 잡고 instruction을 수행중인 상태\n- Ready\n  - CPU를 기다리는 상태(메모리 등 다른 조건을 모두 만족하고)\n- Blocked (wait, sleep)\n  - CPU를 주어도 당장 instruction을 수행할 수 없는 상태 \n  - 프로세스 자신이 요청한 event(io같은거)가 만족되지않아 이를 기다리는 상태\n  - 자신이 요청한 event 만족되면 ready\n- New \n  - 프로세스가 생성중인 상태\n- Terminated\n  - execution이 끝난 상태\n- Suspended (stopped)\n  - 프로세스는 통째로 메모리에서 쫓겨남\n  - 디스크에 swap out 된다\n  - 외부에서 resume해 주어야 active\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100203.png)\n\n## PCB\n\n운영체제가 각 프로세스를 관리하기 위해 프로세스당 유지하는 정보\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100204.png) \n\n- OS가 관리상 사용하는 부분\n- CPU 수행 관련 하드웨어 값\n- 메모리 관련\n- 파일 관련\n\n## 문맥 교환 (context switch)\n\nCPU를 한 프로세스에서 다른 프로세스로 넘겨누는 과정\n\nsystem call이나 interrupt 발생시 context switch가 반드시 일어나는 것은 아님\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100205.png) \n\n## 프로세스 스케쥴링 큐의 모습\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100206.png) \n\n## 스케쥴러\n\n- Long-term scheduler (job scheduler)\n  - 메모리를 어떤 프로세스에게 줄지 결정\n  - 시작 프로세스 중 어떤 것들을 ready queue로 보낼지 결정\n- Short-term scheduler (cpu scheduler)\n  - 어떤 프로세스에게 cpu 줄지 결정\n  - 어떤 프로세스를 다음번에 running시킬지 결정\n- Medum-term scheduler (swapper)\n  - 메모리에 많은 프로그램이 올라가있으면 일부를 골라서 쫓아내\n  - 프로세스에게서 메모리를 뺏는 문제\n\n## Thread\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100207.png) \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100208.png) \n\n- 프로세스의 내부의 CPU 수행단위\n- 프로세스 하나에서 공유할수 있는건 다 공유\n- 스레드의 구성\n  - PC\n  - register set\n  - stack space\n- 스레드끼리 공유하는부분 (task)\n  - code section\n  - data sectin\n  - OS resources\n- 장점\n  - Responsiveness\n    - if one thread is blocked(network), another thread continues(display)\n  - Resource Sharing\n    - n threads can shre code, data, resource of the process\n  - Economy\n  - Utilization of MP(Multi Processor) Architectures","slug":"2018-10-03-Process","published":1,"updated":"2018-10-02T23:11:07.970Z","comments":1,"photos":[],"link":"","_id":"cjp6k65pu00hc31x7gbvdndql","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process\"></a>Process</h2><p>실행중인 프로그램</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100201.png\" alt=\"img\"></p>\n<h2 id=\"Context\"><a href=\"#Context\" class=\"headerlink\" title=\"Context\"></a>Context</h2><ul>\n<li><p>CPU 수행상태를 나타내는 하드웨어 문맥</p>\n</li>\n<li><p>Prgram Counter</p>\n</li>\n<li><p>각종 register에 무엇을 저장하고 있나</p>\n</li>\n<li><p>프로세스의 주소 공간</p>\n<ul>\n<li>code data stack에 어떤 값이 들어있나</li>\n</ul>\n</li>\n<li>프로세스 관련 커널 자료 구조<ul>\n<li>운영체제가 프로세스의 어떤 값을 가지고 있나</li>\n<li>PCB</li>\n<li>Kernel stack<ul>\n<li>프로세스마다 별도로 가지고 있어</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로세스의-상태-Process-State\"><a href=\"#프로세스의-상태-Process-State\" class=\"headerlink\" title=\"프로세스의 상태 (Process State)\"></a>프로세스의 상태 (Process State)</h2><p>프로세스는 상태가 변경되며 수행된다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100202.png\" alt=\"img\"></p>\n<ul>\n<li>Running<ul>\n<li>CPU를 잡고 instruction을 수행중인 상태</li>\n</ul>\n</li>\n<li>Ready<ul>\n<li>CPU를 기다리는 상태(메모리 등 다른 조건을 모두 만족하고)</li>\n</ul>\n</li>\n<li>Blocked (wait, sleep)<ul>\n<li>CPU를 주어도 당장 instruction을 수행할 수 없는 상태 </li>\n<li>프로세스 자신이 요청한 event(io같은거)가 만족되지않아 이를 기다리는 상태</li>\n<li>자신이 요청한 event 만족되면 ready</li>\n</ul>\n</li>\n<li>New <ul>\n<li>프로세스가 생성중인 상태</li>\n</ul>\n</li>\n<li>Terminated<ul>\n<li>execution이 끝난 상태</li>\n</ul>\n</li>\n<li>Suspended (stopped)<ul>\n<li>프로세스는 통째로 메모리에서 쫓겨남</li>\n<li>디스크에 swap out 된다</li>\n<li>외부에서 resume해 주어야 active</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100203.png\" alt=\"img\"></p>\n<h2 id=\"PCB\"><a href=\"#PCB\" class=\"headerlink\" title=\"PCB\"></a>PCB</h2><p>운영체제가 각 프로세스를 관리하기 위해 프로세스당 유지하는 정보</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100204.png\" alt=\"img\"> </p>\n<ul>\n<li>OS가 관리상 사용하는 부분</li>\n<li>CPU 수행 관련 하드웨어 값</li>\n<li>메모리 관련</li>\n<li>파일 관련</li>\n</ul>\n<h2 id=\"문맥-교환-context-switch\"><a href=\"#문맥-교환-context-switch\" class=\"headerlink\" title=\"문맥 교환 (context switch)\"></a>문맥 교환 (context switch)</h2><p>CPU를 한 프로세스에서 다른 프로세스로 넘겨누는 과정</p>\n<p>system call이나 interrupt 발생시 context switch가 반드시 일어나는 것은 아님</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100205.png\" alt=\"img\"> </p>\n<h2 id=\"프로세스-스케쥴링-큐의-모습\"><a href=\"#프로세스-스케쥴링-큐의-모습\" class=\"headerlink\" title=\"프로세스 스케쥴링 큐의 모습\"></a>프로세스 스케쥴링 큐의 모습</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100206.png\" alt=\"img\"> </p>\n<h2 id=\"스케쥴러\"><a href=\"#스케쥴러\" class=\"headerlink\" title=\"스케쥴러\"></a>스케쥴러</h2><ul>\n<li>Long-term scheduler (job scheduler)<ul>\n<li>메모리를 어떤 프로세스에게 줄지 결정</li>\n<li>시작 프로세스 중 어떤 것들을 ready queue로 보낼지 결정</li>\n</ul>\n</li>\n<li>Short-term scheduler (cpu scheduler)<ul>\n<li>어떤 프로세스에게 cpu 줄지 결정</li>\n<li>어떤 프로세스를 다음번에 running시킬지 결정</li>\n</ul>\n</li>\n<li>Medum-term scheduler (swapper)<ul>\n<li>메모리에 많은 프로그램이 올라가있으면 일부를 골라서 쫓아내</li>\n<li>프로세스에게서 메모리를 뺏는 문제</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Thread\"><a href=\"#Thread\" class=\"headerlink\" title=\"Thread\"></a>Thread</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100207.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100208.png\" alt=\"img\"> </p>\n<ul>\n<li>프로세스의 내부의 CPU 수행단위</li>\n<li>프로세스 하나에서 공유할수 있는건 다 공유</li>\n<li>스레드의 구성<ul>\n<li>PC</li>\n<li>register set</li>\n<li>stack space</li>\n</ul>\n</li>\n<li>스레드끼리 공유하는부분 (task)<ul>\n<li>code section</li>\n<li>data sectin</li>\n<li>OS resources</li>\n</ul>\n</li>\n<li>장점<ul>\n<li>Responsiveness<ul>\n<li>if one thread is blocked(network), another thread continues(display)</li>\n</ul>\n</li>\n<li>Resource Sharing<ul>\n<li>n threads can shre code, data, resource of the process</li>\n</ul>\n</li>\n<li>Economy</li>\n<li>Utilization of MP(Multi Processor) Architectures</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process\"></a>Process</h2><p>실행중인 프로그램</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100201.png\" alt=\"img\"></p>\n<h2 id=\"Context\"><a href=\"#Context\" class=\"headerlink\" title=\"Context\"></a>Context</h2><ul>\n<li><p>CPU 수행상태를 나타내는 하드웨어 문맥</p>\n</li>\n<li><p>Prgram Counter</p>\n</li>\n<li><p>각종 register에 무엇을 저장하고 있나</p>\n</li>\n<li><p>프로세스의 주소 공간</p>\n<ul>\n<li>code data stack에 어떤 값이 들어있나</li>\n</ul>\n</li>\n<li>프로세스 관련 커널 자료 구조<ul>\n<li>운영체제가 프로세스의 어떤 값을 가지고 있나</li>\n<li>PCB</li>\n<li>Kernel stack<ul>\n<li>프로세스마다 별도로 가지고 있어</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"프로세스의-상태-Process-State\"><a href=\"#프로세스의-상태-Process-State\" class=\"headerlink\" title=\"프로세스의 상태 (Process State)\"></a>프로세스의 상태 (Process State)</h2><p>프로세스는 상태가 변경되며 수행된다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100202.png\" alt=\"img\"></p>\n<ul>\n<li>Running<ul>\n<li>CPU를 잡고 instruction을 수행중인 상태</li>\n</ul>\n</li>\n<li>Ready<ul>\n<li>CPU를 기다리는 상태(메모리 등 다른 조건을 모두 만족하고)</li>\n</ul>\n</li>\n<li>Blocked (wait, sleep)<ul>\n<li>CPU를 주어도 당장 instruction을 수행할 수 없는 상태 </li>\n<li>프로세스 자신이 요청한 event(io같은거)가 만족되지않아 이를 기다리는 상태</li>\n<li>자신이 요청한 event 만족되면 ready</li>\n</ul>\n</li>\n<li>New <ul>\n<li>프로세스가 생성중인 상태</li>\n</ul>\n</li>\n<li>Terminated<ul>\n<li>execution이 끝난 상태</li>\n</ul>\n</li>\n<li>Suspended (stopped)<ul>\n<li>프로세스는 통째로 메모리에서 쫓겨남</li>\n<li>디스크에 swap out 된다</li>\n<li>외부에서 resume해 주어야 active</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100203.png\" alt=\"img\"></p>\n<h2 id=\"PCB\"><a href=\"#PCB\" class=\"headerlink\" title=\"PCB\"></a>PCB</h2><p>운영체제가 각 프로세스를 관리하기 위해 프로세스당 유지하는 정보</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100204.png\" alt=\"img\"> </p>\n<ul>\n<li>OS가 관리상 사용하는 부분</li>\n<li>CPU 수행 관련 하드웨어 값</li>\n<li>메모리 관련</li>\n<li>파일 관련</li>\n</ul>\n<h2 id=\"문맥-교환-context-switch\"><a href=\"#문맥-교환-context-switch\" class=\"headerlink\" title=\"문맥 교환 (context switch)\"></a>문맥 교환 (context switch)</h2><p>CPU를 한 프로세스에서 다른 프로세스로 넘겨누는 과정</p>\n<p>system call이나 interrupt 발생시 context switch가 반드시 일어나는 것은 아님</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100205.png\" alt=\"img\"> </p>\n<h2 id=\"프로세스-스케쥴링-큐의-모습\"><a href=\"#프로세스-스케쥴링-큐의-모습\" class=\"headerlink\" title=\"프로세스 스케쥴링 큐의 모습\"></a>프로세스 스케쥴링 큐의 모습</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100206.png\" alt=\"img\"> </p>\n<h2 id=\"스케쥴러\"><a href=\"#스케쥴러\" class=\"headerlink\" title=\"스케쥴러\"></a>스케쥴러</h2><ul>\n<li>Long-term scheduler (job scheduler)<ul>\n<li>메모리를 어떤 프로세스에게 줄지 결정</li>\n<li>시작 프로세스 중 어떤 것들을 ready queue로 보낼지 결정</li>\n</ul>\n</li>\n<li>Short-term scheduler (cpu scheduler)<ul>\n<li>어떤 프로세스에게 cpu 줄지 결정</li>\n<li>어떤 프로세스를 다음번에 running시킬지 결정</li>\n</ul>\n</li>\n<li>Medum-term scheduler (swapper)<ul>\n<li>메모리에 많은 프로그램이 올라가있으면 일부를 골라서 쫓아내</li>\n<li>프로세스에게서 메모리를 뺏는 문제</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Thread\"><a href=\"#Thread\" class=\"headerlink\" title=\"Thread\"></a>Thread</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100207.png\" alt=\"img\"> </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100208.png\" alt=\"img\"> </p>\n<ul>\n<li>프로세스의 내부의 CPU 수행단위</li>\n<li>프로세스 하나에서 공유할수 있는건 다 공유</li>\n<li>스레드의 구성<ul>\n<li>PC</li>\n<li>register set</li>\n<li>stack space</li>\n</ul>\n</li>\n<li>스레드끼리 공유하는부분 (task)<ul>\n<li>code section</li>\n<li>data sectin</li>\n<li>OS resources</li>\n</ul>\n</li>\n<li>장점<ul>\n<li>Responsiveness<ul>\n<li>if one thread is blocked(network), another thread continues(display)</li>\n</ul>\n</li>\n<li>Resource Sharing<ul>\n<li>n threads can shre code, data, resource of the process</li>\n</ul>\n</li>\n<li>Economy</li>\n<li>Utilization of MP(Multi Processor) Architectures</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"CPU Scheduling","date":"2018-10-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## CPU and I/O Bursts in program execution \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100601.png)\n\n## CPU-burst time 의 분포\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100602.png)\n\n여러 종료의 job(process)이 섞여 있기 때문에 CPU 스케쥴링이 필요하다.\n\n- interative job 에게 적절한 response 제공 요망\n- CPU와 I/O 장치 등 시스템 자원을 고류 효율적으로 사용\n\n## 프로세의 특성 분류\n\n- I/O-bound process\n  - CPU를 잡고 계산하는 시간보다 I/O에 많은 시간이 필요한 job\n- CPU-bound process\n  - 계산 위주의 job\n\n## CPU Scheduler & Dispatcher\n\n- CPU Scheduler \n\n  - 운영체제 안에서 CPU 스케쥴링 하는 코드\n  - Ready 상태의 프로세스 중에서 이번에 CPU를 줄 프로세스를 고른다.\n\n- Dispatcher\n\n  - CPU의 제어권을 CPU scheduler 에해 선택된 프로세스에게 넘긴다.\n  - 이 과정을 context switch 라고 한다.\n\n- CPU 스케쥴링이 필요한 경우\n\n  1. running -> blocked (I/O 요청하는 systemcall)\n\n  2. running -> ready (할당 시간 만료로 time interrupt)\n\n  3. blocked -> ready (I/O 완료 후 interrupt)\n\n  4. terminate\n\n     - 1,4 : nonpreemtive (강제로 빼앗지 않고 자진 반납)\n     - preemptive (강제로 빼앗음)\n\n## Scheduling Criteria\n\n성능 척도\n\n- system 입장\n  - CPU utilization\n    - keep the CPU as busy as possible\n  - Throughput\n    - number of processes that complete their execution per time unit\n- program 입장\n  - Turnaround time\n    - amount of time to execute a particular process\n  - Waiting time\n    - amount of time a process has been waiting in the ready\n  - Response time\n    - amount of time it takes from when a request was submitted unitl the first response is produced, not output (for time-sharing environment)\n    - 최초의 CPU 얻기까지 기다린 시간\n\n## FCFS (First-Come First-Served)\n\n비선점형.\n\n- 도착 순서\n  - p1, p2, p3\n\n- burst time \n  - 24 / 3 / 3 \n\n- wating time \n  - 0 / 24/ 27\n\n- Convoy effet\n  - short process behind long process\n\n## SJF (Shorted-Job-First)\n\nCPU burst time이 가장 짧은 프로세스를 제일 먼저 스케쥴. \n\n- Nonpreemptive\n  - 일단 CPU를 잡으면 이번 CPU burst가 완료될 때까지 CPU를 선점 당하지 않음\n- Preemptive\n  - 현재 수행중인 프로세스의 남은 burst time 보다 더 짧은 CPU burst time 을 가지는 새로운 프로세스가 도착하면 CPU를 빼앗김\n  - 이 방법을 SRTF (Shorted-Remaing-Time-First) 라고도 부른다\n  - minimum average waiting time을 보장\n\n문제점\n\n- starvation \n  - long process\n- 다음 CPU burst time을 어떻게 알 수 있는가?\n  - 과거의 CPU burst time을 이용해서 추정 (exponential averaging)\n\n## Proirity Scheduling\n\n우선순위가 제일 높은 process에게 CPU를 줌\n\n- Nonpreemptive\n- Preemptive\n\n각 프로세스마다 priority number가 주어짐\n\n- SJF도 일종의 prority scheduling\n- 문제점\n  - Starvation \n    - low priority processes may never execute\n    - 이를 해결위해, Aging 을 사용\n      - as time progresses increase the priority of the process\n\n## Round Robin\n\n- 각 프로세스는 동일한 크기의 할당 시간 (time quantum) 을 가짐\n- 할당 시간이 지나면 프로세스는 preempted 당하고 ready queue의 제일 뒤에 가서 다시 줄을 선다.\n- Response time이 빠름\n- time quantum large => FCFS\n- time quantum small => context switch overhead가 커짐\n\n## Multilevel Queue\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100603.png)\n\n- Ready queue를 여러 개로 분할\n  - foreground (interactive)\n  - background (batch - no human interaction)\n- 각 큐는 독립적인 스케쥴링 알고리즘을 가짐\n  - foreground - RB\n  - background - FCFS\n- 어느 큐에 CPU를 줄지 결정하고, 그 큐 안에서 누구에게 CPU를 줄지 결정해야해\n- 큐에 대한 스케쥴링이 필요\n  - fixed priority scheduling\t\n    - serve all from foreground then from background\n    - Possibility of starvation\n  - time slice\n    - 각 큐에 CPU time을 적절한 비율로 할당\n    - ex) 80 % to foreground in RB , 20% to background in FCFS\n\n## Multilevel Feedback Queue\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100604.png)\n\n- 프로세스가 다른 큐로 이동 가능\n- againg을 이와 같은 방식으로 구현 가능\n- Multilevel Feedback Queue Scheduler를 정의하는 파라미터들\n  - Queue의 수\n  - 각 큐의 스케쥴링 알고리즘\n  - Process를 상위 큐로 보내는 기준\n  - Process를 하 큐로 내쫓는 기준\n  - 프로세스가 CPU 서비스를 받으려 할 때 들어갈 큐를 결정하는 기준\n- 할당 시간 끝나면 아래로 강등됨. CPU 사용 시간이 짧은 프로세스에게 우선 순위를 많이 줌\n\n## Multiple-Processor Scheduling\n\nCPU가 여러개인 경우\n\n- Homogeneous process인 경우\n  - Queue에 한 줄로 세워서 각 프로세서가 알아서 꺼내가게 할 수 있음\n  - 반드시 특정 프로세서에서 수행되어야 하는 프로세스가 있는 경우에는 문제가 더 복잡해짐\n- Load sharing\n  - 일부 프로세서에 job이 몰리지 않도록 부하를 적절히 공유하는 메커니즘 필요\n  - 별개의 큐를 두는 방법 vs 공동 큐를 사용하는 방법\n- Sysmmetric Multiprocessing (SMP)\n  - 각 프로세서가 각자 알아서 스케쥴링 결정\n- Asysmmetric Multiprocessing\n  - 하나의 프로세서가 시스템 데이터의 접근과 공유를 책임지고 나머지 프로세서는 거기에 따름\n\n## Real-Time Scheduling\n\n- Hard real-time systems\n  - 정해진 시간 안에 반드시 끝내도록 스케쥴링해야 함\n- Soft real-time systems\n  - 일반 프로세스에 비해 높은 priority를 갖도록 해야 함\n\n## Thread Scheduling\n\n- Local Scheduling\n  - User level thread의 경우 사용자 수준의 thread library에 의해 어떤 thread를 스케쥴할지 결정\n- Global Scheduling\n  - Kenel level thread의 경우 일반 프로세스와 마찬 가지로 커널의 단기 스케쥴러가 어떤 thread를 스케쥴할지 결정\n\n## Algorithm Evaluation\n\n- Queueing models\n\n  - server가 CPU, 확률 분포로 주어지는 arrivate rate와 service rate 등을 통해 각종 performance index 값을 계산\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100605.png)\n\n- Implemetatation(구현) & Measurement(성능 측정)\n\n  - 실제 시스템에 알고리즘을 구현하여 실제 작업에 대해서 성능을 측정 비교\n- Simulation (모의 실험)\n\n  - 알고리즘을 모의 프로그램으로 작성후 trace(input data) 를 입력으로 하여 결과 비교\n\n","source":"_posts/2018-10-06-CPU Scheduling.md","raw":"---\nlayout: post\ntitle:  \"CPU Scheduling\"\ndate:   2018-10-06\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## CPU and I/O Bursts in program execution \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100601.png)\n\n## CPU-burst time 의 분포\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100602.png)\n\n여러 종료의 job(process)이 섞여 있기 때문에 CPU 스케쥴링이 필요하다.\n\n- interative job 에게 적절한 response 제공 요망\n- CPU와 I/O 장치 등 시스템 자원을 고류 효율적으로 사용\n\n## 프로세의 특성 분류\n\n- I/O-bound process\n  - CPU를 잡고 계산하는 시간보다 I/O에 많은 시간이 필요한 job\n- CPU-bound process\n  - 계산 위주의 job\n\n## CPU Scheduler & Dispatcher\n\n- CPU Scheduler \n\n  - 운영체제 안에서 CPU 스케쥴링 하는 코드\n  - Ready 상태의 프로세스 중에서 이번에 CPU를 줄 프로세스를 고른다.\n\n- Dispatcher\n\n  - CPU의 제어권을 CPU scheduler 에해 선택된 프로세스에게 넘긴다.\n  - 이 과정을 context switch 라고 한다.\n\n- CPU 스케쥴링이 필요한 경우\n\n  1. running -> blocked (I/O 요청하는 systemcall)\n\n  2. running -> ready (할당 시간 만료로 time interrupt)\n\n  3. blocked -> ready (I/O 완료 후 interrupt)\n\n  4. terminate\n\n     - 1,4 : nonpreemtive (강제로 빼앗지 않고 자진 반납)\n     - preemptive (강제로 빼앗음)\n\n## Scheduling Criteria\n\n성능 척도\n\n- system 입장\n  - CPU utilization\n    - keep the CPU as busy as possible\n  - Throughput\n    - number of processes that complete their execution per time unit\n- program 입장\n  - Turnaround time\n    - amount of time to execute a particular process\n  - Waiting time\n    - amount of time a process has been waiting in the ready\n  - Response time\n    - amount of time it takes from when a request was submitted unitl the first response is produced, not output (for time-sharing environment)\n    - 최초의 CPU 얻기까지 기다린 시간\n\n## FCFS (First-Come First-Served)\n\n비선점형.\n\n- 도착 순서\n  - p1, p2, p3\n\n- burst time \n  - 24 / 3 / 3 \n\n- wating time \n  - 0 / 24/ 27\n\n- Convoy effet\n  - short process behind long process\n\n## SJF (Shorted-Job-First)\n\nCPU burst time이 가장 짧은 프로세스를 제일 먼저 스케쥴. \n\n- Nonpreemptive\n  - 일단 CPU를 잡으면 이번 CPU burst가 완료될 때까지 CPU를 선점 당하지 않음\n- Preemptive\n  - 현재 수행중인 프로세스의 남은 burst time 보다 더 짧은 CPU burst time 을 가지는 새로운 프로세스가 도착하면 CPU를 빼앗김\n  - 이 방법을 SRTF (Shorted-Remaing-Time-First) 라고도 부른다\n  - minimum average waiting time을 보장\n\n문제점\n\n- starvation \n  - long process\n- 다음 CPU burst time을 어떻게 알 수 있는가?\n  - 과거의 CPU burst time을 이용해서 추정 (exponential averaging)\n\n## Proirity Scheduling\n\n우선순위가 제일 높은 process에게 CPU를 줌\n\n- Nonpreemptive\n- Preemptive\n\n각 프로세스마다 priority number가 주어짐\n\n- SJF도 일종의 prority scheduling\n- 문제점\n  - Starvation \n    - low priority processes may never execute\n    - 이를 해결위해, Aging 을 사용\n      - as time progresses increase the priority of the process\n\n## Round Robin\n\n- 각 프로세스는 동일한 크기의 할당 시간 (time quantum) 을 가짐\n- 할당 시간이 지나면 프로세스는 preempted 당하고 ready queue의 제일 뒤에 가서 다시 줄을 선다.\n- Response time이 빠름\n- time quantum large => FCFS\n- time quantum small => context switch overhead가 커짐\n\n## Multilevel Queue\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100603.png)\n\n- Ready queue를 여러 개로 분할\n  - foreground (interactive)\n  - background (batch - no human interaction)\n- 각 큐는 독립적인 스케쥴링 알고리즘을 가짐\n  - foreground - RB\n  - background - FCFS\n- 어느 큐에 CPU를 줄지 결정하고, 그 큐 안에서 누구에게 CPU를 줄지 결정해야해\n- 큐에 대한 스케쥴링이 필요\n  - fixed priority scheduling\t\n    - serve all from foreground then from background\n    - Possibility of starvation\n  - time slice\n    - 각 큐에 CPU time을 적절한 비율로 할당\n    - ex) 80 % to foreground in RB , 20% to background in FCFS\n\n## Multilevel Feedback Queue\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100604.png)\n\n- 프로세스가 다른 큐로 이동 가능\n- againg을 이와 같은 방식으로 구현 가능\n- Multilevel Feedback Queue Scheduler를 정의하는 파라미터들\n  - Queue의 수\n  - 각 큐의 스케쥴링 알고리즘\n  - Process를 상위 큐로 보내는 기준\n  - Process를 하 큐로 내쫓는 기준\n  - 프로세스가 CPU 서비스를 받으려 할 때 들어갈 큐를 결정하는 기준\n- 할당 시간 끝나면 아래로 강등됨. CPU 사용 시간이 짧은 프로세스에게 우선 순위를 많이 줌\n\n## Multiple-Processor Scheduling\n\nCPU가 여러개인 경우\n\n- Homogeneous process인 경우\n  - Queue에 한 줄로 세워서 각 프로세서가 알아서 꺼내가게 할 수 있음\n  - 반드시 특정 프로세서에서 수행되어야 하는 프로세스가 있는 경우에는 문제가 더 복잡해짐\n- Load sharing\n  - 일부 프로세서에 job이 몰리지 않도록 부하를 적절히 공유하는 메커니즘 필요\n  - 별개의 큐를 두는 방법 vs 공동 큐를 사용하는 방법\n- Sysmmetric Multiprocessing (SMP)\n  - 각 프로세서가 각자 알아서 스케쥴링 결정\n- Asysmmetric Multiprocessing\n  - 하나의 프로세서가 시스템 데이터의 접근과 공유를 책임지고 나머지 프로세서는 거기에 따름\n\n## Real-Time Scheduling\n\n- Hard real-time systems\n  - 정해진 시간 안에 반드시 끝내도록 스케쥴링해야 함\n- Soft real-time systems\n  - 일반 프로세스에 비해 높은 priority를 갖도록 해야 함\n\n## Thread Scheduling\n\n- Local Scheduling\n  - User level thread의 경우 사용자 수준의 thread library에 의해 어떤 thread를 스케쥴할지 결정\n- Global Scheduling\n  - Kenel level thread의 경우 일반 프로세스와 마찬 가지로 커널의 단기 스케쥴러가 어떤 thread를 스케쥴할지 결정\n\n## Algorithm Evaluation\n\n- Queueing models\n\n  - server가 CPU, 확률 분포로 주어지는 arrivate rate와 service rate 등을 통해 각종 performance index 값을 계산\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100605.png)\n\n- Implemetatation(구현) & Measurement(성능 측정)\n\n  - 실제 시스템에 알고리즘을 구현하여 실제 작업에 대해서 성능을 측정 비교\n- Simulation (모의 실험)\n\n  - 알고리즘을 모의 프로그램으로 작성후 trace(input data) 를 입력으로 하여 결과 비교\n\n","slug":"2018-10-06-CPU Scheduling","published":1,"updated":"2018-10-06T14:52:08.733Z","comments":1,"photos":[],"link":"","_id":"cjp6k65pw00he31x7dhx7x5vu","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"CPU-and-I-O-Bursts-in-program-execution\"><a href=\"#CPU-and-I-O-Bursts-in-program-execution\" class=\"headerlink\" title=\"CPU and I/O Bursts in program execution\"></a>CPU and I/O Bursts in program execution</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100601.png\" alt=\"img\"></p>\n<h2 id=\"CPU-burst-time-의-분포\"><a href=\"#CPU-burst-time-의-분포\" class=\"headerlink\" title=\"CPU-burst time 의 분포\"></a>CPU-burst time 의 분포</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100602.png\" alt=\"img\"></p>\n<p>여러 종료의 job(process)이 섞여 있기 때문에 CPU 스케쥴링이 필요하다.</p>\n<ul>\n<li>interative job 에게 적절한 response 제공 요망</li>\n<li>CPU와 I/O 장치 등 시스템 자원을 고류 효율적으로 사용</li>\n</ul>\n<h2 id=\"프로세의-특성-분류\"><a href=\"#프로세의-특성-분류\" class=\"headerlink\" title=\"프로세의 특성 분류\"></a>프로세의 특성 분류</h2><ul>\n<li>I/O-bound process<ul>\n<li>CPU를 잡고 계산하는 시간보다 I/O에 많은 시간이 필요한 job</li>\n</ul>\n</li>\n<li>CPU-bound process<ul>\n<li>계산 위주의 job</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"CPU-Scheduler-amp-Dispatcher\"><a href=\"#CPU-Scheduler-amp-Dispatcher\" class=\"headerlink\" title=\"CPU Scheduler &amp; Dispatcher\"></a>CPU Scheduler &amp; Dispatcher</h2><ul>\n<li><p>CPU Scheduler </p>\n<ul>\n<li>운영체제 안에서 CPU 스케쥴링 하는 코드</li>\n<li>Ready 상태의 프로세스 중에서 이번에 CPU를 줄 프로세스를 고른다.</li>\n</ul>\n</li>\n<li><p>Dispatcher</p>\n<ul>\n<li>CPU의 제어권을 CPU scheduler 에해 선택된 프로세스에게 넘긴다.</li>\n<li>이 과정을 context switch 라고 한다.</li>\n</ul>\n</li>\n<li><p>CPU 스케쥴링이 필요한 경우</p>\n<ol>\n<li><p>running -&gt; blocked (I/O 요청하는 systemcall)</p>\n</li>\n<li><p>running -&gt; ready (할당 시간 만료로 time interrupt)</p>\n</li>\n<li><p>blocked -&gt; ready (I/O 완료 후 interrupt)</p>\n</li>\n<li><p>terminate</p>\n<ul>\n<li>1,4 : nonpreemtive (강제로 빼앗지 않고 자진 반납)</li>\n<li>preemptive (강제로 빼앗음)</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"Scheduling-Criteria\"><a href=\"#Scheduling-Criteria\" class=\"headerlink\" title=\"Scheduling Criteria\"></a>Scheduling Criteria</h2><p>성능 척도</p>\n<ul>\n<li>system 입장<ul>\n<li>CPU utilization<ul>\n<li>keep the CPU as busy as possible</li>\n</ul>\n</li>\n<li>Throughput<ul>\n<li>number of processes that complete their execution per time unit</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>program 입장<ul>\n<li>Turnaround time<ul>\n<li>amount of time to execute a particular process</li>\n</ul>\n</li>\n<li>Waiting time<ul>\n<li>amount of time a process has been waiting in the ready</li>\n</ul>\n</li>\n<li>Response time<ul>\n<li>amount of time it takes from when a request was submitted unitl the first response is produced, not output (for time-sharing environment)</li>\n<li>최초의 CPU 얻기까지 기다린 시간</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"FCFS-First-Come-First-Served\"><a href=\"#FCFS-First-Come-First-Served\" class=\"headerlink\" title=\"FCFS (First-Come First-Served)\"></a>FCFS (First-Come First-Served)</h2><p>비선점형.</p>\n<ul>\n<li><p>도착 순서</p>\n<ul>\n<li>p1, p2, p3</li>\n</ul>\n</li>\n<li><p>burst time </p>\n<ul>\n<li>24 / 3 / 3 </li>\n</ul>\n</li>\n<li><p>wating time </p>\n<ul>\n<li>0 / 24/ 27</li>\n</ul>\n</li>\n<li><p>Convoy effet</p>\n<ul>\n<li>short process behind long process</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"SJF-Shorted-Job-First\"><a href=\"#SJF-Shorted-Job-First\" class=\"headerlink\" title=\"SJF (Shorted-Job-First)\"></a>SJF (Shorted-Job-First)</h2><p>CPU burst time이 가장 짧은 프로세스를 제일 먼저 스케쥴. </p>\n<ul>\n<li>Nonpreemptive<ul>\n<li>일단 CPU를 잡으면 이번 CPU burst가 완료될 때까지 CPU를 선점 당하지 않음</li>\n</ul>\n</li>\n<li>Preemptive<ul>\n<li>현재 수행중인 프로세스의 남은 burst time 보다 더 짧은 CPU burst time 을 가지는 새로운 프로세스가 도착하면 CPU를 빼앗김</li>\n<li>이 방법을 SRTF (Shorted-Remaing-Time-First) 라고도 부른다</li>\n<li>minimum average waiting time을 보장</li>\n</ul>\n</li>\n</ul>\n<p>문제점</p>\n<ul>\n<li>starvation <ul>\n<li>long process</li>\n</ul>\n</li>\n<li>다음 CPU burst time을 어떻게 알 수 있는가?<ul>\n<li>과거의 CPU burst time을 이용해서 추정 (exponential averaging)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Proirity-Scheduling\"><a href=\"#Proirity-Scheduling\" class=\"headerlink\" title=\"Proirity Scheduling\"></a>Proirity Scheduling</h2><p>우선순위가 제일 높은 process에게 CPU를 줌</p>\n<ul>\n<li>Nonpreemptive</li>\n<li>Preemptive</li>\n</ul>\n<p>각 프로세스마다 priority number가 주어짐</p>\n<ul>\n<li>SJF도 일종의 prority scheduling</li>\n<li>문제점<ul>\n<li>Starvation <ul>\n<li>low priority processes may never execute</li>\n<li>이를 해결위해, Aging 을 사용<ul>\n<li>as time progresses increase the priority of the process</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Round-Robin\"><a href=\"#Round-Robin\" class=\"headerlink\" title=\"Round Robin\"></a>Round Robin</h2><ul>\n<li>각 프로세스는 동일한 크기의 할당 시간 (time quantum) 을 가짐</li>\n<li>할당 시간이 지나면 프로세스는 preempted 당하고 ready queue의 제일 뒤에 가서 다시 줄을 선다.</li>\n<li>Response time이 빠름</li>\n<li>time quantum large =&gt; FCFS</li>\n<li>time quantum small =&gt; context switch overhead가 커짐</li>\n</ul>\n<h2 id=\"Multilevel-Queue\"><a href=\"#Multilevel-Queue\" class=\"headerlink\" title=\"Multilevel Queue\"></a>Multilevel Queue</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100603.png\" alt=\"img\"></p>\n<ul>\n<li>Ready queue를 여러 개로 분할<ul>\n<li>foreground (interactive)</li>\n<li>background (batch - no human interaction)</li>\n</ul>\n</li>\n<li>각 큐는 독립적인 스케쥴링 알고리즘을 가짐<ul>\n<li>foreground - RB</li>\n<li>background - FCFS</li>\n</ul>\n</li>\n<li>어느 큐에 CPU를 줄지 결정하고, 그 큐 안에서 누구에게 CPU를 줄지 결정해야해</li>\n<li>큐에 대한 스케쥴링이 필요<ul>\n<li>fixed priority scheduling    <ul>\n<li>serve all from foreground then from background</li>\n<li>Possibility of starvation</li>\n</ul>\n</li>\n<li>time slice<ul>\n<li>각 큐에 CPU time을 적절한 비율로 할당</li>\n<li>ex) 80 % to foreground in RB , 20% to background in FCFS</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Multilevel-Feedback-Queue\"><a href=\"#Multilevel-Feedback-Queue\" class=\"headerlink\" title=\"Multilevel Feedback Queue\"></a>Multilevel Feedback Queue</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100604.png\" alt=\"img\"></p>\n<ul>\n<li>프로세스가 다른 큐로 이동 가능</li>\n<li>againg을 이와 같은 방식으로 구현 가능</li>\n<li>Multilevel Feedback Queue Scheduler를 정의하는 파라미터들<ul>\n<li>Queue의 수</li>\n<li>각 큐의 스케쥴링 알고리즘</li>\n<li>Process를 상위 큐로 보내는 기준</li>\n<li>Process를 하 큐로 내쫓는 기준</li>\n<li>프로세스가 CPU 서비스를 받으려 할 때 들어갈 큐를 결정하는 기준</li>\n</ul>\n</li>\n<li>할당 시간 끝나면 아래로 강등됨. CPU 사용 시간이 짧은 프로세스에게 우선 순위를 많이 줌</li>\n</ul>\n<h2 id=\"Multiple-Processor-Scheduling\"><a href=\"#Multiple-Processor-Scheduling\" class=\"headerlink\" title=\"Multiple-Processor Scheduling\"></a>Multiple-Processor Scheduling</h2><p>CPU가 여러개인 경우</p>\n<ul>\n<li>Homogeneous process인 경우<ul>\n<li>Queue에 한 줄로 세워서 각 프로세서가 알아서 꺼내가게 할 수 있음</li>\n<li>반드시 특정 프로세서에서 수행되어야 하는 프로세스가 있는 경우에는 문제가 더 복잡해짐</li>\n</ul>\n</li>\n<li>Load sharing<ul>\n<li>일부 프로세서에 job이 몰리지 않도록 부하를 적절히 공유하는 메커니즘 필요</li>\n<li>별개의 큐를 두는 방법 vs 공동 큐를 사용하는 방법</li>\n</ul>\n</li>\n<li>Sysmmetric Multiprocessing (SMP)<ul>\n<li>각 프로세서가 각자 알아서 스케쥴링 결정</li>\n</ul>\n</li>\n<li>Asysmmetric Multiprocessing<ul>\n<li>하나의 프로세서가 시스템 데이터의 접근과 공유를 책임지고 나머지 프로세서는 거기에 따름</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Real-Time-Scheduling\"><a href=\"#Real-Time-Scheduling\" class=\"headerlink\" title=\"Real-Time Scheduling\"></a>Real-Time Scheduling</h2><ul>\n<li>Hard real-time systems<ul>\n<li>정해진 시간 안에 반드시 끝내도록 스케쥴링해야 함</li>\n</ul>\n</li>\n<li>Soft real-time systems<ul>\n<li>일반 프로세스에 비해 높은 priority를 갖도록 해야 함</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Thread-Scheduling\"><a href=\"#Thread-Scheduling\" class=\"headerlink\" title=\"Thread Scheduling\"></a>Thread Scheduling</h2><ul>\n<li>Local Scheduling<ul>\n<li>User level thread의 경우 사용자 수준의 thread library에 의해 어떤 thread를 스케쥴할지 결정</li>\n</ul>\n</li>\n<li>Global Scheduling<ul>\n<li>Kenel level thread의 경우 일반 프로세스와 마찬 가지로 커널의 단기 스케쥴러가 어떤 thread를 스케쥴할지 결정</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Algorithm-Evaluation\"><a href=\"#Algorithm-Evaluation\" class=\"headerlink\" title=\"Algorithm Evaluation\"></a>Algorithm Evaluation</h2><ul>\n<li><p>Queueing models</p>\n<ul>\n<li>server가 CPU, 확률 분포로 주어지는 arrivate rate와 service rate 등을 통해 각종 performance index 값을 계산</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100605.png\" alt=\"img\"></p>\n</li>\n<li><p>Implemetatation(구현) &amp; Measurement(성능 측정)</p>\n<ul>\n<li>실제 시스템에 알고리즘을 구현하여 실제 작업에 대해서 성능을 측정 비교</li>\n</ul>\n</li>\n<li><p>Simulation (모의 실험)</p>\n<ul>\n<li>알고리즘을 모의 프로그램으로 작성후 trace(input data) 를 입력으로 하여 결과 비교</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"CPU-and-I-O-Bursts-in-program-execution\"><a href=\"#CPU-and-I-O-Bursts-in-program-execution\" class=\"headerlink\" title=\"CPU and I/O Bursts in program execution\"></a>CPU and I/O Bursts in program execution</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100601.png\" alt=\"img\"></p>\n<h2 id=\"CPU-burst-time-의-분포\"><a href=\"#CPU-burst-time-의-분포\" class=\"headerlink\" title=\"CPU-burst time 의 분포\"></a>CPU-burst time 의 분포</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100602.png\" alt=\"img\"></p>\n<p>여러 종료의 job(process)이 섞여 있기 때문에 CPU 스케쥴링이 필요하다.</p>\n<ul>\n<li>interative job 에게 적절한 response 제공 요망</li>\n<li>CPU와 I/O 장치 등 시스템 자원을 고류 효율적으로 사용</li>\n</ul>\n<h2 id=\"프로세의-특성-분류\"><a href=\"#프로세의-특성-분류\" class=\"headerlink\" title=\"프로세의 특성 분류\"></a>프로세의 특성 분류</h2><ul>\n<li>I/O-bound process<ul>\n<li>CPU를 잡고 계산하는 시간보다 I/O에 많은 시간이 필요한 job</li>\n</ul>\n</li>\n<li>CPU-bound process<ul>\n<li>계산 위주의 job</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"CPU-Scheduler-amp-Dispatcher\"><a href=\"#CPU-Scheduler-amp-Dispatcher\" class=\"headerlink\" title=\"CPU Scheduler &amp; Dispatcher\"></a>CPU Scheduler &amp; Dispatcher</h2><ul>\n<li><p>CPU Scheduler </p>\n<ul>\n<li>운영체제 안에서 CPU 스케쥴링 하는 코드</li>\n<li>Ready 상태의 프로세스 중에서 이번에 CPU를 줄 프로세스를 고른다.</li>\n</ul>\n</li>\n<li><p>Dispatcher</p>\n<ul>\n<li>CPU의 제어권을 CPU scheduler 에해 선택된 프로세스에게 넘긴다.</li>\n<li>이 과정을 context switch 라고 한다.</li>\n</ul>\n</li>\n<li><p>CPU 스케쥴링이 필요한 경우</p>\n<ol>\n<li><p>running -&gt; blocked (I/O 요청하는 systemcall)</p>\n</li>\n<li><p>running -&gt; ready (할당 시간 만료로 time interrupt)</p>\n</li>\n<li><p>blocked -&gt; ready (I/O 완료 후 interrupt)</p>\n</li>\n<li><p>terminate</p>\n<ul>\n<li>1,4 : nonpreemtive (강제로 빼앗지 않고 자진 반납)</li>\n<li>preemptive (강제로 빼앗음)</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"Scheduling-Criteria\"><a href=\"#Scheduling-Criteria\" class=\"headerlink\" title=\"Scheduling Criteria\"></a>Scheduling Criteria</h2><p>성능 척도</p>\n<ul>\n<li>system 입장<ul>\n<li>CPU utilization<ul>\n<li>keep the CPU as busy as possible</li>\n</ul>\n</li>\n<li>Throughput<ul>\n<li>number of processes that complete their execution per time unit</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>program 입장<ul>\n<li>Turnaround time<ul>\n<li>amount of time to execute a particular process</li>\n</ul>\n</li>\n<li>Waiting time<ul>\n<li>amount of time a process has been waiting in the ready</li>\n</ul>\n</li>\n<li>Response time<ul>\n<li>amount of time it takes from when a request was submitted unitl the first response is produced, not output (for time-sharing environment)</li>\n<li>최초의 CPU 얻기까지 기다린 시간</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"FCFS-First-Come-First-Served\"><a href=\"#FCFS-First-Come-First-Served\" class=\"headerlink\" title=\"FCFS (First-Come First-Served)\"></a>FCFS (First-Come First-Served)</h2><p>비선점형.</p>\n<ul>\n<li><p>도착 순서</p>\n<ul>\n<li>p1, p2, p3</li>\n</ul>\n</li>\n<li><p>burst time </p>\n<ul>\n<li>24 / 3 / 3 </li>\n</ul>\n</li>\n<li><p>wating time </p>\n<ul>\n<li>0 / 24/ 27</li>\n</ul>\n</li>\n<li><p>Convoy effet</p>\n<ul>\n<li>short process behind long process</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"SJF-Shorted-Job-First\"><a href=\"#SJF-Shorted-Job-First\" class=\"headerlink\" title=\"SJF (Shorted-Job-First)\"></a>SJF (Shorted-Job-First)</h2><p>CPU burst time이 가장 짧은 프로세스를 제일 먼저 스케쥴. </p>\n<ul>\n<li>Nonpreemptive<ul>\n<li>일단 CPU를 잡으면 이번 CPU burst가 완료될 때까지 CPU를 선점 당하지 않음</li>\n</ul>\n</li>\n<li>Preemptive<ul>\n<li>현재 수행중인 프로세스의 남은 burst time 보다 더 짧은 CPU burst time 을 가지는 새로운 프로세스가 도착하면 CPU를 빼앗김</li>\n<li>이 방법을 SRTF (Shorted-Remaing-Time-First) 라고도 부른다</li>\n<li>minimum average waiting time을 보장</li>\n</ul>\n</li>\n</ul>\n<p>문제점</p>\n<ul>\n<li>starvation <ul>\n<li>long process</li>\n</ul>\n</li>\n<li>다음 CPU burst time을 어떻게 알 수 있는가?<ul>\n<li>과거의 CPU burst time을 이용해서 추정 (exponential averaging)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Proirity-Scheduling\"><a href=\"#Proirity-Scheduling\" class=\"headerlink\" title=\"Proirity Scheduling\"></a>Proirity Scheduling</h2><p>우선순위가 제일 높은 process에게 CPU를 줌</p>\n<ul>\n<li>Nonpreemptive</li>\n<li>Preemptive</li>\n</ul>\n<p>각 프로세스마다 priority number가 주어짐</p>\n<ul>\n<li>SJF도 일종의 prority scheduling</li>\n<li>문제점<ul>\n<li>Starvation <ul>\n<li>low priority processes may never execute</li>\n<li>이를 해결위해, Aging 을 사용<ul>\n<li>as time progresses increase the priority of the process</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Round-Robin\"><a href=\"#Round-Robin\" class=\"headerlink\" title=\"Round Robin\"></a>Round Robin</h2><ul>\n<li>각 프로세스는 동일한 크기의 할당 시간 (time quantum) 을 가짐</li>\n<li>할당 시간이 지나면 프로세스는 preempted 당하고 ready queue의 제일 뒤에 가서 다시 줄을 선다.</li>\n<li>Response time이 빠름</li>\n<li>time quantum large =&gt; FCFS</li>\n<li>time quantum small =&gt; context switch overhead가 커짐</li>\n</ul>\n<h2 id=\"Multilevel-Queue\"><a href=\"#Multilevel-Queue\" class=\"headerlink\" title=\"Multilevel Queue\"></a>Multilevel Queue</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100603.png\" alt=\"img\"></p>\n<ul>\n<li>Ready queue를 여러 개로 분할<ul>\n<li>foreground (interactive)</li>\n<li>background (batch - no human interaction)</li>\n</ul>\n</li>\n<li>각 큐는 독립적인 스케쥴링 알고리즘을 가짐<ul>\n<li>foreground - RB</li>\n<li>background - FCFS</li>\n</ul>\n</li>\n<li>어느 큐에 CPU를 줄지 결정하고, 그 큐 안에서 누구에게 CPU를 줄지 결정해야해</li>\n<li>큐에 대한 스케쥴링이 필요<ul>\n<li>fixed priority scheduling    <ul>\n<li>serve all from foreground then from background</li>\n<li>Possibility of starvation</li>\n</ul>\n</li>\n<li>time slice<ul>\n<li>각 큐에 CPU time을 적절한 비율로 할당</li>\n<li>ex) 80 % to foreground in RB , 20% to background in FCFS</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Multilevel-Feedback-Queue\"><a href=\"#Multilevel-Feedback-Queue\" class=\"headerlink\" title=\"Multilevel Feedback Queue\"></a>Multilevel Feedback Queue</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100604.png\" alt=\"img\"></p>\n<ul>\n<li>프로세스가 다른 큐로 이동 가능</li>\n<li>againg을 이와 같은 방식으로 구현 가능</li>\n<li>Multilevel Feedback Queue Scheduler를 정의하는 파라미터들<ul>\n<li>Queue의 수</li>\n<li>각 큐의 스케쥴링 알고리즘</li>\n<li>Process를 상위 큐로 보내는 기준</li>\n<li>Process를 하 큐로 내쫓는 기준</li>\n<li>프로세스가 CPU 서비스를 받으려 할 때 들어갈 큐를 결정하는 기준</li>\n</ul>\n</li>\n<li>할당 시간 끝나면 아래로 강등됨. CPU 사용 시간이 짧은 프로세스에게 우선 순위를 많이 줌</li>\n</ul>\n<h2 id=\"Multiple-Processor-Scheduling\"><a href=\"#Multiple-Processor-Scheduling\" class=\"headerlink\" title=\"Multiple-Processor Scheduling\"></a>Multiple-Processor Scheduling</h2><p>CPU가 여러개인 경우</p>\n<ul>\n<li>Homogeneous process인 경우<ul>\n<li>Queue에 한 줄로 세워서 각 프로세서가 알아서 꺼내가게 할 수 있음</li>\n<li>반드시 특정 프로세서에서 수행되어야 하는 프로세스가 있는 경우에는 문제가 더 복잡해짐</li>\n</ul>\n</li>\n<li>Load sharing<ul>\n<li>일부 프로세서에 job이 몰리지 않도록 부하를 적절히 공유하는 메커니즘 필요</li>\n<li>별개의 큐를 두는 방법 vs 공동 큐를 사용하는 방법</li>\n</ul>\n</li>\n<li>Sysmmetric Multiprocessing (SMP)<ul>\n<li>각 프로세서가 각자 알아서 스케쥴링 결정</li>\n</ul>\n</li>\n<li>Asysmmetric Multiprocessing<ul>\n<li>하나의 프로세서가 시스템 데이터의 접근과 공유를 책임지고 나머지 프로세서는 거기에 따름</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Real-Time-Scheduling\"><a href=\"#Real-Time-Scheduling\" class=\"headerlink\" title=\"Real-Time Scheduling\"></a>Real-Time Scheduling</h2><ul>\n<li>Hard real-time systems<ul>\n<li>정해진 시간 안에 반드시 끝내도록 스케쥴링해야 함</li>\n</ul>\n</li>\n<li>Soft real-time systems<ul>\n<li>일반 프로세스에 비해 높은 priority를 갖도록 해야 함</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Thread-Scheduling\"><a href=\"#Thread-Scheduling\" class=\"headerlink\" title=\"Thread Scheduling\"></a>Thread Scheduling</h2><ul>\n<li>Local Scheduling<ul>\n<li>User level thread의 경우 사용자 수준의 thread library에 의해 어떤 thread를 스케쥴할지 결정</li>\n</ul>\n</li>\n<li>Global Scheduling<ul>\n<li>Kenel level thread의 경우 일반 프로세스와 마찬 가지로 커널의 단기 스케쥴러가 어떤 thread를 스케쥴할지 결정</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Algorithm-Evaluation\"><a href=\"#Algorithm-Evaluation\" class=\"headerlink\" title=\"Algorithm Evaluation\"></a>Algorithm Evaluation</h2><ul>\n<li><p>Queueing models</p>\n<ul>\n<li>server가 CPU, 확률 분포로 주어지는 arrivate rate와 service rate 등을 통해 각종 performance index 값을 계산</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100605.png\" alt=\"img\"></p>\n</li>\n<li><p>Implemetatation(구현) &amp; Measurement(성능 측정)</p>\n<ul>\n<li>실제 시스템에 알고리즘을 구현하여 실제 작업에 대해서 성능을 측정 비교</li>\n</ul>\n</li>\n<li><p>Simulation (모의 실험)</p>\n<ul>\n<li>알고리즘을 모의 프로그램으로 작성후 trace(input data) 를 입력으로 하여 결과 비교</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"줄기세포배양","date":"2018-10-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRJ8EKe48DFAUo&categoryId=AWXRJ8EKe48DFAUo&categoryType=CODE>\t\n\n## 풀이\n\n1. 전체 map size를 450 * 450 으로 하고 초기 위치를 i+175, j+175로 하였다. ( 왜?? )\n\n2. 생명력을 저장하고, 활성 상태를 체크하기 위해 map(450)(450)(0) 에는 생명력을, map(450)(450)(1) 에는 생명력*2를 저장한다. map(450)(450)(1) < map(450)(450)(0) 이 되면 활성상태가 되므로, 확장시킨다.  \n\n3. 생명력 수치가 높은 줄기 세포를 먼저 확장 시키기 위해, 생명력에 따른 Queue를 저장하는 배열을 생성한다.\n\n   arr[1] : 생명력이 1인 줄기 세포의 좌표를 저장하는 Queue\n\n   arr[2] : 생명력이 2인 줄기 세포의 좌표를 저장하는 Queue\n\n   ...\n\n   arr[10] : 생명력이 10인 줄기 세포의 좌표를 저장하는 Queue \n\n4. 생명력이 10인 큐 ~ 생명력이 1인 큐를 순차적으로 확인한다.\n\n5. 큐에 저장되어 있는 줄기세포를 하나씩 remove하여 활성화되어있는지 체크하여 확장한다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte03.png)\n\n","source":"_posts/2018-10-07-줄기세포배양.md","raw":"---\nlayout: post\ntitle:  \"줄기세포배양\"\ndate:   2018-10-07\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRJ8EKe48DFAUo&categoryId=AWXRJ8EKe48DFAUo&categoryType=CODE>\t\n\n## 풀이\n\n1. 전체 map size를 450 * 450 으로 하고 초기 위치를 i+175, j+175로 하였다. ( 왜?? )\n\n2. 생명력을 저장하고, 활성 상태를 체크하기 위해 map(450)(450)(0) 에는 생명력을, map(450)(450)(1) 에는 생명력*2를 저장한다. map(450)(450)(1) < map(450)(450)(0) 이 되면 활성상태가 되므로, 확장시킨다.  \n\n3. 생명력 수치가 높은 줄기 세포를 먼저 확장 시키기 위해, 생명력에 따른 Queue를 저장하는 배열을 생성한다.\n\n   arr[1] : 생명력이 1인 줄기 세포의 좌표를 저장하는 Queue\n\n   arr[2] : 생명력이 2인 줄기 세포의 좌표를 저장하는 Queue\n\n   ...\n\n   arr[10] : 생명력이 10인 줄기 세포의 좌표를 저장하는 Queue \n\n4. 생명력이 10인 큐 ~ 생명력이 1인 큐를 순차적으로 확인한다.\n\n5. 큐에 저장되어 있는 줄기세포를 하나씩 remove하여 활성화되어있는지 체크하여 확장한다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte03.png)\n\n","slug":"2018-10-07-줄기세포배양","published":1,"updated":"2018-10-06T15:17:52.219Z","comments":1,"photos":[],"link":"","_id":"cjp6k65px00hg31x717ffui40","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRJ8EKe48DFAUo&amp;categoryId=AWXRJ8EKe48DFAUo&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRJ8EKe48DFAUo&amp;categoryId=AWXRJ8EKe48DFAUo&amp;categoryType=CODE</a>    </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>전체 map size를 450 * 450 으로 하고 초기 위치를 i+175, j+175로 하였다. ( 왜?? )</p>\n</li>\n<li><p>생명력을 저장하고, 활성 상태를 체크하기 위해 map(450)(450)(0) 에는 생명력을, map(450)(450)(1) 에는 생명력*2를 저장한다. map(450)(450)(1) &lt; map(450)(450)(0) 이 되면 활성상태가 되므로, 확장시킨다.  </p>\n</li>\n<li><p>생명력 수치가 높은 줄기 세포를 먼저 확장 시키기 위해, 생명력에 따른 Queue를 저장하는 배열을 생성한다.</p>\n<p>arr[1] : 생명력이 1인 줄기 세포의 좌표를 저장하는 Queue</p>\n<p>arr[2] : 생명력이 2인 줄기 세포의 좌표를 저장하는 Queue</p>\n<p>…</p>\n<p>arr[10] : 생명력이 10인 줄기 세포의 좌표를 저장하는 Queue </p>\n</li>\n<li><p>생명력이 10인 큐 ~ 생명력이 1인 큐를 순차적으로 확인한다.</p>\n</li>\n<li><p>큐에 저장되어 있는 줄기세포를 하나씩 remove하여 활성화되어있는지 체크하여 확장한다.</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRJ8EKe48DFAUo&amp;categoryId=AWXRJ8EKe48DFAUo&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRJ8EKe48DFAUo&amp;categoryId=AWXRJ8EKe48DFAUo&amp;categoryType=CODE</a>    </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>전체 map size를 450 * 450 으로 하고 초기 위치를 i+175, j+175로 하였다. ( 왜?? )</p>\n</li>\n<li><p>생명력을 저장하고, 활성 상태를 체크하기 위해 map(450)(450)(0) 에는 생명력을, map(450)(450)(1) 에는 생명력*2를 저장한다. map(450)(450)(1) &lt; map(450)(450)(0) 이 되면 활성상태가 되므로, 확장시킨다.  </p>\n</li>\n<li><p>생명력 수치가 높은 줄기 세포를 먼저 확장 시키기 위해, 생명력에 따른 Queue를 저장하는 배열을 생성한다.</p>\n<p>arr[1] : 생명력이 1인 줄기 세포의 좌표를 저장하는 Queue</p>\n<p>arr[2] : 생명력이 2인 줄기 세포의 좌표를 저장하는 Queue</p>\n<p>…</p>\n<p>arr[10] : 생명력이 10인 줄기 세포의 좌표를 저장하는 Queue </p>\n</li>\n<li><p>생명력이 10인 큐 ~ 생명력이 1인 큐를 순차적으로 확인한다.</p>\n</li>\n<li><p>큐에 저장되어 있는 줄기세포를 하나씩 remove하여 활성화되어있는지 체크하여 확장한다.</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/cellExte03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"보물상자 비밀번호","date":"2018-10-03T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRUN9KfZ8DFAUo&categoryId=AWXRUN9KfZ8DFAUo&categoryType=CODE>\n\n쉬운 문제이다. 이 문제에서는 정렬과 진법 변환을 배울 수 있다.\n\n## 풀이\n\n1. 회전 시키고\n2. 각 변 확인하며 리스트에 저장\n\n## 개념\n\n1. 정렬\n\n   오름차순 정렬 : Collections.sort(list)\n\n   내림차순 정렬 : Collections.sort(list) -->  Collections.reverse(list)\n\n2. 진법 변환\n\n   string 을 radix 진법으로 변환 : Integer.parseInt(String s, int radix) \n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/treasurepwd01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/treasurepwd02.png)\n\n","source":"_posts/2018-10-04-보물상자 비밀번호.md","raw":"---\nlayout: post\ntitle:  \"보물상자 비밀번호\"\ndate:   2018-10-04\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRUN9KfZ8DFAUo&categoryId=AWXRUN9KfZ8DFAUo&categoryType=CODE>\n\n쉬운 문제이다. 이 문제에서는 정렬과 진법 변환을 배울 수 있다.\n\n## 풀이\n\n1. 회전 시키고\n2. 각 변 확인하며 리스트에 저장\n\n## 개념\n\n1. 정렬\n\n   오름차순 정렬 : Collections.sort(list)\n\n   내림차순 정렬 : Collections.sort(list) -->  Collections.reverse(list)\n\n2. 진법 변환\n\n   string 을 radix 진법으로 변환 : Integer.parseInt(String s, int radix) \n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/treasurepwd01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/treasurepwd02.png)\n\n","slug":"2018-10-04-보물상자 비밀번호","published":1,"updated":"2018-10-04T14:27:34.927Z","comments":1,"photos":[],"link":"","_id":"cjp6k65q100hi31x7dgklv0xj","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRUN9KfZ8DFAUo&amp;categoryId=AWXRUN9KfZ8DFAUo&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRUN9KfZ8DFAUo&amp;categoryId=AWXRUN9KfZ8DFAUo&amp;categoryType=CODE</a></p>\n<p>쉬운 문제이다. 이 문제에서는 정렬과 진법 변환을 배울 수 있다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>회전 시키고</li>\n<li>각 변 확인하며 리스트에 저장</li>\n</ol>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><ol>\n<li><p>정렬</p>\n<p>오름차순 정렬 : Collections.sort(list)</p>\n<p>내림차순 정렬 : Collections.sort(list) –&gt;  Collections.reverse(list)</p>\n</li>\n<li><p>진법 변환</p>\n<p>string 을 radix 진법으로 변환 : Integer.parseInt(String s, int radix) </p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/treasurepwd01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/treasurepwd02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRUN9KfZ8DFAUo&amp;categoryId=AWXRUN9KfZ8DFAUo&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRUN9KfZ8DFAUo&amp;categoryId=AWXRUN9KfZ8DFAUo&amp;categoryType=CODE</a></p>\n<p>쉬운 문제이다. 이 문제에서는 정렬과 진법 변환을 배울 수 있다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>회전 시키고</li>\n<li>각 변 확인하며 리스트에 저장</li>\n</ol>\n<h2 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h2><ol>\n<li><p>정렬</p>\n<p>오름차순 정렬 : Collections.sort(list)</p>\n<p>내림차순 정렬 : Collections.sort(list) –&gt;  Collections.reverse(list)</p>\n</li>\n<li><p>진법 변환</p>\n<p>string 을 radix 진법으로 변환 : Integer.parseInt(String s, int radix) </p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/treasurepwd01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/treasurepwd02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"특이한 자석","date":"2018-10-06T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeV9sKkcoDFAVH>\t\n\n## 풀이\n\n1. 현재 톱니 바퀴 기준으로 왼쪽과 오른쪽 확인 \n2. 각 톱니바퀴 회전\n3. 결과 값 계산\n4. 1번부터 다시\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne03.png)","source":"_posts/2018-10-07-특이한 자석.md","raw":"---\nlayout: post\ntitle:  \"특이한 자석\"\ndate:   2018-10-07\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeV9sKkcoDFAVH>\t\n\n## 풀이\n\n1. 현재 톱니 바퀴 기준으로 왼쪽과 오른쪽 확인 \n2. 각 톱니바퀴 회전\n3. 결과 값 계산\n4. 1번부터 다시\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne03.png)","slug":"2018-10-07-특이한 자석","published":1,"updated":"2018-10-07T05:09:35.267Z","comments":1,"photos":[],"link":"","_id":"cjp6k65q600hk31x774btnk6v","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeV9sKkcoDFAVH\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeV9sKkcoDFAVH</a>    </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>현재 톱니 바퀴 기준으로 왼쪽과 오른쪽 확인 </li>\n<li>각 톱니바퀴 회전</li>\n<li>결과 값 계산</li>\n<li>1번부터 다시</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeV9sKkcoDFAVH\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeV9sKkcoDFAVH</a>    </p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>현재 톱니 바퀴 기준으로 왼쪽과 오른쪽 확인 </li>\n<li>각 톱니바퀴 회전</li>\n<li>결과 값 계산</li>\n<li>1번부터 다시</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/magne03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Deadlock","date":"2018-10-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## Deadlock\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock01.png)\n\n일련의 프로세스들이 서로가 가진 자원을 기다리며 block된 상태\n\n- 자원\n  - 하드웨어, 소프트웨어 등을 포함하느 개념\n  - ex) I/O device, CPU cycle, memory space, semaphore 등\n- 예시\n  - 시스템 2개의 tape drive가 있다\n  - 프로세스 P1과 P2 각각이 하나의 tape drive 를 보유한 채 다른 하나를 기다리고 있음\n\n## Deadlock 발생의 4가지 조건\n\n- Mutual Exlusioin\n  - 매 순간 하나의 프로세스만이 자원을 사용할 수 있음\n- No Preemption \n  - 프로세스는 자원을 스스로 내어놓을 뿐 강제로 뺏기지 않음 \n- Hold and wiat \n  - 자원을 가진 프로세스가 다른 자원을 기달리때 보유 자원을 놓지 않고 계속 가지고 있음\n- Circular wait\n  - 자워을 기다리는 프로세스 간에 사이클이 형성되어야 함 \n  - P0은 P1이 가진 자원을 기다림\n  - P1은 P2가 가진 자원을 기다림 ..\n\n## 자원 할당 그래프 \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock02.png)\n\n- 자원에서 프로세스쪽으로 나가는 화살표 \n\n- 이 프로세스가 이 자원을 가지고 있다.\n\n- 프로세스에서 자원쪽으로 나가는 화살표\n  - 이 프로세스가 이 자원을 요청\n- 자원 안에 동그라미\n  - 자원 개수\n\n- 그래프 안에 cycle이 없으면 deadlock이 아니다\n- cycle이 있으면\n  - 자원당 인스턴스가 하나밖에 없으면, 데드락\n  - 자원의 인스턴스가 여러개면, 데드락수도 있고 아닐수도 있고\n\n- 왼쪽은 데드락, 오른쪽은 데드락이 아님\n\n## Deadlock Prevention\n\n자원 할당시 Deadlock의 4가지 필요 조건 중 어느 하나가 만족되지 않도록 하는 것 \n\n- Mutual Exclusion\n  - 공유해서는 안되는 자원의 경우 반드시 성립해야함 \n- Hold and wait\n  - 프로세스 시작 시 모든 필요한 자원을 할당받게 하는 방법\n  - 자원이 필요할 경우 보유 자원을 모두 놓고 다시 요청\n- No preemption \n  - 빼앗아 올수 있게 하면 됨 \n  - 모든 필요한 자원을 얻을 수 있을 때 그 프로세스는 다시 시작된다. \n- Circular Wait\n  - 모든 자원 유형에 할당 순서를 정하여 정해진 순서대로 자원 할당\n\n## Deadlock Avoidance\n\n자원 요청에 대한 부가적인 정보를 이용해서 데드락의 가능성이 없는 경우에만 자원 할당.\n\n데드락으로부터 항상 safe한 상태를 유지.\n\n자원 요청에 대한 부가정보를 이용해서 자원 할당이 데드락으로부터 safe한지를 동적으로 조사해서 안전한 경우에만 할당.\n\n프로세스들이 필요로 하는 각 자원별 최대 사용량을 미리 선언\n\n- Single instance per resouce types \n  - Resource Allocation Graph algorithm\n- Multiple instance per resouce types  \n  - Banker's Algorithm\n\n## Resource Allocation Graph algorithm\n\n자원 당 인스턴스 하나\n\n데드락의 위험성이 있으면 애초부터 자원을 내주지 않음.\n\n점선 화살표 : 이 프로세스가 평생 적어도 한번 이 자원을 사용할 것이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock03.png)\n\n## Banker's Algorithm\n\n자원 당 인스턴스 여러개\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock04.png)\n\n5개의 프로세스 : P0 P1 P2 P3 P4\n\nA자원 인스턴스 10개\n\nB자원 인스턴스 5개\n\nC자원 인스턴스 7개\n\n- Allocation\n  - 0번 프로세스는 현재 A 0개 / B 1개 / C 0개 할당되어 있음 \n\n- Available\n  - 현재 가용 자원\n  - 아무도 사용하지 않고 남아 있는 자원\n- Max\n  - 이 프로세스가 시작될 때, 이 프로세스가 평생 최대로 사용할 자원 개수를 선언했음\n- Need\n  - 추가로 요청 할 수  있는 양 \n\n이 알고리즘은 프로세스가 자원을 요청했을 때, 이 요청을 받아들일것인지 결정하는 것임 \n\n프로세스가 최대(Need)로 요청할 것을 가정한다. 그리고 이게 가용 자원으로 가능한지 체크. 가용자원으로 가능하지 않으면 요청을 거절.\n\nP0는 7 4 3 으로 요청할것이다. 이게 3 3 2 로 커버 가능? NO. 요청 거절.\n\n## Deadlock Detection and recovery\n\nDeadlock 발생은 허용하되 그에 대한 detection 루틴을 두어 deadlock 발생시 recover\n\n- Single instance per resouce types \n  - Resource Allocation Graph algorithm\n  - cycle이 곧 데드락\n- Multiple instance per resouce types  \n  - Banker's Algorithm과 유사한 방법 활용\n\n- Recovery\n\n  - Process Termination\n    - abort all deadlocked processes(한꺼번에)\n    - 데드락에 연루된 프로세스드을 하나씩 죽여봄. 여전히 데드락이면 또 하나의 다른 프로세스 죽여봄.\n\n  - Resource Preemption\n    - 데드락에 연루된 프로세스로부터 자원을 뺏음\n    - safe state로 roolback하여 prcess를 restart\n\n## Deadlock Ignorance\n\nDeadlock을 시스템이 책임지지 않음\n\nUNIX를 포함한 대부분의 OS가 채택\n\n데드락이 일어나지 않는다고 생각하고 아무런 조치 취하지 않음","source":"_posts/2018-10-09-Deadlock.md","raw":"---\nlayout: post\ntitle:  \"Deadlock\"\ndate:   2018-10-09\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## Deadlock\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock01.png)\n\n일련의 프로세스들이 서로가 가진 자원을 기다리며 block된 상태\n\n- 자원\n  - 하드웨어, 소프트웨어 등을 포함하느 개념\n  - ex) I/O device, CPU cycle, memory space, semaphore 등\n- 예시\n  - 시스템 2개의 tape drive가 있다\n  - 프로세스 P1과 P2 각각이 하나의 tape drive 를 보유한 채 다른 하나를 기다리고 있음\n\n## Deadlock 발생의 4가지 조건\n\n- Mutual Exlusioin\n  - 매 순간 하나의 프로세스만이 자원을 사용할 수 있음\n- No Preemption \n  - 프로세스는 자원을 스스로 내어놓을 뿐 강제로 뺏기지 않음 \n- Hold and wiat \n  - 자원을 가진 프로세스가 다른 자원을 기달리때 보유 자원을 놓지 않고 계속 가지고 있음\n- Circular wait\n  - 자워을 기다리는 프로세스 간에 사이클이 형성되어야 함 \n  - P0은 P1이 가진 자원을 기다림\n  - P1은 P2가 가진 자원을 기다림 ..\n\n## 자원 할당 그래프 \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock02.png)\n\n- 자원에서 프로세스쪽으로 나가는 화살표 \n\n- 이 프로세스가 이 자원을 가지고 있다.\n\n- 프로세스에서 자원쪽으로 나가는 화살표\n  - 이 프로세스가 이 자원을 요청\n- 자원 안에 동그라미\n  - 자원 개수\n\n- 그래프 안에 cycle이 없으면 deadlock이 아니다\n- cycle이 있으면\n  - 자원당 인스턴스가 하나밖에 없으면, 데드락\n  - 자원의 인스턴스가 여러개면, 데드락수도 있고 아닐수도 있고\n\n- 왼쪽은 데드락, 오른쪽은 데드락이 아님\n\n## Deadlock Prevention\n\n자원 할당시 Deadlock의 4가지 필요 조건 중 어느 하나가 만족되지 않도록 하는 것 \n\n- Mutual Exclusion\n  - 공유해서는 안되는 자원의 경우 반드시 성립해야함 \n- Hold and wait\n  - 프로세스 시작 시 모든 필요한 자원을 할당받게 하는 방법\n  - 자원이 필요할 경우 보유 자원을 모두 놓고 다시 요청\n- No preemption \n  - 빼앗아 올수 있게 하면 됨 \n  - 모든 필요한 자원을 얻을 수 있을 때 그 프로세스는 다시 시작된다. \n- Circular Wait\n  - 모든 자원 유형에 할당 순서를 정하여 정해진 순서대로 자원 할당\n\n## Deadlock Avoidance\n\n자원 요청에 대한 부가적인 정보를 이용해서 데드락의 가능성이 없는 경우에만 자원 할당.\n\n데드락으로부터 항상 safe한 상태를 유지.\n\n자원 요청에 대한 부가정보를 이용해서 자원 할당이 데드락으로부터 safe한지를 동적으로 조사해서 안전한 경우에만 할당.\n\n프로세스들이 필요로 하는 각 자원별 최대 사용량을 미리 선언\n\n- Single instance per resouce types \n  - Resource Allocation Graph algorithm\n- Multiple instance per resouce types  \n  - Banker's Algorithm\n\n## Resource Allocation Graph algorithm\n\n자원 당 인스턴스 하나\n\n데드락의 위험성이 있으면 애초부터 자원을 내주지 않음.\n\n점선 화살표 : 이 프로세스가 평생 적어도 한번 이 자원을 사용할 것이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock03.png)\n\n## Banker's Algorithm\n\n자원 당 인스턴스 여러개\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock04.png)\n\n5개의 프로세스 : P0 P1 P2 P3 P4\n\nA자원 인스턴스 10개\n\nB자원 인스턴스 5개\n\nC자원 인스턴스 7개\n\n- Allocation\n  - 0번 프로세스는 현재 A 0개 / B 1개 / C 0개 할당되어 있음 \n\n- Available\n  - 현재 가용 자원\n  - 아무도 사용하지 않고 남아 있는 자원\n- Max\n  - 이 프로세스가 시작될 때, 이 프로세스가 평생 최대로 사용할 자원 개수를 선언했음\n- Need\n  - 추가로 요청 할 수  있는 양 \n\n이 알고리즘은 프로세스가 자원을 요청했을 때, 이 요청을 받아들일것인지 결정하는 것임 \n\n프로세스가 최대(Need)로 요청할 것을 가정한다. 그리고 이게 가용 자원으로 가능한지 체크. 가용자원으로 가능하지 않으면 요청을 거절.\n\nP0는 7 4 3 으로 요청할것이다. 이게 3 3 2 로 커버 가능? NO. 요청 거절.\n\n## Deadlock Detection and recovery\n\nDeadlock 발생은 허용하되 그에 대한 detection 루틴을 두어 deadlock 발생시 recover\n\n- Single instance per resouce types \n  - Resource Allocation Graph algorithm\n  - cycle이 곧 데드락\n- Multiple instance per resouce types  \n  - Banker's Algorithm과 유사한 방법 활용\n\n- Recovery\n\n  - Process Termination\n    - abort all deadlocked processes(한꺼번에)\n    - 데드락에 연루된 프로세스드을 하나씩 죽여봄. 여전히 데드락이면 또 하나의 다른 프로세스 죽여봄.\n\n  - Resource Preemption\n    - 데드락에 연루된 프로세스로부터 자원을 뺏음\n    - safe state로 roolback하여 prcess를 restart\n\n## Deadlock Ignorance\n\nDeadlock을 시스템이 책임지지 않음\n\nUNIX를 포함한 대부분의 OS가 채택\n\n데드락이 일어나지 않는다고 생각하고 아무런 조치 취하지 않음","slug":"2018-10-09-Deadlock","published":1,"updated":"2018-10-10T09:26:15.556Z","comments":1,"photos":[],"link":"","_id":"cjp6k65qm00hm31x79qc2kkr1","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"Deadlock\"><a href=\"#Deadlock\" class=\"headerlink\" title=\"Deadlock\"></a>Deadlock</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock01.png\" alt=\"img\"></p>\n<p>일련의 프로세스들이 서로가 가진 자원을 기다리며 block된 상태</p>\n<ul>\n<li>자원<ul>\n<li>하드웨어, 소프트웨어 등을 포함하느 개념</li>\n<li>ex) I/O device, CPU cycle, memory space, semaphore 등</li>\n</ul>\n</li>\n<li>예시<ul>\n<li>시스템 2개의 tape drive가 있다</li>\n<li>프로세스 P1과 P2 각각이 하나의 tape drive 를 보유한 채 다른 하나를 기다리고 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Deadlock-발생의-4가지-조건\"><a href=\"#Deadlock-발생의-4가지-조건\" class=\"headerlink\" title=\"Deadlock 발생의 4가지 조건\"></a>Deadlock 발생의 4가지 조건</h2><ul>\n<li>Mutual Exlusioin<ul>\n<li>매 순간 하나의 프로세스만이 자원을 사용할 수 있음</li>\n</ul>\n</li>\n<li>No Preemption <ul>\n<li>프로세스는 자원을 스스로 내어놓을 뿐 강제로 뺏기지 않음 </li>\n</ul>\n</li>\n<li>Hold and wiat <ul>\n<li>자원을 가진 프로세스가 다른 자원을 기달리때 보유 자원을 놓지 않고 계속 가지고 있음</li>\n</ul>\n</li>\n<li>Circular wait<ul>\n<li>자워을 기다리는 프로세스 간에 사이클이 형성되어야 함 </li>\n<li>P0은 P1이 가진 자원을 기다림</li>\n<li>P1은 P2가 가진 자원을 기다림 ..</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"자원-할당-그래프\"><a href=\"#자원-할당-그래프\" class=\"headerlink\" title=\"자원 할당 그래프\"></a>자원 할당 그래프</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock02.png\" alt=\"img\"></p>\n<ul>\n<li><p>자원에서 프로세스쪽으로 나가는 화살표 </p>\n</li>\n<li><p>이 프로세스가 이 자원을 가지고 있다.</p>\n</li>\n<li><p>프로세스에서 자원쪽으로 나가는 화살표</p>\n<ul>\n<li>이 프로세스가 이 자원을 요청</li>\n</ul>\n</li>\n<li><p>자원 안에 동그라미</p>\n<ul>\n<li>자원 개수</li>\n</ul>\n</li>\n<li><p>그래프 안에 cycle이 없으면 deadlock이 아니다</p>\n</li>\n<li><p>cycle이 있으면</p>\n<ul>\n<li>자원당 인스턴스가 하나밖에 없으면, 데드락</li>\n<li>자원의 인스턴스가 여러개면, 데드락수도 있고 아닐수도 있고</li>\n</ul>\n</li>\n<li><p>왼쪽은 데드락, 오른쪽은 데드락이 아님</p>\n</li>\n</ul>\n<h2 id=\"Deadlock-Prevention\"><a href=\"#Deadlock-Prevention\" class=\"headerlink\" title=\"Deadlock Prevention\"></a>Deadlock Prevention</h2><p>자원 할당시 Deadlock의 4가지 필요 조건 중 어느 하나가 만족되지 않도록 하는 것 </p>\n<ul>\n<li>Mutual Exclusion<ul>\n<li>공유해서는 안되는 자원의 경우 반드시 성립해야함 </li>\n</ul>\n</li>\n<li>Hold and wait<ul>\n<li>프로세스 시작 시 모든 필요한 자원을 할당받게 하는 방법</li>\n<li>자원이 필요할 경우 보유 자원을 모두 놓고 다시 요청</li>\n</ul>\n</li>\n<li>No preemption <ul>\n<li>빼앗아 올수 있게 하면 됨 </li>\n<li>모든 필요한 자원을 얻을 수 있을 때 그 프로세스는 다시 시작된다. </li>\n</ul>\n</li>\n<li>Circular Wait<ul>\n<li>모든 자원 유형에 할당 순서를 정하여 정해진 순서대로 자원 할당</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Deadlock-Avoidance\"><a href=\"#Deadlock-Avoidance\" class=\"headerlink\" title=\"Deadlock Avoidance\"></a>Deadlock Avoidance</h2><p>자원 요청에 대한 부가적인 정보를 이용해서 데드락의 가능성이 없는 경우에만 자원 할당.</p>\n<p>데드락으로부터 항상 safe한 상태를 유지.</p>\n<p>자원 요청에 대한 부가정보를 이용해서 자원 할당이 데드락으로부터 safe한지를 동적으로 조사해서 안전한 경우에만 할당.</p>\n<p>프로세스들이 필요로 하는 각 자원별 최대 사용량을 미리 선언</p>\n<ul>\n<li>Single instance per resouce types <ul>\n<li>Resource Allocation Graph algorithm</li>\n</ul>\n</li>\n<li>Multiple instance per resouce types  <ul>\n<li>Banker’s Algorithm</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Resource-Allocation-Graph-algorithm\"><a href=\"#Resource-Allocation-Graph-algorithm\" class=\"headerlink\" title=\"Resource Allocation Graph algorithm\"></a>Resource Allocation Graph algorithm</h2><p>자원 당 인스턴스 하나</p>\n<p>데드락의 위험성이 있으면 애초부터 자원을 내주지 않음.</p>\n<p>점선 화살표 : 이 프로세스가 평생 적어도 한번 이 자원을 사용할 것이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock03.png\" alt=\"img\"></p>\n<h2 id=\"Banker’s-Algorithm\"><a href=\"#Banker’s-Algorithm\" class=\"headerlink\" title=\"Banker’s Algorithm\"></a>Banker’s Algorithm</h2><p>자원 당 인스턴스 여러개</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock04.png\" alt=\"img\"></p>\n<p>5개의 프로세스 : P0 P1 P2 P3 P4</p>\n<p>A자원 인스턴스 10개</p>\n<p>B자원 인스턴스 5개</p>\n<p>C자원 인스턴스 7개</p>\n<ul>\n<li><p>Allocation</p>\n<ul>\n<li>0번 프로세스는 현재 A 0개 / B 1개 / C 0개 할당되어 있음 </li>\n</ul>\n</li>\n<li><p>Available</p>\n<ul>\n<li>현재 가용 자원</li>\n<li>아무도 사용하지 않고 남아 있는 자원</li>\n</ul>\n</li>\n<li>Max<ul>\n<li>이 프로세스가 시작될 때, 이 프로세스가 평생 최대로 사용할 자원 개수를 선언했음</li>\n</ul>\n</li>\n<li>Need<ul>\n<li>추가로 요청 할 수  있는 양 </li>\n</ul>\n</li>\n</ul>\n<p>이 알고리즘은 프로세스가 자원을 요청했을 때, 이 요청을 받아들일것인지 결정하는 것임 </p>\n<p>프로세스가 최대(Need)로 요청할 것을 가정한다. 그리고 이게 가용 자원으로 가능한지 체크. 가용자원으로 가능하지 않으면 요청을 거절.</p>\n<p>P0는 7 4 3 으로 요청할것이다. 이게 3 3 2 로 커버 가능? NO. 요청 거절.</p>\n<h2 id=\"Deadlock-Detection-and-recovery\"><a href=\"#Deadlock-Detection-and-recovery\" class=\"headerlink\" title=\"Deadlock Detection and recovery\"></a>Deadlock Detection and recovery</h2><p>Deadlock 발생은 허용하되 그에 대한 detection 루틴을 두어 deadlock 발생시 recover</p>\n<ul>\n<li>Single instance per resouce types <ul>\n<li>Resource Allocation Graph algorithm</li>\n<li>cycle이 곧 데드락</li>\n</ul>\n</li>\n<li><p>Multiple instance per resouce types  </p>\n<ul>\n<li>Banker’s Algorithm과 유사한 방법 활용</li>\n</ul>\n</li>\n<li><p>Recovery</p>\n<ul>\n<li><p>Process Termination</p>\n<ul>\n<li>abort all deadlocked processes(한꺼번에)</li>\n<li>데드락에 연루된 프로세스드을 하나씩 죽여봄. 여전히 데드락이면 또 하나의 다른 프로세스 죽여봄.</li>\n</ul>\n</li>\n<li><p>Resource Preemption</p>\n<ul>\n<li>데드락에 연루된 프로세스로부터 자원을 뺏음</li>\n<li>safe state로 roolback하여 prcess를 restart</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Deadlock-Ignorance\"><a href=\"#Deadlock-Ignorance\" class=\"headerlink\" title=\"Deadlock Ignorance\"></a>Deadlock Ignorance</h2><p>Deadlock을 시스템이 책임지지 않음</p>\n<p>UNIX를 포함한 대부분의 OS가 채택</p>\n<p>데드락이 일어나지 않는다고 생각하고 아무런 조치 취하지 않음</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"Deadlock\"><a href=\"#Deadlock\" class=\"headerlink\" title=\"Deadlock\"></a>Deadlock</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock01.png\" alt=\"img\"></p>\n<p>일련의 프로세스들이 서로가 가진 자원을 기다리며 block된 상태</p>\n<ul>\n<li>자원<ul>\n<li>하드웨어, 소프트웨어 등을 포함하느 개념</li>\n<li>ex) I/O device, CPU cycle, memory space, semaphore 등</li>\n</ul>\n</li>\n<li>예시<ul>\n<li>시스템 2개의 tape drive가 있다</li>\n<li>프로세스 P1과 P2 각각이 하나의 tape drive 를 보유한 채 다른 하나를 기다리고 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Deadlock-발생의-4가지-조건\"><a href=\"#Deadlock-발생의-4가지-조건\" class=\"headerlink\" title=\"Deadlock 발생의 4가지 조건\"></a>Deadlock 발생의 4가지 조건</h2><ul>\n<li>Mutual Exlusioin<ul>\n<li>매 순간 하나의 프로세스만이 자원을 사용할 수 있음</li>\n</ul>\n</li>\n<li>No Preemption <ul>\n<li>프로세스는 자원을 스스로 내어놓을 뿐 강제로 뺏기지 않음 </li>\n</ul>\n</li>\n<li>Hold and wiat <ul>\n<li>자원을 가진 프로세스가 다른 자원을 기달리때 보유 자원을 놓지 않고 계속 가지고 있음</li>\n</ul>\n</li>\n<li>Circular wait<ul>\n<li>자워을 기다리는 프로세스 간에 사이클이 형성되어야 함 </li>\n<li>P0은 P1이 가진 자원을 기다림</li>\n<li>P1은 P2가 가진 자원을 기다림 ..</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"자원-할당-그래프\"><a href=\"#자원-할당-그래프\" class=\"headerlink\" title=\"자원 할당 그래프\"></a>자원 할당 그래프</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock02.png\" alt=\"img\"></p>\n<ul>\n<li><p>자원에서 프로세스쪽으로 나가는 화살표 </p>\n</li>\n<li><p>이 프로세스가 이 자원을 가지고 있다.</p>\n</li>\n<li><p>프로세스에서 자원쪽으로 나가는 화살표</p>\n<ul>\n<li>이 프로세스가 이 자원을 요청</li>\n</ul>\n</li>\n<li><p>자원 안에 동그라미</p>\n<ul>\n<li>자원 개수</li>\n</ul>\n</li>\n<li><p>그래프 안에 cycle이 없으면 deadlock이 아니다</p>\n</li>\n<li><p>cycle이 있으면</p>\n<ul>\n<li>자원당 인스턴스가 하나밖에 없으면, 데드락</li>\n<li>자원의 인스턴스가 여러개면, 데드락수도 있고 아닐수도 있고</li>\n</ul>\n</li>\n<li><p>왼쪽은 데드락, 오른쪽은 데드락이 아님</p>\n</li>\n</ul>\n<h2 id=\"Deadlock-Prevention\"><a href=\"#Deadlock-Prevention\" class=\"headerlink\" title=\"Deadlock Prevention\"></a>Deadlock Prevention</h2><p>자원 할당시 Deadlock의 4가지 필요 조건 중 어느 하나가 만족되지 않도록 하는 것 </p>\n<ul>\n<li>Mutual Exclusion<ul>\n<li>공유해서는 안되는 자원의 경우 반드시 성립해야함 </li>\n</ul>\n</li>\n<li>Hold and wait<ul>\n<li>프로세스 시작 시 모든 필요한 자원을 할당받게 하는 방법</li>\n<li>자원이 필요할 경우 보유 자원을 모두 놓고 다시 요청</li>\n</ul>\n</li>\n<li>No preemption <ul>\n<li>빼앗아 올수 있게 하면 됨 </li>\n<li>모든 필요한 자원을 얻을 수 있을 때 그 프로세스는 다시 시작된다. </li>\n</ul>\n</li>\n<li>Circular Wait<ul>\n<li>모든 자원 유형에 할당 순서를 정하여 정해진 순서대로 자원 할당</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Deadlock-Avoidance\"><a href=\"#Deadlock-Avoidance\" class=\"headerlink\" title=\"Deadlock Avoidance\"></a>Deadlock Avoidance</h2><p>자원 요청에 대한 부가적인 정보를 이용해서 데드락의 가능성이 없는 경우에만 자원 할당.</p>\n<p>데드락으로부터 항상 safe한 상태를 유지.</p>\n<p>자원 요청에 대한 부가정보를 이용해서 자원 할당이 데드락으로부터 safe한지를 동적으로 조사해서 안전한 경우에만 할당.</p>\n<p>프로세스들이 필요로 하는 각 자원별 최대 사용량을 미리 선언</p>\n<ul>\n<li>Single instance per resouce types <ul>\n<li>Resource Allocation Graph algorithm</li>\n</ul>\n</li>\n<li>Multiple instance per resouce types  <ul>\n<li>Banker’s Algorithm</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Resource-Allocation-Graph-algorithm\"><a href=\"#Resource-Allocation-Graph-algorithm\" class=\"headerlink\" title=\"Resource Allocation Graph algorithm\"></a>Resource Allocation Graph algorithm</h2><p>자원 당 인스턴스 하나</p>\n<p>데드락의 위험성이 있으면 애초부터 자원을 내주지 않음.</p>\n<p>점선 화살표 : 이 프로세스가 평생 적어도 한번 이 자원을 사용할 것이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock03.png\" alt=\"img\"></p>\n<h2 id=\"Banker’s-Algorithm\"><a href=\"#Banker’s-Algorithm\" class=\"headerlink\" title=\"Banker’s Algorithm\"></a>Banker’s Algorithm</h2><p>자원 당 인스턴스 여러개</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dealock04.png\" alt=\"img\"></p>\n<p>5개의 프로세스 : P0 P1 P2 P3 P4</p>\n<p>A자원 인스턴스 10개</p>\n<p>B자원 인스턴스 5개</p>\n<p>C자원 인스턴스 7개</p>\n<ul>\n<li><p>Allocation</p>\n<ul>\n<li>0번 프로세스는 현재 A 0개 / B 1개 / C 0개 할당되어 있음 </li>\n</ul>\n</li>\n<li><p>Available</p>\n<ul>\n<li>현재 가용 자원</li>\n<li>아무도 사용하지 않고 남아 있는 자원</li>\n</ul>\n</li>\n<li>Max<ul>\n<li>이 프로세스가 시작될 때, 이 프로세스가 평생 최대로 사용할 자원 개수를 선언했음</li>\n</ul>\n</li>\n<li>Need<ul>\n<li>추가로 요청 할 수  있는 양 </li>\n</ul>\n</li>\n</ul>\n<p>이 알고리즘은 프로세스가 자원을 요청했을 때, 이 요청을 받아들일것인지 결정하는 것임 </p>\n<p>프로세스가 최대(Need)로 요청할 것을 가정한다. 그리고 이게 가용 자원으로 가능한지 체크. 가용자원으로 가능하지 않으면 요청을 거절.</p>\n<p>P0는 7 4 3 으로 요청할것이다. 이게 3 3 2 로 커버 가능? NO. 요청 거절.</p>\n<h2 id=\"Deadlock-Detection-and-recovery\"><a href=\"#Deadlock-Detection-and-recovery\" class=\"headerlink\" title=\"Deadlock Detection and recovery\"></a>Deadlock Detection and recovery</h2><p>Deadlock 발생은 허용하되 그에 대한 detection 루틴을 두어 deadlock 발생시 recover</p>\n<ul>\n<li>Single instance per resouce types <ul>\n<li>Resource Allocation Graph algorithm</li>\n<li>cycle이 곧 데드락</li>\n</ul>\n</li>\n<li><p>Multiple instance per resouce types  </p>\n<ul>\n<li>Banker’s Algorithm과 유사한 방법 활용</li>\n</ul>\n</li>\n<li><p>Recovery</p>\n<ul>\n<li><p>Process Termination</p>\n<ul>\n<li>abort all deadlocked processes(한꺼번에)</li>\n<li>데드락에 연루된 프로세스드을 하나씩 죽여봄. 여전히 데드락이면 또 하나의 다른 프로세스 죽여봄.</li>\n</ul>\n</li>\n<li><p>Resource Preemption</p>\n<ul>\n<li>데드락에 연루된 프로세스로부터 자원을 뺏음</li>\n<li>safe state로 roolback하여 prcess를 restart</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Deadlock-Ignorance\"><a href=\"#Deadlock-Ignorance\" class=\"headerlink\" title=\"Deadlock Ignorance\"></a>Deadlock Ignorance</h2><p>Deadlock을 시스템이 책임지지 않음</p>\n<p>UNIX를 포함한 대부분의 OS가 채택</p>\n<p>데드락이 일어나지 않는다고 생각하고 아무런 조치 취하지 않음</p>\n"},{"layout":"post","title":"탈주범 검거","date":"2018-10-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpLlKAQ4DFAUq>\n\n소요시간 1시간. BFS 문제이다. 쉬운 문제이다. Queue에 넣어야 하는 경우의 수의 조건에서 시간이 오래 걸렸다.\n\n더럽게 코드를 작성했다. 더 나은 방법은 없을까?\n\n## 풀이\n\n1. map에 터널 상태를 저장한다.\n2. 현재 위치에서 이동 가능한 위치를 큐에 넣는다. (이동 가능한 위치는 터널 상태를 보고 파악한다)\n3. 큐에서 pop한 위치에서 2번을 반복한다.\n4. depth가 문제에서 주어진 시간이 되었을 때, 큐에 넣었던 위치 개수를 출력한다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel05.png)\n\n### \n\n\n\n","source":"_posts/2018-10-09-탐주범 검거.md","raw":"---\nlayout: post\ntitle:  \"탈주범 검거\"\ndate:   2018-10-09\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpLlKAQ4DFAUq>\n\n소요시간 1시간. BFS 문제이다. 쉬운 문제이다. Queue에 넣어야 하는 경우의 수의 조건에서 시간이 오래 걸렸다.\n\n더럽게 코드를 작성했다. 더 나은 방법은 없을까?\n\n## 풀이\n\n1. map에 터널 상태를 저장한다.\n2. 현재 위치에서 이동 가능한 위치를 큐에 넣는다. (이동 가능한 위치는 터널 상태를 보고 파악한다)\n3. 큐에서 pop한 위치에서 2번을 반복한다.\n4. depth가 문제에서 주어진 시간이 되었을 때, 큐에 넣었던 위치 개수를 출력한다.\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel05.png)\n\n### \n\n\n\n","slug":"2018-10-09-탐주범 검거","published":1,"updated":"2018-10-09T15:19:34.587Z","comments":1,"photos":[],"link":"","_id":"cjp6k65qo00ho31x7sgb7itkz","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpLlKAQ4DFAUq\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpLlKAQ4DFAUq</a></p>\n<p>소요시간 1시간. BFS 문제이다. 쉬운 문제이다. Queue에 넣어야 하는 경우의 수의 조건에서 시간이 오래 걸렸다.</p>\n<p>더럽게 코드를 작성했다. 더 나은 방법은 없을까?</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>map에 터널 상태를 저장한다.</li>\n<li>현재 위치에서 이동 가능한 위치를 큐에 넣는다. (이동 가능한 위치는 터널 상태를 보고 파악한다)</li>\n<li>큐에서 pop한 위치에서 2번을 반복한다.</li>\n<li>depth가 문제에서 주어진 시간이 되었을 때, 큐에 넣었던 위치 개수를 출력한다.</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel05.png\" alt=\"img\"></p>\n<p>### </p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpLlKAQ4DFAUq\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpLlKAQ4DFAUq</a></p>\n<p>소요시간 1시간. BFS 문제이다. 쉬운 문제이다. Queue에 넣어야 하는 경우의 수의 조건에서 시간이 오래 걸렸다.</p>\n<p>더럽게 코드를 작성했다. 더 나은 방법은 없을까?</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>map에 터널 상태를 저장한다.</li>\n<li>현재 위치에서 이동 가능한 위치를 큐에 넣는다. (이동 가능한 위치는 터널 상태를 보고 파악한다)</li>\n<li>큐에서 pop한 위치에서 2번을 반복한다.</li>\n<li>depth가 문제에서 주어진 시간이 되었을 때, 큐에 넣었던 위치 개수를 출력한다.</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tennel05.png\" alt=\"img\"></p>\n<p>### </p>\n"},{"layout":"post","title":"활주로 건설","date":"2018-10-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeW7FakkUDFAVH>\n\n경우의 수를 나눈 후 조건에 맞게 짜려고 하였다. 해설을 보고 DFS로 풀면 쉽게 풀 수 있다는 것을 알았다.\n\n## 풀이\n\n1. 모든 행과 열을 차례대로 체크한다.\n\n2. 현재 위치와 다음 위치를 비교한다.\n\n   - 같은 높이인 경우 : 다음 위치 부터 체크\n\n   - 오르막인 경우 : 현재 위치 기준해서 왼쪽으로 경사로 둘 수 있는지 체크\n\n   - 내리막인 경우 : 현재 위치 기준해서 오른쪽으로 경사로 둘 수 있는지 체크\n   - 그 이외의 경우 : 이번 행이나 열은 실패\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy04.png)\n\n","source":"_posts/2018-10-09-활주로 건설.md","raw":"---\nlayout: post\ntitle:  \"활주로 건설\"\ndate:   2018-10-09\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeW7FakkUDFAVH>\n\n경우의 수를 나눈 후 조건에 맞게 짜려고 하였다. 해설을 보고 DFS로 풀면 쉽게 풀 수 있다는 것을 알았다.\n\n## 풀이\n\n1. 모든 행과 열을 차례대로 체크한다.\n\n2. 현재 위치와 다음 위치를 비교한다.\n\n   - 같은 높이인 경우 : 다음 위치 부터 체크\n\n   - 오르막인 경우 : 현재 위치 기준해서 왼쪽으로 경사로 둘 수 있는지 체크\n\n   - 내리막인 경우 : 현재 위치 기준해서 오른쪽으로 경사로 둘 수 있는지 체크\n   - 그 이외의 경우 : 이번 행이나 열은 실패\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy04.png)\n\n","slug":"2018-10-09-활주로 건설","published":1,"updated":"2018-10-09T08:15:48.527Z","comments":1,"photos":[],"link":"","_id":"cjp6k65qz00hq31x7fmfluqnm","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeW7FakkUDFAVH\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeW7FakkUDFAVH</a></p>\n<p>경우의 수를 나눈 후 조건에 맞게 짜려고 하였다. 해설을 보고 DFS로 풀면 쉽게 풀 수 있다는 것을 알았다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>모든 행과 열을 차례대로 체크한다.</p>\n</li>\n<li><p>현재 위치와 다음 위치를 비교한다.</p>\n<ul>\n<li><p>같은 높이인 경우 : 다음 위치 부터 체크</p>\n</li>\n<li><p>오르막인 경우 : 현재 위치 기준해서 왼쪽으로 경사로 둘 수 있는지 체크</p>\n</li>\n<li><p>내리막인 경우 : 현재 위치 기준해서 오른쪽으로 경사로 둘 수 있는지 체크</p>\n</li>\n<li>그 이외의 경우 : 이번 행이나 열은 실패</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy04.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeW7FakkUDFAVH\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeW7FakkUDFAVH</a></p>\n<p>경우의 수를 나눈 후 조건에 맞게 짜려고 하였다. 해설을 보고 DFS로 풀면 쉽게 풀 수 있다는 것을 알았다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>모든 행과 열을 차례대로 체크한다.</p>\n</li>\n<li><p>현재 위치와 다음 위치를 비교한다.</p>\n<ul>\n<li><p>같은 높이인 경우 : 다음 위치 부터 체크</p>\n</li>\n<li><p>오르막인 경우 : 현재 위치 기준해서 왼쪽으로 경사로 둘 수 있는지 체크</p>\n</li>\n<li><p>내리막인 경우 : 현재 위치 기준해서 오른쪽으로 경사로 둘 수 있는지 체크</p>\n</li>\n<li>그 이외의 경우 : 이번 행이나 열은 실패</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/runwayyy04.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"디저트 카페","date":"2018-10-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5VwAr6APYDFAWu>\n\nDFS 문제이다. 오래 걸렸다. 아직 DFS 실력이 부족하다. \n\nDFS 메소드에 방문 체크 배열을 넘기고, 복사해서 사용하면 시간 초과가 발생한다.\n\n## 풀이\n\n- 각 방문 지점에서 할 것\n\n  - 방문 체크 \n  - 현 위치 기준으로 대각선 네 방향 체크\n\n- 원점으로 돌아왔을 때 사각형인지 확인하는 방법\n\n  - 길이가 4이상\n\n  - 방향 전환 횟수가 4 or 3\n\n    - 방향 전환 횟수가 4 인 경우\n\n      ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe03.png)\n\n    - 방향 전환 횟수가 3 인 경우\n\n      ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe04.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe02.png)","source":"_posts/2018-10-11-디저트 카페.md","raw":"---\nlayout: post\ntitle:  \"디저트 카페\"\ndate:   2018-10-11\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5VwAr6APYDFAWu>\n\nDFS 문제이다. 오래 걸렸다. 아직 DFS 실력이 부족하다. \n\nDFS 메소드에 방문 체크 배열을 넘기고, 복사해서 사용하면 시간 초과가 발생한다.\n\n## 풀이\n\n- 각 방문 지점에서 할 것\n\n  - 방문 체크 \n  - 현 위치 기준으로 대각선 네 방향 체크\n\n- 원점으로 돌아왔을 때 사각형인지 확인하는 방법\n\n  - 길이가 4이상\n\n  - 방향 전환 횟수가 4 or 3\n\n    - 방향 전환 횟수가 4 인 경우\n\n      ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe03.png)\n\n    - 방향 전환 횟수가 3 인 경우\n\n      ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe04.png)\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe02.png)","slug":"2018-10-11-디저트 카페","published":1,"updated":"2018-10-11T07:08:02.275Z","comments":1,"photos":[],"link":"","_id":"cjp6k65r400hs31x70ytq59f6","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5VwAr6APYDFAWu\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5VwAr6APYDFAWu</a></p>\n<p>DFS 문제이다. 오래 걸렸다. 아직 DFS 실력이 부족하다. </p>\n<p>DFS 메소드에 방문 체크 배열을 넘기고, 복사해서 사용하면 시간 초과가 발생한다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>각 방문 지점에서 할 것</p>\n<ul>\n<li>방문 체크 </li>\n<li>현 위치 기준으로 대각선 네 방향 체크</li>\n</ul>\n</li>\n<li><p>원점으로 돌아왔을 때 사각형인지 확인하는 방법</p>\n<ul>\n<li><p>길이가 4이상</p>\n</li>\n<li><p>방향 전환 횟수가 4 or 3</p>\n<ul>\n<li><p>방향 전환 횟수가 4 인 경우</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe03.png\" alt=\"img\"></p>\n</li>\n<li><p>방향 전환 횟수가 3 인 경우</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe04.png\" alt=\"img\"></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe02.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5VwAr6APYDFAWu\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5VwAr6APYDFAWu</a></p>\n<p>DFS 문제이다. 오래 걸렸다. 아직 DFS 실력이 부족하다. </p>\n<p>DFS 메소드에 방문 체크 배열을 넘기고, 복사해서 사용하면 시간 초과가 발생한다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ul>\n<li><p>각 방문 지점에서 할 것</p>\n<ul>\n<li>방문 체크 </li>\n<li>현 위치 기준으로 대각선 네 방향 체크</li>\n</ul>\n</li>\n<li><p>원점으로 돌아왔을 때 사각형인지 확인하는 방법</p>\n<ul>\n<li><p>길이가 4이상</p>\n</li>\n<li><p>방향 전환 횟수가 4 or 3</p>\n<ul>\n<li><p>방향 전환 횟수가 4 인 경우</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe03.png\" alt=\"img\"></p>\n</li>\n<li><p>방향 전환 횟수가 3 인 경우</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe04.png\" alt=\"img\"></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/desertCafe02.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"홈 방범 서비스","date":"2018-10-18T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V61LqAf8DFAWu\n\n쉬운 문제이다. \n\n시뮬레이션 문제로 처음에 풀었다.\n\nBFS로도 풀수 있다.\n\n## 풀이 01\n\n1. k 일 때, 전체 집 개수를 대상으로 이익이 0 이상인지 체크한다.\n\n2. 이익이 0 이상이면, 마름모를 이동 시켜서 집 개수를 count 한다. \n\n   마름모 이동이란, 예들 들어 k가 2일 때, 마름모의 중심에서 거리가 1이하인 지점을 체크하는 것이다.\n\n3. 서비스 제공 받는 집 수의 최대 값 구하기.\n\n## 코드 01\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/homeProtect01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/homeProtect02.png)\n\n## 풀이 02 \n\n1. i, j 지점에서 BFS를 시작한다. ( 모든 지점에서 BFS )\n2. i, j 지점에서 지도의 영역을 넓힐 수 없을 때 까지 k를 증가시킨다.\n3. 이익이 0 이상이면 집 개수의 최대 값을 구한다.\n\n## 코드 02\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome011.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome012.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome013.png)\n\n\n\n","source":"_posts/2018-10-19-홈 방범 서비스.md","raw":"---\nlayout: post\ntitle:  \"홈 방범 서비스\"\ndate:   2018-10-19\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V61LqAf8DFAWu\n\n쉬운 문제이다. \n\n시뮬레이션 문제로 처음에 풀었다.\n\nBFS로도 풀수 있다.\n\n## 풀이 01\n\n1. k 일 때, 전체 집 개수를 대상으로 이익이 0 이상인지 체크한다.\n\n2. 이익이 0 이상이면, 마름모를 이동 시켜서 집 개수를 count 한다. \n\n   마름모 이동이란, 예들 들어 k가 2일 때, 마름모의 중심에서 거리가 1이하인 지점을 체크하는 것이다.\n\n3. 서비스 제공 받는 집 수의 최대 값 구하기.\n\n## 코드 01\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/homeProtect01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/homeProtect02.png)\n\n## 풀이 02 \n\n1. i, j 지점에서 BFS를 시작한다. ( 모든 지점에서 BFS )\n2. i, j 지점에서 지도의 영역을 넓힐 수 없을 때 까지 k를 증가시킨다.\n3. 이익이 0 이상이면 집 개수의 최대 값을 구한다.\n\n## 코드 02\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome011.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome012.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome013.png)\n\n\n\n","slug":"2018-10-19-홈 방범 서비스","published":1,"updated":"2018-10-19T13:32:15.974Z","comments":1,"photos":[],"link":"","_id":"cjp6k65r500hu31x7wpxioo5z","content":"<p>&lt;<a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V61LqAf8DFAWu\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V61LqAf8DFAWu</a></p>\n<p>쉬운 문제이다. </p>\n<p>시뮬레이션 문제로 처음에 풀었다.</p>\n<p>BFS로도 풀수 있다.</p>\n<h2 id=\"풀이-01\"><a href=\"#풀이-01\" class=\"headerlink\" title=\"풀이 01\"></a>풀이 01</h2><ol>\n<li><p>k 일 때, 전체 집 개수를 대상으로 이익이 0 이상인지 체크한다.</p>\n</li>\n<li><p>이익이 0 이상이면, 마름모를 이동 시켜서 집 개수를 count 한다. </p>\n<p>마름모 이동이란, 예들 들어 k가 2일 때, 마름모의 중심에서 거리가 1이하인 지점을 체크하는 것이다.</p>\n</li>\n<li><p>서비스 제공 받는 집 수의 최대 값 구하기.</p>\n</li>\n</ol>\n<h2 id=\"코드-01\"><a href=\"#코드-01\" class=\"headerlink\" title=\"코드 01\"></a>코드 01</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/homeProtect01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/homeProtect02.png\" alt=\"img\"></p>\n<h2 id=\"풀이-02\"><a href=\"#풀이-02\" class=\"headerlink\" title=\"풀이 02\"></a>풀이 02</h2><ol>\n<li>i, j 지점에서 BFS를 시작한다. ( 모든 지점에서 BFS )</li>\n<li>i, j 지점에서 지도의 영역을 넓힐 수 없을 때 까지 k를 증가시킨다.</li>\n<li>이익이 0 이상이면 집 개수의 최대 값을 구한다.</li>\n</ol>\n<h2 id=\"코드-02\"><a href=\"#코드-02\" class=\"headerlink\" title=\"코드 02\"></a>코드 02</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome012.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome013.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>&lt;<a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V61LqAf8DFAWu\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V61LqAf8DFAWu</a></p>\n<p>쉬운 문제이다. </p>\n<p>시뮬레이션 문제로 처음에 풀었다.</p>\n<p>BFS로도 풀수 있다.</p>\n<h2 id=\"풀이-01\"><a href=\"#풀이-01\" class=\"headerlink\" title=\"풀이 01\"></a>풀이 01</h2><ol>\n<li><p>k 일 때, 전체 집 개수를 대상으로 이익이 0 이상인지 체크한다.</p>\n</li>\n<li><p>이익이 0 이상이면, 마름모를 이동 시켜서 집 개수를 count 한다. </p>\n<p>마름모 이동이란, 예들 들어 k가 2일 때, 마름모의 중심에서 거리가 1이하인 지점을 체크하는 것이다.</p>\n</li>\n<li><p>서비스 제공 받는 집 수의 최대 값 구하기.</p>\n</li>\n</ol>\n<h2 id=\"코드-01\"><a href=\"#코드-01\" class=\"headerlink\" title=\"코드 01\"></a>코드 01</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/homeProtect01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/homeProtect02.png\" alt=\"img\"></p>\n<h2 id=\"풀이-02\"><a href=\"#풀이-02\" class=\"headerlink\" title=\"풀이 02\"></a>풀이 02</h2><ol>\n<li>i, j 지점에서 BFS를 시작한다. ( 모든 지점에서 BFS )</li>\n<li>i, j 지점에서 지도의 영역을 넓힐 수 없을 때 까지 k를 증가시킨다.</li>\n<li>이익이 0 이상이면 집 개수의 최대 값을 구한다.</li>\n</ol>\n<h2 id=\"코드-02\"><a href=\"#코드-02\" class=\"headerlink\" title=\"코드 02\"></a>코드 02</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome011.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome012.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/protectionHome013.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"2018 하반기 삼성 코테 리뷰","date":"2018-10-22T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n응시일 : 2018.10.21 15:00-18:00\n\n장소 : 영통 인재 개발원\n\n## 시험 상황\n\n계획은 1번 문제 90분, 2번 문제 90분 정도 잡았다. 1번 문제를 먼저 풀고 2번 문제로 넘어가려고 하였다.\n\n1번 문제가 시뮬레이션, 2번 문제가 탐색 문제였다.\n\n1먼 문제를 읽고, 90분 내에 충분히 풀 수 있다고 생각하였다. \n\n하지만 90분이 다 되어가는데도 풀리지 않았다. \n\n90분 즈음에 2번 문제를 읽었다. 충분히 풀 수 있을 것 같았지만, 조금만 더 하면 1번 문제를 풀 수 있을 것이라고 생각했다.\n\n1번 문제를 포기 못하고, 1번 문제를 계속 풀었고 시간이 점점 흐르고 2번 문제를 아예 포기 했다.\n\n## 문제점\n\n1. 문제 이해를 완벽히 하지 않았는데 코딩을 시작해서, 코딩하다가 계속 문제를 다시 읽었다.\n2. 윈도우 PC와 이클립스가 익숙치 않아 코딩은 하는데 굉장히 불편했다. \n3. 90분 동안 1번 문제를 풀지 못했으면, 2번으로 넘어가야 했는데 계속 붙잡고 있었다.\n\n## 고칠점\n\n1. 문제를 확실히 이해하고 코딩을 하자. 문제를 이해하고, 어떻게 풀지 구상할 수만 있으면 코딩은 금방 한다.\n\n2. 시험 보기 전에 윈도우PC, 이클리스에 익숙해지도록 연습하자.\n3. 자신있는 탐색 문제부터 풀자.\n4. 멕시멈 90분 동안 풀지 못하면 다음 문제로 넘어가자.\n\n## 문제 설명\n\n1. 나무\n\n   각 지역(i, j)의 나무의 나이, 양분, 투입 양분이 있다.\n\n   봄, 여름, 가을, 겨울에 따라 조건이 있다.\n\n   봄에는 ~\n\n   여름에는 ~ : 이 부분이 확실히 이해가 가지 않았다.\n\n   가을에는 ~\n\n   겨울에는 ~ \n\n2. 개복치","source":"_posts/2018-10-23-2018 하반기 삼성 코테 리뷰.md","raw":"---\nlayout: post\ntitle:  \"2018 하반기 삼성 코테 리뷰\"\ndate:   2018-10-23\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n응시일 : 2018.10.21 15:00-18:00\n\n장소 : 영통 인재 개발원\n\n## 시험 상황\n\n계획은 1번 문제 90분, 2번 문제 90분 정도 잡았다. 1번 문제를 먼저 풀고 2번 문제로 넘어가려고 하였다.\n\n1번 문제가 시뮬레이션, 2번 문제가 탐색 문제였다.\n\n1먼 문제를 읽고, 90분 내에 충분히 풀 수 있다고 생각하였다. \n\n하지만 90분이 다 되어가는데도 풀리지 않았다. \n\n90분 즈음에 2번 문제를 읽었다. 충분히 풀 수 있을 것 같았지만, 조금만 더 하면 1번 문제를 풀 수 있을 것이라고 생각했다.\n\n1번 문제를 포기 못하고, 1번 문제를 계속 풀었고 시간이 점점 흐르고 2번 문제를 아예 포기 했다.\n\n## 문제점\n\n1. 문제 이해를 완벽히 하지 않았는데 코딩을 시작해서, 코딩하다가 계속 문제를 다시 읽었다.\n2. 윈도우 PC와 이클립스가 익숙치 않아 코딩은 하는데 굉장히 불편했다. \n3. 90분 동안 1번 문제를 풀지 못했으면, 2번으로 넘어가야 했는데 계속 붙잡고 있었다.\n\n## 고칠점\n\n1. 문제를 확실히 이해하고 코딩을 하자. 문제를 이해하고, 어떻게 풀지 구상할 수만 있으면 코딩은 금방 한다.\n\n2. 시험 보기 전에 윈도우PC, 이클리스에 익숙해지도록 연습하자.\n3. 자신있는 탐색 문제부터 풀자.\n4. 멕시멈 90분 동안 풀지 못하면 다음 문제로 넘어가자.\n\n## 문제 설명\n\n1. 나무\n\n   각 지역(i, j)의 나무의 나이, 양분, 투입 양분이 있다.\n\n   봄, 여름, 가을, 겨울에 따라 조건이 있다.\n\n   봄에는 ~\n\n   여름에는 ~ : 이 부분이 확실히 이해가 가지 않았다.\n\n   가을에는 ~\n\n   겨울에는 ~ \n\n2. 개복치","slug":"2018-10-23-2018 하반기 삼성 코테 리뷰","published":1,"updated":"2018-10-23T07:45:15.610Z","comments":1,"photos":[],"link":"","_id":"cjp6k65r900hw31x74lfcd2dv","content":"<p>응시일 : 2018.10.21 15:00-18:00</p>\n<p>장소 : 영통 인재 개발원</p>\n<h2 id=\"시험-상황\"><a href=\"#시험-상황\" class=\"headerlink\" title=\"시험 상황\"></a>시험 상황</h2><p>계획은 1번 문제 90분, 2번 문제 90분 정도 잡았다. 1번 문제를 먼저 풀고 2번 문제로 넘어가려고 하였다.</p>\n<p>1번 문제가 시뮬레이션, 2번 문제가 탐색 문제였다.</p>\n<p>1먼 문제를 읽고, 90분 내에 충분히 풀 수 있다고 생각하였다. </p>\n<p>하지만 90분이 다 되어가는데도 풀리지 않았다. </p>\n<p>90분 즈음에 2번 문제를 읽었다. 충분히 풀 수 있을 것 같았지만, 조금만 더 하면 1번 문제를 풀 수 있을 것이라고 생각했다.</p>\n<p>1번 문제를 포기 못하고, 1번 문제를 계속 풀었고 시간이 점점 흐르고 2번 문제를 아예 포기 했다.</p>\n<h2 id=\"문제점\"><a href=\"#문제점\" class=\"headerlink\" title=\"문제점\"></a>문제점</h2><ol>\n<li>문제 이해를 완벽히 하지 않았는데 코딩을 시작해서, 코딩하다가 계속 문제를 다시 읽었다.</li>\n<li>윈도우 PC와 이클립스가 익숙치 않아 코딩은 하는데 굉장히 불편했다. </li>\n<li>90분 동안 1번 문제를 풀지 못했으면, 2번으로 넘어가야 했는데 계속 붙잡고 있었다.</li>\n</ol>\n<h2 id=\"고칠점\"><a href=\"#고칠점\" class=\"headerlink\" title=\"고칠점\"></a>고칠점</h2><ol>\n<li><p>문제를 확실히 이해하고 코딩을 하자. 문제를 이해하고, 어떻게 풀지 구상할 수만 있으면 코딩은 금방 한다.</p>\n</li>\n<li><p>시험 보기 전에 윈도우PC, 이클리스에 익숙해지도록 연습하자.</p>\n</li>\n<li>자신있는 탐색 문제부터 풀자.</li>\n<li>멕시멈 90분 동안 풀지 못하면 다음 문제로 넘어가자.</li>\n</ol>\n<h2 id=\"문제-설명\"><a href=\"#문제-설명\" class=\"headerlink\" title=\"문제 설명\"></a>문제 설명</h2><ol>\n<li><p>나무</p>\n<p>각 지역(i, j)의 나무의 나이, 양분, 투입 양분이 있다.</p>\n<p>봄, 여름, 가을, 겨울에 따라 조건이 있다.</p>\n<p>봄에는 ~</p>\n<p>여름에는 ~ : 이 부분이 확실히 이해가 가지 않았다.</p>\n<p>가을에는 ~</p>\n<p>겨울에는 ~ </p>\n</li>\n<li><p>개복치</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>응시일 : 2018.10.21 15:00-18:00</p>\n<p>장소 : 영통 인재 개발원</p>\n<h2 id=\"시험-상황\"><a href=\"#시험-상황\" class=\"headerlink\" title=\"시험 상황\"></a>시험 상황</h2><p>계획은 1번 문제 90분, 2번 문제 90분 정도 잡았다. 1번 문제를 먼저 풀고 2번 문제로 넘어가려고 하였다.</p>\n<p>1번 문제가 시뮬레이션, 2번 문제가 탐색 문제였다.</p>\n<p>1먼 문제를 읽고, 90분 내에 충분히 풀 수 있다고 생각하였다. </p>\n<p>하지만 90분이 다 되어가는데도 풀리지 않았다. </p>\n<p>90분 즈음에 2번 문제를 읽었다. 충분히 풀 수 있을 것 같았지만, 조금만 더 하면 1번 문제를 풀 수 있을 것이라고 생각했다.</p>\n<p>1번 문제를 포기 못하고, 1번 문제를 계속 풀었고 시간이 점점 흐르고 2번 문제를 아예 포기 했다.</p>\n<h2 id=\"문제점\"><a href=\"#문제점\" class=\"headerlink\" title=\"문제점\"></a>문제점</h2><ol>\n<li>문제 이해를 완벽히 하지 않았는데 코딩을 시작해서, 코딩하다가 계속 문제를 다시 읽었다.</li>\n<li>윈도우 PC와 이클립스가 익숙치 않아 코딩은 하는데 굉장히 불편했다. </li>\n<li>90분 동안 1번 문제를 풀지 못했으면, 2번으로 넘어가야 했는데 계속 붙잡고 있었다.</li>\n</ol>\n<h2 id=\"고칠점\"><a href=\"#고칠점\" class=\"headerlink\" title=\"고칠점\"></a>고칠점</h2><ol>\n<li><p>문제를 확실히 이해하고 코딩을 하자. 문제를 이해하고, 어떻게 풀지 구상할 수만 있으면 코딩은 금방 한다.</p>\n</li>\n<li><p>시험 보기 전에 윈도우PC, 이클리스에 익숙해지도록 연습하자.</p>\n</li>\n<li>자신있는 탐색 문제부터 풀자.</li>\n<li>멕시멈 90분 동안 풀지 못하면 다음 문제로 넘어가자.</li>\n</ol>\n<h2 id=\"문제-설명\"><a href=\"#문제-설명\" class=\"headerlink\" title=\"문제 설명\"></a>문제 설명</h2><ol>\n<li><p>나무</p>\n<p>각 지역(i, j)의 나무의 나이, 양분, 투입 양분이 있다.</p>\n<p>봄, 여름, 가을, 겨울에 따라 조건이 있다.</p>\n<p>봄에는 ~</p>\n<p>여름에는 ~ : 이 부분이 확실히 이해가 가지 않았다.</p>\n<p>가을에는 ~</p>\n<p>겨울에는 ~ </p>\n</li>\n<li><p>개복치</p>\n</li>\n</ol>\n"},{"layout":"post","title":"미생물 격리","date":"2018-10-15T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV597vbqAH0DFAVl>\n\n시뮬레이션 문제. 쉬운 문제이다. 어떻게 더 깔끔하게 코드를 짤까?\n\n## 풀이\n\n1. 초기 입력시, 미생물 정보를 배열에 저장한다.\n2. m 시간 동안, 저장한 미생물을 이동시키고 다음 경우를 고려한다.\n   - 약품 칠해져 있는 곳으로 이동한 경우\n   - 이동을 했는데 겹치는 경우\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros05.png)\n\n","source":"_posts/2018-10-16-미생물 격리.md","raw":"---\nlayout: post\ntitle:  \"미생물 격리\"\ndate:   2018-10-16\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV597vbqAH0DFAVl>\n\n시뮬레이션 문제. 쉬운 문제이다. 어떻게 더 깔끔하게 코드를 짤까?\n\n## 풀이\n\n1. 초기 입력시, 미생물 정보를 배열에 저장한다.\n2. m 시간 동안, 저장한 미생물을 이동시키고 다음 경우를 고려한다.\n   - 약품 칠해져 있는 곳으로 이동한 경우\n   - 이동을 했는데 겹치는 경우\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros05.png)\n\n","slug":"2018-10-16-미생물 격리","published":1,"updated":"2018-10-16T00:44:36.170Z","comments":1,"photos":[],"link":"","_id":"cjp6k65re00hy31x7vxrxdysn","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV597vbqAH0DFAVl\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV597vbqAH0DFAVl</a></p>\n<p>시뮬레이션 문제. 쉬운 문제이다. 어떻게 더 깔끔하게 코드를 짤까?</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>초기 입력시, 미생물 정보를 배열에 저장한다.</li>\n<li>m 시간 동안, 저장한 미생물을 이동시키고 다음 경우를 고려한다.<ul>\n<li>약품 칠해져 있는 곳으로 이동한 경우</li>\n<li>이동을 했는데 겹치는 경우</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros05.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV597vbqAH0DFAVl\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV597vbqAH0DFAVl</a></p>\n<p>시뮬레이션 문제. 쉬운 문제이다. 어떻게 더 깔끔하게 코드를 짤까?</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li>초기 입력시, 미생물 정보를 배열에 저장한다.</li>\n<li>m 시간 동안, 저장한 미생물을 이동시키고 다음 경우를 고려한다.<ul>\n<li>약품 칠해져 있는 곳으로 이동한 경우</li>\n<li>이동을 했는데 겹치는 경우</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/micros05.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"개복치","date":"2018-10-23T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/16236>\n\n2018 하반기 대졸 신입 삼성 코딩 테스트 기출문제이다.\n\n시험장에서  문제를 읽고 쉬울 것이라고 예상만 하고, 1번 문제를 푸느라 풀지는 못했다.\n\n따로 풀어보니, 시간이 오래 걸렸지만 간단한 문제이다.\n\n코드를 너무 복잡하게 짜서, 더 간단하고 깔끔한 풀이를 찾아봐야겠다.\n\n## 풀이\n\nBFS + Simulation\n\n1. 먹을 수 있는 물고기 후보 찾기 : BFS\n2. 후보가 한 마리면 그 물고기 위치로 이동해서 먹기\n3. 후보가 두 마리 이상이면 다음 조건들을 차례대로. 두 가지 이상 나오면, 다음 조건 확인 : Simulation\n   1. 가장 가까운\n   2. 가장 i가 작은\n   3. 가장 j가 작은\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_16236/Main.java>","source":"_posts/2018-10-24-개복치.md","raw":"---\nlayout: post\ntitle:  \"개복치\"\ndate:   2018-10-24\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/16236>\n\n2018 하반기 대졸 신입 삼성 코딩 테스트 기출문제이다.\n\n시험장에서  문제를 읽고 쉬울 것이라고 예상만 하고, 1번 문제를 푸느라 풀지는 못했다.\n\n따로 풀어보니, 시간이 오래 걸렸지만 간단한 문제이다.\n\n코드를 너무 복잡하게 짜서, 더 간단하고 깔끔한 풀이를 찾아봐야겠다.\n\n## 풀이\n\nBFS + Simulation\n\n1. 먹을 수 있는 물고기 후보 찾기 : BFS\n2. 후보가 한 마리면 그 물고기 위치로 이동해서 먹기\n3. 후보가 두 마리 이상이면 다음 조건들을 차례대로. 두 가지 이상 나오면, 다음 조건 확인 : Simulation\n   1. 가장 가까운\n   2. 가장 i가 작은\n   3. 가장 j가 작은\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_16236/Main.java>","slug":"2018-10-24-개복치","published":1,"updated":"2018-10-24T11:01:27.059Z","comments":1,"photos":[],"link":"","_id":"cjp6k65s400i031x7sb1e7f6u","content":"<p><a href=\"https://www.acmicpc.net/problem/16236\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/16236</a></p>\n<p>2018 하반기 대졸 신입 삼성 코딩 테스트 기출문제이다.</p>\n<p>시험장에서  문제를 읽고 쉬울 것이라고 예상만 하고, 1번 문제를 푸느라 풀지는 못했다.</p>\n<p>따로 풀어보니, 시간이 오래 걸렸지만 간단한 문제이다.</p>\n<p>코드를 너무 복잡하게 짜서, 더 간단하고 깔끔한 풀이를 찾아봐야겠다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>BFS + Simulation</p>\n<ol>\n<li>먹을 수 있는 물고기 후보 찾기 : BFS</li>\n<li>후보가 한 마리면 그 물고기 위치로 이동해서 먹기</li>\n<li>후보가 두 마리 이상이면 다음 조건들을 차례대로. 두 가지 이상 나오면, 다음 조건 확인 : Simulation<ol>\n<li>가장 가까운</li>\n<li>가장 i가 작은</li>\n<li>가장 j가 작은</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_16236/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_16236/Main.java</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/16236\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/16236</a></p>\n<p>2018 하반기 대졸 신입 삼성 코딩 테스트 기출문제이다.</p>\n<p>시험장에서  문제를 읽고 쉬울 것이라고 예상만 하고, 1번 문제를 푸느라 풀지는 못했다.</p>\n<p>따로 풀어보니, 시간이 오래 걸렸지만 간단한 문제이다.</p>\n<p>코드를 너무 복잡하게 짜서, 더 간단하고 깔끔한 풀이를 찾아봐야겠다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>BFS + Simulation</p>\n<ol>\n<li>먹을 수 있는 물고기 후보 찾기 : BFS</li>\n<li>후보가 한 마리면 그 물고기 위치로 이동해서 먹기</li>\n<li>후보가 두 마리 이상이면 다음 조건들을 차례대로. 두 가지 이상 나오면, 다음 조건 확인 : Simulation<ol>\n<li>가장 가까운</li>\n<li>가장 i가 작은</li>\n<li>가장 j가 작은</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_16236/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_16236/Main.java</a></p>\n"},{"layout":"post","title":"무선 충전","date":"2018-10-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRDL1aeugDFAUo>\n\n오래 걸렸다. 다른 풀이 방법은 없을까?\n\n## 풀이\n\n1. 지도에 BC 정보들을 표시\n\n   ① bc index를 표시함\n\n   ② 중복되는 지점은 + 로 연결해서 표시 ( 지도의 type : String )\n\n2. A, B 움직이며 충전\n\n   ① 이동한 위치를 + 를 기준하여 자름 ( 1+3 : 1번 bc , 3번 bc 겹치는 지점 )\n\n   ② BC 선택권이 겹치지 않는 경우, A 선택권 중 가장 power 센것과 B 선택권 중 가장 power 센것 더함\n\n   ③ BC 선택권이 겹치는 경우, 모든 경우 비교 ( A : 1 2 3 , B : 2 3 => 3*2 번의 비교 )\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge04.png)\n\n\n\n","source":"_posts/2018-10-12-무선 충전.md","raw":"---\nlayout: post\ntitle:  \"무선 충전\"\ndate:   2018-10-12\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRDL1aeugDFAUo>\n\n오래 걸렸다. 다른 풀이 방법은 없을까?\n\n## 풀이\n\n1. 지도에 BC 정보들을 표시\n\n   ① bc index를 표시함\n\n   ② 중복되는 지점은 + 로 연결해서 표시 ( 지도의 type : String )\n\n2. A, B 움직이며 충전\n\n   ① 이동한 위치를 + 를 기준하여 자름 ( 1+3 : 1번 bc , 3번 bc 겹치는 지점 )\n\n   ② BC 선택권이 겹치지 않는 경우, A 선택권 중 가장 power 센것과 B 선택권 중 가장 power 센것 더함\n\n   ③ BC 선택권이 겹치는 경우, 모든 경우 비교 ( A : 1 2 3 , B : 2 3 => 3*2 번의 비교 )\n\n## 코드\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge04.png)\n\n\n\n","slug":"2018-10-12-무선 충전","published":1,"updated":"2018-10-12T00:41:39.207Z","comments":1,"photos":[],"link":"","_id":"cjp6k65s500i231x7il5emm0p","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRDL1aeugDFAUo\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRDL1aeugDFAUo</a></p>\n<p>오래 걸렸다. 다른 풀이 방법은 없을까?</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>지도에 BC 정보들을 표시</p>\n<p>① bc index를 표시함</p>\n<p>② 중복되는 지점은 + 로 연결해서 표시 ( 지도의 type : String )</p>\n</li>\n<li><p>A, B 움직이며 충전</p>\n<p>① 이동한 위치를 + 를 기준하여 자름 ( 1+3 : 1번 bc , 3번 bc 겹치는 지점 )</p>\n<p>② BC 선택권이 겹치지 않는 경우, A 선택권 중 가장 power 센것과 B 선택권 중 가장 power 센것 더함</p>\n<p>③ BC 선택권이 겹치는 경우, 모든 경우 비교 ( A : 1 2 3 , B : 2 3 =&gt; 3*2 번의 비교 )</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge04.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRDL1aeugDFAUo\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRDL1aeugDFAUo</a></p>\n<p>오래 걸렸다. 다른 풀이 방법은 없을까?</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>지도에 BC 정보들을 표시</p>\n<p>① bc index를 표시함</p>\n<p>② 중복되는 지점은 + 로 연결해서 표시 ( 지도의 type : String )</p>\n</li>\n<li><p>A, B 움직이며 충전</p>\n<p>① 이동한 위치를 + 를 기준하여 자름 ( 1+3 : 1번 bc , 3번 bc 겹치는 지점 )</p>\n<p>② BC 선택권이 겹치지 않는 경우, A 선택권 중 가장 power 센것과 B 선택권 중 가장 power 센것 더함</p>\n<p>③ BC 선택권이 겹치는 경우, 모든 경우 비교 ( A : 1 2 3 , B : 2 3 =&gt; 3*2 번의 비교 )</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bcharge04.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Java Sort","date":"2018-10-23T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaci.png","_content":"\n<https://github.com/KoJunHee/algorithm/blob/master/src/java_sort/Main.java>\n\n1. array 정렬 : Arrays.sort() \n\n2. list 정렬 : Collections.sort()\n\n## array\n\nArrays.sort(배열)을 통해 string type 배열과 integer type 배열을 오름차순 정렬하는 코드이다. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort01.png)\n\n## list\n\nCollections.sort(리스트)를 통해 string type arraylist를 오름차순 정렬하는 코드이다. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort01.png)\n\n## object list\n\n이름과 나이를 가지는 사람들 list가 있다고 하자. \n\n단순히, 위의 코드처럼 Collections.sort(리스트) 를 하면 될까? 안된다. \n\n사람이 가지고 있는 필드는 이름과 나이인데 어떤 기준으로 정렬할 것인지 정해주지 않았기 때문이다. \n\n따라서 기준을 정해줘야 정렬이 가능하다. 정렬 기준을 정하는 방법은 두 가지가 있다.\n\n첫 번째는, 사람 클래스에 Compare implements를 하고 compareTo method를 override하는 방법이 있다.\n\n두 번째는, Comparator을 구현하는 것이다.\n\n## Comparable\n\nPerson class에 Compare implements를 하고 compareTo method를 이름 기준으로 오름차순 정렬하도록 override 하였다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort04.png)\n\n## Comparator\n\nPerson class에 손을 대지 않고, Comparator을 구현하여 sort method에 인자로 넘겨준다. \n\ncompare method에서 나이를 기준으로 오름차순 정렬하였다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort06.png)\n\n\n\n","source":"_posts/2018-10-25-Java Sort.md","raw":"---\nlayout: post\ntitle:  \"Java Sort\"\ndate:   2018-10-24\ncategories: Java\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaci.png\n---\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/java_sort/Main.java>\n\n1. array 정렬 : Arrays.sort() \n\n2. list 정렬 : Collections.sort()\n\n## array\n\nArrays.sort(배열)을 통해 string type 배열과 integer type 배열을 오름차순 정렬하는 코드이다. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort01.png)\n\n## list\n\nCollections.sort(리스트)를 통해 string type arraylist를 오름차순 정렬하는 코드이다. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort01.png)\n\n## object list\n\n이름과 나이를 가지는 사람들 list가 있다고 하자. \n\n단순히, 위의 코드처럼 Collections.sort(리스트) 를 하면 될까? 안된다. \n\n사람이 가지고 있는 필드는 이름과 나이인데 어떤 기준으로 정렬할 것인지 정해주지 않았기 때문이다. \n\n따라서 기준을 정해줘야 정렬이 가능하다. 정렬 기준을 정하는 방법은 두 가지가 있다.\n\n첫 번째는, 사람 클래스에 Compare implements를 하고 compareTo method를 override하는 방법이 있다.\n\n두 번째는, Comparator을 구현하는 것이다.\n\n## Comparable\n\nPerson class에 Compare implements를 하고 compareTo method를 이름 기준으로 오름차순 정렬하도록 override 하였다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort04.png)\n\n## Comparator\n\nPerson class에 손을 대지 않고, Comparator을 구현하여 sort method에 인자로 넘겨준다. \n\ncompare method에서 나이를 기준으로 오름차순 정렬하였다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort06.png)\n\n\n\n","slug":"2018-10-25-Java Sort","published":1,"updated":"2018-10-25T07:24:54.450Z","comments":1,"photos":[],"link":"","_id":"cjp6k65s600i431x78usps8hx","content":"<p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/java_sort/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/java_sort/Main.java</a></p>\n<ol>\n<li><p>array 정렬 : Arrays.sort() </p>\n</li>\n<li><p>list 정렬 : Collections.sort()</p>\n</li>\n</ol>\n<h2 id=\"array\"><a href=\"#array\" class=\"headerlink\" title=\"array\"></a>array</h2><p>Arrays.sort(배열)을 통해 string type 배열과 integer type 배열을 오름차순 정렬하는 코드이다. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort01.png\" alt=\"img\"></p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><p>Collections.sort(리스트)를 통해 string type arraylist를 오름차순 정렬하는 코드이다. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort01.png\" alt=\"img\"></p>\n<h2 id=\"object-list\"><a href=\"#object-list\" class=\"headerlink\" title=\"object list\"></a>object list</h2><p>이름과 나이를 가지는 사람들 list가 있다고 하자. </p>\n<p>단순히, 위의 코드처럼 Collections.sort(리스트) 를 하면 될까? 안된다. </p>\n<p>사람이 가지고 있는 필드는 이름과 나이인데 어떤 기준으로 정렬할 것인지 정해주지 않았기 때문이다. </p>\n<p>따라서 기준을 정해줘야 정렬이 가능하다. 정렬 기준을 정하는 방법은 두 가지가 있다.</p>\n<p>첫 번째는, 사람 클래스에 Compare implements를 하고 compareTo method를 override하는 방법이 있다.</p>\n<p>두 번째는, Comparator을 구현하는 것이다.</p>\n<h2 id=\"Comparable\"><a href=\"#Comparable\" class=\"headerlink\" title=\"Comparable\"></a>Comparable</h2><p>Person class에 Compare implements를 하고 compareTo method를 이름 기준으로 오름차순 정렬하도록 override 하였다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort04.png\" alt=\"img\"></p>\n<h2 id=\"Comparator\"><a href=\"#Comparator\" class=\"headerlink\" title=\"Comparator\"></a>Comparator</h2><p>Person class에 손을 대지 않고, Comparator을 구현하여 sort method에 인자로 넘겨준다. </p>\n<p>compare method에서 나이를 기준으로 오름차순 정렬하였다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort06.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/java_sort/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/java_sort/Main.java</a></p>\n<ol>\n<li><p>array 정렬 : Arrays.sort() </p>\n</li>\n<li><p>list 정렬 : Collections.sort()</p>\n</li>\n</ol>\n<h2 id=\"array\"><a href=\"#array\" class=\"headerlink\" title=\"array\"></a>array</h2><p>Arrays.sort(배열)을 통해 string type 배열과 integer type 배열을 오름차순 정렬하는 코드이다. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort01.png\" alt=\"img\"></p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><p>Collections.sort(리스트)를 통해 string type arraylist를 오름차순 정렬하는 코드이다. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort01.png\" alt=\"img\"></p>\n<h2 id=\"object-list\"><a href=\"#object-list\" class=\"headerlink\" title=\"object list\"></a>object list</h2><p>이름과 나이를 가지는 사람들 list가 있다고 하자. </p>\n<p>단순히, 위의 코드처럼 Collections.sort(리스트) 를 하면 될까? 안된다. </p>\n<p>사람이 가지고 있는 필드는 이름과 나이인데 어떤 기준으로 정렬할 것인지 정해주지 않았기 때문이다. </p>\n<p>따라서 기준을 정해줘야 정렬이 가능하다. 정렬 기준을 정하는 방법은 두 가지가 있다.</p>\n<p>첫 번째는, 사람 클래스에 Compare implements를 하고 compareTo method를 override하는 방법이 있다.</p>\n<p>두 번째는, Comparator을 구현하는 것이다.</p>\n<h2 id=\"Comparable\"><a href=\"#Comparable\" class=\"headerlink\" title=\"Comparable\"></a>Comparable</h2><p>Person class에 Compare implements를 하고 compareTo method를 이름 기준으로 오름차순 정렬하도록 override 하였다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort04.png\" alt=\"img\"></p>\n<h2 id=\"Comparator\"><a href=\"#Comparator\" class=\"headerlink\" title=\"Comparator\"></a>Comparator</h2><p>Person class에 손을 대지 않고, Comparator을 구현하여 sort method에 인자로 넘겨준다. </p>\n<p>compare method에서 나이를 기준으로 오름차순 정렬하였다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaSort06.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Type Casting","date":"2018-10-23T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaci.png","_content":"\n## Primitive Data Types\n\nJava에는 8 개의 기본 데이터 타입이 있다.\n\n정수 타입 : byte / short / int / long \n\n부동 소수점 타입 : float / double\n\n부울 데이터 타입 : boolean\n\n문자 데이타 타입 : char\n\n## Type Casting\n\n한 type의 값을 다른 type의 변수에 할당하는 것이다. 두 가지로 나뉜다.\n\n화살표 방향으로 casting 하는 것이 Widening Casting, 반대가 Narrow Casting 이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting04.png)\n\n1. Widening Casting\n\n   target type이 source type보다 클 때 일어난다.\n\n   명시적으로 casting 하지 않아도 implicit 하게 casting 된다.\n\n2. Narrowing Casting\n\n   더 큰 type의 값을 작은 type의 변수에 할당 할 때, cast 연산자를 명시해야 한다.\n\n## Widening Casting \n\nbyte보다 더 큰 type 인 int 형 변수 b와 c에 byte형 값을 저장하고 있다. \n\ncasting이 implicit 하게 되기 때문에, cast 연산자를 명시하는 것과 명시하지 않는 것의 결과가 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting01.png)\n\n## Narrowing Casting\n\n다음과 같이 double 형 변수 a 에 3.14를 저장하고, 이를 int 형 변수 b에 casting 하지 않고 저장하려면 에러가 발생한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting02.png)\n\n따라서 다음과 같이 int 형으로 casting 한다고 명시를 해야한다. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting03.png)\n\n","source":"_posts/2018-10-25-Type Casting.md","raw":"---\nlayout: post\ntitle:  \"Type Casting\"\ndate:   2018-10-24\ncategories: Java\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javaci.png\n---\n\n## Primitive Data Types\n\nJava에는 8 개의 기본 데이터 타입이 있다.\n\n정수 타입 : byte / short / int / long \n\n부동 소수점 타입 : float / double\n\n부울 데이터 타입 : boolean\n\n문자 데이타 타입 : char\n\n## Type Casting\n\n한 type의 값을 다른 type의 변수에 할당하는 것이다. 두 가지로 나뉜다.\n\n화살표 방향으로 casting 하는 것이 Widening Casting, 반대가 Narrow Casting 이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting04.png)\n\n1. Widening Casting\n\n   target type이 source type보다 클 때 일어난다.\n\n   명시적으로 casting 하지 않아도 implicit 하게 casting 된다.\n\n2. Narrowing Casting\n\n   더 큰 type의 값을 작은 type의 변수에 할당 할 때, cast 연산자를 명시해야 한다.\n\n## Widening Casting \n\nbyte보다 더 큰 type 인 int 형 변수 b와 c에 byte형 값을 저장하고 있다. \n\ncasting이 implicit 하게 되기 때문에, cast 연산자를 명시하는 것과 명시하지 않는 것의 결과가 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting01.png)\n\n## Narrowing Casting\n\n다음과 같이 double 형 변수 a 에 3.14를 저장하고, 이를 int 형 변수 b에 casting 하지 않고 저장하려면 에러가 발생한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting02.png)\n\n따라서 다음과 같이 int 형으로 casting 한다고 명시를 해야한다. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting03.png)\n\n","slug":"2018-10-25-Type Casting","published":1,"updated":"2018-10-25T08:59:28.653Z","comments":1,"photos":[],"link":"","_id":"cjp6k65s900i631x7ncfp0vb3","content":"<h2 id=\"Primitive-Data-Types\"><a href=\"#Primitive-Data-Types\" class=\"headerlink\" title=\"Primitive Data Types\"></a>Primitive Data Types</h2><p>Java에는 8 개의 기본 데이터 타입이 있다.</p>\n<p>정수 타입 : byte / short / int / long </p>\n<p>부동 소수점 타입 : float / double</p>\n<p>부울 데이터 타입 : boolean</p>\n<p>문자 데이타 타입 : char</p>\n<h2 id=\"Type-Casting\"><a href=\"#Type-Casting\" class=\"headerlink\" title=\"Type Casting\"></a>Type Casting</h2><p>한 type의 값을 다른 type의 변수에 할당하는 것이다. 두 가지로 나뉜다.</p>\n<p>화살표 방향으로 casting 하는 것이 Widening Casting, 반대가 Narrow Casting 이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting04.png\" alt=\"img\"></p>\n<ol>\n<li><p>Widening Casting</p>\n<p>target type이 source type보다 클 때 일어난다.</p>\n<p>명시적으로 casting 하지 않아도 implicit 하게 casting 된다.</p>\n</li>\n<li><p>Narrowing Casting</p>\n<p>더 큰 type의 값을 작은 type의 변수에 할당 할 때, cast 연산자를 명시해야 한다.</p>\n</li>\n</ol>\n<h2 id=\"Widening-Casting\"><a href=\"#Widening-Casting\" class=\"headerlink\" title=\"Widening Casting\"></a>Widening Casting</h2><p>byte보다 더 큰 type 인 int 형 변수 b와 c에 byte형 값을 저장하고 있다. </p>\n<p>casting이 implicit 하게 되기 때문에, cast 연산자를 명시하는 것과 명시하지 않는 것의 결과가 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting01.png\" alt=\"img\"></p>\n<h2 id=\"Narrowing-Casting\"><a href=\"#Narrowing-Casting\" class=\"headerlink\" title=\"Narrowing Casting\"></a>Narrowing Casting</h2><p>다음과 같이 double 형 변수 a 에 3.14를 저장하고, 이를 int 형 변수 b에 casting 하지 않고 저장하려면 에러가 발생한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting02.png\" alt=\"img\"></p>\n<p>따라서 다음과 같이 int 형으로 casting 한다고 명시를 해야한다. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting03.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Primitive-Data-Types\"><a href=\"#Primitive-Data-Types\" class=\"headerlink\" title=\"Primitive Data Types\"></a>Primitive Data Types</h2><p>Java에는 8 개의 기본 데이터 타입이 있다.</p>\n<p>정수 타입 : byte / short / int / long </p>\n<p>부동 소수점 타입 : float / double</p>\n<p>부울 데이터 타입 : boolean</p>\n<p>문자 데이타 타입 : char</p>\n<h2 id=\"Type-Casting\"><a href=\"#Type-Casting\" class=\"headerlink\" title=\"Type Casting\"></a>Type Casting</h2><p>한 type의 값을 다른 type의 변수에 할당하는 것이다. 두 가지로 나뉜다.</p>\n<p>화살표 방향으로 casting 하는 것이 Widening Casting, 반대가 Narrow Casting 이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting04.png\" alt=\"img\"></p>\n<ol>\n<li><p>Widening Casting</p>\n<p>target type이 source type보다 클 때 일어난다.</p>\n<p>명시적으로 casting 하지 않아도 implicit 하게 casting 된다.</p>\n</li>\n<li><p>Narrowing Casting</p>\n<p>더 큰 type의 값을 작은 type의 변수에 할당 할 때, cast 연산자를 명시해야 한다.</p>\n</li>\n</ol>\n<h2 id=\"Widening-Casting\"><a href=\"#Widening-Casting\" class=\"headerlink\" title=\"Widening Casting\"></a>Widening Casting</h2><p>byte보다 더 큰 type 인 int 형 변수 b와 c에 byte형 값을 저장하고 있다. </p>\n<p>casting이 implicit 하게 되기 때문에, cast 연산자를 명시하는 것과 명시하지 않는 것의 결과가 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting01.png\" alt=\"img\"></p>\n<h2 id=\"Narrowing-Casting\"><a href=\"#Narrowing-Casting\" class=\"headerlink\" title=\"Narrowing Casting\"></a>Narrowing Casting</h2><p>다음과 같이 double 형 변수 a 에 3.14를 저장하고, 이를 int 형 변수 b에 casting 하지 않고 저장하려면 에러가 발생한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting02.png\" alt=\"img\"></p>\n<p>따라서 다음과 같이 int 형으로 casting 한다고 명시를 해야한다. </p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/javatypecasting03.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"인구이동","date":"2018-10-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/16234>\n\n2018년 하반기 대졸 신입 삼성 코딩 테스트 오전 타임 2번 탐색 문제이다. \n\n매우 쉬웠다. 55분 소요되었다.\n\n## 풀이\n\n1. 국경선 열기\n\n   국가 각 지점에서 DFS을 실행하여 각 국가에 지역 번호를 매긴다.\n\n   각 지점에서 동서남북으로 연결되어 있고, 인구 차가 l 이상 r 이하이면 같은 지역 번호가 매겨진다. \n\n   DFS를 실행하고 리턴되었을 때, 지역 번호가 2개 이상 매겨졌으면 연합이 생성된 것이다.\n\n   리스트에 지역번호와 함께 연합의 (인구합 / 연합을 이루는 국가수) 를 저장한다.\n\n2. 인구 이동\n\n   i,j 의 지역번호가 리스트에 저장되어 있는 지역 번호라면 해당 index의 리스트의 인구를 map에 저장한다.\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_16234/Main.java>","source":"_posts/2018-10-29-인구이동.md","raw":"---\nlayout: post\ntitle:  \"인구이동\"\ndate:   2018-10-29\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/16234>\n\n2018년 하반기 대졸 신입 삼성 코딩 테스트 오전 타임 2번 탐색 문제이다. \n\n매우 쉬웠다. 55분 소요되었다.\n\n## 풀이\n\n1. 국경선 열기\n\n   국가 각 지점에서 DFS을 실행하여 각 국가에 지역 번호를 매긴다.\n\n   각 지점에서 동서남북으로 연결되어 있고, 인구 차가 l 이상 r 이하이면 같은 지역 번호가 매겨진다. \n\n   DFS를 실행하고 리턴되었을 때, 지역 번호가 2개 이상 매겨졌으면 연합이 생성된 것이다.\n\n   리스트에 지역번호와 함께 연합의 (인구합 / 연합을 이루는 국가수) 를 저장한다.\n\n2. 인구 이동\n\n   i,j 의 지역번호가 리스트에 저장되어 있는 지역 번호라면 해당 index의 리스트의 인구를 map에 저장한다.\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_16234/Main.java>","slug":"2018-10-29-인구이동","published":1,"updated":"2018-10-29T06:48:27.289Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sa00i931x7ydasfsam","content":"<p><a href=\"https://www.acmicpc.net/problem/16234\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/16234</a></p>\n<p>2018년 하반기 대졸 신입 삼성 코딩 테스트 오전 타임 2번 탐색 문제이다. </p>\n<p>매우 쉬웠다. 55분 소요되었다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>국경선 열기</p>\n<p>국가 각 지점에서 DFS을 실행하여 각 국가에 지역 번호를 매긴다.</p>\n<p>각 지점에서 동서남북으로 연결되어 있고, 인구 차가 l 이상 r 이하이면 같은 지역 번호가 매겨진다. </p>\n<p>DFS를 실행하고 리턴되었을 때, 지역 번호가 2개 이상 매겨졌으면 연합이 생성된 것이다.</p>\n<p>리스트에 지역번호와 함께 연합의 (인구합 / 연합을 이루는 국가수) 를 저장한다.</p>\n</li>\n<li><p>인구 이동</p>\n<p>i,j 의 지역번호가 리스트에 저장되어 있는 지역 번호라면 해당 index의 리스트의 인구를 map에 저장한다.</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_16234/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_16234/Main.java</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/16234\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/16234</a></p>\n<p>2018년 하반기 대졸 신입 삼성 코딩 테스트 오전 타임 2번 탐색 문제이다. </p>\n<p>매우 쉬웠다. 55분 소요되었다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><ol>\n<li><p>국경선 열기</p>\n<p>국가 각 지점에서 DFS을 실행하여 각 국가에 지역 번호를 매긴다.</p>\n<p>각 지점에서 동서남북으로 연결되어 있고, 인구 차가 l 이상 r 이하이면 같은 지역 번호가 매겨진다. </p>\n<p>DFS를 실행하고 리턴되었을 때, 지역 번호가 2개 이상 매겨졌으면 연합이 생성된 것이다.</p>\n<p>리스트에 지역번호와 함께 연합의 (인구합 / 연합을 이루는 국가수) 를 저장한다.</p>\n</li>\n<li><p>인구 이동</p>\n<p>i,j 의 지역번호가 리스트에 저장되어 있는 지역 번호라면 해당 index의 리스트의 인구를 map에 저장한다.</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_16234/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_16234/Main.java</a></p>\n"},{"layout":"post","title":"가장 많은 글자","date":"2018-10-25T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1371>\n\n## 풀이\n\n문장 단위로 읽어서 알파벳 개수 count.\n\n여러 문장을 읽어오는 방법 : hasNextLine()으로 다음 문장이 있는지 체크\n\n## hasNextLine()\n\nscanner의 input에 입력받을 line이 있다면 true를 반환한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/MostManyWords.png)\n\n<https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html>\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_1371/Main.java>","source":"_posts/2018-10-26-가장 많은 글자.md","raw":"---\nlayout: post\ntitle:  \"가장 많은 글자\"\ndate:   2018-10-26\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1371>\n\n## 풀이\n\n문장 단위로 읽어서 알파벳 개수 count.\n\n여러 문장을 읽어오는 방법 : hasNextLine()으로 다음 문장이 있는지 체크\n\n## hasNextLine()\n\nscanner의 input에 입력받을 line이 있다면 true를 반환한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/MostManyWords.png)\n\n<https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html>\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_1371/Main.java>","slug":"2018-10-26-가장 많은 글자","published":1,"updated":"2018-10-26T03:23:31.527Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sc00ib31x7ewkx60ln","content":"<p><a href=\"https://www.acmicpc.net/problem/1371\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1371</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>문장 단위로 읽어서 알파벳 개수 count.</p>\n<p>여러 문장을 읽어오는 방법 : hasNextLine()으로 다음 문장이 있는지 체크</p>\n<h2 id=\"hasNextLine\"><a href=\"#hasNextLine\" class=\"headerlink\" title=\"hasNextLine()\"></a>hasNextLine()</h2><p>scanner의 input에 입력받을 line이 있다면 true를 반환한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/MostManyWords.png\" alt=\"img\"></p>\n<p><a href=\"https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html</a></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_1371/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_1371/Main.java</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1371\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1371</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>문장 단위로 읽어서 알파벳 개수 count.</p>\n<p>여러 문장을 읽어오는 방법 : hasNextLine()으로 다음 문장이 있는지 체크</p>\n<h2 id=\"hasNextLine\"><a href=\"#hasNextLine\" class=\"headerlink\" title=\"hasNextLine()\"></a>hasNextLine()</h2><p>scanner의 input에 입력받을 line이 있다면 true를 반환한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/MostManyWords.png\" alt=\"img\"></p>\n<p><a href=\"https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html</a></p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_1371/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_1371/Main.java</a></p>\n"},{"layout":"post","title":"방번호","date":"2018-10-24T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/1475>\n\n## 풀이\n\n처음에 숫자 세트를 하나 갖고 있다고 시작한다. 숫자 부족할 때마다 숫자 세트를 늘려나간다.\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_1475/Main.java>","source":"_posts/2018-10-25-방번호.md","raw":"---\nlayout: post\ntitle:  \"방번호\"\ndate:   2018-10-25\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/1475>\n\n## 풀이\n\n처음에 숫자 세트를 하나 갖고 있다고 시작한다. 숫자 부족할 때마다 숫자 세트를 늘려나간다.\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_1475/Main.java>","slug":"2018-10-25-방번호","published":1,"updated":"2018-10-26T01:42:23.693Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sd00id31x7q22vlffq","content":"<p><a href=\"https://www.acmicpc.net/problem/1475\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1475</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>처음에 숫자 세트를 하나 갖고 있다고 시작한다. 숫자 부족할 때마다 숫자 세트를 늘려나간다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_1475/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_1475/Main.java</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/1475\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/1475</a></p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p>처음에 숫자 세트를 하나 갖고 있다고 시작한다. 숫자 부족할 때마다 숫자 세트를 늘려나간다.</p>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_1475/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_1475/Main.java</a></p>\n"},{"layout":"post","title":"이진탐색트리","date":"2018-10-31T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## 이진트리\n\n노드가 왼쪽 자식과 오른쪽 자식을 갖는 트리를 이진트리(Binary Tree)라고 한다. \n\n각 노드의 자식은 2명 이하만 유지한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst01.png)\n\n## 완전이진트리\n\n루트부터 노드가 채워져 있으면서 같은 레벨에서는 왼쪽에서 오른쪽으로 노드가 채워져 있는 이진트리이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst02.png)\n\n## 이진탐색트리\n\n다음 세 조건을 만족하는 이진트리\n\n1. 어떤 노드 N을 기준으로 왼쪽 서브 트리 노드의 모든 키 값은 노드 N의 키 값 보다 작다.\n2. 오른쪽 서브 트리 노드의 키 값은 노드 N의 키 값 보다 크다.\n3. 같은 키 값을 갖는 노드는 없다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst03.png)\n\n## 노드 삽입\n\n1. 삽입할 알맞은 위치를 찾는다. \n2. 삽입한다. (삽입 후 이진검색트리의 조건을 만족해야한다)\n\n위의 이진검색트리에서 21을 삽입하는 과정은 다음과 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst04.png)\n\n## 노드 삭제\n\n삭제는 다음 세 가지 경우로 나뉩니다.\n\n1. 자신 노드가 없는 노드를 삭제하는 경우\n   - 부모 노드의 왼쪽 자식이면 부모의 왼쪽 포인터를 null로\n   - 부모 노드의 오른쪽 자식이면 부모의 오른쪽 포인터를 null로\n2. 자식 노드가 1 개인 노드를 삭제하는 경우\n   - 삭제할 노드가 부모 노드의 왼쪽 자식이면, 부모의 왼쪽 포인터가 삭제할 노드의 자식을 가리키도록\n   - 삭제할 노드가 부모 노드의 오른쪽 자식이면, 부모의 오른쪽 포인터가 삭제할 노드의 자식을 가리키도록\n3. 자식 노드가 2 개인 노드를 삭제하는 경우\n   - 삭제할 노드의 왼쪽 서브 트리에서 가장 키 값이 큰 노드를 검색해서, 삭제 위치로 옮기고, 옮긴 노드를 삭제 \n   - 삭제할 노드의 오른쪽 서브 트리에서 가장 키 값이 작은 노드를 검색해서, 삭제 위치로 옮기고, 옮긴 노드를 삭제\n\n## 자신 노드가 없는 노드를 삭제\n\n위의 이진검색트리에서 26을 삭제하는 과정은 다음과 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst05.png)\n\n## 자식 노드가 1 개인 노드를 삭제\n\n위의 이진검색트리에서 17을 삭제하는 과정은 다음과 같다. \n\n15의 오른쪽 포인터가 19를 가리키도록 한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst06.png)\n\n## 자식 노드가 2 개인 노드를 삭제\n\n위의 이진검색트리에서 15을 삭제하는 과정은 다음과 같다.\n\n1. 15의 왼쪽 서브트리에서 가장 큰 12를 옮김\n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst07.png)\n\n2. 15의 오른쪽 서브트리에서 가장 작은 17를 옮김\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst08.png)","source":"_posts/2018-11-01-이진탐색트리.md","raw":"---\nlayout: post\ntitle:  \"이진탐색트리\"\ndate:   2018-11-01\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## 이진트리\n\n노드가 왼쪽 자식과 오른쪽 자식을 갖는 트리를 이진트리(Binary Tree)라고 한다. \n\n각 노드의 자식은 2명 이하만 유지한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst01.png)\n\n## 완전이진트리\n\n루트부터 노드가 채워져 있으면서 같은 레벨에서는 왼쪽에서 오른쪽으로 노드가 채워져 있는 이진트리이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst02.png)\n\n## 이진탐색트리\n\n다음 세 조건을 만족하는 이진트리\n\n1. 어떤 노드 N을 기준으로 왼쪽 서브 트리 노드의 모든 키 값은 노드 N의 키 값 보다 작다.\n2. 오른쪽 서브 트리 노드의 키 값은 노드 N의 키 값 보다 크다.\n3. 같은 키 값을 갖는 노드는 없다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst03.png)\n\n## 노드 삽입\n\n1. 삽입할 알맞은 위치를 찾는다. \n2. 삽입한다. (삽입 후 이진검색트리의 조건을 만족해야한다)\n\n위의 이진검색트리에서 21을 삽입하는 과정은 다음과 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst04.png)\n\n## 노드 삭제\n\n삭제는 다음 세 가지 경우로 나뉩니다.\n\n1. 자신 노드가 없는 노드를 삭제하는 경우\n   - 부모 노드의 왼쪽 자식이면 부모의 왼쪽 포인터를 null로\n   - 부모 노드의 오른쪽 자식이면 부모의 오른쪽 포인터를 null로\n2. 자식 노드가 1 개인 노드를 삭제하는 경우\n   - 삭제할 노드가 부모 노드의 왼쪽 자식이면, 부모의 왼쪽 포인터가 삭제할 노드의 자식을 가리키도록\n   - 삭제할 노드가 부모 노드의 오른쪽 자식이면, 부모의 오른쪽 포인터가 삭제할 노드의 자식을 가리키도록\n3. 자식 노드가 2 개인 노드를 삭제하는 경우\n   - 삭제할 노드의 왼쪽 서브 트리에서 가장 키 값이 큰 노드를 검색해서, 삭제 위치로 옮기고, 옮긴 노드를 삭제 \n   - 삭제할 노드의 오른쪽 서브 트리에서 가장 키 값이 작은 노드를 검색해서, 삭제 위치로 옮기고, 옮긴 노드를 삭제\n\n## 자신 노드가 없는 노드를 삭제\n\n위의 이진검색트리에서 26을 삭제하는 과정은 다음과 같다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst05.png)\n\n## 자식 노드가 1 개인 노드를 삭제\n\n위의 이진검색트리에서 17을 삭제하는 과정은 다음과 같다. \n\n15의 오른쪽 포인터가 19를 가리키도록 한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst06.png)\n\n## 자식 노드가 2 개인 노드를 삭제\n\n위의 이진검색트리에서 15을 삭제하는 과정은 다음과 같다.\n\n1. 15의 왼쪽 서브트리에서 가장 큰 12를 옮김\n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst07.png)\n\n2. 15의 오른쪽 서브트리에서 가장 작은 17를 옮김\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst08.png)","slug":"2018-11-01-이진탐색트리","published":1,"updated":"2018-11-15T11:16:16.320Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sg00ig31x7jq57d44u","content":"<h2 id=\"이진트리\"><a href=\"#이진트리\" class=\"headerlink\" title=\"이진트리\"></a>이진트리</h2><p>노드가 왼쪽 자식과 오른쪽 자식을 갖는 트리를 이진트리(Binary Tree)라고 한다. </p>\n<p>각 노드의 자식은 2명 이하만 유지한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst01.png\" alt=\"img\"></p>\n<h2 id=\"완전이진트리\"><a href=\"#완전이진트리\" class=\"headerlink\" title=\"완전이진트리\"></a>완전이진트리</h2><p>루트부터 노드가 채워져 있으면서 같은 레벨에서는 왼쪽에서 오른쪽으로 노드가 채워져 있는 이진트리이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst02.png\" alt=\"img\"></p>\n<h2 id=\"이진탐색트리\"><a href=\"#이진탐색트리\" class=\"headerlink\" title=\"이진탐색트리\"></a>이진탐색트리</h2><p>다음 세 조건을 만족하는 이진트리</p>\n<ol>\n<li>어떤 노드 N을 기준으로 왼쪽 서브 트리 노드의 모든 키 값은 노드 N의 키 값 보다 작다.</li>\n<li>오른쪽 서브 트리 노드의 키 값은 노드 N의 키 값 보다 크다.</li>\n<li>같은 키 값을 갖는 노드는 없다.</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst03.png\" alt=\"img\"></p>\n<h2 id=\"노드-삽입\"><a href=\"#노드-삽입\" class=\"headerlink\" title=\"노드 삽입\"></a>노드 삽입</h2><ol>\n<li>삽입할 알맞은 위치를 찾는다. </li>\n<li>삽입한다. (삽입 후 이진검색트리의 조건을 만족해야한다)</li>\n</ol>\n<p>위의 이진검색트리에서 21을 삽입하는 과정은 다음과 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst04.png\" alt=\"img\"></p>\n<h2 id=\"노드-삭제\"><a href=\"#노드-삭제\" class=\"headerlink\" title=\"노드 삭제\"></a>노드 삭제</h2><p>삭제는 다음 세 가지 경우로 나뉩니다.</p>\n<ol>\n<li>자신 노드가 없는 노드를 삭제하는 경우<ul>\n<li>부모 노드의 왼쪽 자식이면 부모의 왼쪽 포인터를 null로</li>\n<li>부모 노드의 오른쪽 자식이면 부모의 오른쪽 포인터를 null로</li>\n</ul>\n</li>\n<li>자식 노드가 1 개인 노드를 삭제하는 경우<ul>\n<li>삭제할 노드가 부모 노드의 왼쪽 자식이면, 부모의 왼쪽 포인터가 삭제할 노드의 자식을 가리키도록</li>\n<li>삭제할 노드가 부모 노드의 오른쪽 자식이면, 부모의 오른쪽 포인터가 삭제할 노드의 자식을 가리키도록</li>\n</ul>\n</li>\n<li>자식 노드가 2 개인 노드를 삭제하는 경우<ul>\n<li>삭제할 노드의 왼쪽 서브 트리에서 가장 키 값이 큰 노드를 검색해서, 삭제 위치로 옮기고, 옮긴 노드를 삭제 </li>\n<li>삭제할 노드의 오른쪽 서브 트리에서 가장 키 값이 작은 노드를 검색해서, 삭제 위치로 옮기고, 옮긴 노드를 삭제</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"자신-노드가-없는-노드를-삭제\"><a href=\"#자신-노드가-없는-노드를-삭제\" class=\"headerlink\" title=\"자신 노드가 없는 노드를 삭제\"></a>자신 노드가 없는 노드를 삭제</h2><p>위의 이진검색트리에서 26을 삭제하는 과정은 다음과 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst05.png\" alt=\"img\"></p>\n<h2 id=\"자식-노드가-1-개인-노드를-삭제\"><a href=\"#자식-노드가-1-개인-노드를-삭제\" class=\"headerlink\" title=\"자식 노드가 1 개인 노드를 삭제\"></a>자식 노드가 1 개인 노드를 삭제</h2><p>위의 이진검색트리에서 17을 삭제하는 과정은 다음과 같다. </p>\n<p>15의 오른쪽 포인터가 19를 가리키도록 한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst06.png\" alt=\"img\"></p>\n<h2 id=\"자식-노드가-2-개인-노드를-삭제\"><a href=\"#자식-노드가-2-개인-노드를-삭제\" class=\"headerlink\" title=\"자식 노드가 2 개인 노드를 삭제\"></a>자식 노드가 2 개인 노드를 삭제</h2><p>위의 이진검색트리에서 15을 삭제하는 과정은 다음과 같다.</p>\n<ol>\n<li><p>15의 왼쪽 서브트리에서 가장 큰 12를 옮김</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst07.png\" alt=\"img\"></p>\n</li>\n<li><p>15의 오른쪽 서브트리에서 가장 작은 17를 옮김</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst08.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"이진트리\"><a href=\"#이진트리\" class=\"headerlink\" title=\"이진트리\"></a>이진트리</h2><p>노드가 왼쪽 자식과 오른쪽 자식을 갖는 트리를 이진트리(Binary Tree)라고 한다. </p>\n<p>각 노드의 자식은 2명 이하만 유지한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst01.png\" alt=\"img\"></p>\n<h2 id=\"완전이진트리\"><a href=\"#완전이진트리\" class=\"headerlink\" title=\"완전이진트리\"></a>완전이진트리</h2><p>루트부터 노드가 채워져 있으면서 같은 레벨에서는 왼쪽에서 오른쪽으로 노드가 채워져 있는 이진트리이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst02.png\" alt=\"img\"></p>\n<h2 id=\"이진탐색트리\"><a href=\"#이진탐색트리\" class=\"headerlink\" title=\"이진탐색트리\"></a>이진탐색트리</h2><p>다음 세 조건을 만족하는 이진트리</p>\n<ol>\n<li>어떤 노드 N을 기준으로 왼쪽 서브 트리 노드의 모든 키 값은 노드 N의 키 값 보다 작다.</li>\n<li>오른쪽 서브 트리 노드의 키 값은 노드 N의 키 값 보다 크다.</li>\n<li>같은 키 값을 갖는 노드는 없다.</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst03.png\" alt=\"img\"></p>\n<h2 id=\"노드-삽입\"><a href=\"#노드-삽입\" class=\"headerlink\" title=\"노드 삽입\"></a>노드 삽입</h2><ol>\n<li>삽입할 알맞은 위치를 찾는다. </li>\n<li>삽입한다. (삽입 후 이진검색트리의 조건을 만족해야한다)</li>\n</ol>\n<p>위의 이진검색트리에서 21을 삽입하는 과정은 다음과 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst04.png\" alt=\"img\"></p>\n<h2 id=\"노드-삭제\"><a href=\"#노드-삭제\" class=\"headerlink\" title=\"노드 삭제\"></a>노드 삭제</h2><p>삭제는 다음 세 가지 경우로 나뉩니다.</p>\n<ol>\n<li>자신 노드가 없는 노드를 삭제하는 경우<ul>\n<li>부모 노드의 왼쪽 자식이면 부모의 왼쪽 포인터를 null로</li>\n<li>부모 노드의 오른쪽 자식이면 부모의 오른쪽 포인터를 null로</li>\n</ul>\n</li>\n<li>자식 노드가 1 개인 노드를 삭제하는 경우<ul>\n<li>삭제할 노드가 부모 노드의 왼쪽 자식이면, 부모의 왼쪽 포인터가 삭제할 노드의 자식을 가리키도록</li>\n<li>삭제할 노드가 부모 노드의 오른쪽 자식이면, 부모의 오른쪽 포인터가 삭제할 노드의 자식을 가리키도록</li>\n</ul>\n</li>\n<li>자식 노드가 2 개인 노드를 삭제하는 경우<ul>\n<li>삭제할 노드의 왼쪽 서브 트리에서 가장 키 값이 큰 노드를 검색해서, 삭제 위치로 옮기고, 옮긴 노드를 삭제 </li>\n<li>삭제할 노드의 오른쪽 서브 트리에서 가장 키 값이 작은 노드를 검색해서, 삭제 위치로 옮기고, 옮긴 노드를 삭제</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"자신-노드가-없는-노드를-삭제\"><a href=\"#자신-노드가-없는-노드를-삭제\" class=\"headerlink\" title=\"자신 노드가 없는 노드를 삭제\"></a>자신 노드가 없는 노드를 삭제</h2><p>위의 이진검색트리에서 26을 삭제하는 과정은 다음과 같다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst05.png\" alt=\"img\"></p>\n<h2 id=\"자식-노드가-1-개인-노드를-삭제\"><a href=\"#자식-노드가-1-개인-노드를-삭제\" class=\"headerlink\" title=\"자식 노드가 1 개인 노드를 삭제\"></a>자식 노드가 1 개인 노드를 삭제</h2><p>위의 이진검색트리에서 17을 삭제하는 과정은 다음과 같다. </p>\n<p>15의 오른쪽 포인터가 19를 가리키도록 한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst06.png\" alt=\"img\"></p>\n<h2 id=\"자식-노드가-2-개인-노드를-삭제\"><a href=\"#자식-노드가-2-개인-노드를-삭제\" class=\"headerlink\" title=\"자식 노드가 2 개인 노드를 삭제\"></a>자식 노드가 2 개인 노드를 삭제</h2><p>위의 이진검색트리에서 15을 삭제하는 과정은 다음과 같다.</p>\n<ol>\n<li><p>15의 왼쪽 서브트리에서 가장 큰 12를 옮김</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst07.png\" alt=\"img\"></p>\n</li>\n<li><p>15의 오른쪽 서브트리에서 가장 작은 17를 옮김</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/albst08.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"러시아 국기 같은 깃발","date":"2018-11-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWQl9TIK8qoDFAXj&categoryId=AWQl9TIK8qoDFAXj&categoryType=CODE>\n\n쉬웠다. 70분 소요되었다. 탐색문제이다.\n\n## 풀이\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/russia.png)\n\n1. 각 row에 어떤 색으로 칠할지 DFS로 탐색하여 결정한다.\n\n   i번째 row에 W를 칠했으면, i+1 번째에 W / B / R 색칠 가능\n\n   i번째 row에 B를 칠했으면, i+1 번째에 B / R 색칠 가능\n\n   i번째 row에 R를 칠했으면, i+1 번째에 R 색칠 가능\n\n2. DFS로 깊이 들어갈때마다, 색칠할 칸을 카운트한다.\n\n## 조건\n\n1. R를 칠하려고 하면, 그 전에 B가 하나라도 나와야함\n\n2. W만으로 칠해서는 안된다.\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/swa_4613/Solution.java>","source":"_posts/2018-11-05-러시아 국기 같은 깃발.md","raw":"---\nlayout: post\ntitle:  \"러시아 국기 같은 깃발\"\ndate:   2018-11-05\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWQl9TIK8qoDFAXj&categoryId=AWQl9TIK8qoDFAXj&categoryType=CODE>\n\n쉬웠다. 70분 소요되었다. 탐색문제이다.\n\n## 풀이\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/russia.png)\n\n1. 각 row에 어떤 색으로 칠할지 DFS로 탐색하여 결정한다.\n\n   i번째 row에 W를 칠했으면, i+1 번째에 W / B / R 색칠 가능\n\n   i번째 row에 B를 칠했으면, i+1 번째에 B / R 색칠 가능\n\n   i번째 row에 R를 칠했으면, i+1 번째에 R 색칠 가능\n\n2. DFS로 깊이 들어갈때마다, 색칠할 칸을 카운트한다.\n\n## 조건\n\n1. R를 칠하려고 하면, 그 전에 B가 하나라도 나와야함\n\n2. W만으로 칠해서는 안된다.\n\n## 코드\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/swa_4613/Solution.java>","slug":"2018-11-05-러시아 국기 같은 깃발","published":1,"updated":"2018-11-05T06:12:00.070Z","comments":1,"photos":[],"link":"","_id":"cjp6k65si00ii31x7d2krl23v","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWQl9TIK8qoDFAXj&amp;categoryId=AWQl9TIK8qoDFAXj&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWQl9TIK8qoDFAXj&amp;categoryId=AWQl9TIK8qoDFAXj&amp;categoryType=CODE</a></p>\n<p>쉬웠다. 70분 소요되었다. 탐색문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/russia.png\" alt=\"img\"></p>\n<ol>\n<li><p>각 row에 어떤 색으로 칠할지 DFS로 탐색하여 결정한다.</p>\n<p>i번째 row에 W를 칠했으면, i+1 번째에 W / B / R 색칠 가능</p>\n<p>i번째 row에 B를 칠했으면, i+1 번째에 B / R 색칠 가능</p>\n<p>i번째 row에 R를 칠했으면, i+1 번째에 R 색칠 가능</p>\n</li>\n<li><p>DFS로 깊이 들어갈때마다, 색칠할 칸을 카운트한다.</p>\n</li>\n</ol>\n<h2 id=\"조건\"><a href=\"#조건\" class=\"headerlink\" title=\"조건\"></a>조건</h2><ol>\n<li><p>R를 칠하려고 하면, 그 전에 B가 하나라도 나와야함</p>\n</li>\n<li><p>W만으로 칠해서는 안된다.</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/swa_4613/Solution.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/swa_4613/Solution.java</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWQl9TIK8qoDFAXj&amp;categoryId=AWQl9TIK8qoDFAXj&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWQl9TIK8qoDFAXj&amp;categoryId=AWQl9TIK8qoDFAXj&amp;categoryType=CODE</a></p>\n<p>쉬웠다. 70분 소요되었다. 탐색문제이다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/russia.png\" alt=\"img\"></p>\n<ol>\n<li><p>각 row에 어떤 색으로 칠할지 DFS로 탐색하여 결정한다.</p>\n<p>i번째 row에 W를 칠했으면, i+1 번째에 W / B / R 색칠 가능</p>\n<p>i번째 row에 B를 칠했으면, i+1 번째에 B / R 색칠 가능</p>\n<p>i번째 row에 R를 칠했으면, i+1 번째에 R 색칠 가능</p>\n</li>\n<li><p>DFS로 깊이 들어갈때마다, 색칠할 칸을 카운트한다.</p>\n</li>\n</ol>\n<h2 id=\"조건\"><a href=\"#조건\" class=\"headerlink\" title=\"조건\"></a>조건</h2><ol>\n<li><p>R를 칠하려고 하면, 그 전에 B가 하나라도 나와야함</p>\n</li>\n<li><p>W만으로 칠해서는 안된다.</p>\n</li>\n</ol>\n<h2 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/swa_4613/Solution.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/swa_4613/Solution.java</a></p>\n"},{"layout":"post","title":"숫자 고르기","date":"2018-11-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.acmicpc.net/problem/2668>\n\n## 오답 풀이\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668/Main.java>\n\n완전 탐색으로 풀었다. 가능한 모든 경우를 조사하였다. 깊이 들어갈 때 마다, 두 집합이 일치하는지, 깊이는 몇인지 체크한다. 시간 초과가 났다. 모든 경우를 완전 탐색으로 찾으며 푸는것이 아니란 것이다.\n\n## 정답 풀이\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668_02/Main.java>\n\n사이클 여부를 조사한다. 다음 이동할 지점이 시작점이면 사이클을 이룬 것이다. 문제에서 주어진 예시를 그림으로 그려보자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfscycle.png)\n\n1을 시작으로 dfs를 시작하자. 1 방문 체크를 한다. 다음 위치는 3이다. 3 방문 체크를 한다. 다음 위치는 1이다. 이미 방문한 곳이다. 시작점으로 돌아왔으니 싸이클을 이루었다. 시작점인 1을 리스트에 저장한다. 이번 dfs는 끝났다.\n\n2를 시작으로 dfs를 시작하자. 2 방문 체크를 한다. 다음 위치는 1이다. 1 방문 체크를 한다. 다음 위치는 3이다. 3 방문 체크를 한다. 다음 위치는 1이다. 이미 방문한 곳이다. 이미 방문 한곳이 시작점이 아니기 때문에 사이클을 이루지 않는다. 이번 dfs는 끝났다.\n\n이런 식으로 7을 시작으로 하는 dfs 까지 진행하고 리스트에 저장된 값을 출력한다.","source":"_posts/2018-11-08-숫자 고르기.md","raw":"---\nlayout: post\ntitle:  \"숫자 고르기\"\ndate:   2018-11-08\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.acmicpc.net/problem/2668>\n\n## 오답 풀이\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668/Main.java>\n\n완전 탐색으로 풀었다. 가능한 모든 경우를 조사하였다. 깊이 들어갈 때 마다, 두 집합이 일치하는지, 깊이는 몇인지 체크한다. 시간 초과가 났다. 모든 경우를 완전 탐색으로 찾으며 푸는것이 아니란 것이다.\n\n## 정답 풀이\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668_02/Main.java>\n\n사이클 여부를 조사한다. 다음 이동할 지점이 시작점이면 사이클을 이룬 것이다. 문제에서 주어진 예시를 그림으로 그려보자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfscycle.png)\n\n1을 시작으로 dfs를 시작하자. 1 방문 체크를 한다. 다음 위치는 3이다. 3 방문 체크를 한다. 다음 위치는 1이다. 이미 방문한 곳이다. 시작점으로 돌아왔으니 싸이클을 이루었다. 시작점인 1을 리스트에 저장한다. 이번 dfs는 끝났다.\n\n2를 시작으로 dfs를 시작하자. 2 방문 체크를 한다. 다음 위치는 1이다. 1 방문 체크를 한다. 다음 위치는 3이다. 3 방문 체크를 한다. 다음 위치는 1이다. 이미 방문한 곳이다. 이미 방문 한곳이 시작점이 아니기 때문에 사이클을 이루지 않는다. 이번 dfs는 끝났다.\n\n이런 식으로 7을 시작으로 하는 dfs 까지 진행하고 리스트에 저장된 값을 출력한다.","slug":"2018-11-08-숫자 고르기","published":1,"updated":"2018-11-08T04:16:16.230Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sj00ik31x73ypc621u","content":"<p><a href=\"https://www.acmicpc.net/problem/2668\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2668</a></p>\n<h2 id=\"오답-풀이\"><a href=\"#오답-풀이\" class=\"headerlink\" title=\"오답 풀이\"></a>오답 풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668/Main.java</a></p>\n<p>완전 탐색으로 풀었다. 가능한 모든 경우를 조사하였다. 깊이 들어갈 때 마다, 두 집합이 일치하는지, 깊이는 몇인지 체크한다. 시간 초과가 났다. 모든 경우를 완전 탐색으로 찾으며 푸는것이 아니란 것이다.</p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668_02/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668_02/Main.java</a></p>\n<p>사이클 여부를 조사한다. 다음 이동할 지점이 시작점이면 사이클을 이룬 것이다. 문제에서 주어진 예시를 그림으로 그려보자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfscycle.png\" alt=\"img\"></p>\n<p>1을 시작으로 dfs를 시작하자. 1 방문 체크를 한다. 다음 위치는 3이다. 3 방문 체크를 한다. 다음 위치는 1이다. 이미 방문한 곳이다. 시작점으로 돌아왔으니 싸이클을 이루었다. 시작점인 1을 리스트에 저장한다. 이번 dfs는 끝났다.</p>\n<p>2를 시작으로 dfs를 시작하자. 2 방문 체크를 한다. 다음 위치는 1이다. 1 방문 체크를 한다. 다음 위치는 3이다. 3 방문 체크를 한다. 다음 위치는 1이다. 이미 방문한 곳이다. 이미 방문 한곳이 시작점이 아니기 때문에 사이클을 이루지 않는다. 이번 dfs는 끝났다.</p>\n<p>이런 식으로 7을 시작으로 하는 dfs 까지 진행하고 리스트에 저장된 값을 출력한다.</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.acmicpc.net/problem/2668\" target=\"_blank\" rel=\"noopener\">https://www.acmicpc.net/problem/2668</a></p>\n<h2 id=\"오답-풀이\"><a href=\"#오답-풀이\" class=\"headerlink\" title=\"오답 풀이\"></a>오답 풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668/Main.java</a></p>\n<p>완전 탐색으로 풀었다. 가능한 모든 경우를 조사하였다. 깊이 들어갈 때 마다, 두 집합이 일치하는지, 깊이는 몇인지 체크한다. 시간 초과가 났다. 모든 경우를 완전 탐색으로 찾으며 푸는것이 아니란 것이다.</p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668_02/Main.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/bj_2668_02/Main.java</a></p>\n<p>사이클 여부를 조사한다. 다음 이동할 지점이 시작점이면 사이클을 이룬 것이다. 문제에서 주어진 예시를 그림으로 그려보자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dfscycle.png\" alt=\"img\"></p>\n<p>1을 시작으로 dfs를 시작하자. 1 방문 체크를 한다. 다음 위치는 3이다. 3 방문 체크를 한다. 다음 위치는 1이다. 이미 방문한 곳이다. 시작점으로 돌아왔으니 싸이클을 이루었다. 시작점인 1을 리스트에 저장한다. 이번 dfs는 끝났다.</p>\n<p>2를 시작으로 dfs를 시작하자. 2 방문 체크를 한다. 다음 위치는 1이다. 1 방문 체크를 한다. 다음 위치는 3이다. 3 방문 체크를 한다. 다음 위치는 1이다. 이미 방문한 곳이다. 이미 방문 한곳이 시작점이 아니기 때문에 사이클을 이루지 않는다. 이번 dfs는 끝났다.</p>\n<p>이런 식으로 7을 시작으로 하는 dfs 까지 진행하고 리스트에 저장된 값을 출력한다.</p>\n"},{"layout":"post","title":"node.js","date":"2018-11-04T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png","_content":"\n## Node.js 란 \n\nNode.js® is a **JavaScript runtime** built on Chrome's V8 JavaScript engine. Node.js uses an **event-driven**, **non-blocking I/O model** that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world. \n\n추가 설명 : http://junheeko.com/2018/02/27/Node-Architecture/ \n\n## 특징\n\n1. 생산성이 높다.\n\n   Javascript를 이용해서 BE를 개발할 수 있기 때문에, FE와 BE의 기술 셋을 나눌 필요가 없다.\n\n2. socket.io를 이용한 웹 push 구현이 가능하다.\n\n   push 를 지원하는 WebSocket은 브라우져 종류나 버전에 따라서 제한적으로 동작한다. 반면, node.js의 경우 웹브라우져의 종류에 따라서 WebSocket뿐만 아니라, Long Polling등 다른 push 메커니즘을 브라우져 종류에 따라서 자동으로 선택하여 사용한다.\n\n3. non-blocking I/O model을 지원한다.\n\n   io 요청이 있으면 io 처리를 던져 놓고, thread나 process는 다른 일을 하고 있다가, io 처리가 끝나면 이에 대한 이벤트를 받아서, 응답을 처리하는 형태가 된다.\n\n   추가 설명 : http://junheeko.com/2018/10/01/System-Structure,-Program-Execution/\n\n4. Single Thread 기반이다. (내부적으로 multi thread를 사용하기도 한다.)\n\n   하나의 Thread만을 사용해서 여러 Client로부터 오는 Request를 처리한다. 단, IO 작업이 있을 경우 앞에서 설명한 비동기 IO방식으로 IO 요청을 던져놓고, 다시 돌아와서 다른 작업을 하다가 IO 작업이 끝나면 이벤트를 받아서 처리하는 구조이다.\n\n## Multi Thread\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa01.png)\n\n1. 작동 방식\n\n   Client에서부터 요청이 오면, 미리 만들어 놓은 Thread Pool에서 Thread를 꺼내서 Client의 요청을 처리하게 하고, 요청이 끝나면 Thread Pool로 돌려보낸 후, 다른 요청이 오면 다시 꺼내서 요청을 처리하게 하는 구조이다. \n\n2. 동시에 처리할 수 있는 client 수\n\n   동시에 서비스 할 수 있는 Client의 수는 Thread Pool의 Thread 수와 같은데, 물리적으로 생성할 수 있는 Thread의 수는 한계가 있다. 예를 들어 Tomcat의 경우 500개 정도의 쓰레드를 생성할 수 있다. (물론 2,000개 정도까지도 생성할 수 있지만, 한계가 있다.) 즉 동시에 처리할 수 있는 Client 수에 한계가 있다.\n\n3. io 효율\n\n   또한 IO 효율면에서도 보면, Client에 할당된 Thread는 IO 작업 (DB,Network,File)이 있을 경우 IO 호출을 해놓고, Thread는 CPU를 사용하지 않는 Wait상태로 빠져 버리게 된다.\n\n## Single Thread\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa02.png)\n\n1. 작동 방식\n\n   하나의 Thread만을 사용해서 여러 Client로부터 오는 Request를 처리한다. 단, IO 작업이 있을 경우 앞에서 설명한 비동기 IO방식으로 IO 요청을 던져놓고, 다시 돌아와서 다른 작업을 하다가 IO 작업이 끝나면 이벤트를 받아서 처리하는 구조이다.\n\n2. io 효율\n\n   Client A가 요청을 받으면, CPU 작업을 먼저하다가 IO작업을 던져놓고, Client B에서 요청이 오면, CPU작업을 하다가 IO작업을 던져놓고, Client A의 IO작업이 끝나면 이를 받아서 Client A에 리턴하는 식의 구조이다. IO작업시 기다리지 않기 때문에(Block 되지 않기 때문에), 하나의 Thread가 다른 요청을 받아서 작업을 처리할 수 있는 구조가 된다.  이 요청을 받아서 처리하는 Thread를 ELP(Event Loop Thread) 라고 한다.\n\n3. thread pool\n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa03.png)\n\n   file open등과 같은 일부 IO는 OS에 따라서 nonblocking function을 지원하지 않는 경우가 있기 때문에, 이러한 blocking io function을 호출할 경우에는 blocking이 발생한다. 이 경우 single thread로 구현된 event loop thread가 정지된다. 이러한 문제를 해결 하기 위해서 내부적으로 thread pool을 별도로 운영하면서 blocking function call의 경우에는 thread pool의 thread를 이용하여 IO 처리를 하여 event loop thread가 io에 의해서 block되지 않게 한다.\n\n## Event Loop\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa04.png)\n\n하나의 Thread로 여러 클라이언트의 요청, 즉 여러 개의 socket connection을 처리하는 방법은 Multiplexing이다. 여러 개의 socket이 동시에 연결되어 있는 상태에서 하나의 Thread는 어느 socket 으로부터 메시지가 들어오는지 보고 있는다. socket에서 메시지가 들어오면, 그 메시지를 꺼내 받아서 처리를 하는 방식이다. epoll, kqueue, dev/poll ,select등을 이용한다.\n\n## Node.js 사용 용도\n\n1. prototyping\n2. file upload/download와 같은 network streaming 서비스에 유리 (async io를 사용하기 때문에)\n3. 채팅 서비스 같은  real time web application에서 socket.io를 이용해 만들 수 있음\n4. 간단한 로직을 가지면서 대용량 그리고 빠른 응답 시간을 요구로 하는 애플리케이션\n\n## Node.js 비사용 용도\n\n1. CPU 작업이 많은 애플리케이션\n\n   Node.js는 single thread 구조이다. 그래서 하나의  request를 처리할 때 CPU를 많이 사용하면 다른 요청 처리가 지연되게 되고, 전체적인 응답시간 저하로 연결된다.\n\n2. trouble shooting이 중요한 애플리케이션\n\n   Javascript 언어의 특성상 에러를 가지고 있는 코드 위치에 진입할 때 그때 에러가 나고, 에러가 나면 대부분 서버가 죽어버린다. 따라서, 운영 관점에서 trouble shooting 등이 어려울 수 있다. single event loop의 특성상, 하나의 코드가 잘못되서 시스템이 느려지게 되면 전체 request 처리에 문제가 있을 수 있다. 코드가 잘못되면  전체 시스템이 hang up (멈춤) 된다.\n\n## Reference\n\n<http://bcho.tistory.com/881>\n\n<https://nodejs.org>","source":"_posts/2018-11-05-node.js.md","raw":"---\nlayout: post\ntitle:  \"node.js\"\ndate:   2018-11-05\ncategories: node\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/node.png\n---\n\n## Node.js 란 \n\nNode.js® is a **JavaScript runtime** built on Chrome's V8 JavaScript engine. Node.js uses an **event-driven**, **non-blocking I/O model** that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world. \n\n추가 설명 : http://junheeko.com/2018/02/27/Node-Architecture/ \n\n## 특징\n\n1. 생산성이 높다.\n\n   Javascript를 이용해서 BE를 개발할 수 있기 때문에, FE와 BE의 기술 셋을 나눌 필요가 없다.\n\n2. socket.io를 이용한 웹 push 구현이 가능하다.\n\n   push 를 지원하는 WebSocket은 브라우져 종류나 버전에 따라서 제한적으로 동작한다. 반면, node.js의 경우 웹브라우져의 종류에 따라서 WebSocket뿐만 아니라, Long Polling등 다른 push 메커니즘을 브라우져 종류에 따라서 자동으로 선택하여 사용한다.\n\n3. non-blocking I/O model을 지원한다.\n\n   io 요청이 있으면 io 처리를 던져 놓고, thread나 process는 다른 일을 하고 있다가, io 처리가 끝나면 이에 대한 이벤트를 받아서, 응답을 처리하는 형태가 된다.\n\n   추가 설명 : http://junheeko.com/2018/10/01/System-Structure,-Program-Execution/\n\n4. Single Thread 기반이다. (내부적으로 multi thread를 사용하기도 한다.)\n\n   하나의 Thread만을 사용해서 여러 Client로부터 오는 Request를 처리한다. 단, IO 작업이 있을 경우 앞에서 설명한 비동기 IO방식으로 IO 요청을 던져놓고, 다시 돌아와서 다른 작업을 하다가 IO 작업이 끝나면 이벤트를 받아서 처리하는 구조이다.\n\n## Multi Thread\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa01.png)\n\n1. 작동 방식\n\n   Client에서부터 요청이 오면, 미리 만들어 놓은 Thread Pool에서 Thread를 꺼내서 Client의 요청을 처리하게 하고, 요청이 끝나면 Thread Pool로 돌려보낸 후, 다른 요청이 오면 다시 꺼내서 요청을 처리하게 하는 구조이다. \n\n2. 동시에 처리할 수 있는 client 수\n\n   동시에 서비스 할 수 있는 Client의 수는 Thread Pool의 Thread 수와 같은데, 물리적으로 생성할 수 있는 Thread의 수는 한계가 있다. 예를 들어 Tomcat의 경우 500개 정도의 쓰레드를 생성할 수 있다. (물론 2,000개 정도까지도 생성할 수 있지만, 한계가 있다.) 즉 동시에 처리할 수 있는 Client 수에 한계가 있다.\n\n3. io 효율\n\n   또한 IO 효율면에서도 보면, Client에 할당된 Thread는 IO 작업 (DB,Network,File)이 있을 경우 IO 호출을 해놓고, Thread는 CPU를 사용하지 않는 Wait상태로 빠져 버리게 된다.\n\n## Single Thread\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa02.png)\n\n1. 작동 방식\n\n   하나의 Thread만을 사용해서 여러 Client로부터 오는 Request를 처리한다. 단, IO 작업이 있을 경우 앞에서 설명한 비동기 IO방식으로 IO 요청을 던져놓고, 다시 돌아와서 다른 작업을 하다가 IO 작업이 끝나면 이벤트를 받아서 처리하는 구조이다.\n\n2. io 효율\n\n   Client A가 요청을 받으면, CPU 작업을 먼저하다가 IO작업을 던져놓고, Client B에서 요청이 오면, CPU작업을 하다가 IO작업을 던져놓고, Client A의 IO작업이 끝나면 이를 받아서 Client A에 리턴하는 식의 구조이다. IO작업시 기다리지 않기 때문에(Block 되지 않기 때문에), 하나의 Thread가 다른 요청을 받아서 작업을 처리할 수 있는 구조가 된다.  이 요청을 받아서 처리하는 Thread를 ELP(Event Loop Thread) 라고 한다.\n\n3. thread pool\n\n   ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa03.png)\n\n   file open등과 같은 일부 IO는 OS에 따라서 nonblocking function을 지원하지 않는 경우가 있기 때문에, 이러한 blocking io function을 호출할 경우에는 blocking이 발생한다. 이 경우 single thread로 구현된 event loop thread가 정지된다. 이러한 문제를 해결 하기 위해서 내부적으로 thread pool을 별도로 운영하면서 blocking function call의 경우에는 thread pool의 thread를 이용하여 IO 처리를 하여 event loop thread가 io에 의해서 block되지 않게 한다.\n\n## Event Loop\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa04.png)\n\n하나의 Thread로 여러 클라이언트의 요청, 즉 여러 개의 socket connection을 처리하는 방법은 Multiplexing이다. 여러 개의 socket이 동시에 연결되어 있는 상태에서 하나의 Thread는 어느 socket 으로부터 메시지가 들어오는지 보고 있는다. socket에서 메시지가 들어오면, 그 메시지를 꺼내 받아서 처리를 하는 방식이다. epoll, kqueue, dev/poll ,select등을 이용한다.\n\n## Node.js 사용 용도\n\n1. prototyping\n2. file upload/download와 같은 network streaming 서비스에 유리 (async io를 사용하기 때문에)\n3. 채팅 서비스 같은  real time web application에서 socket.io를 이용해 만들 수 있음\n4. 간단한 로직을 가지면서 대용량 그리고 빠른 응답 시간을 요구로 하는 애플리케이션\n\n## Node.js 비사용 용도\n\n1. CPU 작업이 많은 애플리케이션\n\n   Node.js는 single thread 구조이다. 그래서 하나의  request를 처리할 때 CPU를 많이 사용하면 다른 요청 처리가 지연되게 되고, 전체적인 응답시간 저하로 연결된다.\n\n2. trouble shooting이 중요한 애플리케이션\n\n   Javascript 언어의 특성상 에러를 가지고 있는 코드 위치에 진입할 때 그때 에러가 나고, 에러가 나면 대부분 서버가 죽어버린다. 따라서, 운영 관점에서 trouble shooting 등이 어려울 수 있다. single event loop의 특성상, 하나의 코드가 잘못되서 시스템이 느려지게 되면 전체 request 처리에 문제가 있을 수 있다. 코드가 잘못되면  전체 시스템이 hang up (멈춤) 된다.\n\n## Reference\n\n<http://bcho.tistory.com/881>\n\n<https://nodejs.org>","slug":"2018-11-05-node.js","published":1,"updated":"2018-11-05T03:49:44.531Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sk00im31x715dq0jsl","content":"<h2 id=\"Node-js-란\"><a href=\"#Node-js-란\" class=\"headerlink\" title=\"Node.js 란\"></a>Node.js 란</h2><p>Node.js® is a <strong>JavaScript runtime</strong> built on Chrome’s V8 JavaScript engine. Node.js uses an <strong>event-driven</strong>, <strong>non-blocking I/O model</strong> that makes it lightweight and efficient. Node.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world. </p>\n<p>추가 설명 : <a href=\"http://junheeko.com/2018/02/27/Node-Architecture/\">http://junheeko.com/2018/02/27/Node-Architecture/</a> </p>\n<h2 id=\"특징\"><a href=\"#특징\" class=\"headerlink\" title=\"특징\"></a>특징</h2><ol>\n<li><p>생산성이 높다.</p>\n<p>Javascript를 이용해서 BE를 개발할 수 있기 때문에, FE와 BE의 기술 셋을 나눌 필요가 없다.</p>\n</li>\n<li><p>socket.io를 이용한 웹 push 구현이 가능하다.</p>\n<p>push 를 지원하는 WebSocket은 브라우져 종류나 버전에 따라서 제한적으로 동작한다. 반면, node.js의 경우 웹브라우져의 종류에 따라서 WebSocket뿐만 아니라, Long Polling등 다른 push 메커니즘을 브라우져 종류에 따라서 자동으로 선택하여 사용한다.</p>\n</li>\n<li><p>non-blocking I/O model을 지원한다.</p>\n<p>io 요청이 있으면 io 처리를 던져 놓고, thread나 process는 다른 일을 하고 있다가, io 처리가 끝나면 이에 대한 이벤트를 받아서, 응답을 처리하는 형태가 된다.</p>\n<p>추가 설명 : <a href=\"http://junheeko.com/2018/10/01/System-Structure,-Program-Execution/\">http://junheeko.com/2018/10/01/System-Structure,-Program-Execution/</a></p>\n</li>\n<li><p>Single Thread 기반이다. (내부적으로 multi thread를 사용하기도 한다.)</p>\n<p>하나의 Thread만을 사용해서 여러 Client로부터 오는 Request를 처리한다. 단, IO 작업이 있을 경우 앞에서 설명한 비동기 IO방식으로 IO 요청을 던져놓고, 다시 돌아와서 다른 작업을 하다가 IO 작업이 끝나면 이벤트를 받아서 처리하는 구조이다.</p>\n</li>\n</ol>\n<h2 id=\"Multi-Thread\"><a href=\"#Multi-Thread\" class=\"headerlink\" title=\"Multi Thread\"></a>Multi Thread</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa01.png\" alt=\"img\"></p>\n<ol>\n<li><p>작동 방식</p>\n<p>Client에서부터 요청이 오면, 미리 만들어 놓은 Thread Pool에서 Thread를 꺼내서 Client의 요청을 처리하게 하고, 요청이 끝나면 Thread Pool로 돌려보낸 후, 다른 요청이 오면 다시 꺼내서 요청을 처리하게 하는 구조이다. </p>\n</li>\n<li><p>동시에 처리할 수 있는 client 수</p>\n<p>동시에 서비스 할 수 있는 Client의 수는 Thread Pool의 Thread 수와 같은데, 물리적으로 생성할 수 있는 Thread의 수는 한계가 있다. 예를 들어 Tomcat의 경우 500개 정도의 쓰레드를 생성할 수 있다. (물론 2,000개 정도까지도 생성할 수 있지만, 한계가 있다.) 즉 동시에 처리할 수 있는 Client 수에 한계가 있다.</p>\n</li>\n<li><p>io 효율</p>\n<p>또한 IO 효율면에서도 보면, Client에 할당된 Thread는 IO 작업 (DB,Network,File)이 있을 경우 IO 호출을 해놓고, Thread는 CPU를 사용하지 않는 Wait상태로 빠져 버리게 된다.</p>\n</li>\n</ol>\n<h2 id=\"Single-Thread\"><a href=\"#Single-Thread\" class=\"headerlink\" title=\"Single Thread\"></a>Single Thread</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa02.png\" alt=\"img\"></p>\n<ol>\n<li><p>작동 방식</p>\n<p>하나의 Thread만을 사용해서 여러 Client로부터 오는 Request를 처리한다. 단, IO 작업이 있을 경우 앞에서 설명한 비동기 IO방식으로 IO 요청을 던져놓고, 다시 돌아와서 다른 작업을 하다가 IO 작업이 끝나면 이벤트를 받아서 처리하는 구조이다.</p>\n</li>\n<li><p>io 효율</p>\n<p>Client A가 요청을 받으면, CPU 작업을 먼저하다가 IO작업을 던져놓고, Client B에서 요청이 오면, CPU작업을 하다가 IO작업을 던져놓고, Client A의 IO작업이 끝나면 이를 받아서 Client A에 리턴하는 식의 구조이다. IO작업시 기다리지 않기 때문에(Block 되지 않기 때문에), 하나의 Thread가 다른 요청을 받아서 작업을 처리할 수 있는 구조가 된다.  이 요청을 받아서 처리하는 Thread를 ELP(Event Loop Thread) 라고 한다.</p>\n</li>\n<li><p>thread pool</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa03.png\" alt=\"img\"></p>\n<p>file open등과 같은 일부 IO는 OS에 따라서 nonblocking function을 지원하지 않는 경우가 있기 때문에, 이러한 blocking io function을 호출할 경우에는 blocking이 발생한다. 이 경우 single thread로 구현된 event loop thread가 정지된다. 이러한 문제를 해결 하기 위해서 내부적으로 thread pool을 별도로 운영하면서 blocking function call의 경우에는 thread pool의 thread를 이용하여 IO 처리를 하여 event loop thread가 io에 의해서 block되지 않게 한다.</p>\n</li>\n</ol>\n<h2 id=\"Event-Loop\"><a href=\"#Event-Loop\" class=\"headerlink\" title=\"Event Loop\"></a>Event Loop</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa04.png\" alt=\"img\"></p>\n<p>하나의 Thread로 여러 클라이언트의 요청, 즉 여러 개의 socket connection을 처리하는 방법은 Multiplexing이다. 여러 개의 socket이 동시에 연결되어 있는 상태에서 하나의 Thread는 어느 socket 으로부터 메시지가 들어오는지 보고 있는다. socket에서 메시지가 들어오면, 그 메시지를 꺼내 받아서 처리를 하는 방식이다. epoll, kqueue, dev/poll ,select등을 이용한다.</p>\n<h2 id=\"Node-js-사용-용도\"><a href=\"#Node-js-사용-용도\" class=\"headerlink\" title=\"Node.js 사용 용도\"></a>Node.js 사용 용도</h2><ol>\n<li>prototyping</li>\n<li>file upload/download와 같은 network streaming 서비스에 유리 (async io를 사용하기 때문에)</li>\n<li>채팅 서비스 같은  real time web application에서 socket.io를 이용해 만들 수 있음</li>\n<li>간단한 로직을 가지면서 대용량 그리고 빠른 응답 시간을 요구로 하는 애플리케이션</li>\n</ol>\n<h2 id=\"Node-js-비사용-용도\"><a href=\"#Node-js-비사용-용도\" class=\"headerlink\" title=\"Node.js 비사용 용도\"></a>Node.js 비사용 용도</h2><ol>\n<li><p>CPU 작업이 많은 애플리케이션</p>\n<p>Node.js는 single thread 구조이다. 그래서 하나의  request를 처리할 때 CPU를 많이 사용하면 다른 요청 처리가 지연되게 되고, 전체적인 응답시간 저하로 연결된다.</p>\n</li>\n<li><p>trouble shooting이 중요한 애플리케이션</p>\n<p>Javascript 언어의 특성상 에러를 가지고 있는 코드 위치에 진입할 때 그때 에러가 나고, 에러가 나면 대부분 서버가 죽어버린다. 따라서, 운영 관점에서 trouble shooting 등이 어려울 수 있다. single event loop의 특성상, 하나의 코드가 잘못되서 시스템이 느려지게 되면 전체 request 처리에 문제가 있을 수 있다. 코드가 잘못되면  전체 시스템이 hang up (멈춤) 된다.</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://bcho.tistory.com/881\" target=\"_blank\" rel=\"noopener\">http://bcho.tistory.com/881</a></p>\n<p><a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener\">https://nodejs.org</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Node-js-란\"><a href=\"#Node-js-란\" class=\"headerlink\" title=\"Node.js 란\"></a>Node.js 란</h2><p>Node.js® is a <strong>JavaScript runtime</strong> built on Chrome’s V8 JavaScript engine. Node.js uses an <strong>event-driven</strong>, <strong>non-blocking I/O model</strong> that makes it lightweight and efficient. Node.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world. </p>\n<p>추가 설명 : <a href=\"http://junheeko.com/2018/02/27/Node-Architecture/\">http://junheeko.com/2018/02/27/Node-Architecture/</a> </p>\n<h2 id=\"특징\"><a href=\"#특징\" class=\"headerlink\" title=\"특징\"></a>특징</h2><ol>\n<li><p>생산성이 높다.</p>\n<p>Javascript를 이용해서 BE를 개발할 수 있기 때문에, FE와 BE의 기술 셋을 나눌 필요가 없다.</p>\n</li>\n<li><p>socket.io를 이용한 웹 push 구현이 가능하다.</p>\n<p>push 를 지원하는 WebSocket은 브라우져 종류나 버전에 따라서 제한적으로 동작한다. 반면, node.js의 경우 웹브라우져의 종류에 따라서 WebSocket뿐만 아니라, Long Polling등 다른 push 메커니즘을 브라우져 종류에 따라서 자동으로 선택하여 사용한다.</p>\n</li>\n<li><p>non-blocking I/O model을 지원한다.</p>\n<p>io 요청이 있으면 io 처리를 던져 놓고, thread나 process는 다른 일을 하고 있다가, io 처리가 끝나면 이에 대한 이벤트를 받아서, 응답을 처리하는 형태가 된다.</p>\n<p>추가 설명 : <a href=\"http://junheeko.com/2018/10/01/System-Structure,-Program-Execution/\">http://junheeko.com/2018/10/01/System-Structure,-Program-Execution/</a></p>\n</li>\n<li><p>Single Thread 기반이다. (내부적으로 multi thread를 사용하기도 한다.)</p>\n<p>하나의 Thread만을 사용해서 여러 Client로부터 오는 Request를 처리한다. 단, IO 작업이 있을 경우 앞에서 설명한 비동기 IO방식으로 IO 요청을 던져놓고, 다시 돌아와서 다른 작업을 하다가 IO 작업이 끝나면 이벤트를 받아서 처리하는 구조이다.</p>\n</li>\n</ol>\n<h2 id=\"Multi-Thread\"><a href=\"#Multi-Thread\" class=\"headerlink\" title=\"Multi Thread\"></a>Multi Thread</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa01.png\" alt=\"img\"></p>\n<ol>\n<li><p>작동 방식</p>\n<p>Client에서부터 요청이 오면, 미리 만들어 놓은 Thread Pool에서 Thread를 꺼내서 Client의 요청을 처리하게 하고, 요청이 끝나면 Thread Pool로 돌려보낸 후, 다른 요청이 오면 다시 꺼내서 요청을 처리하게 하는 구조이다. </p>\n</li>\n<li><p>동시에 처리할 수 있는 client 수</p>\n<p>동시에 서비스 할 수 있는 Client의 수는 Thread Pool의 Thread 수와 같은데, 물리적으로 생성할 수 있는 Thread의 수는 한계가 있다. 예를 들어 Tomcat의 경우 500개 정도의 쓰레드를 생성할 수 있다. (물론 2,000개 정도까지도 생성할 수 있지만, 한계가 있다.) 즉 동시에 처리할 수 있는 Client 수에 한계가 있다.</p>\n</li>\n<li><p>io 효율</p>\n<p>또한 IO 효율면에서도 보면, Client에 할당된 Thread는 IO 작업 (DB,Network,File)이 있을 경우 IO 호출을 해놓고, Thread는 CPU를 사용하지 않는 Wait상태로 빠져 버리게 된다.</p>\n</li>\n</ol>\n<h2 id=\"Single-Thread\"><a href=\"#Single-Thread\" class=\"headerlink\" title=\"Single Thread\"></a>Single Thread</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa02.png\" alt=\"img\"></p>\n<ol>\n<li><p>작동 방식</p>\n<p>하나의 Thread만을 사용해서 여러 Client로부터 오는 Request를 처리한다. 단, IO 작업이 있을 경우 앞에서 설명한 비동기 IO방식으로 IO 요청을 던져놓고, 다시 돌아와서 다른 작업을 하다가 IO 작업이 끝나면 이벤트를 받아서 처리하는 구조이다.</p>\n</li>\n<li><p>io 효율</p>\n<p>Client A가 요청을 받으면, CPU 작업을 먼저하다가 IO작업을 던져놓고, Client B에서 요청이 오면, CPU작업을 하다가 IO작업을 던져놓고, Client A의 IO작업이 끝나면 이를 받아서 Client A에 리턴하는 식의 구조이다. IO작업시 기다리지 않기 때문에(Block 되지 않기 때문에), 하나의 Thread가 다른 요청을 받아서 작업을 처리할 수 있는 구조가 된다.  이 요청을 받아서 처리하는 Thread를 ELP(Event Loop Thread) 라고 한다.</p>\n</li>\n<li><p>thread pool</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa03.png\" alt=\"img\"></p>\n<p>file open등과 같은 일부 IO는 OS에 따라서 nonblocking function을 지원하지 않는 경우가 있기 때문에, 이러한 blocking io function을 호출할 경우에는 blocking이 발생한다. 이 경우 single thread로 구현된 event loop thread가 정지된다. 이러한 문제를 해결 하기 위해서 내부적으로 thread pool을 별도로 운영하면서 blocking function call의 경우에는 thread pool의 thread를 이용하여 IO 처리를 하여 event loop thread가 io에 의해서 block되지 않게 한다.</p>\n</li>\n</ol>\n<h2 id=\"Event-Loop\"><a href=\"#Event-Loop\" class=\"headerlink\" title=\"Event Loop\"></a>Event Loop</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/nodejsaa04.png\" alt=\"img\"></p>\n<p>하나의 Thread로 여러 클라이언트의 요청, 즉 여러 개의 socket connection을 처리하는 방법은 Multiplexing이다. 여러 개의 socket이 동시에 연결되어 있는 상태에서 하나의 Thread는 어느 socket 으로부터 메시지가 들어오는지 보고 있는다. socket에서 메시지가 들어오면, 그 메시지를 꺼내 받아서 처리를 하는 방식이다. epoll, kqueue, dev/poll ,select등을 이용한다.</p>\n<h2 id=\"Node-js-사용-용도\"><a href=\"#Node-js-사용-용도\" class=\"headerlink\" title=\"Node.js 사용 용도\"></a>Node.js 사용 용도</h2><ol>\n<li>prototyping</li>\n<li>file upload/download와 같은 network streaming 서비스에 유리 (async io를 사용하기 때문에)</li>\n<li>채팅 서비스 같은  real time web application에서 socket.io를 이용해 만들 수 있음</li>\n<li>간단한 로직을 가지면서 대용량 그리고 빠른 응답 시간을 요구로 하는 애플리케이션</li>\n</ol>\n<h2 id=\"Node-js-비사용-용도\"><a href=\"#Node-js-비사용-용도\" class=\"headerlink\" title=\"Node.js 비사용 용도\"></a>Node.js 비사용 용도</h2><ol>\n<li><p>CPU 작업이 많은 애플리케이션</p>\n<p>Node.js는 single thread 구조이다. 그래서 하나의  request를 처리할 때 CPU를 많이 사용하면 다른 요청 처리가 지연되게 되고, 전체적인 응답시간 저하로 연결된다.</p>\n</li>\n<li><p>trouble shooting이 중요한 애플리케이션</p>\n<p>Javascript 언어의 특성상 에러를 가지고 있는 코드 위치에 진입할 때 그때 에러가 나고, 에러가 나면 대부분 서버가 죽어버린다. 따라서, 운영 관점에서 trouble shooting 등이 어려울 수 있다. single event loop의 특성상, 하나의 코드가 잘못되서 시스템이 느려지게 되면 전체 request 처리에 문제가 있을 수 있다. 코드가 잘못되면  전체 시스템이 hang up (멈춤) 된다.</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://bcho.tistory.com/881\" target=\"_blank\" rel=\"noopener\">http://bcho.tistory.com/881</a></p>\n<p><a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener\">https://nodejs.org</a></p>\n"},{"layout":"post","title":"초보자를 위한 점프대 배치하기","date":"2018-11-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWGsV8IaAXsDFAVW>\n\n## 오답 풀이\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503/Solution.java>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/maxHeightDFS.png)\n\n정렬해서 나올 수 있는 모든 경우를 탐색하기 위해 DFS를 하였다. 원형이기 때문에, 시작점을 하나로 DFS 탐색을 시작해도 모든 경우가 커버 가능하다. 예를 들어, 2 4 5 7 9 의 경우에 2를 시작으로 DFS를 탐색한다. 탐색을 하며 높이 차를 계산한다. 시간 초과가 났다. 탐색으로 모든 케이스를 따져보는 것이 아닌 문제라는 것이다. \n\n## 정답 풀이\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503_02/Solution.java>\n\n1. 오름 차순으로 정렬한다. \n2. 가장 작은 값을 가운데에 둔다.\n3. 맨 앞에, 다음으로 작은 값을 둔다.\n4. 맨 뒤에, 다음으로 작은 값을 둔다.\n5. 3,4를 반복한다.\n\n이와 같이 하면, 가장 큰 높이 차가 최소가 되도록 정렬된다. 구현을 위해서, 두개의 큐를 사용하였다.\n\n\n\n다음 그림을 보자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/maxHeightsort.png)\n\n1. 주어진 수를 오름 차순 정렬한다.\n2. 가장 작은 2를 가운데에 둔다.\n3. 그 다음으로 작은 4를 맨 앞에 둔다.\n4. 그 다음으로 작은 5를 맨 뒤에 둔다.\n5. 3, 4를 반복한다.\n6. 최종적으로 7 4 2 5 9 배열이 얻어졌고, 가장 큰 높이 차(4) 가 최소가 되로록 정렬되었다.","source":"_posts/2018-11-06-초보자를 위한 점프대 배치하기.md","raw":"---\nlayout: post\ntitle:  \"초보자를 위한 점프대 배치하기\"\ndate:   2018-11-06\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWGsV8IaAXsDFAVW>\n\n## 오답 풀이\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503/Solution.java>\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/maxHeightDFS.png)\n\n정렬해서 나올 수 있는 모든 경우를 탐색하기 위해 DFS를 하였다. 원형이기 때문에, 시작점을 하나로 DFS 탐색을 시작해도 모든 경우가 커버 가능하다. 예를 들어, 2 4 5 7 9 의 경우에 2를 시작으로 DFS를 탐색한다. 탐색을 하며 높이 차를 계산한다. 시간 초과가 났다. 탐색으로 모든 케이스를 따져보는 것이 아닌 문제라는 것이다. \n\n## 정답 풀이\n\n<https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503_02/Solution.java>\n\n1. 오름 차순으로 정렬한다. \n2. 가장 작은 값을 가운데에 둔다.\n3. 맨 앞에, 다음으로 작은 값을 둔다.\n4. 맨 뒤에, 다음으로 작은 값을 둔다.\n5. 3,4를 반복한다.\n\n이와 같이 하면, 가장 큰 높이 차가 최소가 되도록 정렬된다. 구현을 위해서, 두개의 큐를 사용하였다.\n\n\n\n다음 그림을 보자.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/maxHeightsort.png)\n\n1. 주어진 수를 오름 차순 정렬한다.\n2. 가장 작은 2를 가운데에 둔다.\n3. 그 다음으로 작은 4를 맨 앞에 둔다.\n4. 그 다음으로 작은 5를 맨 뒤에 둔다.\n5. 3, 4를 반복한다.\n6. 최종적으로 7 4 2 5 9 배열이 얻어졌고, 가장 큰 높이 차(4) 가 최소가 되로록 정렬되었다.","slug":"2018-11-06-초보자를 위한 점프대 배치하기","published":1,"updated":"2018-11-06T08:11:39.812Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sl00io31x7jctrls3v","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWGsV8IaAXsDFAVW\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWGsV8IaAXsDFAVW</a></p>\n<h2 id=\"오답-풀이\"><a href=\"#오답-풀이\" class=\"headerlink\" title=\"오답 풀이\"></a>오답 풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503/Solution.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503/Solution.java</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/maxHeightDFS.png\" alt=\"img\"></p>\n<p>정렬해서 나올 수 있는 모든 경우를 탐색하기 위해 DFS를 하였다. 원형이기 때문에, 시작점을 하나로 DFS 탐색을 시작해도 모든 경우가 커버 가능하다. 예를 들어, 2 4 5 7 9 의 경우에 2를 시작으로 DFS를 탐색한다. 탐색을 하며 높이 차를 계산한다. 시간 초과가 났다. 탐색으로 모든 케이스를 따져보는 것이 아닌 문제라는 것이다. </p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503_02/Solution.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503_02/Solution.java</a></p>\n<ol>\n<li>오름 차순으로 정렬한다. </li>\n<li>가장 작은 값을 가운데에 둔다.</li>\n<li>맨 앞에, 다음으로 작은 값을 둔다.</li>\n<li>맨 뒤에, 다음으로 작은 값을 둔다.</li>\n<li>3,4를 반복한다.</li>\n</ol>\n<p>이와 같이 하면, 가장 큰 높이 차가 최소가 되도록 정렬된다. 구현을 위해서, 두개의 큐를 사용하였다.</p>\n<p>다음 그림을 보자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/maxHeightsort.png\" alt=\"img\"></p>\n<ol>\n<li>주어진 수를 오름 차순 정렬한다.</li>\n<li>가장 작은 2를 가운데에 둔다.</li>\n<li>그 다음으로 작은 4를 맨 앞에 둔다.</li>\n<li>그 다음으로 작은 5를 맨 뒤에 둔다.</li>\n<li>3, 4를 반복한다.</li>\n<li>최종적으로 7 4 2 5 9 배열이 얻어졌고, 가장 큰 높이 차(4) 가 최소가 되로록 정렬되었다.</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWGsV8IaAXsDFAVW\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWGsV8IaAXsDFAVW</a></p>\n<h2 id=\"오답-풀이\"><a href=\"#오답-풀이\" class=\"headerlink\" title=\"오답 풀이\"></a>오답 풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503/Solution.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503/Solution.java</a></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/maxHeightDFS.png\" alt=\"img\"></p>\n<p>정렬해서 나올 수 있는 모든 경우를 탐색하기 위해 DFS를 하였다. 원형이기 때문에, 시작점을 하나로 DFS 탐색을 시작해도 모든 경우가 커버 가능하다. 예를 들어, 2 4 5 7 9 의 경우에 2를 시작으로 DFS를 탐색한다. 탐색을 하며 높이 차를 계산한다. 시간 초과가 났다. 탐색으로 모든 케이스를 따져보는 것이 아닌 문제라는 것이다. </p>\n<h2 id=\"정답-풀이\"><a href=\"#정답-풀이\" class=\"headerlink\" title=\"정답 풀이\"></a>정답 풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503_02/Solution.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/swa_3503_02/Solution.java</a></p>\n<ol>\n<li>오름 차순으로 정렬한다. </li>\n<li>가장 작은 값을 가운데에 둔다.</li>\n<li>맨 앞에, 다음으로 작은 값을 둔다.</li>\n<li>맨 뒤에, 다음으로 작은 값을 둔다.</li>\n<li>3,4를 반복한다.</li>\n</ol>\n<p>이와 같이 하면, 가장 큰 높이 차가 최소가 되도록 정렬된다. 구현을 위해서, 두개의 큐를 사용하였다.</p>\n<p>다음 그림을 보자.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/maxHeightsort.png\" alt=\"img\"></p>\n<ol>\n<li>주어진 수를 오름 차순 정렬한다.</li>\n<li>가장 작은 2를 가운데에 둔다.</li>\n<li>그 다음으로 작은 4를 맨 앞에 둔다.</li>\n<li>그 다음으로 작은 5를 맨 뒤에 둔다.</li>\n<li>3, 4를 반복한다.</li>\n<li>최종적으로 7 4 2 5 9 배열이 얻어졌고, 가장 큰 높이 차(4) 가 최소가 되로록 정렬되었다.</li>\n</ol>\n"},{"layout":"post","title":"TCP/IP","date":"2018-11-07T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/networkDoorimg.png","_content":"\n## TCP/IP란\n\nTCP/IP는, Transfer Control Protocol/Internet Protocol 의 줄임말이다. 컴퓨터와 컴퓨터가 통신하기 위한 통신 규약(Protocol)이다. TCP는 서버와 클라이언트간에 데이타를 신뢰성있게 전달하기 위해 만들어진 프로토콜이다. 데이터는 전송되는 과정에서 데이터가 유실, 손실되거나 순서가 뒤바뀌어 전달될 수 있다. TCP는 이를 검색하고 교정하여 순서를 재조합할 수 있도록 보장한다. IP는 전송할 데이터를 packet 단위로 나누어서 어디로 보낼 것인지 결정한다. 즉, TCP는 데이터의 정확성 확인을, IP는 패킷을 목적지까지 전송을 담당한다.\n\n## OSI 7 계층\n\nOSI는 Open System Interconnection Reference Model의 줄임말이다. IOS에서 제안한 모델로, 시스템에 상관없이 서로의 시스템이 연결될 수 있도록 하는 모델이다. 다음과 같이, 7계층으로 구성되어 있다.\n\n1. Application Layer\n2. Presentation Layer\n3. Session Layer\n4. Transport Layer\n5. Network Layer\n6. Data Link Layer\n7. Pysical Layer\n\n컴퓨터와 컴퓨터 사이에 데이터 전송을 위해 위의 7 계층을 거쳐서 전송이 된다. \n\n그런데 왜, 이렇게 계층화를 한 것일까 ? 각 계층을 캡슐화할 수 있기 때문이다. 캡슐화를 함으로써, 계층별로 담당하는 역할을 나눌 수 있다. 계층에 존재하는 각 프로토콜은 자신의 기능만 충실히 하여 독립성을 보장한다. 1->7로 이동하며 헤더가 붙고, 7->1로 이동하며 헤더를 풀어낸다.\n\n## TCP/IP 4 계층\n\nTCP/IP는 OSI 7계층을 단순화하여 4 계층으로 만들어서 사용한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip01.png)\n\n1. Application Layer\n\n   OSI 7 계층의 Application Layer, Presentation Layer, Session Layer를 포함한다. 응용 프로그램들 간의 데이터 통신이 이루어지는 계층이다. SMTP, FTP, HTTP 등이 사용된다.\n\n2. Transport Layer\n\n   인터넷 계층에서 결정한 목적지까지 실제 데이터를 신뢰성 있게 전송하는 역할을 한다. TCP와 UDP 등이 사용된다.\n\n3. Internet Layer\n\n   데이터의 경로를 배정하는일(라우팅)을 담당한다. 데이터를 정확히 라우팅하기 위해 IP 등이 사용된다.\n\n4. Pysical Layer\n\n   이더넷 카드와 같은 하드웨어이다. 인터넷 계층에서 형성된 패킷을 전기신호 또는 광신호로 바꾸어 전달한다.\n\n## TCP 연결 및 해제 \n\nTCP/IP 프로토콜은 OS 안에 라리브러로 내장되어 있다. 따라서 연결을 위한 3 way handshake 와 연결 해제를 위한 4 way handshake 는 OS가 처리한다. 프로그래머는 커널 내부를 몰라도 Socket 을 통해 TCP/IP를 사용할 수 있다. 즉, Socket은 Application Layer 에서 TCP/IP를 사용할 수 있도록 하는 인터페이스 역할을 한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip02.png)\n\n## 3 way handshake\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip03.png)\n\n클라이언트와 서버의 연결 3 way handshake를 통해 이루어진다. \n\n1. 연결을 하기 전 클라이언트는 Closed 상태이고, 서버는 요청을 기다리고 있는 LISTEN 상태이다.\n2. 클라이언트는 서버에 연결을 요청하는 SYN (M) 패킷을 보낸다.\n3. 서버는 클라이언트의 요청인 SYN (m)을 받고 클라이언트에게 요청을 수락한다는 ACK (M+1) 과  클라이언트 쪽에서도 포트를 열어 달라는 SYN (N) 패킷을 보낸다. 서버는 클라이언트의 응답을 기다리는 상대방의 응답을 기다리는 SYN_RCV로 상태가 된다.\n4. 클라이언트는 서버의 수락 응답은 ACK (M+1) 과 SYN (N) 패킷을 받고 포트를 열고 ACK (N+1) 을 서버로 보내면서 ESTABLISHED 상태가 된다.\n5. ACK 데이터를 받은 서버 역시 ESTBALISHED 상태로 변경되면서, 클라이언트와 서버는 연결이 된다.\n\n## 4 way handshake\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip04.png)\n\n연결 해제는 4 way handshake를 한다.\n\n1. 초기에, 서버와 클라이언트는 ESTABLISHED 상태이다.\n2. 클라이언트는 연결을 종료하겠다는 FIN 플래그를 보낸다. ACK를 기다리고 있다는 의미로 FIN_WAIT_1 상태가 된다.\n3. 서버는 알겠다는 의미로 클라이언트에 ACK를 보내고, 애플리케이션의 소켓을 닫는다. 이 때, 남아있는 데이터를 모두 보낸다. 자원을 정리하는데 시간이 소요 되므로, 소켓을 닫는데 기다리고 있는 상태라는 의미에서 CLOSE_WAIT 상태가 된다. 연결 종료를 요청한 클라이언트는 서버로부터 응답이 올 때까지 기다리고 있다는 FIN_WAIT_2 상태가 된다.\n4. 데이터를 모두 보내고 통신이 끝났으면 연결이 종료 되었다고 클라이언트에게 FIN 플래그를 보낸다. 그리고 자신은 클라이언트로부터 마지막 ACK를 기다리고 있는 LAST_ACK 상태가 된다.\n5. 클라이언트는 FIN 데이터를 받으면 TIME_WAIT 상태로 바꾸면서 서버에 ACK 데이터를 보낸다. 클라이언트는 TIME_WATE 상태에서 일정 시간이 되면 CLOSED 상태가 된다. 아직 서버로부터 받지 못한 데이터가 있을 것을 대비해 일정 시간 세션을 남겨놓고 잉여 패킷을 기다리는 것이다.\n6. ACK 데이터를 받은 서버는 소켓 연결을 close하고 CLOSED 상태가 된다.","source":"_posts/2018-11-08-TCP:IP.md","raw":"---\nlayout: post\ntitle:  \"TCP/IP\"\ndate:   2018-11-08\ncategories: network\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/networkDoorimg.png\n---\n\n## TCP/IP란\n\nTCP/IP는, Transfer Control Protocol/Internet Protocol 의 줄임말이다. 컴퓨터와 컴퓨터가 통신하기 위한 통신 규약(Protocol)이다. TCP는 서버와 클라이언트간에 데이타를 신뢰성있게 전달하기 위해 만들어진 프로토콜이다. 데이터는 전송되는 과정에서 데이터가 유실, 손실되거나 순서가 뒤바뀌어 전달될 수 있다. TCP는 이를 검색하고 교정하여 순서를 재조합할 수 있도록 보장한다. IP는 전송할 데이터를 packet 단위로 나누어서 어디로 보낼 것인지 결정한다. 즉, TCP는 데이터의 정확성 확인을, IP는 패킷을 목적지까지 전송을 담당한다.\n\n## OSI 7 계층\n\nOSI는 Open System Interconnection Reference Model의 줄임말이다. IOS에서 제안한 모델로, 시스템에 상관없이 서로의 시스템이 연결될 수 있도록 하는 모델이다. 다음과 같이, 7계층으로 구성되어 있다.\n\n1. Application Layer\n2. Presentation Layer\n3. Session Layer\n4. Transport Layer\n5. Network Layer\n6. Data Link Layer\n7. Pysical Layer\n\n컴퓨터와 컴퓨터 사이에 데이터 전송을 위해 위의 7 계층을 거쳐서 전송이 된다. \n\n그런데 왜, 이렇게 계층화를 한 것일까 ? 각 계층을 캡슐화할 수 있기 때문이다. 캡슐화를 함으로써, 계층별로 담당하는 역할을 나눌 수 있다. 계층에 존재하는 각 프로토콜은 자신의 기능만 충실히 하여 독립성을 보장한다. 1->7로 이동하며 헤더가 붙고, 7->1로 이동하며 헤더를 풀어낸다.\n\n## TCP/IP 4 계층\n\nTCP/IP는 OSI 7계층을 단순화하여 4 계층으로 만들어서 사용한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip01.png)\n\n1. Application Layer\n\n   OSI 7 계층의 Application Layer, Presentation Layer, Session Layer를 포함한다. 응용 프로그램들 간의 데이터 통신이 이루어지는 계층이다. SMTP, FTP, HTTP 등이 사용된다.\n\n2. Transport Layer\n\n   인터넷 계층에서 결정한 목적지까지 실제 데이터를 신뢰성 있게 전송하는 역할을 한다. TCP와 UDP 등이 사용된다.\n\n3. Internet Layer\n\n   데이터의 경로를 배정하는일(라우팅)을 담당한다. 데이터를 정확히 라우팅하기 위해 IP 등이 사용된다.\n\n4. Pysical Layer\n\n   이더넷 카드와 같은 하드웨어이다. 인터넷 계층에서 형성된 패킷을 전기신호 또는 광신호로 바꾸어 전달한다.\n\n## TCP 연결 및 해제 \n\nTCP/IP 프로토콜은 OS 안에 라리브러로 내장되어 있다. 따라서 연결을 위한 3 way handshake 와 연결 해제를 위한 4 way handshake 는 OS가 처리한다. 프로그래머는 커널 내부를 몰라도 Socket 을 통해 TCP/IP를 사용할 수 있다. 즉, Socket은 Application Layer 에서 TCP/IP를 사용할 수 있도록 하는 인터페이스 역할을 한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip02.png)\n\n## 3 way handshake\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip03.png)\n\n클라이언트와 서버의 연결 3 way handshake를 통해 이루어진다. \n\n1. 연결을 하기 전 클라이언트는 Closed 상태이고, 서버는 요청을 기다리고 있는 LISTEN 상태이다.\n2. 클라이언트는 서버에 연결을 요청하는 SYN (M) 패킷을 보낸다.\n3. 서버는 클라이언트의 요청인 SYN (m)을 받고 클라이언트에게 요청을 수락한다는 ACK (M+1) 과  클라이언트 쪽에서도 포트를 열어 달라는 SYN (N) 패킷을 보낸다. 서버는 클라이언트의 응답을 기다리는 상대방의 응답을 기다리는 SYN_RCV로 상태가 된다.\n4. 클라이언트는 서버의 수락 응답은 ACK (M+1) 과 SYN (N) 패킷을 받고 포트를 열고 ACK (N+1) 을 서버로 보내면서 ESTABLISHED 상태가 된다.\n5. ACK 데이터를 받은 서버 역시 ESTBALISHED 상태로 변경되면서, 클라이언트와 서버는 연결이 된다.\n\n## 4 way handshake\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip04.png)\n\n연결 해제는 4 way handshake를 한다.\n\n1. 초기에, 서버와 클라이언트는 ESTABLISHED 상태이다.\n2. 클라이언트는 연결을 종료하겠다는 FIN 플래그를 보낸다. ACK를 기다리고 있다는 의미로 FIN_WAIT_1 상태가 된다.\n3. 서버는 알겠다는 의미로 클라이언트에 ACK를 보내고, 애플리케이션의 소켓을 닫는다. 이 때, 남아있는 데이터를 모두 보낸다. 자원을 정리하는데 시간이 소요 되므로, 소켓을 닫는데 기다리고 있는 상태라는 의미에서 CLOSE_WAIT 상태가 된다. 연결 종료를 요청한 클라이언트는 서버로부터 응답이 올 때까지 기다리고 있다는 FIN_WAIT_2 상태가 된다.\n4. 데이터를 모두 보내고 통신이 끝났으면 연결이 종료 되었다고 클라이언트에게 FIN 플래그를 보낸다. 그리고 자신은 클라이언트로부터 마지막 ACK를 기다리고 있는 LAST_ACK 상태가 된다.\n5. 클라이언트는 FIN 데이터를 받으면 TIME_WAIT 상태로 바꾸면서 서버에 ACK 데이터를 보낸다. 클라이언트는 TIME_WATE 상태에서 일정 시간이 되면 CLOSED 상태가 된다. 아직 서버로부터 받지 못한 데이터가 있을 것을 대비해 일정 시간 세션을 남겨놓고 잉여 패킷을 기다리는 것이다.\n6. ACK 데이터를 받은 서버는 소켓 연결을 close하고 CLOSED 상태가 된다.","slug":"2018-11-08-TCP:IP","published":1,"updated":"2018-11-11T00:50:21.451Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sm00iq31x7my5dtxxl","content":"<h2 id=\"TCP-IP란\"><a href=\"#TCP-IP란\" class=\"headerlink\" title=\"TCP/IP란\"></a>TCP/IP란</h2><p>TCP/IP는, Transfer Control Protocol/Internet Protocol 의 줄임말이다. 컴퓨터와 컴퓨터가 통신하기 위한 통신 규약(Protocol)이다. TCP는 서버와 클라이언트간에 데이타를 신뢰성있게 전달하기 위해 만들어진 프로토콜이다. 데이터는 전송되는 과정에서 데이터가 유실, 손실되거나 순서가 뒤바뀌어 전달될 수 있다. TCP는 이를 검색하고 교정하여 순서를 재조합할 수 있도록 보장한다. IP는 전송할 데이터를 packet 단위로 나누어서 어디로 보낼 것인지 결정한다. 즉, TCP는 데이터의 정확성 확인을, IP는 패킷을 목적지까지 전송을 담당한다.</p>\n<h2 id=\"OSI-7-계층\"><a href=\"#OSI-7-계층\" class=\"headerlink\" title=\"OSI 7 계층\"></a>OSI 7 계층</h2><p>OSI는 Open System Interconnection Reference Model의 줄임말이다. IOS에서 제안한 모델로, 시스템에 상관없이 서로의 시스템이 연결될 수 있도록 하는 모델이다. 다음과 같이, 7계층으로 구성되어 있다.</p>\n<ol>\n<li>Application Layer</li>\n<li>Presentation Layer</li>\n<li>Session Layer</li>\n<li>Transport Layer</li>\n<li>Network Layer</li>\n<li>Data Link Layer</li>\n<li>Pysical Layer</li>\n</ol>\n<p>컴퓨터와 컴퓨터 사이에 데이터 전송을 위해 위의 7 계층을 거쳐서 전송이 된다. </p>\n<p>그런데 왜, 이렇게 계층화를 한 것일까 ? 각 계층을 캡슐화할 수 있기 때문이다. 캡슐화를 함으로써, 계층별로 담당하는 역할을 나눌 수 있다. 계층에 존재하는 각 프로토콜은 자신의 기능만 충실히 하여 독립성을 보장한다. 1-&gt;7로 이동하며 헤더가 붙고, 7-&gt;1로 이동하며 헤더를 풀어낸다.</p>\n<h2 id=\"TCP-IP-4-계층\"><a href=\"#TCP-IP-4-계층\" class=\"headerlink\" title=\"TCP/IP 4 계층\"></a>TCP/IP 4 계층</h2><p>TCP/IP는 OSI 7계층을 단순화하여 4 계층으로 만들어서 사용한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip01.png\" alt=\"img\"></p>\n<ol>\n<li><p>Application Layer</p>\n<p>OSI 7 계층의 Application Layer, Presentation Layer, Session Layer를 포함한다. 응용 프로그램들 간의 데이터 통신이 이루어지는 계층이다. SMTP, FTP, HTTP 등이 사용된다.</p>\n</li>\n<li><p>Transport Layer</p>\n<p>인터넷 계층에서 결정한 목적지까지 실제 데이터를 신뢰성 있게 전송하는 역할을 한다. TCP와 UDP 등이 사용된다.</p>\n</li>\n<li><p>Internet Layer</p>\n<p>데이터의 경로를 배정하는일(라우팅)을 담당한다. 데이터를 정확히 라우팅하기 위해 IP 등이 사용된다.</p>\n</li>\n<li><p>Pysical Layer</p>\n<p>이더넷 카드와 같은 하드웨어이다. 인터넷 계층에서 형성된 패킷을 전기신호 또는 광신호로 바꾸어 전달한다.</p>\n</li>\n</ol>\n<h2 id=\"TCP-연결-및-해제\"><a href=\"#TCP-연결-및-해제\" class=\"headerlink\" title=\"TCP 연결 및 해제\"></a>TCP 연결 및 해제</h2><p>TCP/IP 프로토콜은 OS 안에 라리브러로 내장되어 있다. 따라서 연결을 위한 3 way handshake 와 연결 해제를 위한 4 way handshake 는 OS가 처리한다. 프로그래머는 커널 내부를 몰라도 Socket 을 통해 TCP/IP를 사용할 수 있다. 즉, Socket은 Application Layer 에서 TCP/IP를 사용할 수 있도록 하는 인터페이스 역할을 한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip02.png\" alt=\"img\"></p>\n<h2 id=\"3-way-handshake\"><a href=\"#3-way-handshake\" class=\"headerlink\" title=\"3 way handshake\"></a>3 way handshake</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip03.png\" alt=\"img\"></p>\n<p>클라이언트와 서버의 연결 3 way handshake를 통해 이루어진다. </p>\n<ol>\n<li>연결을 하기 전 클라이언트는 Closed 상태이고, 서버는 요청을 기다리고 있는 LISTEN 상태이다.</li>\n<li>클라이언트는 서버에 연결을 요청하는 SYN (M) 패킷을 보낸다.</li>\n<li>서버는 클라이언트의 요청인 SYN (m)을 받고 클라이언트에게 요청을 수락한다는 ACK (M+1) 과  클라이언트 쪽에서도 포트를 열어 달라는 SYN (N) 패킷을 보낸다. 서버는 클라이언트의 응답을 기다리는 상대방의 응답을 기다리는 SYN_RCV로 상태가 된다.</li>\n<li>클라이언트는 서버의 수락 응답은 ACK (M+1) 과 SYN (N) 패킷을 받고 포트를 열고 ACK (N+1) 을 서버로 보내면서 ESTABLISHED 상태가 된다.</li>\n<li>ACK 데이터를 받은 서버 역시 ESTBALISHED 상태로 변경되면서, 클라이언트와 서버는 연결이 된다.</li>\n</ol>\n<h2 id=\"4-way-handshake\"><a href=\"#4-way-handshake\" class=\"headerlink\" title=\"4 way handshake\"></a>4 way handshake</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip04.png\" alt=\"img\"></p>\n<p>연결 해제는 4 way handshake를 한다.</p>\n<ol>\n<li>초기에, 서버와 클라이언트는 ESTABLISHED 상태이다.</li>\n<li>클라이언트는 연결을 종료하겠다는 FIN 플래그를 보낸다. ACK를 기다리고 있다는 의미로 FIN_WAIT_1 상태가 된다.</li>\n<li>서버는 알겠다는 의미로 클라이언트에 ACK를 보내고, 애플리케이션의 소켓을 닫는다. 이 때, 남아있는 데이터를 모두 보낸다. 자원을 정리하는데 시간이 소요 되므로, 소켓을 닫는데 기다리고 있는 상태라는 의미에서 CLOSE_WAIT 상태가 된다. 연결 종료를 요청한 클라이언트는 서버로부터 응답이 올 때까지 기다리고 있다는 FIN_WAIT_2 상태가 된다.</li>\n<li>데이터를 모두 보내고 통신이 끝났으면 연결이 종료 되었다고 클라이언트에게 FIN 플래그를 보낸다. 그리고 자신은 클라이언트로부터 마지막 ACK를 기다리고 있는 LAST_ACK 상태가 된다.</li>\n<li>클라이언트는 FIN 데이터를 받으면 TIME_WAIT 상태로 바꾸면서 서버에 ACK 데이터를 보낸다. 클라이언트는 TIME_WATE 상태에서 일정 시간이 되면 CLOSED 상태가 된다. 아직 서버로부터 받지 못한 데이터가 있을 것을 대비해 일정 시간 세션을 남겨놓고 잉여 패킷을 기다리는 것이다.</li>\n<li>ACK 데이터를 받은 서버는 소켓 연결을 close하고 CLOSED 상태가 된다.</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"TCP-IP란\"><a href=\"#TCP-IP란\" class=\"headerlink\" title=\"TCP/IP란\"></a>TCP/IP란</h2><p>TCP/IP는, Transfer Control Protocol/Internet Protocol 의 줄임말이다. 컴퓨터와 컴퓨터가 통신하기 위한 통신 규약(Protocol)이다. TCP는 서버와 클라이언트간에 데이타를 신뢰성있게 전달하기 위해 만들어진 프로토콜이다. 데이터는 전송되는 과정에서 데이터가 유실, 손실되거나 순서가 뒤바뀌어 전달될 수 있다. TCP는 이를 검색하고 교정하여 순서를 재조합할 수 있도록 보장한다. IP는 전송할 데이터를 packet 단위로 나누어서 어디로 보낼 것인지 결정한다. 즉, TCP는 데이터의 정확성 확인을, IP는 패킷을 목적지까지 전송을 담당한다.</p>\n<h2 id=\"OSI-7-계층\"><a href=\"#OSI-7-계층\" class=\"headerlink\" title=\"OSI 7 계층\"></a>OSI 7 계층</h2><p>OSI는 Open System Interconnection Reference Model의 줄임말이다. IOS에서 제안한 모델로, 시스템에 상관없이 서로의 시스템이 연결될 수 있도록 하는 모델이다. 다음과 같이, 7계층으로 구성되어 있다.</p>\n<ol>\n<li>Application Layer</li>\n<li>Presentation Layer</li>\n<li>Session Layer</li>\n<li>Transport Layer</li>\n<li>Network Layer</li>\n<li>Data Link Layer</li>\n<li>Pysical Layer</li>\n</ol>\n<p>컴퓨터와 컴퓨터 사이에 데이터 전송을 위해 위의 7 계층을 거쳐서 전송이 된다. </p>\n<p>그런데 왜, 이렇게 계층화를 한 것일까 ? 각 계층을 캡슐화할 수 있기 때문이다. 캡슐화를 함으로써, 계층별로 담당하는 역할을 나눌 수 있다. 계층에 존재하는 각 프로토콜은 자신의 기능만 충실히 하여 독립성을 보장한다. 1-&gt;7로 이동하며 헤더가 붙고, 7-&gt;1로 이동하며 헤더를 풀어낸다.</p>\n<h2 id=\"TCP-IP-4-계층\"><a href=\"#TCP-IP-4-계층\" class=\"headerlink\" title=\"TCP/IP 4 계층\"></a>TCP/IP 4 계층</h2><p>TCP/IP는 OSI 7계층을 단순화하여 4 계층으로 만들어서 사용한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip01.png\" alt=\"img\"></p>\n<ol>\n<li><p>Application Layer</p>\n<p>OSI 7 계층의 Application Layer, Presentation Layer, Session Layer를 포함한다. 응용 프로그램들 간의 데이터 통신이 이루어지는 계층이다. SMTP, FTP, HTTP 등이 사용된다.</p>\n</li>\n<li><p>Transport Layer</p>\n<p>인터넷 계층에서 결정한 목적지까지 실제 데이터를 신뢰성 있게 전송하는 역할을 한다. TCP와 UDP 등이 사용된다.</p>\n</li>\n<li><p>Internet Layer</p>\n<p>데이터의 경로를 배정하는일(라우팅)을 담당한다. 데이터를 정확히 라우팅하기 위해 IP 등이 사용된다.</p>\n</li>\n<li><p>Pysical Layer</p>\n<p>이더넷 카드와 같은 하드웨어이다. 인터넷 계층에서 형성된 패킷을 전기신호 또는 광신호로 바꾸어 전달한다.</p>\n</li>\n</ol>\n<h2 id=\"TCP-연결-및-해제\"><a href=\"#TCP-연결-및-해제\" class=\"headerlink\" title=\"TCP 연결 및 해제\"></a>TCP 연결 및 해제</h2><p>TCP/IP 프로토콜은 OS 안에 라리브러로 내장되어 있다. 따라서 연결을 위한 3 way handshake 와 연결 해제를 위한 4 way handshake 는 OS가 처리한다. 프로그래머는 커널 내부를 몰라도 Socket 을 통해 TCP/IP를 사용할 수 있다. 즉, Socket은 Application Layer 에서 TCP/IP를 사용할 수 있도록 하는 인터페이스 역할을 한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip02.png\" alt=\"img\"></p>\n<h2 id=\"3-way-handshake\"><a href=\"#3-way-handshake\" class=\"headerlink\" title=\"3 way handshake\"></a>3 way handshake</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip03.png\" alt=\"img\"></p>\n<p>클라이언트와 서버의 연결 3 way handshake를 통해 이루어진다. </p>\n<ol>\n<li>연결을 하기 전 클라이언트는 Closed 상태이고, 서버는 요청을 기다리고 있는 LISTEN 상태이다.</li>\n<li>클라이언트는 서버에 연결을 요청하는 SYN (M) 패킷을 보낸다.</li>\n<li>서버는 클라이언트의 요청인 SYN (m)을 받고 클라이언트에게 요청을 수락한다는 ACK (M+1) 과  클라이언트 쪽에서도 포트를 열어 달라는 SYN (N) 패킷을 보낸다. 서버는 클라이언트의 응답을 기다리는 상대방의 응답을 기다리는 SYN_RCV로 상태가 된다.</li>\n<li>클라이언트는 서버의 수락 응답은 ACK (M+1) 과 SYN (N) 패킷을 받고 포트를 열고 ACK (N+1) 을 서버로 보내면서 ESTABLISHED 상태가 된다.</li>\n<li>ACK 데이터를 받은 서버 역시 ESTBALISHED 상태로 변경되면서, 클라이언트와 서버는 연결이 된다.</li>\n</ol>\n<h2 id=\"4-way-handshake\"><a href=\"#4-way-handshake\" class=\"headerlink\" title=\"4 way handshake\"></a>4 way handshake</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/tcpip04.png\" alt=\"img\"></p>\n<p>연결 해제는 4 way handshake를 한다.</p>\n<ol>\n<li>초기에, 서버와 클라이언트는 ESTABLISHED 상태이다.</li>\n<li>클라이언트는 연결을 종료하겠다는 FIN 플래그를 보낸다. ACK를 기다리고 있다는 의미로 FIN_WAIT_1 상태가 된다.</li>\n<li>서버는 알겠다는 의미로 클라이언트에 ACK를 보내고, 애플리케이션의 소켓을 닫는다. 이 때, 남아있는 데이터를 모두 보낸다. 자원을 정리하는데 시간이 소요 되므로, 소켓을 닫는데 기다리고 있는 상태라는 의미에서 CLOSE_WAIT 상태가 된다. 연결 종료를 요청한 클라이언트는 서버로부터 응답이 올 때까지 기다리고 있다는 FIN_WAIT_2 상태가 된다.</li>\n<li>데이터를 모두 보내고 통신이 끝났으면 연결이 종료 되었다고 클라이언트에게 FIN 플래그를 보낸다. 그리고 자신은 클라이언트로부터 마지막 ACK를 기다리고 있는 LAST_ACK 상태가 된다.</li>\n<li>클라이언트는 FIN 데이터를 받으면 TIME_WAIT 상태로 바꾸면서 서버에 ACK 데이터를 보낸다. 클라이언트는 TIME_WATE 상태에서 일정 시간이 되면 CLOSED 상태가 된다. 아직 서버로부터 받지 못한 데이터가 있을 것을 대비해 일정 시간 세션을 남겨놓고 잉여 패킷을 기다리는 것이다.</li>\n<li>ACK 데이터를 받은 서버는 소켓 연결을 close하고 CLOSED 상태가 된다.</li>\n</ol>\n"},{"layout":"post","title":"버블정렬","date":"2018-11-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## 버블정렬이란\n\n서로 인접한 두 원소를 검사하여 정렬하는 알고리즘이다.\n첫 번째 자료와 두 번째 자료를, 두 번째 자료와 세 번째 자료를, 세 번째와 네 번째를, … 이런 식으로 (마지막-1)번째 자료와 마지막 자료를 비교하여 교환하면서 자료를 정렬한다.\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bubbleSort01.png)\n\n## 시간 복잡도\n\n- 비교 횟수\n  최상, 평균, 최악 모두 일정하다.  n-1, n-2, … , 2, 1 번 = n(n-1)/2\n- 교환 횟수\n  입력 자료가 역순으로 정렬되어 있는 최악의 경우, 한 번 교환하기 위하여 3번의 이동(SWAP 함수의 작업)이 필\n  요하므로 (비교 횟수 * 3) 번 = 3n(n-1)/2\n- T(n) = O(n^2)\n\n## Reference\n\n<https://gmlwjd9405.github.io/2018/05/06/algorithm-bubble-sort.html>","source":"_posts/2018-11-11-버블정렬.md","raw":"---\nlayout: post\ntitle:  \"버블정렬\"\ndate:   2018-11-11\ncategories: dataStructure\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## 버블정렬이란\n\n서로 인접한 두 원소를 검사하여 정렬하는 알고리즘이다.\n첫 번째 자료와 두 번째 자료를, 두 번째 자료와 세 번째 자료를, 세 번째와 네 번째를, … 이런 식으로 (마지막-1)번째 자료와 마지막 자료를 비교하여 교환하면서 자료를 정렬한다.\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bubbleSort01.png)\n\n## 시간 복잡도\n\n- 비교 횟수\n  최상, 평균, 최악 모두 일정하다.  n-1, n-2, … , 2, 1 번 = n(n-1)/2\n- 교환 횟수\n  입력 자료가 역순으로 정렬되어 있는 최악의 경우, 한 번 교환하기 위하여 3번의 이동(SWAP 함수의 작업)이 필\n  요하므로 (비교 횟수 * 3) 번 = 3n(n-1)/2\n- T(n) = O(n^2)\n\n## Reference\n\n<https://gmlwjd9405.github.io/2018/05/06/algorithm-bubble-sort.html>","slug":"2018-11-11-버블정렬","published":1,"updated":"2018-11-12T13:21:51.676Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sn00is31x79glhklao","content":"<h2 id=\"버블정렬이란\"><a href=\"#버블정렬이란\" class=\"headerlink\" title=\"버블정렬이란\"></a>버블정렬이란</h2><p>서로 인접한 두 원소를 검사하여 정렬하는 알고리즘이다.<br>첫 번째 자료와 두 번째 자료를, 두 번째 자료와 세 번째 자료를, 세 번째와 네 번째를, … 이런 식으로 (마지막-1)번째 자료와 마지막 자료를 비교하여 교환하면서 자료를 정렬한다.<br><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bubbleSort01.png\" alt=\"img\"></p>\n<h2 id=\"시간-복잡도\"><a href=\"#시간-복잡도\" class=\"headerlink\" title=\"시간 복잡도\"></a>시간 복잡도</h2><ul>\n<li>비교 횟수<br>최상, 평균, 최악 모두 일정하다.  n-1, n-2, … , 2, 1 번 = n(n-1)/2</li>\n<li>교환 횟수<br>입력 자료가 역순으로 정렬되어 있는 최악의 경우, 한 번 교환하기 위하여 3번의 이동(SWAP 함수의 작업)이 필<br>요하므로 (비교 횟수 * 3) 번 = 3n(n-1)/2</li>\n<li>T(n) = O(n^2)</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://gmlwjd9405.github.io/2018/05/06/algorithm-bubble-sort.html\" target=\"_blank\" rel=\"noopener\">https://gmlwjd9405.github.io/2018/05/06/algorithm-bubble-sort.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"버블정렬이란\"><a href=\"#버블정렬이란\" class=\"headerlink\" title=\"버블정렬이란\"></a>버블정렬이란</h2><p>서로 인접한 두 원소를 검사하여 정렬하는 알고리즘이다.<br>첫 번째 자료와 두 번째 자료를, 두 번째 자료와 세 번째 자료를, 세 번째와 네 번째를, … 이런 식으로 (마지막-1)번째 자료와 마지막 자료를 비교하여 교환하면서 자료를 정렬한다.<br><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/bubbleSort01.png\" alt=\"img\"></p>\n<h2 id=\"시간-복잡도\"><a href=\"#시간-복잡도\" class=\"headerlink\" title=\"시간 복잡도\"></a>시간 복잡도</h2><ul>\n<li>비교 횟수<br>최상, 평균, 최악 모두 일정하다.  n-1, n-2, … , 2, 1 번 = n(n-1)/2</li>\n<li>교환 횟수<br>입력 자료가 역순으로 정렬되어 있는 최악의 경우, 한 번 교환하기 위하여 3번의 이동(SWAP 함수의 작업)이 필<br>요하므로 (비교 횟수 * 3) 번 = 3n(n-1)/2</li>\n<li>T(n) = O(n^2)</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://gmlwjd9405.github.io/2018/05/06/algorithm-bubble-sort.html\" target=\"_blank\" rel=\"noopener\">https://gmlwjd9405.github.io/2018/05/06/algorithm-bubble-sort.html</a></p>\n"},{"layout":"post","title":"삽입정렬","date":"2018-11-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## 삽입정렬이란\n\n배열의 모든 요소를 앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여, 자신의 위치를 찾아 삽입함으로써 정렬을 완성하는 알고리즘이다.\n\n두 번째 자료는 첫 번째 자료, 세 번째 자료는 두 번째와 첫 번째 자료, 네 번째 자료는 세 번째, 두 번째, 첫 번째 자료와 비교한 후 자료가 삽입될 위치를 찾는다. 자료가 삽입될 위치를 찾았다면 그 위치에 자료를 삽입하기 위해 자료를 한 칸씩 뒤로 이동시킨다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/insertionSort01.png)\n\n## 시간 복잡도\n\n1. for 루프는 n-1번 반복 되고\n2. 최악의 경우 데이터 삽입을 위한 비교는 i-1번 비교\n\n따라서 최악의 경우 T(n) = (n-1) + (n-2) + ... + 2 + 1 = n(n-1)/2 = O(n^2)\n\n## Reference\n\n<https://ko.wikipedia.org/wiki/삽입_정렬>\n<https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/>","source":"_posts/2018-11-11-삽입정렬.md","raw":"---\nlayout: post\ntitle:  \"삽입정렬\"\ndate:   2018-11-11\ncategories: dataStructure\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## 삽입정렬이란\n\n배열의 모든 요소를 앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여, 자신의 위치를 찾아 삽입함으로써 정렬을 완성하는 알고리즘이다.\n\n두 번째 자료는 첫 번째 자료, 세 번째 자료는 두 번째와 첫 번째 자료, 네 번째 자료는 세 번째, 두 번째, 첫 번째 자료와 비교한 후 자료가 삽입될 위치를 찾는다. 자료가 삽입될 위치를 찾았다면 그 위치에 자료를 삽입하기 위해 자료를 한 칸씩 뒤로 이동시킨다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/insertionSort01.png)\n\n## 시간 복잡도\n\n1. for 루프는 n-1번 반복 되고\n2. 최악의 경우 데이터 삽입을 위한 비교는 i-1번 비교\n\n따라서 최악의 경우 T(n) = (n-1) + (n-2) + ... + 2 + 1 = n(n-1)/2 = O(n^2)\n\n## Reference\n\n<https://ko.wikipedia.org/wiki/삽입_정렬>\n<https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/>","slug":"2018-11-11-삽입정렬","published":1,"updated":"2018-11-12T13:22:02.504Z","comments":1,"photos":[],"link":"","_id":"cjp6k65so00iv31x7i01ej03d","content":"<h2 id=\"삽입정렬이란\"><a href=\"#삽입정렬이란\" class=\"headerlink\" title=\"삽입정렬이란\"></a>삽입정렬이란</h2><p>배열의 모든 요소를 앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여, 자신의 위치를 찾아 삽입함으로써 정렬을 완성하는 알고리즘이다.</p>\n<p>두 번째 자료는 첫 번째 자료, 세 번째 자료는 두 번째와 첫 번째 자료, 네 번째 자료는 세 번째, 두 번째, 첫 번째 자료와 비교한 후 자료가 삽입될 위치를 찾는다. 자료가 삽입될 위치를 찾았다면 그 위치에 자료를 삽입하기 위해 자료를 한 칸씩 뒤로 이동시킨다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/insertionSort01.png\" alt=\"img\"></p>\n<h2 id=\"시간-복잡도\"><a href=\"#시간-복잡도\" class=\"headerlink\" title=\"시간 복잡도\"></a>시간 복잡도</h2><ol>\n<li>for 루프는 n-1번 반복 되고</li>\n<li>최악의 경우 데이터 삽입을 위한 비교는 i-1번 비교</li>\n</ol>\n<p>따라서 최악의 경우 T(n) = (n-1) + (n-2) + … + 2 + 1 = n(n-1)/2 = O(n^2)</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://ko.wikipedia.org/wiki/삽입_정렬\" target=\"_blank\" rel=\"noopener\">https://ko.wikipedia.org/wiki/삽입_정렬</a><br><a href=\"https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/\" target=\"_blank\" rel=\"noopener\">https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"삽입정렬이란\"><a href=\"#삽입정렬이란\" class=\"headerlink\" title=\"삽입정렬이란\"></a>삽입정렬이란</h2><p>배열의 모든 요소를 앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여, 자신의 위치를 찾아 삽입함으로써 정렬을 완성하는 알고리즘이다.</p>\n<p>두 번째 자료는 첫 번째 자료, 세 번째 자료는 두 번째와 첫 번째 자료, 네 번째 자료는 세 번째, 두 번째, 첫 번째 자료와 비교한 후 자료가 삽입될 위치를 찾는다. 자료가 삽입될 위치를 찾았다면 그 위치에 자료를 삽입하기 위해 자료를 한 칸씩 뒤로 이동시킨다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/insertionSort01.png\" alt=\"img\"></p>\n<h2 id=\"시간-복잡도\"><a href=\"#시간-복잡도\" class=\"headerlink\" title=\"시간 복잡도\"></a>시간 복잡도</h2><ol>\n<li>for 루프는 n-1번 반복 되고</li>\n<li>최악의 경우 데이터 삽입을 위한 비교는 i-1번 비교</li>\n</ol>\n<p>따라서 최악의 경우 T(n) = (n-1) + (n-2) + … + 2 + 1 = n(n-1)/2 = O(n^2)</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://ko.wikipedia.org/wiki/삽입_정렬\" target=\"_blank\" rel=\"noopener\">https://ko.wikipedia.org/wiki/삽입_정렬</a><br><a href=\"https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/\" target=\"_blank\" rel=\"noopener\">https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/</a></p>\n"},{"layout":"post","title":"선택정렬","date":"2018-11-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## 선택정렬이란\n\n해당 순서에 원소를 넣을 위치는 이미 정해져 있고, 어떤 원소를 넣을지 선택하는 정렬이다.\n\n첫 번째 자료를 두 번째 자료부터 마지막 자료까지 차례대로 비교하여 가장 작은 값을 찾아 첫 번째에 놓고, 두 번째 자료를 세 번째 자료부터 마지막 자료까지와 차례대로 비교하여 그 중 가장 작은 값을 찾아 두 번째 위치에 놓는 과정을 반복하며 정렬을 수행한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/selectionSort01.png)\n\n## 시간 복잡도\n\n1. for 루프는 n-1번 반복 되고\n2. 최소값을 찾기 위한 비교 횟수는 n-1, n-2, ... , 2, 1\n3. 교환은 상수 시간 작업이므로\n\nT(n) = (n-1) + (n-2) + ... + 2 + 1 = n(n-1)/2 = O(n^2)\n\n## Reference\n\n<https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/>\n<https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html>","source":"_posts/2018-11-11-선택정렬.md","raw":"---\nlayout: post\ntitle:  \"선택정렬\"\ndate:   2018-11-11\ncategories: dataStructure\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## 선택정렬이란\n\n해당 순서에 원소를 넣을 위치는 이미 정해져 있고, 어떤 원소를 넣을지 선택하는 정렬이다.\n\n첫 번째 자료를 두 번째 자료부터 마지막 자료까지 차례대로 비교하여 가장 작은 값을 찾아 첫 번째에 놓고, 두 번째 자료를 세 번째 자료부터 마지막 자료까지와 차례대로 비교하여 그 중 가장 작은 값을 찾아 두 번째 위치에 놓는 과정을 반복하며 정렬을 수행한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/selectionSort01.png)\n\n## 시간 복잡도\n\n1. for 루프는 n-1번 반복 되고\n2. 최소값을 찾기 위한 비교 횟수는 n-1, n-2, ... , 2, 1\n3. 교환은 상수 시간 작업이므로\n\nT(n) = (n-1) + (n-2) + ... + 2 + 1 = n(n-1)/2 = O(n^2)\n\n## Reference\n\n<https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/>\n<https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html>","slug":"2018-11-11-선택정렬","published":1,"updated":"2018-11-12T13:21:47.867Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sp00ix31x7ajdjnfcw","content":"<h2 id=\"선택정렬이란\"><a href=\"#선택정렬이란\" class=\"headerlink\" title=\"선택정렬이란\"></a>선택정렬이란</h2><p>해당 순서에 원소를 넣을 위치는 이미 정해져 있고, 어떤 원소를 넣을지 선택하는 정렬이다.</p>\n<p>첫 번째 자료를 두 번째 자료부터 마지막 자료까지 차례대로 비교하여 가장 작은 값을 찾아 첫 번째에 놓고, 두 번째 자료를 세 번째 자료부터 마지막 자료까지와 차례대로 비교하여 그 중 가장 작은 값을 찾아 두 번째 위치에 놓는 과정을 반복하며 정렬을 수행한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/selectionSort01.png\" alt=\"img\"></p>\n<h2 id=\"시간-복잡도\"><a href=\"#시간-복잡도\" class=\"headerlink\" title=\"시간 복잡도\"></a>시간 복잡도</h2><ol>\n<li>for 루프는 n-1번 반복 되고</li>\n<li>최소값을 찾기 위한 비교 횟수는 n-1, n-2, … , 2, 1</li>\n<li>교환은 상수 시간 작업이므로</li>\n</ol>\n<p>T(n) = (n-1) + (n-2) + … + 2 + 1 = n(n-1)/2 = O(n^2)</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/\" target=\"_blank\" rel=\"noopener\">https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/</a><br><a href=\"https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html\" target=\"_blank\" rel=\"noopener\">https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"선택정렬이란\"><a href=\"#선택정렬이란\" class=\"headerlink\" title=\"선택정렬이란\"></a>선택정렬이란</h2><p>해당 순서에 원소를 넣을 위치는 이미 정해져 있고, 어떤 원소를 넣을지 선택하는 정렬이다.</p>\n<p>첫 번째 자료를 두 번째 자료부터 마지막 자료까지 차례대로 비교하여 가장 작은 값을 찾아 첫 번째에 놓고, 두 번째 자료를 세 번째 자료부터 마지막 자료까지와 차례대로 비교하여 그 중 가장 작은 값을 찾아 두 번째 위치에 놓는 과정을 반복하며 정렬을 수행한다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/selectionSort01.png\" alt=\"img\"></p>\n<h2 id=\"시간-복잡도\"><a href=\"#시간-복잡도\" class=\"headerlink\" title=\"시간 복잡도\"></a>시간 복잡도</h2><ol>\n<li>for 루프는 n-1번 반복 되고</li>\n<li>최소값을 찾기 위한 비교 횟수는 n-1, n-2, … , 2, 1</li>\n<li>교환은 상수 시간 작업이므로</li>\n</ol>\n<p>T(n) = (n-1) + (n-2) + … + 2 + 1 = n(n-1)/2 = O(n^2)</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/\" target=\"_blank\" rel=\"noopener\">https://jongmin92.github.io/2017/11/06/Algorithm/Concept/basic-sort/</a><br><a href=\"https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html\" target=\"_blank\" rel=\"noopener\">https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html</a></p>\n"},{"layout":"post","title":"Heap","date":"2018-11-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## Heap 이란\n\n우선순위 큐를 위한 완전이진트리\n\n## 우선순위 큐\n\n데이터들이 우선순위를 가지고 있고, 우선순위가 높은 데이터가 먼저 출력되는 자료구조.\n우선순위 큐는 배열, 연결리스트, 힙 으로 구현이 가능하다. 이 중에서 힙(heap)으로 구현하는 것이 가장 효율적.\n\n## Heap의 종류\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/heap01.png)\n\n1. 최대힙\n   부모 노드의 키 값이 자식 노드의 키 값보다 크거나 같은 완전 이진 트리\n2. 최소힙\n   부모 노드의 키 값이 자식 노드의 키 값보다 작거나 같은 완전 이진 트리\n\n## Heap의 구현\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/heap02.png)\n\n배열로 구현한다.\n부모 노드와 자식 노드의 관계는 다음과 같다.\n- 왼쪽 자식의 인덱스 = (부모의 인덱스) * 2\n- 오른쪽 자식의 인덱스 = (부모의 인덱스) * 2 + 1\n- 부모의 인덱스 = (자식의 인덱스) / 2\n\n## Heap의 삽입\n\n1. 힙에 새로운 요소가 들어오면, 일단 새로운 노드를 힙의 마지막 노드에 이어서 삽입한다.\n2. 새로운 노드를 부모 노드들과 교환해서 힙의 성질을 만족시킨다.\n\n## Heap의 삭제\n\n1. 최대 힙에서 최댓값은 루트 노드이므로 루트 노드가 삭제된다. \n   최대 힙(max heap)에서 삭제 연산은 최댓값을 가진 요소를 삭제하는 것이다.\n   최소 힙(min heap)에서 삭제 연산은 최솟값을 가진 요소를 삭제하는 것이다.\n2. 삭제된 루트 노드에는 힙의 마지막 노드를 가져온다.\n3. 힙을 재구성한다.\n\n## Heap 정렬\n\n최대 힙 트리나 최소 힙 트리를 구성해 정렬을 하는 방법\n\n## Heap 정렬의 시간 복잡도\n\n힙 트리의 전체 높이가 거의 log₂n(완전 이진 트리이므로)이므로 하나의 요소를 힙에 삽입하거나 삭제할 때 힙을 재정비하는 시간이 log₂n만큼 소요된다.\n\n요소의 개수가 n개 이므로 전체적으로 O(nlog₂n)의 시간이 걸린다.\n\nT(n) = O(nlog₂n)\n\n## Reference\n\nhttps://gmlwjd9405.github.io/2018/05/10/algorithm-heap-sort.html\n\n\n\n","source":"_posts/2018-11-11-Heap.md","raw":"---\nlayout: post\ntitle:  \"Heap\"\ndate:   2018-11-11\ncategories: dataStructure\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## Heap 이란\n\n우선순위 큐를 위한 완전이진트리\n\n## 우선순위 큐\n\n데이터들이 우선순위를 가지고 있고, 우선순위가 높은 데이터가 먼저 출력되는 자료구조.\n우선순위 큐는 배열, 연결리스트, 힙 으로 구현이 가능하다. 이 중에서 힙(heap)으로 구현하는 것이 가장 효율적.\n\n## Heap의 종류\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/heap01.png)\n\n1. 최대힙\n   부모 노드의 키 값이 자식 노드의 키 값보다 크거나 같은 완전 이진 트리\n2. 최소힙\n   부모 노드의 키 값이 자식 노드의 키 값보다 작거나 같은 완전 이진 트리\n\n## Heap의 구현\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/heap02.png)\n\n배열로 구현한다.\n부모 노드와 자식 노드의 관계는 다음과 같다.\n- 왼쪽 자식의 인덱스 = (부모의 인덱스) * 2\n- 오른쪽 자식의 인덱스 = (부모의 인덱스) * 2 + 1\n- 부모의 인덱스 = (자식의 인덱스) / 2\n\n## Heap의 삽입\n\n1. 힙에 새로운 요소가 들어오면, 일단 새로운 노드를 힙의 마지막 노드에 이어서 삽입한다.\n2. 새로운 노드를 부모 노드들과 교환해서 힙의 성질을 만족시킨다.\n\n## Heap의 삭제\n\n1. 최대 힙에서 최댓값은 루트 노드이므로 루트 노드가 삭제된다. \n   최대 힙(max heap)에서 삭제 연산은 최댓값을 가진 요소를 삭제하는 것이다.\n   최소 힙(min heap)에서 삭제 연산은 최솟값을 가진 요소를 삭제하는 것이다.\n2. 삭제된 루트 노드에는 힙의 마지막 노드를 가져온다.\n3. 힙을 재구성한다.\n\n## Heap 정렬\n\n최대 힙 트리나 최소 힙 트리를 구성해 정렬을 하는 방법\n\n## Heap 정렬의 시간 복잡도\n\n힙 트리의 전체 높이가 거의 log₂n(완전 이진 트리이므로)이므로 하나의 요소를 힙에 삽입하거나 삭제할 때 힙을 재정비하는 시간이 log₂n만큼 소요된다.\n\n요소의 개수가 n개 이므로 전체적으로 O(nlog₂n)의 시간이 걸린다.\n\nT(n) = O(nlog₂n)\n\n## Reference\n\nhttps://gmlwjd9405.github.io/2018/05/10/algorithm-heap-sort.html\n\n\n\n","slug":"2018-11-11-Heap","published":1,"updated":"2018-11-12T13:21:55.456Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sr00iz31x7hftprq2m","content":"<h2 id=\"Heap-이란\"><a href=\"#Heap-이란\" class=\"headerlink\" title=\"Heap 이란\"></a>Heap 이란</h2><p>우선순위 큐를 위한 완전이진트리</p>\n<h2 id=\"우선순위-큐\"><a href=\"#우선순위-큐\" class=\"headerlink\" title=\"우선순위 큐\"></a>우선순위 큐</h2><p>데이터들이 우선순위를 가지고 있고, 우선순위가 높은 데이터가 먼저 출력되는 자료구조.<br>우선순위 큐는 배열, 연결리스트, 힙 으로 구현이 가능하다. 이 중에서 힙(heap)으로 구현하는 것이 가장 효율적.</p>\n<h2 id=\"Heap의-종류\"><a href=\"#Heap의-종류\" class=\"headerlink\" title=\"Heap의 종류\"></a>Heap의 종류</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/heap01.png\" alt=\"img\"></p>\n<ol>\n<li>최대힙<br>부모 노드의 키 값이 자식 노드의 키 값보다 크거나 같은 완전 이진 트리</li>\n<li>최소힙<br>부모 노드의 키 값이 자식 노드의 키 값보다 작거나 같은 완전 이진 트리</li>\n</ol>\n<h2 id=\"Heap의-구현\"><a href=\"#Heap의-구현\" class=\"headerlink\" title=\"Heap의 구현\"></a>Heap의 구현</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/heap02.png\" alt=\"img\"></p>\n<p>배열로 구현한다.<br>부모 노드와 자식 노드의 관계는 다음과 같다.</p>\n<ul>\n<li>왼쪽 자식의 인덱스 = (부모의 인덱스) * 2</li>\n<li>오른쪽 자식의 인덱스 = (부모의 인덱스) * 2 + 1</li>\n<li>부모의 인덱스 = (자식의 인덱스) / 2</li>\n</ul>\n<h2 id=\"Heap의-삽입\"><a href=\"#Heap의-삽입\" class=\"headerlink\" title=\"Heap의 삽입\"></a>Heap의 삽입</h2><ol>\n<li>힙에 새로운 요소가 들어오면, 일단 새로운 노드를 힙의 마지막 노드에 이어서 삽입한다.</li>\n<li>새로운 노드를 부모 노드들과 교환해서 힙의 성질을 만족시킨다.</li>\n</ol>\n<h2 id=\"Heap의-삭제\"><a href=\"#Heap의-삭제\" class=\"headerlink\" title=\"Heap의 삭제\"></a>Heap의 삭제</h2><ol>\n<li>최대 힙에서 최댓값은 루트 노드이므로 루트 노드가 삭제된다.<br>최대 힙(max heap)에서 삭제 연산은 최댓값을 가진 요소를 삭제하는 것이다.<br>최소 힙(min heap)에서 삭제 연산은 최솟값을 가진 요소를 삭제하는 것이다.</li>\n<li>삭제된 루트 노드에는 힙의 마지막 노드를 가져온다.</li>\n<li>힙을 재구성한다.</li>\n</ol>\n<h2 id=\"Heap-정렬\"><a href=\"#Heap-정렬\" class=\"headerlink\" title=\"Heap 정렬\"></a>Heap 정렬</h2><p>최대 힙 트리나 최소 힙 트리를 구성해 정렬을 하는 방법</p>\n<h2 id=\"Heap-정렬의-시간-복잡도\"><a href=\"#Heap-정렬의-시간-복잡도\" class=\"headerlink\" title=\"Heap 정렬의 시간 복잡도\"></a>Heap 정렬의 시간 복잡도</h2><p>힙 트리의 전체 높이가 거의 log₂n(완전 이진 트리이므로)이므로 하나의 요소를 힙에 삽입하거나 삭제할 때 힙을 재정비하는 시간이 log₂n만큼 소요된다.</p>\n<p>요소의 개수가 n개 이므로 전체적으로 O(nlog₂n)의 시간이 걸린다.</p>\n<p>T(n) = O(nlog₂n)</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://gmlwjd9405.github.io/2018/05/10/algorithm-heap-sort.html\" target=\"_blank\" rel=\"noopener\">https://gmlwjd9405.github.io/2018/05/10/algorithm-heap-sort.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Heap-이란\"><a href=\"#Heap-이란\" class=\"headerlink\" title=\"Heap 이란\"></a>Heap 이란</h2><p>우선순위 큐를 위한 완전이진트리</p>\n<h2 id=\"우선순위-큐\"><a href=\"#우선순위-큐\" class=\"headerlink\" title=\"우선순위 큐\"></a>우선순위 큐</h2><p>데이터들이 우선순위를 가지고 있고, 우선순위가 높은 데이터가 먼저 출력되는 자료구조.<br>우선순위 큐는 배열, 연결리스트, 힙 으로 구현이 가능하다. 이 중에서 힙(heap)으로 구현하는 것이 가장 효율적.</p>\n<h2 id=\"Heap의-종류\"><a href=\"#Heap의-종류\" class=\"headerlink\" title=\"Heap의 종류\"></a>Heap의 종류</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/heap01.png\" alt=\"img\"></p>\n<ol>\n<li>최대힙<br>부모 노드의 키 값이 자식 노드의 키 값보다 크거나 같은 완전 이진 트리</li>\n<li>최소힙<br>부모 노드의 키 값이 자식 노드의 키 값보다 작거나 같은 완전 이진 트리</li>\n</ol>\n<h2 id=\"Heap의-구현\"><a href=\"#Heap의-구현\" class=\"headerlink\" title=\"Heap의 구현\"></a>Heap의 구현</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/heap02.png\" alt=\"img\"></p>\n<p>배열로 구현한다.<br>부모 노드와 자식 노드의 관계는 다음과 같다.</p>\n<ul>\n<li>왼쪽 자식의 인덱스 = (부모의 인덱스) * 2</li>\n<li>오른쪽 자식의 인덱스 = (부모의 인덱스) * 2 + 1</li>\n<li>부모의 인덱스 = (자식의 인덱스) / 2</li>\n</ul>\n<h2 id=\"Heap의-삽입\"><a href=\"#Heap의-삽입\" class=\"headerlink\" title=\"Heap의 삽입\"></a>Heap의 삽입</h2><ol>\n<li>힙에 새로운 요소가 들어오면, 일단 새로운 노드를 힙의 마지막 노드에 이어서 삽입한다.</li>\n<li>새로운 노드를 부모 노드들과 교환해서 힙의 성질을 만족시킨다.</li>\n</ol>\n<h2 id=\"Heap의-삭제\"><a href=\"#Heap의-삭제\" class=\"headerlink\" title=\"Heap의 삭제\"></a>Heap의 삭제</h2><ol>\n<li>최대 힙에서 최댓값은 루트 노드이므로 루트 노드가 삭제된다.<br>최대 힙(max heap)에서 삭제 연산은 최댓값을 가진 요소를 삭제하는 것이다.<br>최소 힙(min heap)에서 삭제 연산은 최솟값을 가진 요소를 삭제하는 것이다.</li>\n<li>삭제된 루트 노드에는 힙의 마지막 노드를 가져온다.</li>\n<li>힙을 재구성한다.</li>\n</ol>\n<h2 id=\"Heap-정렬\"><a href=\"#Heap-정렬\" class=\"headerlink\" title=\"Heap 정렬\"></a>Heap 정렬</h2><p>최대 힙 트리나 최소 힙 트리를 구성해 정렬을 하는 방법</p>\n<h2 id=\"Heap-정렬의-시간-복잡도\"><a href=\"#Heap-정렬의-시간-복잡도\" class=\"headerlink\" title=\"Heap 정렬의 시간 복잡도\"></a>Heap 정렬의 시간 복잡도</h2><p>힙 트리의 전체 높이가 거의 log₂n(완전 이진 트리이므로)이므로 하나의 요소를 힙에 삽입하거나 삭제할 때 힙을 재정비하는 시간이 log₂n만큼 소요된다.</p>\n<p>요소의 개수가 n개 이므로 전체적으로 O(nlog₂n)의 시간이 걸린다.</p>\n<p>T(n) = O(nlog₂n)</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://gmlwjd9405.github.io/2018/05/10/algorithm-heap-sort.html\" target=\"_blank\" rel=\"noopener\">https://gmlwjd9405.github.io/2018/05/10/algorithm-heap-sort.html</a></p>\n"},{"layout":"post","title":"Transaction","date":"2018-11-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dbDoorImg.png","_content":"\n## 트랜잭션이란\n\n하나의 논리적인 작업 단위를 구성하는 연산들의 집합\n\n## ACID\n\n1. Atomicity\n\n   만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되\n   며, 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다.\n\n2. Consistency\n\n   트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해\n   야 한다. \n\n   예를 들어 계좌이체를 성공적으로 실행했다면, A계좌의 잔액과 B계좌의 잔액의 합이 트랜잭션 실행 전의 합\n   과 동일해야한다.\n\n3. Isolation\n\n   각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다.\n\n4. Durability\n\n   트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다.\n\n## Commit, Rollback\n\n1. Commit\n\n   모든 작업을 정상적으로 처리하겠다고 확정하는 명령어이다. 트랜젝션의 처리 과정을 데이터베이스에 반영하\n   기 위해서, 변경된 내용을 모두 영구 저장한다.\n\n2. Rollback\n\n   작업 중 문제가 발생했을 때, 트랜젝션의 처리 과정에서 발생한 변경 사항을 취소하고, 트랜젝션 과정을 종료\n   시킨는 명령어이다. 트랜젝션으로 인한 하나의 묶음 처리가 시작되기 이전의 상태로 되돌린다.\n\n## Reference\n\n<https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Database#transaction>\n\n<https://wikidocs.net/4096>","source":"_posts/2018-11-12-Transaction.md","raw":"---\nlayout: post\ntitle:  \"Transaction\"\ndate:   2018-11-12\ncategories: database\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dbDoorImg.png\n---\n\n## 트랜잭션이란\n\n하나의 논리적인 작업 단위를 구성하는 연산들의 집합\n\n## ACID\n\n1. Atomicity\n\n   만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되\n   며, 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다.\n\n2. Consistency\n\n   트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해\n   야 한다. \n\n   예를 들어 계좌이체를 성공적으로 실행했다면, A계좌의 잔액과 B계좌의 잔액의 합이 트랜잭션 실행 전의 합\n   과 동일해야한다.\n\n3. Isolation\n\n   각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다.\n\n4. Durability\n\n   트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다.\n\n## Commit, Rollback\n\n1. Commit\n\n   모든 작업을 정상적으로 처리하겠다고 확정하는 명령어이다. 트랜젝션의 처리 과정을 데이터베이스에 반영하\n   기 위해서, 변경된 내용을 모두 영구 저장한다.\n\n2. Rollback\n\n   작업 중 문제가 발생했을 때, 트랜젝션의 처리 과정에서 발생한 변경 사항을 취소하고, 트랜젝션 과정을 종료\n   시킨는 명령어이다. 트랜젝션으로 인한 하나의 묶음 처리가 시작되기 이전의 상태로 되돌린다.\n\n## Reference\n\n<https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Database#transaction>\n\n<https://wikidocs.net/4096>","slug":"2018-11-12-Transaction","published":1,"updated":"2018-11-12T14:10:49.351Z","comments":1,"photos":[],"link":"","_id":"cjp6k65st00j231x74gmvushq","content":"<h2 id=\"트랜잭션이란\"><a href=\"#트랜잭션이란\" class=\"headerlink\" title=\"트랜잭션이란\"></a>트랜잭션이란</h2><p>하나의 논리적인 작업 단위를 구성하는 연산들의 집합</p>\n<h2 id=\"ACID\"><a href=\"#ACID\" class=\"headerlink\" title=\"ACID\"></a>ACID</h2><ol>\n<li><p>Atomicity</p>\n<p>만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되<br>며, 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다.</p>\n</li>\n<li><p>Consistency</p>\n<p>트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해<br>야 한다. </p>\n<p>예를 들어 계좌이체를 성공적으로 실행했다면, A계좌의 잔액과 B계좌의 잔액의 합이 트랜잭션 실행 전의 합<br>과 동일해야한다.</p>\n</li>\n<li><p>Isolation</p>\n<p>각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다.</p>\n</li>\n<li><p>Durability</p>\n<p>트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다.</p>\n</li>\n</ol>\n<h2 id=\"Commit-Rollback\"><a href=\"#Commit-Rollback\" class=\"headerlink\" title=\"Commit, Rollback\"></a>Commit, Rollback</h2><ol>\n<li><p>Commit</p>\n<p>모든 작업을 정상적으로 처리하겠다고 확정하는 명령어이다. 트랜젝션의 처리 과정을 데이터베이스에 반영하<br>기 위해서, 변경된 내용을 모두 영구 저장한다.</p>\n</li>\n<li><p>Rollback</p>\n<p>작업 중 문제가 발생했을 때, 트랜젝션의 처리 과정에서 발생한 변경 사항을 취소하고, 트랜젝션 과정을 종료<br>시킨는 명령어이다. 트랜젝션으로 인한 하나의 묶음 처리가 시작되기 이전의 상태로 되돌린다.</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Database#transaction\" target=\"_blank\" rel=\"noopener\">https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Database#transaction</a></p>\n<p><a href=\"https://wikidocs.net/4096\" target=\"_blank\" rel=\"noopener\">https://wikidocs.net/4096</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"트랜잭션이란\"><a href=\"#트랜잭션이란\" class=\"headerlink\" title=\"트랜잭션이란\"></a>트랜잭션이란</h2><p>하나의 논리적인 작업 단위를 구성하는 연산들의 집합</p>\n<h2 id=\"ACID\"><a href=\"#ACID\" class=\"headerlink\" title=\"ACID\"></a>ACID</h2><ol>\n<li><p>Atomicity</p>\n<p>만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되<br>며, 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다.</p>\n</li>\n<li><p>Consistency</p>\n<p>트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해<br>야 한다. </p>\n<p>예를 들어 계좌이체를 성공적으로 실행했다면, A계좌의 잔액과 B계좌의 잔액의 합이 트랜잭션 실행 전의 합<br>과 동일해야한다.</p>\n</li>\n<li><p>Isolation</p>\n<p>각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다.</p>\n</li>\n<li><p>Durability</p>\n<p>트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다.</p>\n</li>\n</ol>\n<h2 id=\"Commit-Rollback\"><a href=\"#Commit-Rollback\" class=\"headerlink\" title=\"Commit, Rollback\"></a>Commit, Rollback</h2><ol>\n<li><p>Commit</p>\n<p>모든 작업을 정상적으로 처리하겠다고 확정하는 명령어이다. 트랜젝션의 처리 과정을 데이터베이스에 반영하<br>기 위해서, 변경된 내용을 모두 영구 저장한다.</p>\n</li>\n<li><p>Rollback</p>\n<p>작업 중 문제가 발생했을 때, 트랜젝션의 처리 과정에서 발생한 변경 사항을 취소하고, 트랜젝션 과정을 종료<br>시킨는 명령어이다. 트랜젝션으로 인한 하나의 묶음 처리가 시작되기 이전의 상태로 되돌린다.</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Database#transaction\" target=\"_blank\" rel=\"noopener\">https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Database#transaction</a></p>\n<p><a href=\"https://wikidocs.net/4096\" target=\"_blank\" rel=\"noopener\">https://wikidocs.net/4096</a></p>\n"},{"layout":"post","title":"Array, Linked List","date":"2018-11-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## Array\n\n배열은 연관된 데이터를 모아서 관리하기 위해 사용되는 자료구조이다. 논리적 저장 순서와 물리적 저장 순서가 일치한다. 따라서 인덱스(index)로 해당 원소(element)에 접근할 수 있다. 그렇기 때문에 찾고자 하는 원소의 인덱스 값을 알고 있으면  Big-O(1) 에 해당 원소로 접근할 수 있다. 즉 random access가 가능하다.\n\n하지만 삭제 또는 삽입의 과정에서는 해당 원소에 접근하여 작업을 완료한 뒤(O(1)), 또 한 가지의 작업을 추가적으로 해줘야 하기 때문에, 시간이 더 걸린다. 만약 배열의 원소 중 어느 원소를 삭제했다고 했을 때, 배열의 연속적인 특징이 깨지게 된다. 즉 빈 공간이 생기는 것이다. 따라서 삭제한 원소보다 큰 인덱스를 갖는 원소들을 shift해줘야 하는 비용(cost)이 발생하고 이 경우의 시간 복잡도는 O(n)가 된다. 그렇기 때문에 Array 자료구조에서 삭제 기능에 대한 time complexity 의 worst case 는 O(n)이 된다.\n\n삽입의 경우도 마찬가지이다. 만약 첫번째 자리에 새로운 원소를 추가하고자 한다면 모든 원소들의 인덱스를 1 씩 shift 해줘야 하므로 이 경우도 O(n)의 시간을 요구하게 된다.\n\n## Linked List\n\nElement 간의 연결을 이용해서 리스트를 구현한 것이다. 원하는 위치에 삽입을 하고자 하면 원하는 위치를 Search 과정에 있어서 첫번째 원소부터 다 확인해봐야 한다는 것이다. Array 와는 달리 논리적 저장 순서와 물리적 저장 순서가 일치하지 않기 때문이다. 이것은 일단 삽입하고 정렬하는 것과 마찬가지이다. 이 과정 때문에, 어떠한 원소를 삭제 또는 삽입하고자 했을 때, 그 원소를 찾기 위해서 O(n)의 시간이 추가적으로 발생하게 된다.\n\n## Reference\n\n<https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist>\n\n<https://opentutorials.org/course/62/5133>","source":"_posts/2018-11-12-Linked List, Array.md","raw":"---\nlayout: post\ntitle:  \"Array, Linked List\"\ndate:   2018-11-12\ncategories: dataStructure\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## Array\n\n배열은 연관된 데이터를 모아서 관리하기 위해 사용되는 자료구조이다. 논리적 저장 순서와 물리적 저장 순서가 일치한다. 따라서 인덱스(index)로 해당 원소(element)에 접근할 수 있다. 그렇기 때문에 찾고자 하는 원소의 인덱스 값을 알고 있으면  Big-O(1) 에 해당 원소로 접근할 수 있다. 즉 random access가 가능하다.\n\n하지만 삭제 또는 삽입의 과정에서는 해당 원소에 접근하여 작업을 완료한 뒤(O(1)), 또 한 가지의 작업을 추가적으로 해줘야 하기 때문에, 시간이 더 걸린다. 만약 배열의 원소 중 어느 원소를 삭제했다고 했을 때, 배열의 연속적인 특징이 깨지게 된다. 즉 빈 공간이 생기는 것이다. 따라서 삭제한 원소보다 큰 인덱스를 갖는 원소들을 shift해줘야 하는 비용(cost)이 발생하고 이 경우의 시간 복잡도는 O(n)가 된다. 그렇기 때문에 Array 자료구조에서 삭제 기능에 대한 time complexity 의 worst case 는 O(n)이 된다.\n\n삽입의 경우도 마찬가지이다. 만약 첫번째 자리에 새로운 원소를 추가하고자 한다면 모든 원소들의 인덱스를 1 씩 shift 해줘야 하므로 이 경우도 O(n)의 시간을 요구하게 된다.\n\n## Linked List\n\nElement 간의 연결을 이용해서 리스트를 구현한 것이다. 원하는 위치에 삽입을 하고자 하면 원하는 위치를 Search 과정에 있어서 첫번째 원소부터 다 확인해봐야 한다는 것이다. Array 와는 달리 논리적 저장 순서와 물리적 저장 순서가 일치하지 않기 때문이다. 이것은 일단 삽입하고 정렬하는 것과 마찬가지이다. 이 과정 때문에, 어떠한 원소를 삭제 또는 삽입하고자 했을 때, 그 원소를 찾기 위해서 O(n)의 시간이 추가적으로 발생하게 된다.\n\n## Reference\n\n<https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist>\n\n<https://opentutorials.org/course/62/5133>","slug":"2018-11-12-Linked List, Array","published":1,"updated":"2018-11-12T14:27:43.900Z","comments":1,"photos":[],"link":"","_id":"cjp6k65su00j431x7xodmhzwl","content":"<h2 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h2><p>배열은 연관된 데이터를 모아서 관리하기 위해 사용되는 자료구조이다. 논리적 저장 순서와 물리적 저장 순서가 일치한다. 따라서 인덱스(index)로 해당 원소(element)에 접근할 수 있다. 그렇기 때문에 찾고자 하는 원소의 인덱스 값을 알고 있으면  Big-O(1) 에 해당 원소로 접근할 수 있다. 즉 random access가 가능하다.</p>\n<p>하지만 삭제 또는 삽입의 과정에서는 해당 원소에 접근하여 작업을 완료한 뒤(O(1)), 또 한 가지의 작업을 추가적으로 해줘야 하기 때문에, 시간이 더 걸린다. 만약 배열의 원소 중 어느 원소를 삭제했다고 했을 때, 배열의 연속적인 특징이 깨지게 된다. 즉 빈 공간이 생기는 것이다. 따라서 삭제한 원소보다 큰 인덱스를 갖는 원소들을 shift해줘야 하는 비용(cost)이 발생하고 이 경우의 시간 복잡도는 O(n)가 된다. 그렇기 때문에 Array 자료구조에서 삭제 기능에 대한 time complexity 의 worst case 는 O(n)이 된다.</p>\n<p>삽입의 경우도 마찬가지이다. 만약 첫번째 자리에 새로운 원소를 추가하고자 한다면 모든 원소들의 인덱스를 1 씩 shift 해줘야 하므로 이 경우도 O(n)의 시간을 요구하게 된다.</p>\n<h2 id=\"Linked-List\"><a href=\"#Linked-List\" class=\"headerlink\" title=\"Linked List\"></a>Linked List</h2><p>Element 간의 연결을 이용해서 리스트를 구현한 것이다. 원하는 위치에 삽입을 하고자 하면 원하는 위치를 Search 과정에 있어서 첫번째 원소부터 다 확인해봐야 한다는 것이다. Array 와는 달리 논리적 저장 순서와 물리적 저장 순서가 일치하지 않기 때문이다. 이것은 일단 삽입하고 정렬하는 것과 마찬가지이다. 이 과정 때문에, 어떠한 원소를 삭제 또는 삽입하고자 했을 때, 그 원소를 찾기 위해서 O(n)의 시간이 추가적으로 발생하게 된다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist\" target=\"_blank\" rel=\"noopener\">https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist</a></p>\n<p><a href=\"https://opentutorials.org/course/62/5133\" target=\"_blank\" rel=\"noopener\">https://opentutorials.org/course/62/5133</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h2><p>배열은 연관된 데이터를 모아서 관리하기 위해 사용되는 자료구조이다. 논리적 저장 순서와 물리적 저장 순서가 일치한다. 따라서 인덱스(index)로 해당 원소(element)에 접근할 수 있다. 그렇기 때문에 찾고자 하는 원소의 인덱스 값을 알고 있으면  Big-O(1) 에 해당 원소로 접근할 수 있다. 즉 random access가 가능하다.</p>\n<p>하지만 삭제 또는 삽입의 과정에서는 해당 원소에 접근하여 작업을 완료한 뒤(O(1)), 또 한 가지의 작업을 추가적으로 해줘야 하기 때문에, 시간이 더 걸린다. 만약 배열의 원소 중 어느 원소를 삭제했다고 했을 때, 배열의 연속적인 특징이 깨지게 된다. 즉 빈 공간이 생기는 것이다. 따라서 삭제한 원소보다 큰 인덱스를 갖는 원소들을 shift해줘야 하는 비용(cost)이 발생하고 이 경우의 시간 복잡도는 O(n)가 된다. 그렇기 때문에 Array 자료구조에서 삭제 기능에 대한 time complexity 의 worst case 는 O(n)이 된다.</p>\n<p>삽입의 경우도 마찬가지이다. 만약 첫번째 자리에 새로운 원소를 추가하고자 한다면 모든 원소들의 인덱스를 1 씩 shift 해줘야 하므로 이 경우도 O(n)의 시간을 요구하게 된다.</p>\n<h2 id=\"Linked-List\"><a href=\"#Linked-List\" class=\"headerlink\" title=\"Linked List\"></a>Linked List</h2><p>Element 간의 연결을 이용해서 리스트를 구현한 것이다. 원하는 위치에 삽입을 하고자 하면 원하는 위치를 Search 과정에 있어서 첫번째 원소부터 다 확인해봐야 한다는 것이다. Array 와는 달리 논리적 저장 순서와 물리적 저장 순서가 일치하지 않기 때문이다. 이것은 일단 삽입하고 정렬하는 것과 마찬가지이다. 이 과정 때문에, 어떠한 원소를 삭제 또는 삽입하고자 했을 때, 그 원소를 찾기 위해서 O(n)의 시간이 추가적으로 발생하게 된다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist\" target=\"_blank\" rel=\"noopener\">https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist</a></p>\n<p><a href=\"https://opentutorials.org/course/62/5133\" target=\"_blank\" rel=\"noopener\">https://opentutorials.org/course/62/5133</a></p>\n"},{"layout":"post","title":"워터폴,에자일","date":"2018-11-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/softwareEngineeringImg.png","_content":"\n## Waterfall Model\n\n순차적인 소프트웨어 개발 프로세스이다.\n\n개발의 흐름이 마치 폭포수처럼 지속적으로 아래로 향하는 것처럼 보이는 데서 이름이 붙여졌다. \n\n이 폭포수 모델의 흐름은 다음과 같다.\n\n1. 요구사항 분석\n2. 설계\n3. 구현\n4. 유지보수\n\n## Agile Model\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/agile01.png)\n\n개발과 즉시 피드백을 받아 유동적으로 개발하는 방법론이다.\n\n애자일 모델은 전체적인 플랜을 짜고 문서를 통해 주도해 나가던 과거의 방식(워터폴 모델)과 달리 \n\n앞을 예측하며 개발하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어 내며 필요할 때마다 요구사항을 더하고 수정\n\n하여 커다란 소프트웨어를 개발해 나가는 방식이다.\n\n## Reference\n\n<https://ko.wikipedia.org/wiki/%ED%8F%AD%ED%8F%AC%EC%88%98_%EB%AA%A8%EB%8D%B8>\n\n<http://blog.rightbrain.co.kr/?p=5810>","source":"_posts/2018-11-12-워터폴,에자일.md","raw":"---\nlayout: post\ntitle:  \"워터폴,에자일\"\ndate:   2018-11-12\ncategories: softwareEngineering\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/softwareEngineeringImg.png\n---\n\n## Waterfall Model\n\n순차적인 소프트웨어 개발 프로세스이다.\n\n개발의 흐름이 마치 폭포수처럼 지속적으로 아래로 향하는 것처럼 보이는 데서 이름이 붙여졌다. \n\n이 폭포수 모델의 흐름은 다음과 같다.\n\n1. 요구사항 분석\n2. 설계\n3. 구현\n4. 유지보수\n\n## Agile Model\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/agile01.png)\n\n개발과 즉시 피드백을 받아 유동적으로 개발하는 방법론이다.\n\n애자일 모델은 전체적인 플랜을 짜고 문서를 통해 주도해 나가던 과거의 방식(워터폴 모델)과 달리 \n\n앞을 예측하며 개발하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어 내며 필요할 때마다 요구사항을 더하고 수정\n\n하여 커다란 소프트웨어를 개발해 나가는 방식이다.\n\n## Reference\n\n<https://ko.wikipedia.org/wiki/%ED%8F%AD%ED%8F%AC%EC%88%98_%EB%AA%A8%EB%8D%B8>\n\n<http://blog.rightbrain.co.kr/?p=5810>","slug":"2018-11-12-워터폴,에자일","published":1,"updated":"2018-11-12T13:45:52.823Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sv00j731x7gdxtxg3l","content":"<h2 id=\"Waterfall-Model\"><a href=\"#Waterfall-Model\" class=\"headerlink\" title=\"Waterfall Model\"></a>Waterfall Model</h2><p>순차적인 소프트웨어 개발 프로세스이다.</p>\n<p>개발의 흐름이 마치 폭포수처럼 지속적으로 아래로 향하는 것처럼 보이는 데서 이름이 붙여졌다. </p>\n<p>이 폭포수 모델의 흐름은 다음과 같다.</p>\n<ol>\n<li>요구사항 분석</li>\n<li>설계</li>\n<li>구현</li>\n<li>유지보수</li>\n</ol>\n<h2 id=\"Agile-Model\"><a href=\"#Agile-Model\" class=\"headerlink\" title=\"Agile Model\"></a>Agile Model</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/agile01.png\" alt=\"img\"></p>\n<p>개발과 즉시 피드백을 받아 유동적으로 개발하는 방법론이다.</p>\n<p>애자일 모델은 전체적인 플랜을 짜고 문서를 통해 주도해 나가던 과거의 방식(워터폴 모델)과 달리 </p>\n<p>앞을 예측하며 개발하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어 내며 필요할 때마다 요구사항을 더하고 수정</p>\n<p>하여 커다란 소프트웨어를 개발해 나가는 방식이다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://ko.wikipedia.org/wiki/%ED%8F%AD%ED%8F%AC%EC%88%98_%EB%AA%A8%EB%8D%B8\" target=\"_blank\" rel=\"noopener\">https://ko.wikipedia.org/wiki/%ED%8F%AD%ED%8F%AC%EC%88%98_%EB%AA%A8%EB%8D%B8</a></p>\n<p><a href=\"http://blog.rightbrain.co.kr/?p=5810\" target=\"_blank\" rel=\"noopener\">http://blog.rightbrain.co.kr/?p=5810</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Waterfall-Model\"><a href=\"#Waterfall-Model\" class=\"headerlink\" title=\"Waterfall Model\"></a>Waterfall Model</h2><p>순차적인 소프트웨어 개발 프로세스이다.</p>\n<p>개발의 흐름이 마치 폭포수처럼 지속적으로 아래로 향하는 것처럼 보이는 데서 이름이 붙여졌다. </p>\n<p>이 폭포수 모델의 흐름은 다음과 같다.</p>\n<ol>\n<li>요구사항 분석</li>\n<li>설계</li>\n<li>구현</li>\n<li>유지보수</li>\n</ol>\n<h2 id=\"Agile-Model\"><a href=\"#Agile-Model\" class=\"headerlink\" title=\"Agile Model\"></a>Agile Model</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/agile01.png\" alt=\"img\"></p>\n<p>개발과 즉시 피드백을 받아 유동적으로 개발하는 방법론이다.</p>\n<p>애자일 모델은 전체적인 플랜을 짜고 문서를 통해 주도해 나가던 과거의 방식(워터폴 모델)과 달리 </p>\n<p>앞을 예측하며 개발하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어 내며 필요할 때마다 요구사항을 더하고 수정</p>\n<p>하여 커다란 소프트웨어를 개발해 나가는 방식이다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://ko.wikipedia.org/wiki/%ED%8F%AD%ED%8F%AC%EC%88%98_%EB%AA%A8%EB%8D%B8\" target=\"_blank\" rel=\"noopener\">https://ko.wikipedia.org/wiki/%ED%8F%AD%ED%8F%AC%EC%88%98_%EB%AA%A8%EB%8D%B8</a></p>\n<p><a href=\"http://blog.rightbrain.co.kr/?p=5810\" target=\"_blank\" rel=\"noopener\">http://blog.rightbrain.co.kr/?p=5810</a></p>\n"},{"layout":"post","title":"REST","date":"2018-11-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png","_content":"\n## REST란\n\n소프트웨어 아키텍처의 한 형식이다.\n\n## 구성 요소\n\n1. URI\n\n   자원의 주소이다.\n\n2. HTTP Method\n\n   어떤 자원에 행할 수 있는 행위이다. CRDU로 나타낸다.\n   \n   - POST : 해당 URI를 요청하면 리소스를 생성한다.\n   - GET : 해당 리소스를 조회하고 해당 도큐먼트에 대한 자세한 정보를 가져온다.\n   - PUT : 해당 리소스를 수정한다.\n   - DELETE : 리소스를 삭제한다.\n\n3. Representation\n\n   자원의 URI에 특정 행위를 요청하면 그 결과로 Representation 을 응답 받는다. html, xml, text, json, \n   rss 등 다양한 형태로 표현될 수 있다.","source":"_posts/2018-11-12-REST.md","raw":"---\nlayout: post\ntitle:  \"REST\"\ndate:   2018-11-12\ncategories: android\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png\n---\n\n## REST란\n\n소프트웨어 아키텍처의 한 형식이다.\n\n## 구성 요소\n\n1. URI\n\n   자원의 주소이다.\n\n2. HTTP Method\n\n   어떤 자원에 행할 수 있는 행위이다. CRDU로 나타낸다.\n   \n   - POST : 해당 URI를 요청하면 리소스를 생성한다.\n   - GET : 해당 리소스를 조회하고 해당 도큐먼트에 대한 자세한 정보를 가져온다.\n   - PUT : 해당 리소스를 수정한다.\n   - DELETE : 리소스를 삭제한다.\n\n3. Representation\n\n   자원의 URI에 특정 행위를 요청하면 그 결과로 Representation 을 응답 받는다. html, xml, text, json, \n   rss 등 다양한 형태로 표현될 수 있다.","slug":"2018-11-12-REST","published":1,"updated":"2018-11-12T10:12:52.883Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sw00j831x70k35mkyi","content":"<h2 id=\"REST란\"><a href=\"#REST란\" class=\"headerlink\" title=\"REST란\"></a>REST란</h2><p>소프트웨어 아키텍처의 한 형식이다.</p>\n<h2 id=\"구성-요소\"><a href=\"#구성-요소\" class=\"headerlink\" title=\"구성 요소\"></a>구성 요소</h2><ol>\n<li><p>URI</p>\n<p>자원의 주소이다.</p>\n</li>\n<li><p>HTTP Method</p>\n<p>어떤 자원에 행할 수 있는 행위이다. CRDU로 나타낸다.</p>\n<ul>\n<li>POST : 해당 URI를 요청하면 리소스를 생성한다.</li>\n<li>GET : 해당 리소스를 조회하고 해당 도큐먼트에 대한 자세한 정보를 가져온다.</li>\n<li>PUT : 해당 리소스를 수정한다.</li>\n<li>DELETE : 리소스를 삭제한다.</li>\n</ul>\n</li>\n<li><p>Representation</p>\n<p>자원의 URI에 특정 행위를 요청하면 그 결과로 Representation 을 응답 받는다. html, xml, text, json,<br>rss 등 다양한 형태로 표현될 수 있다.</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"REST란\"><a href=\"#REST란\" class=\"headerlink\" title=\"REST란\"></a>REST란</h2><p>소프트웨어 아키텍처의 한 형식이다.</p>\n<h2 id=\"구성-요소\"><a href=\"#구성-요소\" class=\"headerlink\" title=\"구성 요소\"></a>구성 요소</h2><ol>\n<li><p>URI</p>\n<p>자원의 주소이다.</p>\n</li>\n<li><p>HTTP Method</p>\n<p>어떤 자원에 행할 수 있는 행위이다. CRDU로 나타낸다.</p>\n<ul>\n<li>POST : 해당 URI를 요청하면 리소스를 생성한다.</li>\n<li>GET : 해당 리소스를 조회하고 해당 도큐먼트에 대한 자세한 정보를 가져온다.</li>\n<li>PUT : 해당 리소스를 수정한다.</li>\n<li>DELETE : 리소스를 삭제한다.</li>\n</ul>\n</li>\n<li><p>Representation</p>\n<p>자원의 URI에 특정 행위를 요청하면 그 결과로 Representation 을 응답 받는다. html, xml, text, json,<br>rss 등 다양한 형태로 표현될 수 있다.</p>\n</li>\n</ol>\n"},{"layout":"post","title":"퀵정렬","date":"2018-11-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## 퀵정렬이란\n\n분할 정복 알고리즘의 하나이다. \n\n## 왜 분할 정복?\n\n퀵 정렬은 다음의 단계를 거친다.\n\n1. 분할\n\n   입력 배열을 피벗을 기준으로 비균등하게 2개의 부분 배열(피벗을 중심으로 왼쪽: 피벗보다 작은 요소들, 오른\n   쪽: 피벗보다 큰 요소들)로 분할한다.\n\n2. 정복\n\n   부분 배열을 정렬한다. 부분 배열의 크기가 충분히 작지 않으면 순환 호출 을 이용하여 다시 분할 정복 방법을 \n   적용한다.\n\n3. 결합\n\n   정렬된 부분 배열들을 하나의 배열에 합병한다.\n   \n   순환 호출이 한번 진행될 때마다 최소한 하나의 원소(피벗)는 최종적으로 위치가 정해지므로, 이 알고리즘은\n   반드시 끝난다는 것을 보장할 수 있다.\n\n## 예제\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort02.png)\n\n[5, 3, 8, 4, 9, 1] 배열을 오름차순 정렬해보자.\n\n- 피벗 값을 입력 리스트의 첫 번째 데이터로 하자. (다른 임의의 값이어도 상관없다.)\n\n- 1회전: 피벗이 5인 경우,\n\n  low는 왼쪽에서 오른쪽으로 탐색해가다가 피벗보다 큰 데이터(8)을 찾으면 멈춘다.\n\n  high는 오른쪽에서 왼쪽으로 탐색해가다가 피벗보다 작은 데이터(4)를 찾으면 멈춘다.\n\n  low와 high가 가리키는 두 데이터(8과 4)를 서로 교환한다.\n\n  low와 high가 엇갈리면, pivot의 값과 high 의 값을 교환한다.\n\n  5는 정렬이 끝났다.\n\n- 2회전: 피벗 (1회전의 왼쪽 부분리스트의 첫 번째 데이터)이 4인 경우, 위와 동일한 방법으로 반복한다.\n\n- 3회전: 피벗(1회전의 오른쪽 부분리스트의 첫 번째 데이터)이 8인 경우, 위와 동일한 방법으로 반복한다.\n\n## 시간 복잡도\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort03.png)\n\nT(n) = 순환 호출의 깊이 * 각 순환 호출 단계의 비교 연산 = nlog₂n\n\n## Reference\n\n<https://gmlwjd9405.github.io/2018/05/10/algorithm-quick-sort.html>","source":"_posts/2018-11-12-퀵정렬.md","raw":"---\nlayout: post\ntitle:  \"퀵정렬\"\ndate:   2018-11-12\ncategories: dataStructure\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## 퀵정렬이란\n\n분할 정복 알고리즘의 하나이다. \n\n## 왜 분할 정복?\n\n퀵 정렬은 다음의 단계를 거친다.\n\n1. 분할\n\n   입력 배열을 피벗을 기준으로 비균등하게 2개의 부분 배열(피벗을 중심으로 왼쪽: 피벗보다 작은 요소들, 오른\n   쪽: 피벗보다 큰 요소들)로 분할한다.\n\n2. 정복\n\n   부분 배열을 정렬한다. 부분 배열의 크기가 충분히 작지 않으면 순환 호출 을 이용하여 다시 분할 정복 방법을 \n   적용한다.\n\n3. 결합\n\n   정렬된 부분 배열들을 하나의 배열에 합병한다.\n   \n   순환 호출이 한번 진행될 때마다 최소한 하나의 원소(피벗)는 최종적으로 위치가 정해지므로, 이 알고리즘은\n   반드시 끝난다는 것을 보장할 수 있다.\n\n## 예제\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort02.png)\n\n[5, 3, 8, 4, 9, 1] 배열을 오름차순 정렬해보자.\n\n- 피벗 값을 입력 리스트의 첫 번째 데이터로 하자. (다른 임의의 값이어도 상관없다.)\n\n- 1회전: 피벗이 5인 경우,\n\n  low는 왼쪽에서 오른쪽으로 탐색해가다가 피벗보다 큰 데이터(8)을 찾으면 멈춘다.\n\n  high는 오른쪽에서 왼쪽으로 탐색해가다가 피벗보다 작은 데이터(4)를 찾으면 멈춘다.\n\n  low와 high가 가리키는 두 데이터(8과 4)를 서로 교환한다.\n\n  low와 high가 엇갈리면, pivot의 값과 high 의 값을 교환한다.\n\n  5는 정렬이 끝났다.\n\n- 2회전: 피벗 (1회전의 왼쪽 부분리스트의 첫 번째 데이터)이 4인 경우, 위와 동일한 방법으로 반복한다.\n\n- 3회전: 피벗(1회전의 오른쪽 부분리스트의 첫 번째 데이터)이 8인 경우, 위와 동일한 방법으로 반복한다.\n\n## 시간 복잡도\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort03.png)\n\nT(n) = 순환 호출의 깊이 * 각 순환 호출 단계의 비교 연산 = nlog₂n\n\n## Reference\n\n<https://gmlwjd9405.github.io/2018/05/10/algorithm-quick-sort.html>","slug":"2018-11-12-퀵정렬","published":1,"updated":"2018-11-12T13:22:16.919Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sy00jb31x7ot396pfy","content":"<h2 id=\"퀵정렬이란\"><a href=\"#퀵정렬이란\" class=\"headerlink\" title=\"퀵정렬이란\"></a>퀵정렬이란</h2><p>분할 정복 알고리즘의 하나이다. </p>\n<h2 id=\"왜-분할-정복\"><a href=\"#왜-분할-정복\" class=\"headerlink\" title=\"왜 분할 정복?\"></a>왜 분할 정복?</h2><p>퀵 정렬은 다음의 단계를 거친다.</p>\n<ol>\n<li><p>분할</p>\n<p>입력 배열을 피벗을 기준으로 비균등하게 2개의 부분 배열(피벗을 중심으로 왼쪽: 피벗보다 작은 요소들, 오른<br>쪽: 피벗보다 큰 요소들)로 분할한다.</p>\n</li>\n<li><p>정복</p>\n<p>부분 배열을 정렬한다. 부분 배열의 크기가 충분히 작지 않으면 순환 호출 을 이용하여 다시 분할 정복 방법을<br>적용한다.</p>\n</li>\n<li><p>결합</p>\n<p>정렬된 부분 배열들을 하나의 배열에 합병한다.</p>\n<p>순환 호출이 한번 진행될 때마다 최소한 하나의 원소(피벗)는 최종적으로 위치가 정해지므로, 이 알고리즘은<br>반드시 끝난다는 것을 보장할 수 있다.</p>\n</li>\n</ol>\n<h2 id=\"예제\"><a href=\"#예제\" class=\"headerlink\" title=\"예제\"></a>예제</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort02.png\" alt=\"img\"></p>\n<p>[5, 3, 8, 4, 9, 1] 배열을 오름차순 정렬해보자.</p>\n<ul>\n<li><p>피벗 값을 입력 리스트의 첫 번째 데이터로 하자. (다른 임의의 값이어도 상관없다.)</p>\n</li>\n<li><p>1회전: 피벗이 5인 경우,</p>\n<p>low는 왼쪽에서 오른쪽으로 탐색해가다가 피벗보다 큰 데이터(8)을 찾으면 멈춘다.</p>\n<p>high는 오른쪽에서 왼쪽으로 탐색해가다가 피벗보다 작은 데이터(4)를 찾으면 멈춘다.</p>\n<p>low와 high가 가리키는 두 데이터(8과 4)를 서로 교환한다.</p>\n<p>low와 high가 엇갈리면, pivot의 값과 high 의 값을 교환한다.</p>\n<p>5는 정렬이 끝났다.</p>\n</li>\n<li><p>2회전: 피벗 (1회전의 왼쪽 부분리스트의 첫 번째 데이터)이 4인 경우, 위와 동일한 방법으로 반복한다.</p>\n</li>\n<li><p>3회전: 피벗(1회전의 오른쪽 부분리스트의 첫 번째 데이터)이 8인 경우, 위와 동일한 방법으로 반복한다.</p>\n</li>\n</ul>\n<h2 id=\"시간-복잡도\"><a href=\"#시간-복잡도\" class=\"headerlink\" title=\"시간 복잡도\"></a>시간 복잡도</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort03.png\" alt=\"img\"></p>\n<p>T(n) = 순환 호출의 깊이 * 각 순환 호출 단계의 비교 연산 = nlog₂n</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://gmlwjd9405.github.io/2018/05/10/algorithm-quick-sort.html\" target=\"_blank\" rel=\"noopener\">https://gmlwjd9405.github.io/2018/05/10/algorithm-quick-sort.html</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"퀵정렬이란\"><a href=\"#퀵정렬이란\" class=\"headerlink\" title=\"퀵정렬이란\"></a>퀵정렬이란</h2><p>분할 정복 알고리즘의 하나이다. </p>\n<h2 id=\"왜-분할-정복\"><a href=\"#왜-분할-정복\" class=\"headerlink\" title=\"왜 분할 정복?\"></a>왜 분할 정복?</h2><p>퀵 정렬은 다음의 단계를 거친다.</p>\n<ol>\n<li><p>분할</p>\n<p>입력 배열을 피벗을 기준으로 비균등하게 2개의 부분 배열(피벗을 중심으로 왼쪽: 피벗보다 작은 요소들, 오른<br>쪽: 피벗보다 큰 요소들)로 분할한다.</p>\n</li>\n<li><p>정복</p>\n<p>부분 배열을 정렬한다. 부분 배열의 크기가 충분히 작지 않으면 순환 호출 을 이용하여 다시 분할 정복 방법을<br>적용한다.</p>\n</li>\n<li><p>결합</p>\n<p>정렬된 부분 배열들을 하나의 배열에 합병한다.</p>\n<p>순환 호출이 한번 진행될 때마다 최소한 하나의 원소(피벗)는 최종적으로 위치가 정해지므로, 이 알고리즘은<br>반드시 끝난다는 것을 보장할 수 있다.</p>\n</li>\n</ol>\n<h2 id=\"예제\"><a href=\"#예제\" class=\"headerlink\" title=\"예제\"></a>예제</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort02.png\" alt=\"img\"></p>\n<p>[5, 3, 8, 4, 9, 1] 배열을 오름차순 정렬해보자.</p>\n<ul>\n<li><p>피벗 값을 입력 리스트의 첫 번째 데이터로 하자. (다른 임의의 값이어도 상관없다.)</p>\n</li>\n<li><p>1회전: 피벗이 5인 경우,</p>\n<p>low는 왼쪽에서 오른쪽으로 탐색해가다가 피벗보다 큰 데이터(8)을 찾으면 멈춘다.</p>\n<p>high는 오른쪽에서 왼쪽으로 탐색해가다가 피벗보다 작은 데이터(4)를 찾으면 멈춘다.</p>\n<p>low와 high가 가리키는 두 데이터(8과 4)를 서로 교환한다.</p>\n<p>low와 high가 엇갈리면, pivot의 값과 high 의 값을 교환한다.</p>\n<p>5는 정렬이 끝났다.</p>\n</li>\n<li><p>2회전: 피벗 (1회전의 왼쪽 부분리스트의 첫 번째 데이터)이 4인 경우, 위와 동일한 방법으로 반복한다.</p>\n</li>\n<li><p>3회전: 피벗(1회전의 오른쪽 부분리스트의 첫 번째 데이터)이 8인 경우, 위와 동일한 방법으로 반복한다.</p>\n</li>\n</ul>\n<h2 id=\"시간-복잡도\"><a href=\"#시간-복잡도\" class=\"headerlink\" title=\"시간 복잡도\"></a>시간 복잡도</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/quickSort03.png\" alt=\"img\"></p>\n<p>T(n) = 순환 호출의 깊이 * 각 순환 호출 단계의 비교 연산 = nlog₂n</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://gmlwjd9405.github.io/2018/05/10/algorithm-quick-sort.html\" target=\"_blank\" rel=\"noopener\">https://gmlwjd9405.github.io/2018/05/10/algorithm-quick-sort.html</a></p>\n"},{"layout":"post","title":"Hash Table","date":"2018-11-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## Hash Table이란\n\nKey에 Value를 저장하는 데이타 구조\n\n## Hash Function\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hashtable01.png)\n\nkey에 대한 데이터를 찾을때, hash_function을 한번만 수행하면 array내에 저장된 index 위치를 찾아낼 수 있\n\n기 때문에, 데이타의 저장과 삭제가 빠르다.\n\n하지만 어설픈 hash functio을 통해서 key 값들을 결정한다면 동일한 값이 도출될 수가 있다. \n\n이렇게 되면 동일한 key 값에 복수 개의 데이터가 하나의 테이블에 존재할 수 있게 되는 것인데  \n\n이를 Collision 이라고 한다.\n\nCollision을 해결하는 방법으로, **Separate chaining**과 **Open addressing** 이 있다.\n\n## Separate Chaining\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hashtable02.png)\n\nLinked List를 이용하는 방식이다.\n\n각 index에 데이터를 저장하는 Linked list 에 대한 포인터를 가지는 방식이다.\n\n동일 index로 인해서 충돌이 발생하면 그 index가 가리키고 있는 Linked list에 노드를 추가하여 값을 추가한다.\n\n## Open Addressing\n\nOpen addressing  방식은 index에 대한 충돌 처리에 대해서 \n\nLinked List와 같은 추가적인 메모리 공간을 사용하지 않고, hash table array의 빈공간을 사용하는 방법이다. \n\n여러 가지 구현 방식이 있다. Linear Probing 방식은 index에 대해서 충돌 이 발생했을 때, \n\nindex 뒤에 있는 버킷중에 빈 버킷을 찾아서 데이터를 넣는 방식이다. \n\n## Reference\n\n<https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist>\n\n<http://bcho.tistory.com/1072>","source":"_posts/2018-11-13-Hash Table.md","raw":"---\nlayout: post\ntitle:  \"Hash Table\"\ndate:   2018-11-13\ncategories: dataStructure\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## Hash Table이란\n\nKey에 Value를 저장하는 데이타 구조\n\n## Hash Function\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hashtable01.png)\n\nkey에 대한 데이터를 찾을때, hash_function을 한번만 수행하면 array내에 저장된 index 위치를 찾아낼 수 있\n\n기 때문에, 데이타의 저장과 삭제가 빠르다.\n\n하지만 어설픈 hash functio을 통해서 key 값들을 결정한다면 동일한 값이 도출될 수가 있다. \n\n이렇게 되면 동일한 key 값에 복수 개의 데이터가 하나의 테이블에 존재할 수 있게 되는 것인데  \n\n이를 Collision 이라고 한다.\n\nCollision을 해결하는 방법으로, **Separate chaining**과 **Open addressing** 이 있다.\n\n## Separate Chaining\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hashtable02.png)\n\nLinked List를 이용하는 방식이다.\n\n각 index에 데이터를 저장하는 Linked list 에 대한 포인터를 가지는 방식이다.\n\n동일 index로 인해서 충돌이 발생하면 그 index가 가리키고 있는 Linked list에 노드를 추가하여 값을 추가한다.\n\n## Open Addressing\n\nOpen addressing  방식은 index에 대한 충돌 처리에 대해서 \n\nLinked List와 같은 추가적인 메모리 공간을 사용하지 않고, hash table array의 빈공간을 사용하는 방법이다. \n\n여러 가지 구현 방식이 있다. Linear Probing 방식은 index에 대해서 충돌 이 발생했을 때, \n\nindex 뒤에 있는 버킷중에 빈 버킷을 찾아서 데이터를 넣는 방식이다. \n\n## Reference\n\n<https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist>\n\n<http://bcho.tistory.com/1072>","slug":"2018-11-13-Hash Table","published":1,"updated":"2018-11-12T23:33:11.768Z","comments":1,"photos":[],"link":"","_id":"cjp6k65sz00jd31x7boxj66qq","content":"<h2 id=\"Hash-Table이란\"><a href=\"#Hash-Table이란\" class=\"headerlink\" title=\"Hash Table이란\"></a>Hash Table이란</h2><p>Key에 Value를 저장하는 데이타 구조</p>\n<h2 id=\"Hash-Function\"><a href=\"#Hash-Function\" class=\"headerlink\" title=\"Hash Function\"></a>Hash Function</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hashtable01.png\" alt=\"img\"></p>\n<p>key에 대한 데이터를 찾을때, hash_function을 한번만 수행하면 array내에 저장된 index 위치를 찾아낼 수 있</p>\n<p>기 때문에, 데이타의 저장과 삭제가 빠르다.</p>\n<p>하지만 어설픈 hash functio을 통해서 key 값들을 결정한다면 동일한 값이 도출될 수가 있다. </p>\n<p>이렇게 되면 동일한 key 값에 복수 개의 데이터가 하나의 테이블에 존재할 수 있게 되는 것인데  </p>\n<p>이를 Collision 이라고 한다.</p>\n<p>Collision을 해결하는 방법으로, <strong>Separate chaining</strong>과 <strong>Open addressing</strong> 이 있다.</p>\n<h2 id=\"Separate-Chaining\"><a href=\"#Separate-Chaining\" class=\"headerlink\" title=\"Separate Chaining\"></a>Separate Chaining</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hashtable02.png\" alt=\"img\"></p>\n<p>Linked List를 이용하는 방식이다.</p>\n<p>각 index에 데이터를 저장하는 Linked list 에 대한 포인터를 가지는 방식이다.</p>\n<p>동일 index로 인해서 충돌이 발생하면 그 index가 가리키고 있는 Linked list에 노드를 추가하여 값을 추가한다.</p>\n<h2 id=\"Open-Addressing\"><a href=\"#Open-Addressing\" class=\"headerlink\" title=\"Open Addressing\"></a>Open Addressing</h2><p>Open addressing  방식은 index에 대한 충돌 처리에 대해서 </p>\n<p>Linked List와 같은 추가적인 메모리 공간을 사용하지 않고, hash table array의 빈공간을 사용하는 방법이다. </p>\n<p>여러 가지 구현 방식이 있다. Linear Probing 방식은 index에 대해서 충돌 이 발생했을 때, </p>\n<p>index 뒤에 있는 버킷중에 빈 버킷을 찾아서 데이터를 넣는 방식이다. </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist\" target=\"_blank\" rel=\"noopener\">https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist</a></p>\n<p><a href=\"http://bcho.tistory.com/1072\" target=\"_blank\" rel=\"noopener\">http://bcho.tistory.com/1072</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Hash-Table이란\"><a href=\"#Hash-Table이란\" class=\"headerlink\" title=\"Hash Table이란\"></a>Hash Table이란</h2><p>Key에 Value를 저장하는 데이타 구조</p>\n<h2 id=\"Hash-Function\"><a href=\"#Hash-Function\" class=\"headerlink\" title=\"Hash Function\"></a>Hash Function</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hashtable01.png\" alt=\"img\"></p>\n<p>key에 대한 데이터를 찾을때, hash_function을 한번만 수행하면 array내에 저장된 index 위치를 찾아낼 수 있</p>\n<p>기 때문에, 데이타의 저장과 삭제가 빠르다.</p>\n<p>하지만 어설픈 hash functio을 통해서 key 값들을 결정한다면 동일한 값이 도출될 수가 있다. </p>\n<p>이렇게 되면 동일한 key 값에 복수 개의 데이터가 하나의 테이블에 존재할 수 있게 되는 것인데  </p>\n<p>이를 Collision 이라고 한다.</p>\n<p>Collision을 해결하는 방법으로, <strong>Separate chaining</strong>과 <strong>Open addressing</strong> 이 있다.</p>\n<h2 id=\"Separate-Chaining\"><a href=\"#Separate-Chaining\" class=\"headerlink\" title=\"Separate Chaining\"></a>Separate Chaining</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/hashtable02.png\" alt=\"img\"></p>\n<p>Linked List를 이용하는 방식이다.</p>\n<p>각 index에 데이터를 저장하는 Linked list 에 대한 포인터를 가지는 방식이다.</p>\n<p>동일 index로 인해서 충돌이 발생하면 그 index가 가리키고 있는 Linked list에 노드를 추가하여 값을 추가한다.</p>\n<h2 id=\"Open-Addressing\"><a href=\"#Open-Addressing\" class=\"headerlink\" title=\"Open Addressing\"></a>Open Addressing</h2><p>Open addressing  방식은 index에 대한 충돌 처리에 대해서 </p>\n<p>Linked List와 같은 추가적인 메모리 공간을 사용하지 않고, hash table array의 빈공간을 사용하는 방법이다. </p>\n<p>여러 가지 구현 방식이 있다. Linear Probing 방식은 index에 대해서 충돌 이 발생했을 때, </p>\n<p>index 뒤에 있는 버킷중에 빈 버킷을 찾아서 데이터를 넣는 방식이다. </p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist\" target=\"_blank\" rel=\"noopener\">https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/DataStructure#array-vs-linkedlist</a></p>\n<p><a href=\"http://bcho.tistory.com/1072\" target=\"_blank\" rel=\"noopener\">http://bcho.tistory.com/1072</a></p>\n"},{"layout":"post","title":"점근 표기법","date":"2018-11-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png","_content":"\n## 시간 복잡도와 공간 복잡도\n\n1. 시간 복잡도 : 알고리즘의 수행시간 분석결과\n2. 공간 복잡도 : 알고리즘의 메모리 사용량에 대한 분석결과\n\n알고리즘 성능평가는 시간 복잡도와 공간 복잡도를 계산하고 점근적 표기법으로 나타내면 된다.\n\n## 점근적 분석이란\n\n알고리즘의 수행 시간을 분석하기 위해, 항상 입력의 크기가 충분히 클 때에 대해서 분석하는 방법 \n\n## 점근적 표기법이란\n\n점근적 증가율은 입력의 크기에 따라 함수가 증가하는 비율이다. 그 표기법을 점근적 표기법이라 한다. \n세 가지가 있다.\n\n- 빅오 표기법\n- 오메가 표기법\n- 세타 표기법\n\n## 빅오 표기법 \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic01.png)\n\nf(n)을 O(g(n))이라고 표시한다. \n\n이 때 g(n)를 f(n)의 점근 상한이라고 한다.\n\n알고리즘 f(n)이 O(g(n))에 속한다면, f(n)의 계산복잡도는 최악의 경우라도 g(n)과 같거나 혹은 작다는 뜻이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic011.png)\n\n## 오메가 표기법\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic02.png)\n\nf(n)를 Ω(g(n))이라고 표시한다. \n\n이 때 g(n)는 f(n)의 점근 하한이라고 한다. \n\n알고리즘 f(n)의 계산복잡도가 Ω(g(n))에 속한다면, f(n)의 계산복잡도는 최선의 경우를 상정하더라도 g(n)과 같거나 혹은 크다는 뜻이다.\n\n## 세타 표기법\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic03.png)\n\nf(n)을 Θ(g(n))이라고 표시한다. \n\ng(n)은 f(n)의 점근적 상한과 하한의 교집합이라고 한다. \n\n알고리즘 f(n)이 아무리 나쁘거나 좋더라도 그 계산복잡도는 g(n)의 범위 내에 있다는 뜻이다.\n\n## Reference\n\n<https://ratsgo.github.io/data%20structure&algorithm/2017/09/13/asymptotic/>\n\n<http://ledgku.tistory.com/33>","source":"_posts/2018-11-11-점근 표기법.md","raw":"---\nlayout: post\ntitle:  \"점근 표기법\"\ndate:   2018-11-11\ncategories: dataStructure\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dataStructureImg.png\n---\n\n## 시간 복잡도와 공간 복잡도\n\n1. 시간 복잡도 : 알고리즘의 수행시간 분석결과\n2. 공간 복잡도 : 알고리즘의 메모리 사용량에 대한 분석결과\n\n알고리즘 성능평가는 시간 복잡도와 공간 복잡도를 계산하고 점근적 표기법으로 나타내면 된다.\n\n## 점근적 분석이란\n\n알고리즘의 수행 시간을 분석하기 위해, 항상 입력의 크기가 충분히 클 때에 대해서 분석하는 방법 \n\n## 점근적 표기법이란\n\n점근적 증가율은 입력의 크기에 따라 함수가 증가하는 비율이다. 그 표기법을 점근적 표기법이라 한다. \n세 가지가 있다.\n\n- 빅오 표기법\n- 오메가 표기법\n- 세타 표기법\n\n## 빅오 표기법 \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic01.png)\n\nf(n)을 O(g(n))이라고 표시한다. \n\n이 때 g(n)를 f(n)의 점근 상한이라고 한다.\n\n알고리즘 f(n)이 O(g(n))에 속한다면, f(n)의 계산복잡도는 최악의 경우라도 g(n)과 같거나 혹은 작다는 뜻이다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic011.png)\n\n## 오메가 표기법\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic02.png)\n\nf(n)를 Ω(g(n))이라고 표시한다. \n\n이 때 g(n)는 f(n)의 점근 하한이라고 한다. \n\n알고리즘 f(n)의 계산복잡도가 Ω(g(n))에 속한다면, f(n)의 계산복잡도는 최선의 경우를 상정하더라도 g(n)과 같거나 혹은 크다는 뜻이다.\n\n## 세타 표기법\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic03.png)\n\nf(n)을 Θ(g(n))이라고 표시한다. \n\ng(n)은 f(n)의 점근적 상한과 하한의 교집합이라고 한다. \n\n알고리즘 f(n)이 아무리 나쁘거나 좋더라도 그 계산복잡도는 g(n)의 범위 내에 있다는 뜻이다.\n\n## Reference\n\n<https://ratsgo.github.io/data%20structure&algorithm/2017/09/13/asymptotic/>\n\n<http://ledgku.tistory.com/33>","slug":"2018-11-11-점근 표기법","published":1,"updated":"2018-11-12T13:22:08.800Z","comments":1,"photos":[],"link":"","_id":"cjp6k65t200jg31x7kkzljegt","content":"<h2 id=\"시간-복잡도와-공간-복잡도\"><a href=\"#시간-복잡도와-공간-복잡도\" class=\"headerlink\" title=\"시간 복잡도와 공간 복잡도\"></a>시간 복잡도와 공간 복잡도</h2><ol>\n<li>시간 복잡도 : 알고리즘의 수행시간 분석결과</li>\n<li>공간 복잡도 : 알고리즘의 메모리 사용량에 대한 분석결과</li>\n</ol>\n<p>알고리즘 성능평가는 시간 복잡도와 공간 복잡도를 계산하고 점근적 표기법으로 나타내면 된다.</p>\n<h2 id=\"점근적-분석이란\"><a href=\"#점근적-분석이란\" class=\"headerlink\" title=\"점근적 분석이란\"></a>점근적 분석이란</h2><p>알고리즘의 수행 시간을 분석하기 위해, 항상 입력의 크기가 충분히 클 때에 대해서 분석하는 방법 </p>\n<h2 id=\"점근적-표기법이란\"><a href=\"#점근적-표기법이란\" class=\"headerlink\" title=\"점근적 표기법이란\"></a>점근적 표기법이란</h2><p>점근적 증가율은 입력의 크기에 따라 함수가 증가하는 비율이다. 그 표기법을 점근적 표기법이라 한다.<br>세 가지가 있다.</p>\n<ul>\n<li>빅오 표기법</li>\n<li>오메가 표기법</li>\n<li>세타 표기법</li>\n</ul>\n<h2 id=\"빅오-표기법\"><a href=\"#빅오-표기법\" class=\"headerlink\" title=\"빅오 표기법\"></a>빅오 표기법</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic01.png\" alt=\"img\"></p>\n<p>f(n)을 O(g(n))이라고 표시한다. </p>\n<p>이 때 g(n)를 f(n)의 점근 상한이라고 한다.</p>\n<p>알고리즘 f(n)이 O(g(n))에 속한다면, f(n)의 계산복잡도는 최악의 경우라도 g(n)과 같거나 혹은 작다는 뜻이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic011.png\" alt=\"img\"></p>\n<h2 id=\"오메가-표기법\"><a href=\"#오메가-표기법\" class=\"headerlink\" title=\"오메가 표기법\"></a>오메가 표기법</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic02.png\" alt=\"img\"></p>\n<p>f(n)를 Ω(g(n))이라고 표시한다. </p>\n<p>이 때 g(n)는 f(n)의 점근 하한이라고 한다. </p>\n<p>알고리즘 f(n)의 계산복잡도가 Ω(g(n))에 속한다면, f(n)의 계산복잡도는 최선의 경우를 상정하더라도 g(n)과 같거나 혹은 크다는 뜻이다.</p>\n<h2 id=\"세타-표기법\"><a href=\"#세타-표기법\" class=\"headerlink\" title=\"세타 표기법\"></a>세타 표기법</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic03.png\" alt=\"img\"></p>\n<p>f(n)을 Θ(g(n))이라고 표시한다. </p>\n<p>g(n)은 f(n)의 점근적 상한과 하한의 교집합이라고 한다. </p>\n<p>알고리즘 f(n)이 아무리 나쁘거나 좋더라도 그 계산복잡도는 g(n)의 범위 내에 있다는 뜻이다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://ratsgo.github.io/data%20structure&amp;algorithm/2017/09/13/asymptotic/\" target=\"_blank\" rel=\"noopener\">https://ratsgo.github.io/data%20structure&amp;algorithm/2017/09/13/asymptotic/</a></p>\n<p><a href=\"http://ledgku.tistory.com/33\" target=\"_blank\" rel=\"noopener\">http://ledgku.tistory.com/33</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"시간-복잡도와-공간-복잡도\"><a href=\"#시간-복잡도와-공간-복잡도\" class=\"headerlink\" title=\"시간 복잡도와 공간 복잡도\"></a>시간 복잡도와 공간 복잡도</h2><ol>\n<li>시간 복잡도 : 알고리즘의 수행시간 분석결과</li>\n<li>공간 복잡도 : 알고리즘의 메모리 사용량에 대한 분석결과</li>\n</ol>\n<p>알고리즘 성능평가는 시간 복잡도와 공간 복잡도를 계산하고 점근적 표기법으로 나타내면 된다.</p>\n<h2 id=\"점근적-분석이란\"><a href=\"#점근적-분석이란\" class=\"headerlink\" title=\"점근적 분석이란\"></a>점근적 분석이란</h2><p>알고리즘의 수행 시간을 분석하기 위해, 항상 입력의 크기가 충분히 클 때에 대해서 분석하는 방법 </p>\n<h2 id=\"점근적-표기법이란\"><a href=\"#점근적-표기법이란\" class=\"headerlink\" title=\"점근적 표기법이란\"></a>점근적 표기법이란</h2><p>점근적 증가율은 입력의 크기에 따라 함수가 증가하는 비율이다. 그 표기법을 점근적 표기법이라 한다.<br>세 가지가 있다.</p>\n<ul>\n<li>빅오 표기법</li>\n<li>오메가 표기법</li>\n<li>세타 표기법</li>\n</ul>\n<h2 id=\"빅오-표기법\"><a href=\"#빅오-표기법\" class=\"headerlink\" title=\"빅오 표기법\"></a>빅오 표기법</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic01.png\" alt=\"img\"></p>\n<p>f(n)을 O(g(n))이라고 표시한다. </p>\n<p>이 때 g(n)를 f(n)의 점근 상한이라고 한다.</p>\n<p>알고리즘 f(n)이 O(g(n))에 속한다면, f(n)의 계산복잡도는 최악의 경우라도 g(n)과 같거나 혹은 작다는 뜻이다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic011.png\" alt=\"img\"></p>\n<h2 id=\"오메가-표기법\"><a href=\"#오메가-표기법\" class=\"headerlink\" title=\"오메가 표기법\"></a>오메가 표기법</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic02.png\" alt=\"img\"></p>\n<p>f(n)를 Ω(g(n))이라고 표시한다. </p>\n<p>이 때 g(n)는 f(n)의 점근 하한이라고 한다. </p>\n<p>알고리즘 f(n)의 계산복잡도가 Ω(g(n))에 속한다면, f(n)의 계산복잡도는 최선의 경우를 상정하더라도 g(n)과 같거나 혹은 크다는 뜻이다.</p>\n<h2 id=\"세타-표기법\"><a href=\"#세타-표기법\" class=\"headerlink\" title=\"세타 표기법\"></a>세타 표기법</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/asymptonic03.png\" alt=\"img\"></p>\n<p>f(n)을 Θ(g(n))이라고 표시한다. </p>\n<p>g(n)은 f(n)의 점근적 상한과 하한의 교집합이라고 한다. </p>\n<p>알고리즘 f(n)이 아무리 나쁘거나 좋더라도 그 계산복잡도는 g(n)의 범위 내에 있다는 뜻이다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://ratsgo.github.io/data%20structure&amp;algorithm/2017/09/13/asymptotic/\" target=\"_blank\" rel=\"noopener\">https://ratsgo.github.io/data%20structure&amp;algorithm/2017/09/13/asymptotic/</a></p>\n<p><a href=\"http://ledgku.tistory.com/33\" target=\"_blank\" rel=\"noopener\">http://ledgku.tistory.com/33</a></p>\n"},{"layout":"post","title":"flow, congestion control","date":"2018-11-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/networkDoorimg.png","_content":"\nflow control은 host와 host 간에 데이터 처리를 효율적으로 하기 위한 방법입니다.\ncongestion control은 host와 network 간의 데이터 처리를 효율적으로 하기 위한 방법입니다.\n\n## flow control 이란?\n\n송신측과 수신측의 데이터 처리 속도 차이를 해결하기 위한 방법입니다. \n\n수신측의 데이터 처리 속도가 송신측의 데이터 처리 속도보다 빠르면 문제가 되지 않습니다. 하지만, 송신측의 데\n이터 처리 속도가 더 빠르면 문제가 됩니다. 수신측에서 제한된 저장용량을 초과한 이후에 도착하는 데이터는, 손\n실 될 수 있으며 만약 손실 된다면 불필요하게 응답과 데이터 전송이 송/수신 측 간에 빈번이 발생합니다. 이러한 위험을 줄이기 위해 송신 측의 데이터 전송량을 수신측에 따라 조절하는 flow control 이 필요합니다. \n\nstop and wait, sliding window 방식이 있습니다.\n\n## congestion control 이란?\n\n송신측과 네트워크의 데이터 처리 속도 차이를 해결하기 위한 방법입니다.\n\n송신측의 데이터는 지역망이나 인터넷으로 연결된 대형 네트워크를 통해 전달됩니다. 만약 한 라우터에 데이터가 \n몰릴 경우, 자신에게 온 데이터를 모두 처리 할 수 없게 됩니다. 이런 경우 호스트들은 또 다시 재전송을 하게되고 \n결국 혼잡만 가중시켜 오버플로우나 데이터 손실을 발생시키게 됩니다. 이러한 네트워크의 혼잡을 피하기 위해 송신측에서 보내는 데이터의 전송 속도를  강제로 줄이는 congestion control 이 필요합니다.\n\nAIMD, Slow Start, Fast Transmit, Fast Recovery 방식이 있습니다.\n\n## Reference\n\n<http://jwprogramming.tistory.com/36>","source":"_posts/2018-11-21-flow, congestion control.md","raw":"---\nlayout: post\ntitle:  \"flow, congestion control\"\ndate:   2018-11-21\ncategories: network\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/networkDoorimg.png\n---\n\nflow control은 host와 host 간에 데이터 처리를 효율적으로 하기 위한 방법입니다.\ncongestion control은 host와 network 간의 데이터 처리를 효율적으로 하기 위한 방법입니다.\n\n## flow control 이란?\n\n송신측과 수신측의 데이터 처리 속도 차이를 해결하기 위한 방법입니다. \n\n수신측의 데이터 처리 속도가 송신측의 데이터 처리 속도보다 빠르면 문제가 되지 않습니다. 하지만, 송신측의 데\n이터 처리 속도가 더 빠르면 문제가 됩니다. 수신측에서 제한된 저장용량을 초과한 이후에 도착하는 데이터는, 손\n실 될 수 있으며 만약 손실 된다면 불필요하게 응답과 데이터 전송이 송/수신 측 간에 빈번이 발생합니다. 이러한 위험을 줄이기 위해 송신 측의 데이터 전송량을 수신측에 따라 조절하는 flow control 이 필요합니다. \n\nstop and wait, sliding window 방식이 있습니다.\n\n## congestion control 이란?\n\n송신측과 네트워크의 데이터 처리 속도 차이를 해결하기 위한 방법입니다.\n\n송신측의 데이터는 지역망이나 인터넷으로 연결된 대형 네트워크를 통해 전달됩니다. 만약 한 라우터에 데이터가 \n몰릴 경우, 자신에게 온 데이터를 모두 처리 할 수 없게 됩니다. 이런 경우 호스트들은 또 다시 재전송을 하게되고 \n결국 혼잡만 가중시켜 오버플로우나 데이터 손실을 발생시키게 됩니다. 이러한 네트워크의 혼잡을 피하기 위해 송신측에서 보내는 데이터의 전송 속도를  강제로 줄이는 congestion control 이 필요합니다.\n\nAIMD, Slow Start, Fast Transmit, Fast Recovery 방식이 있습니다.\n\n## Reference\n\n<http://jwprogramming.tistory.com/36>","slug":"2018-11-21-flow, congestion control","published":1,"updated":"2018-11-21T09:52:10.820Z","comments":1,"photos":[],"link":"","_id":"cjp6k65t400ji31x7rmq5vuwj","content":"<p>flow control은 host와 host 간에 데이터 처리를 효율적으로 하기 위한 방법입니다.<br>congestion control은 host와 network 간의 데이터 처리를 효율적으로 하기 위한 방법입니다.</p>\n<h2 id=\"flow-control-이란\"><a href=\"#flow-control-이란\" class=\"headerlink\" title=\"flow control 이란?\"></a>flow control 이란?</h2><p>송신측과 수신측의 데이터 처리 속도 차이를 해결하기 위한 방법입니다. </p>\n<p>수신측의 데이터 처리 속도가 송신측의 데이터 처리 속도보다 빠르면 문제가 되지 않습니다. 하지만, 송신측의 데<br>이터 처리 속도가 더 빠르면 문제가 됩니다. 수신측에서 제한된 저장용량을 초과한 이후에 도착하는 데이터는, 손<br>실 될 수 있으며 만약 손실 된다면 불필요하게 응답과 데이터 전송이 송/수신 측 간에 빈번이 발생합니다. 이러한 위험을 줄이기 위해 송신 측의 데이터 전송량을 수신측에 따라 조절하는 flow control 이 필요합니다. </p>\n<p>stop and wait, sliding window 방식이 있습니다.</p>\n<h2 id=\"congestion-control-이란\"><a href=\"#congestion-control-이란\" class=\"headerlink\" title=\"congestion control 이란?\"></a>congestion control 이란?</h2><p>송신측과 네트워크의 데이터 처리 속도 차이를 해결하기 위한 방법입니다.</p>\n<p>송신측의 데이터는 지역망이나 인터넷으로 연결된 대형 네트워크를 통해 전달됩니다. 만약 한 라우터에 데이터가<br>몰릴 경우, 자신에게 온 데이터를 모두 처리 할 수 없게 됩니다. 이런 경우 호스트들은 또 다시 재전송을 하게되고<br>결국 혼잡만 가중시켜 오버플로우나 데이터 손실을 발생시키게 됩니다. 이러한 네트워크의 혼잡을 피하기 위해 송신측에서 보내는 데이터의 전송 속도를  강제로 줄이는 congestion control 이 필요합니다.</p>\n<p>AIMD, Slow Start, Fast Transmit, Fast Recovery 방식이 있습니다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://jwprogramming.tistory.com/36\" target=\"_blank\" rel=\"noopener\">http://jwprogramming.tistory.com/36</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>flow control은 host와 host 간에 데이터 처리를 효율적으로 하기 위한 방법입니다.<br>congestion control은 host와 network 간의 데이터 처리를 효율적으로 하기 위한 방법입니다.</p>\n<h2 id=\"flow-control-이란\"><a href=\"#flow-control-이란\" class=\"headerlink\" title=\"flow control 이란?\"></a>flow control 이란?</h2><p>송신측과 수신측의 데이터 처리 속도 차이를 해결하기 위한 방법입니다. </p>\n<p>수신측의 데이터 처리 속도가 송신측의 데이터 처리 속도보다 빠르면 문제가 되지 않습니다. 하지만, 송신측의 데<br>이터 처리 속도가 더 빠르면 문제가 됩니다. 수신측에서 제한된 저장용량을 초과한 이후에 도착하는 데이터는, 손<br>실 될 수 있으며 만약 손실 된다면 불필요하게 응답과 데이터 전송이 송/수신 측 간에 빈번이 발생합니다. 이러한 위험을 줄이기 위해 송신 측의 데이터 전송량을 수신측에 따라 조절하는 flow control 이 필요합니다. </p>\n<p>stop and wait, sliding window 방식이 있습니다.</p>\n<h2 id=\"congestion-control-이란\"><a href=\"#congestion-control-이란\" class=\"headerlink\" title=\"congestion control 이란?\"></a>congestion control 이란?</h2><p>송신측과 네트워크의 데이터 처리 속도 차이를 해결하기 위한 방법입니다.</p>\n<p>송신측의 데이터는 지역망이나 인터넷으로 연결된 대형 네트워크를 통해 전달됩니다. 만약 한 라우터에 데이터가<br>몰릴 경우, 자신에게 온 데이터를 모두 처리 할 수 없게 됩니다. 이런 경우 호스트들은 또 다시 재전송을 하게되고<br>결국 혼잡만 가중시켜 오버플로우나 데이터 손실을 발생시키게 됩니다. 이러한 네트워크의 혼잡을 피하기 위해 송신측에서 보내는 데이터의 전송 속도를  강제로 줄이는 congestion control 이 필요합니다.</p>\n<p>AIMD, Slow Start, Fast Transmit, Fast Recovery 방식이 있습니다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://jwprogramming.tistory.com/36\" target=\"_blank\" rel=\"noopener\">http://jwprogramming.tistory.com/36</a></p>\n"},{"layout":"post","title":"View Life Cycle","date":"2018-11-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n## Life Cycle\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iosViewLifeCycle.png)\n\n1. ViewDidLoad\n\n   뷰 컨트롤러 클래스가 생성될 때, 가장 먼저 실행됩니다. 특별한 경우가 아니라면 **딱 한 번** 실행되기 때문\n   에 초기화 할 때 사용 할 수 있습니다.\n\n2. ViewWillAppear\n\n   뷰가 생성되기 직전에 **항상** 실행이 되기 때문에 뷰가 나타나기 전에 실행해야 하는 작업들을 여기서 할 \n   수 있습니다.\n\n3. ViewDidAppear\n\n   뷰가 생성되고 난 뒤에 실행 됩니다. 데이터를 받아서 화면에 뿌려주거나 애니메이션 등의 작업을 하는 로직을 \n   위치시킬 수 있습니다. ViewWillAppear 에서 로직을 넣었다가 뷰에 반영이 안되는 경우가 있기 때문입니다.\n\n4. ViewWillDisappear\n\n   뷰가 사라지기 직전에 실행 됩니다.\n\n5. ViewDidDisappear\n\n   뷰가 사라지고 난 뒤에 실행 됩니다.\n\n## Reference\n\n<https://developer.apple.com/documentation/uikit/uiviewcontroller>","source":"_posts/2018-11-13-View Life Cycle.md","raw":"---\nlayout: post\ntitle:  \"View Life Cycle\"\ndate:   2018-11-13\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n## Life Cycle\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iosViewLifeCycle.png)\n\n1. ViewDidLoad\n\n   뷰 컨트롤러 클래스가 생성될 때, 가장 먼저 실행됩니다. 특별한 경우가 아니라면 **딱 한 번** 실행되기 때문\n   에 초기화 할 때 사용 할 수 있습니다.\n\n2. ViewWillAppear\n\n   뷰가 생성되기 직전에 **항상** 실행이 되기 때문에 뷰가 나타나기 전에 실행해야 하는 작업들을 여기서 할 \n   수 있습니다.\n\n3. ViewDidAppear\n\n   뷰가 생성되고 난 뒤에 실행 됩니다. 데이터를 받아서 화면에 뿌려주거나 애니메이션 등의 작업을 하는 로직을 \n   위치시킬 수 있습니다. ViewWillAppear 에서 로직을 넣었다가 뷰에 반영이 안되는 경우가 있기 때문입니다.\n\n4. ViewWillDisappear\n\n   뷰가 사라지기 직전에 실행 됩니다.\n\n5. ViewDidDisappear\n\n   뷰가 사라지고 난 뒤에 실행 됩니다.\n\n## Reference\n\n<https://developer.apple.com/documentation/uikit/uiviewcontroller>","slug":"2018-11-13-View Life Cycle","published":1,"updated":"2018-11-13T03:19:23.900Z","comments":1,"photos":[],"link":"","_id":"cjp6k65t600jl31x70wlw5qlr","content":"<h2 id=\"Life-Cycle\"><a href=\"#Life-Cycle\" class=\"headerlink\" title=\"Life Cycle\"></a>Life Cycle</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iosViewLifeCycle.png\" alt=\"img\"></p>\n<ol>\n<li><p>ViewDidLoad</p>\n<p>뷰 컨트롤러 클래스가 생성될 때, 가장 먼저 실행됩니다. 특별한 경우가 아니라면 <strong>딱 한 번</strong> 실행되기 때문<br>에 초기화 할 때 사용 할 수 있습니다.</p>\n</li>\n<li><p>ViewWillAppear</p>\n<p>뷰가 생성되기 직전에 <strong>항상</strong> 실행이 되기 때문에 뷰가 나타나기 전에 실행해야 하는 작업들을 여기서 할<br>수 있습니다.</p>\n</li>\n<li><p>ViewDidAppear</p>\n<p>뷰가 생성되고 난 뒤에 실행 됩니다. 데이터를 받아서 화면에 뿌려주거나 애니메이션 등의 작업을 하는 로직을<br>위치시킬 수 있습니다. ViewWillAppear 에서 로직을 넣었다가 뷰에 반영이 안되는 경우가 있기 때문입니다.</p>\n</li>\n<li><p>ViewWillDisappear</p>\n<p>뷰가 사라지기 직전에 실행 됩니다.</p>\n</li>\n<li><p>ViewDidDisappear</p>\n<p>뷰가 사라지고 난 뒤에 실행 됩니다.</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://developer.apple.com/documentation/uikit/uiviewcontroller\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/documentation/uikit/uiviewcontroller</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"Life-Cycle\"><a href=\"#Life-Cycle\" class=\"headerlink\" title=\"Life Cycle\"></a>Life Cycle</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/iosViewLifeCycle.png\" alt=\"img\"></p>\n<ol>\n<li><p>ViewDidLoad</p>\n<p>뷰 컨트롤러 클래스가 생성될 때, 가장 먼저 실행됩니다. 특별한 경우가 아니라면 <strong>딱 한 번</strong> 실행되기 때문<br>에 초기화 할 때 사용 할 수 있습니다.</p>\n</li>\n<li><p>ViewWillAppear</p>\n<p>뷰가 생성되기 직전에 <strong>항상</strong> 실행이 되기 때문에 뷰가 나타나기 전에 실행해야 하는 작업들을 여기서 할<br>수 있습니다.</p>\n</li>\n<li><p>ViewDidAppear</p>\n<p>뷰가 생성되고 난 뒤에 실행 됩니다. 데이터를 받아서 화면에 뿌려주거나 애니메이션 등의 작업을 하는 로직을<br>위치시킬 수 있습니다. ViewWillAppear 에서 로직을 넣었다가 뷰에 반영이 안되는 경우가 있기 때문입니다.</p>\n</li>\n<li><p>ViewWillDisappear</p>\n<p>뷰가 사라지기 직전에 실행 됩니다.</p>\n</li>\n<li><p>ViewDidDisappear</p>\n<p>뷰가 사라지고 난 뒤에 실행 됩니다.</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://developer.apple.com/documentation/uikit/uiviewcontroller\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/documentation/uikit/uiviewcontroller</a></p>\n"},{"layout":"post","title":"SOLID","date":"2018-11-12T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n## SOLID란\n\n객체지향 개발 5대 원리\n\n1. S : SRP - Single Responsibility Principle (단일 책임 원칙)\n\n   객체는 단 하나의 책임(변경 이유)만 가져야 한다.\n\n2. O : OCP - Open-Closed Principle (개방-폐쇄 원칙)\n\n   open for extension, closed for modifications.\n\n3. L : LSP - Liskov Subsititution Principle ( 리스코프 치환 법칙 )\n\n   자식 클래스는 최소한 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다\n\n4. I : ISP - Interface Segregation Principle ( 인터페이스 분리 법칙 )\n\n   인터페이스를 클라이언트에 특화되도록 분리시키는 설계 원칙\n\n5. D : DIP - Dependency Inversion Principle ( 의존 역전 법칙 )\n\n   어떤 클래스가 도움을 받을 때, 구체적인 클래스보다는 인터페이스나 추상 클래스와 의존 관계를 맺도록.\n\n## Reference\n\n<http://www.oodesign.com/single-responsibility-principle.html>\n\nJAVA 객체지향 디자인 패턴 (정인상, 채흥석 지음)","source":"_posts/2018-11-13-SOLID.md","raw":"---\nlayout: post\ntitle:  \"SOLID\"\ndate:   2018-11-13\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n## SOLID란\n\n객체지향 개발 5대 원리\n\n1. S : SRP - Single Responsibility Principle (단일 책임 원칙)\n\n   객체는 단 하나의 책임(변경 이유)만 가져야 한다.\n\n2. O : OCP - Open-Closed Principle (개방-폐쇄 원칙)\n\n   open for extension, closed for modifications.\n\n3. L : LSP - Liskov Subsititution Principle ( 리스코프 치환 법칙 )\n\n   자식 클래스는 최소한 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다\n\n4. I : ISP - Interface Segregation Principle ( 인터페이스 분리 법칙 )\n\n   인터페이스를 클라이언트에 특화되도록 분리시키는 설계 원칙\n\n5. D : DIP - Dependency Inversion Principle ( 의존 역전 법칙 )\n\n   어떤 클래스가 도움을 받을 때, 구체적인 클래스보다는 인터페이스나 추상 클래스와 의존 관계를 맺도록.\n\n## Reference\n\n<http://www.oodesign.com/single-responsibility-principle.html>\n\nJAVA 객체지향 디자인 패턴 (정인상, 채흥석 지음)","slug":"2018-11-13-SOLID","published":1,"updated":"2018-11-13T04:59:04.161Z","comments":1,"photos":[],"link":"","_id":"cjp6k65t800jn31x7kbo7gio4","content":"<h2 id=\"SOLID란\"><a href=\"#SOLID란\" class=\"headerlink\" title=\"SOLID란\"></a>SOLID란</h2><p>객체지향 개발 5대 원리</p>\n<ol>\n<li><p>S : SRP - Single Responsibility Principle (단일 책임 원칙)</p>\n<p>객체는 단 하나의 책임(변경 이유)만 가져야 한다.</p>\n</li>\n<li><p>O : OCP - Open-Closed Principle (개방-폐쇄 원칙)</p>\n<p>open for extension, closed for modifications.</p>\n</li>\n<li><p>L : LSP - Liskov Subsititution Principle ( 리스코프 치환 법칙 )</p>\n<p>자식 클래스는 최소한 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다</p>\n</li>\n<li><p>I : ISP - Interface Segregation Principle ( 인터페이스 분리 법칙 )</p>\n<p>인터페이스를 클라이언트에 특화되도록 분리시키는 설계 원칙</p>\n</li>\n<li><p>D : DIP - Dependency Inversion Principle ( 의존 역전 법칙 )</p>\n<p>어떤 클래스가 도움을 받을 때, 구체적인 클래스보다는 인터페이스나 추상 클래스와 의존 관계를 맺도록.</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://www.oodesign.com/single-responsibility-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/single-responsibility-principle.html</a></p>\n<p>JAVA 객체지향 디자인 패턴 (정인상, 채흥석 지음)</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"SOLID란\"><a href=\"#SOLID란\" class=\"headerlink\" title=\"SOLID란\"></a>SOLID란</h2><p>객체지향 개발 5대 원리</p>\n<ol>\n<li><p>S : SRP - Single Responsibility Principle (단일 책임 원칙)</p>\n<p>객체는 단 하나의 책임(변경 이유)만 가져야 한다.</p>\n</li>\n<li><p>O : OCP - Open-Closed Principle (개방-폐쇄 원칙)</p>\n<p>open for extension, closed for modifications.</p>\n</li>\n<li><p>L : LSP - Liskov Subsititution Principle ( 리스코프 치환 법칙 )</p>\n<p>자식 클래스는 최소한 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다</p>\n</li>\n<li><p>I : ISP - Interface Segregation Principle ( 인터페이스 분리 법칙 )</p>\n<p>인터페이스를 클라이언트에 특화되도록 분리시키는 설계 원칙</p>\n</li>\n<li><p>D : DIP - Dependency Inversion Principle ( 의존 역전 법칙 )</p>\n<p>어떤 클래스가 도움을 받을 때, 구체적인 클래스보다는 인터페이스나 추상 클래스와 의존 관계를 맺도록.</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://www.oodesign.com/single-responsibility-principle.html\" target=\"_blank\" rel=\"noopener\">http://www.oodesign.com/single-responsibility-principle.html</a></p>\n<p>JAVA 객체지향 디자인 패턴 (정인상, 채흥석 지음)</p>\n"},{"layout":"post","title":"길찾기","date":"2018-11-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png","_content":"\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14geLqABQCFAYD&categoryId=AV14geLqABQCFAYD&categoryType=CODE>\n\n오랜만에 푸는 관계로, 쉬운 문제를 선택하였습니다. 탐색 기본 문제입니다.\n\n## 풀이\n\nhttps://github.com/KoJunHee/algorithm/blob/master/src/swa_1219/Solution.java\n\n1. 그래프 그리기\n\n   주어진 그래프를 두 개의 배열로 표현합니다. 한 지점에서 최대 두 개의 길이 있기 때문입니다.\n\n   예를 들어, 1번 지점에서  3번과 4번의 길로 갈 수 있다면 다음과 같이 배열에 저장합니다.\n\n   arr01[1] =3 , arr02[1] =4\n\n   마찬가지로 3번 지점에서 7번 길로만 갈 수 있다면 다음과 같이 배열에 저장합니다.\n\n   arr01[3] = 7, arr02[3] = 0\n\n2. 경로 유무 찾기\n\n   DFS를 사용합니다. 최대한 깊게 들어가다가 99번 위치에 도착하면 탐색을 종료합니다.","source":"_posts/2018-11-21-길찾기.md","raw":"---\nlayout: post\ntitle:  \"길찾기\"\ndate:   2018-11-21\ncategories: algorithm\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/algorithm.png\n---\n\n<https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14geLqABQCFAYD&categoryId=AV14geLqABQCFAYD&categoryType=CODE>\n\n오랜만에 푸는 관계로, 쉬운 문제를 선택하였습니다. 탐색 기본 문제입니다.\n\n## 풀이\n\nhttps://github.com/KoJunHee/algorithm/blob/master/src/swa_1219/Solution.java\n\n1. 그래프 그리기\n\n   주어진 그래프를 두 개의 배열로 표현합니다. 한 지점에서 최대 두 개의 길이 있기 때문입니다.\n\n   예를 들어, 1번 지점에서  3번과 4번의 길로 갈 수 있다면 다음과 같이 배열에 저장합니다.\n\n   arr01[1] =3 , arr02[1] =4\n\n   마찬가지로 3번 지점에서 7번 길로만 갈 수 있다면 다음과 같이 배열에 저장합니다.\n\n   arr01[3] = 7, arr02[3] = 0\n\n2. 경로 유무 찾기\n\n   DFS를 사용합니다. 최대한 깊게 들어가다가 99번 위치에 도착하면 탐색을 종료합니다.","slug":"2018-11-21-길찾기","published":1,"updated":"2018-11-21T07:45:58.304Z","comments":1,"photos":[],"link":"","_id":"cjp6k65t900jq31x7ilvz92do","content":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14geLqABQCFAYD&amp;categoryId=AV14geLqABQCFAYD&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14geLqABQCFAYD&amp;categoryId=AV14geLqABQCFAYD&amp;categoryType=CODE</a></p>\n<p>오랜만에 푸는 관계로, 쉬운 문제를 선택하였습니다. 탐색 기본 문제입니다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/swa_1219/Solution.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/swa_1219/Solution.java</a></p>\n<ol>\n<li><p>그래프 그리기</p>\n<p>주어진 그래프를 두 개의 배열로 표현합니다. 한 지점에서 최대 두 개의 길이 있기 때문입니다.</p>\n<p>예를 들어, 1번 지점에서  3번과 4번의 길로 갈 수 있다면 다음과 같이 배열에 저장합니다.</p>\n<p>arr01[1] =3 , arr02[1] =4</p>\n<p>마찬가지로 3번 지점에서 7번 길로만 갈 수 있다면 다음과 같이 배열에 저장합니다.</p>\n<p>arr01[3] = 7, arr02[3] = 0</p>\n</li>\n<li><p>경로 유무 찾기</p>\n<p>DFS를 사용합니다. 최대한 깊게 들어가다가 99번 위치에 도착하면 탐색을 종료합니다.</p>\n</li>\n</ol>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14geLqABQCFAYD&amp;categoryId=AV14geLqABQCFAYD&amp;categoryType=CODE\" target=\"_blank\" rel=\"noopener\">https://www.swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14geLqABQCFAYD&amp;categoryId=AV14geLqABQCFAYD&amp;categoryType=CODE</a></p>\n<p>오랜만에 푸는 관계로, 쉬운 문제를 선택하였습니다. 탐색 기본 문제입니다.</p>\n<h2 id=\"풀이\"><a href=\"#풀이\" class=\"headerlink\" title=\"풀이\"></a>풀이</h2><p><a href=\"https://github.com/KoJunHee/algorithm/blob/master/src/swa_1219/Solution.java\" target=\"_blank\" rel=\"noopener\">https://github.com/KoJunHee/algorithm/blob/master/src/swa_1219/Solution.java</a></p>\n<ol>\n<li><p>그래프 그리기</p>\n<p>주어진 그래프를 두 개의 배열로 표현합니다. 한 지점에서 최대 두 개의 길이 있기 때문입니다.</p>\n<p>예를 들어, 1번 지점에서  3번과 4번의 길로 갈 수 있다면 다음과 같이 배열에 저장합니다.</p>\n<p>arr01[1] =3 , arr02[1] =4</p>\n<p>마찬가지로 3번 지점에서 7번 길로만 갈 수 있다면 다음과 같이 배열에 저장합니다.</p>\n<p>arr01[3] = 7, arr02[3] = 0</p>\n</li>\n<li><p>경로 유무 찾기</p>\n<p>DFS를 사용합니다. 최대한 깊게 들어가다가 99번 위치에 도착하면 탐색을 종료합니다.</p>\n</li>\n</ol>\n"},{"layout":"post","title":"flow control","date":"2018-11-20T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/networkDoorimg.png","_content":"\nflow control은 송신측과 수신측의 데이터 처리 속도 차이를 해결하기 위한 방법입니다. stop and wait 와 sliding window 방식이 있습니다.\n\n## stop and wait\n\n매번 전송한 패킷에 대해 확인응답을 받아야만 그 다음 패킷을 전송하는 방법입니다. 다음 그림과 같이 동작합니다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flowcontrol01.png)\n\n## sliding window\n\n## Reference\n\n<http://jwprogramming.tistory.com/36>","source":"_posts/2018-11-21-flow control.md","raw":"---\nlayout: post\ntitle:  \"flow control\"\ndate:   2018-11-21\ncategories: network\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/networkDoorimg.png\n---\n\nflow control은 송신측과 수신측의 데이터 처리 속도 차이를 해결하기 위한 방법입니다. stop and wait 와 sliding window 방식이 있습니다.\n\n## stop and wait\n\n매번 전송한 패킷에 대해 확인응답을 받아야만 그 다음 패킷을 전송하는 방법입니다. 다음 그림과 같이 동작합니다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flowcontrol01.png)\n\n## sliding window\n\n## Reference\n\n<http://jwprogramming.tistory.com/36>","slug":"2018-11-21-flow control","published":1,"updated":"2018-11-21T10:59:02.336Z","comments":1,"photos":[],"link":"","_id":"cjp6k65tb00js31x78l313kqh","content":"<p>flow control은 송신측과 수신측의 데이터 처리 속도 차이를 해결하기 위한 방법입니다. stop and wait 와 sliding window 방식이 있습니다.</p>\n<h2 id=\"stop-and-wait\"><a href=\"#stop-and-wait\" class=\"headerlink\" title=\"stop and wait\"></a>stop and wait</h2><p>매번 전송한 패킷에 대해 확인응답을 받아야만 그 다음 패킷을 전송하는 방법입니다. 다음 그림과 같이 동작합니다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flowcontrol01.png\" alt=\"img\"></p>\n<h2 id=\"sliding-window\"><a href=\"#sliding-window\" class=\"headerlink\" title=\"sliding window\"></a>sliding window</h2><h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://jwprogramming.tistory.com/36\" target=\"_blank\" rel=\"noopener\">http://jwprogramming.tistory.com/36</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>flow control은 송신측과 수신측의 데이터 처리 속도 차이를 해결하기 위한 방법입니다. stop and wait 와 sliding window 방식이 있습니다.</p>\n<h2 id=\"stop-and-wait\"><a href=\"#stop-and-wait\" class=\"headerlink\" title=\"stop and wait\"></a>stop and wait</h2><p>매번 전송한 패킷에 대해 확인응답을 받아야만 그 다음 패킷을 전송하는 방법입니다. 다음 그림과 같이 동작합니다.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/flowcontrol01.png\" alt=\"img\"></p>\n<h2 id=\"sliding-window\"><a href=\"#sliding-window\" class=\"headerlink\" title=\"sliding window\"></a>sliding window</h2><h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"http://jwprogramming.tistory.com/36\" target=\"_blank\" rel=\"noopener\">http://jwprogramming.tistory.com/36</a></p>\n"},{"layout":"post","title":"Components","date":"2018-11-21T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png","_content":"\n안드로이드 애플리케이션은 컴포넌트(component)로 구성되어있습니다. 안드로이드의 4대 컴포넌트는 액티비티(activity), 서비스(service), 콘텐트 제공자(content provider), 방송수신자(broadcast receiver) 입니다. \n각 컴포넌트들은 하나의 독립된 형태로 존재하며, 정해진 역할을 수행합니다. 이때, 인텐트를 통하여 다른 애플리케이션의 컴포넌트를 활성화시킬 수 있습니다. 인텐트는 서로 독립적으로 동작하는 4가지 컴포넌트들 간의 상호 통신을 위한 장치입니다. 즉, 컴포넌트 간의 통신수단입니다. 인텐트를 통하여 다른 애플리케이션의 컴포넌트를 활성화시킬 수 있습니다.\n\n## 액티비티(activity)\n\n사용자 인터페이스 화면을 가지며 특정한 작업을 담당하는 컴포넌트입니다. \n\n일반적으로 UI를 갖는 하나의 스크린을 나타냅니다. 안드로이드 애플리케이션은 반드시 하나의 activity를 가지고 있어야합니다. 각 액티비티는 manifest 파일에 등록되어 있어야 합니다. 엑티비티는 하나 이상의 View를 가질 수 있습니다.\n\n예를 들어 이메일 앱이라면 새 이메일 목록을 표시하는 액티비티가 하나 있고, 이메일을 작성하는 액티비티가 또 하나, 그리고 이메일을 읽는 데 쓰는 액티비티가 또 하나 있을 수 있습니다. 여러 액티비티가 함께 작동하여 해당 이메일 앱에서 짜임새 있는 사용자 환경을 형성하는 것은 사실이지만, 각자 서로와는 독립적인 형태입니다\n\n## 서비스(service)\n\n백그라운드에서 실행되는 컴포넌트로 오랫동안 실행되는 작업이나 원격 프로세스를 위한 작업을 할 때 사용됩니다.\n\nUI가 없습니다. 한번 시작된 Service는 애플리케이션이 종료되고 다른 애플리케이션으로 이동해도 계속 백그라운드에서 실행됩니다. 모든 서비스는 Service 클래스를 상속받아서 작성됩니다. \n\n예를 들어 서비스는 사용자가 다른 앱에 있는 동안에 백그라운드에서 음악을 재생할 수도 있고, 아니면 사용자와 액티비티 사이의 상호작용을 차단하지 않고 네트워크를 가로질러 데이터를 가져올 수도 있습니다. 또 다른 구성 요소(예: 액티비티)가 서비스를 시작한 다음 실행되도록 두거나 자신에게 바인드하여 상호작용하도록 할 수도 있습니다.\n\n## 콘텐트 제공자(content provider)\n\n데이터를 관리하고 다른 애플리케이션 데이터를 제공하는 컴포넌트입니다.\n\n데이터는 파일 시스템이나 SQLite 데이터베이스, 웹상에 저장될 수 있습니다. 콘텐트 제공자를 통해서 다른 애플리케이션의 데이터를 쿼리하거나 변경 가능합니다.\n\n예를 들어, Android 시스템은 사용자의 연락처 정보를 관리하는 콘텐츠 제공자를 제공합니다. 따라서, 적절한 권한을 가진 앱이라면 어떤 것이든 해당 콘텐츠 제공자의 일부를 쿼리하여(예를 들어 ContactsContract.Data 등) 특정한 사람에 대한 정보를 읽고 쓸 수 있습니다.\n\n## 방송수신자(broadcast receiver)\n\n안드로이드 단말기에서 발생하는 다양한 이벤트/정보를 받고 반응하는 컴포넌트입니다.\n\n예를들면 시스템부팅, 배터리 부족, 전화/문자 수신, 네트워크 끊김을 알려주는 것이 방송입니다. 단말기에서 발생하는 일 중에서 어플리케이션이 알아야 하는 상황이 발생하면 방송을 해줍니다. 수신기(BroadcastReceiver)를 통해 상황을 감지하고 적절한 작업을 수행합니다. 일반적으로 UI가 없습니다.\n\n## Reference\n\n<https://developer.android.com/guide/components/fundamentals?hl=ko>\n\n<http://ggodol.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-4%EB%8C%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8>","source":"_posts/2018-11-22-Components.md","raw":"---\nlayout: post\ntitle:  \"Components\"\ndate:   2018-11-22\ncategories: android\nimage: https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/android.png\n---\n\n안드로이드 애플리케이션은 컴포넌트(component)로 구성되어있습니다. 안드로이드의 4대 컴포넌트는 액티비티(activity), 서비스(service), 콘텐트 제공자(content provider), 방송수신자(broadcast receiver) 입니다. \n각 컴포넌트들은 하나의 독립된 형태로 존재하며, 정해진 역할을 수행합니다. 이때, 인텐트를 통하여 다른 애플리케이션의 컴포넌트를 활성화시킬 수 있습니다. 인텐트는 서로 독립적으로 동작하는 4가지 컴포넌트들 간의 상호 통신을 위한 장치입니다. 즉, 컴포넌트 간의 통신수단입니다. 인텐트를 통하여 다른 애플리케이션의 컴포넌트를 활성화시킬 수 있습니다.\n\n## 액티비티(activity)\n\n사용자 인터페이스 화면을 가지며 특정한 작업을 담당하는 컴포넌트입니다. \n\n일반적으로 UI를 갖는 하나의 스크린을 나타냅니다. 안드로이드 애플리케이션은 반드시 하나의 activity를 가지고 있어야합니다. 각 액티비티는 manifest 파일에 등록되어 있어야 합니다. 엑티비티는 하나 이상의 View를 가질 수 있습니다.\n\n예를 들어 이메일 앱이라면 새 이메일 목록을 표시하는 액티비티가 하나 있고, 이메일을 작성하는 액티비티가 또 하나, 그리고 이메일을 읽는 데 쓰는 액티비티가 또 하나 있을 수 있습니다. 여러 액티비티가 함께 작동하여 해당 이메일 앱에서 짜임새 있는 사용자 환경을 형성하는 것은 사실이지만, 각자 서로와는 독립적인 형태입니다\n\n## 서비스(service)\n\n백그라운드에서 실행되는 컴포넌트로 오랫동안 실행되는 작업이나 원격 프로세스를 위한 작업을 할 때 사용됩니다.\n\nUI가 없습니다. 한번 시작된 Service는 애플리케이션이 종료되고 다른 애플리케이션으로 이동해도 계속 백그라운드에서 실행됩니다. 모든 서비스는 Service 클래스를 상속받아서 작성됩니다. \n\n예를 들어 서비스는 사용자가 다른 앱에 있는 동안에 백그라운드에서 음악을 재생할 수도 있고, 아니면 사용자와 액티비티 사이의 상호작용을 차단하지 않고 네트워크를 가로질러 데이터를 가져올 수도 있습니다. 또 다른 구성 요소(예: 액티비티)가 서비스를 시작한 다음 실행되도록 두거나 자신에게 바인드하여 상호작용하도록 할 수도 있습니다.\n\n## 콘텐트 제공자(content provider)\n\n데이터를 관리하고 다른 애플리케이션 데이터를 제공하는 컴포넌트입니다.\n\n데이터는 파일 시스템이나 SQLite 데이터베이스, 웹상에 저장될 수 있습니다. 콘텐트 제공자를 통해서 다른 애플리케이션의 데이터를 쿼리하거나 변경 가능합니다.\n\n예를 들어, Android 시스템은 사용자의 연락처 정보를 관리하는 콘텐츠 제공자를 제공합니다. 따라서, 적절한 권한을 가진 앱이라면 어떤 것이든 해당 콘텐츠 제공자의 일부를 쿼리하여(예를 들어 ContactsContract.Data 등) 특정한 사람에 대한 정보를 읽고 쓸 수 있습니다.\n\n## 방송수신자(broadcast receiver)\n\n안드로이드 단말기에서 발생하는 다양한 이벤트/정보를 받고 반응하는 컴포넌트입니다.\n\n예를들면 시스템부팅, 배터리 부족, 전화/문자 수신, 네트워크 끊김을 알려주는 것이 방송입니다. 단말기에서 발생하는 일 중에서 어플리케이션이 알아야 하는 상황이 발생하면 방송을 해줍니다. 수신기(BroadcastReceiver)를 통해 상황을 감지하고 적절한 작업을 수행합니다. 일반적으로 UI가 없습니다.\n\n## Reference\n\n<https://developer.android.com/guide/components/fundamentals?hl=ko>\n\n<http://ggodol.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-4%EB%8C%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8>","slug":"2018-11-22-Components","published":1,"updated":"2018-11-22T11:43:32.927Z","comments":1,"photos":[],"link":"","_id":"cjp6k65tc00ju31x740j23pp6","content":"<p>안드로이드 애플리케이션은 컴포넌트(component)로 구성되어있습니다. 안드로이드의 4대 컴포넌트는 액티비티(activity), 서비스(service), 콘텐트 제공자(content provider), 방송수신자(broadcast receiver) 입니다.<br>각 컴포넌트들은 하나의 독립된 형태로 존재하며, 정해진 역할을 수행합니다. 이때, 인텐트를 통하여 다른 애플리케이션의 컴포넌트를 활성화시킬 수 있습니다. 인텐트는 서로 독립적으로 동작하는 4가지 컴포넌트들 간의 상호 통신을 위한 장치입니다. 즉, 컴포넌트 간의 통신수단입니다. 인텐트를 통하여 다른 애플리케이션의 컴포넌트를 활성화시킬 수 있습니다.</p>\n<h2 id=\"액티비티-activity\"><a href=\"#액티비티-activity\" class=\"headerlink\" title=\"액티비티(activity)\"></a>액티비티(activity)</h2><p>사용자 인터페이스 화면을 가지며 특정한 작업을 담당하는 컴포넌트입니다. </p>\n<p>일반적으로 UI를 갖는 하나의 스크린을 나타냅니다. 안드로이드 애플리케이션은 반드시 하나의 activity를 가지고 있어야합니다. 각 액티비티는 manifest 파일에 등록되어 있어야 합니다. 엑티비티는 하나 이상의 View를 가질 수 있습니다.</p>\n<p>예를 들어 이메일 앱이라면 새 이메일 목록을 표시하는 액티비티가 하나 있고, 이메일을 작성하는 액티비티가 또 하나, 그리고 이메일을 읽는 데 쓰는 액티비티가 또 하나 있을 수 있습니다. 여러 액티비티가 함께 작동하여 해당 이메일 앱에서 짜임새 있는 사용자 환경을 형성하는 것은 사실이지만, 각자 서로와는 독립적인 형태입니다</p>\n<h2 id=\"서비스-service\"><a href=\"#서비스-service\" class=\"headerlink\" title=\"서비스(service)\"></a>서비스(service)</h2><p>백그라운드에서 실행되는 컴포넌트로 오랫동안 실행되는 작업이나 원격 프로세스를 위한 작업을 할 때 사용됩니다.</p>\n<p>UI가 없습니다. 한번 시작된 Service는 애플리케이션이 종료되고 다른 애플리케이션으로 이동해도 계속 백그라운드에서 실행됩니다. 모든 서비스는 Service 클래스를 상속받아서 작성됩니다. </p>\n<p>예를 들어 서비스는 사용자가 다른 앱에 있는 동안에 백그라운드에서 음악을 재생할 수도 있고, 아니면 사용자와 액티비티 사이의 상호작용을 차단하지 않고 네트워크를 가로질러 데이터를 가져올 수도 있습니다. 또 다른 구성 요소(예: 액티비티)가 서비스를 시작한 다음 실행되도록 두거나 자신에게 바인드하여 상호작용하도록 할 수도 있습니다.</p>\n<h2 id=\"콘텐트-제공자-content-provider\"><a href=\"#콘텐트-제공자-content-provider\" class=\"headerlink\" title=\"콘텐트 제공자(content provider)\"></a>콘텐트 제공자(content provider)</h2><p>데이터를 관리하고 다른 애플리케이션 데이터를 제공하는 컴포넌트입니다.</p>\n<p>데이터는 파일 시스템이나 SQLite 데이터베이스, 웹상에 저장될 수 있습니다. 콘텐트 제공자를 통해서 다른 애플리케이션의 데이터를 쿼리하거나 변경 가능합니다.</p>\n<p>예를 들어, Android 시스템은 사용자의 연락처 정보를 관리하는 콘텐츠 제공자를 제공합니다. 따라서, 적절한 권한을 가진 앱이라면 어떤 것이든 해당 콘텐츠 제공자의 일부를 쿼리하여(예를 들어 ContactsContract.Data 등) 특정한 사람에 대한 정보를 읽고 쓸 수 있습니다.</p>\n<h2 id=\"방송수신자-broadcast-receiver\"><a href=\"#방송수신자-broadcast-receiver\" class=\"headerlink\" title=\"방송수신자(broadcast receiver)\"></a>방송수신자(broadcast receiver)</h2><p>안드로이드 단말기에서 발생하는 다양한 이벤트/정보를 받고 반응하는 컴포넌트입니다.</p>\n<p>예를들면 시스템부팅, 배터리 부족, 전화/문자 수신, 네트워크 끊김을 알려주는 것이 방송입니다. 단말기에서 발생하는 일 중에서 어플리케이션이 알아야 하는 상황이 발생하면 방송을 해줍니다. 수신기(BroadcastReceiver)를 통해 상황을 감지하고 적절한 작업을 수행합니다. 일반적으로 UI가 없습니다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://developer.android.com/guide/components/fundamentals?hl=ko\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/guide/components/fundamentals?hl=ko</a></p>\n<p><a href=\"http://ggodol.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-4%EB%8C%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" target=\"_blank\" rel=\"noopener\">http://ggodol.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-4%EB%8C%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>안드로이드 애플리케이션은 컴포넌트(component)로 구성되어있습니다. 안드로이드의 4대 컴포넌트는 액티비티(activity), 서비스(service), 콘텐트 제공자(content provider), 방송수신자(broadcast receiver) 입니다.<br>각 컴포넌트들은 하나의 독립된 형태로 존재하며, 정해진 역할을 수행합니다. 이때, 인텐트를 통하여 다른 애플리케이션의 컴포넌트를 활성화시킬 수 있습니다. 인텐트는 서로 독립적으로 동작하는 4가지 컴포넌트들 간의 상호 통신을 위한 장치입니다. 즉, 컴포넌트 간의 통신수단입니다. 인텐트를 통하여 다른 애플리케이션의 컴포넌트를 활성화시킬 수 있습니다.</p>\n<h2 id=\"액티비티-activity\"><a href=\"#액티비티-activity\" class=\"headerlink\" title=\"액티비티(activity)\"></a>액티비티(activity)</h2><p>사용자 인터페이스 화면을 가지며 특정한 작업을 담당하는 컴포넌트입니다. </p>\n<p>일반적으로 UI를 갖는 하나의 스크린을 나타냅니다. 안드로이드 애플리케이션은 반드시 하나의 activity를 가지고 있어야합니다. 각 액티비티는 manifest 파일에 등록되어 있어야 합니다. 엑티비티는 하나 이상의 View를 가질 수 있습니다.</p>\n<p>예를 들어 이메일 앱이라면 새 이메일 목록을 표시하는 액티비티가 하나 있고, 이메일을 작성하는 액티비티가 또 하나, 그리고 이메일을 읽는 데 쓰는 액티비티가 또 하나 있을 수 있습니다. 여러 액티비티가 함께 작동하여 해당 이메일 앱에서 짜임새 있는 사용자 환경을 형성하는 것은 사실이지만, 각자 서로와는 독립적인 형태입니다</p>\n<h2 id=\"서비스-service\"><a href=\"#서비스-service\" class=\"headerlink\" title=\"서비스(service)\"></a>서비스(service)</h2><p>백그라운드에서 실행되는 컴포넌트로 오랫동안 실행되는 작업이나 원격 프로세스를 위한 작업을 할 때 사용됩니다.</p>\n<p>UI가 없습니다. 한번 시작된 Service는 애플리케이션이 종료되고 다른 애플리케이션으로 이동해도 계속 백그라운드에서 실행됩니다. 모든 서비스는 Service 클래스를 상속받아서 작성됩니다. </p>\n<p>예를 들어 서비스는 사용자가 다른 앱에 있는 동안에 백그라운드에서 음악을 재생할 수도 있고, 아니면 사용자와 액티비티 사이의 상호작용을 차단하지 않고 네트워크를 가로질러 데이터를 가져올 수도 있습니다. 또 다른 구성 요소(예: 액티비티)가 서비스를 시작한 다음 실행되도록 두거나 자신에게 바인드하여 상호작용하도록 할 수도 있습니다.</p>\n<h2 id=\"콘텐트-제공자-content-provider\"><a href=\"#콘텐트-제공자-content-provider\" class=\"headerlink\" title=\"콘텐트 제공자(content provider)\"></a>콘텐트 제공자(content provider)</h2><p>데이터를 관리하고 다른 애플리케이션 데이터를 제공하는 컴포넌트입니다.</p>\n<p>데이터는 파일 시스템이나 SQLite 데이터베이스, 웹상에 저장될 수 있습니다. 콘텐트 제공자를 통해서 다른 애플리케이션의 데이터를 쿼리하거나 변경 가능합니다.</p>\n<p>예를 들어, Android 시스템은 사용자의 연락처 정보를 관리하는 콘텐츠 제공자를 제공합니다. 따라서, 적절한 권한을 가진 앱이라면 어떤 것이든 해당 콘텐츠 제공자의 일부를 쿼리하여(예를 들어 ContactsContract.Data 등) 특정한 사람에 대한 정보를 읽고 쓸 수 있습니다.</p>\n<h2 id=\"방송수신자-broadcast-receiver\"><a href=\"#방송수신자-broadcast-receiver\" class=\"headerlink\" title=\"방송수신자(broadcast receiver)\"></a>방송수신자(broadcast receiver)</h2><p>안드로이드 단말기에서 발생하는 다양한 이벤트/정보를 받고 반응하는 컴포넌트입니다.</p>\n<p>예를들면 시스템부팅, 배터리 부족, 전화/문자 수신, 네트워크 끊김을 알려주는 것이 방송입니다. 단말기에서 발생하는 일 중에서 어플리케이션이 알아야 하는 상황이 발생하면 방송을 해줍니다. 수신기(BroadcastReceiver)를 통해 상황을 감지하고 적절한 작업을 수행합니다. 일반적으로 UI가 없습니다.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://developer.android.com/guide/components/fundamentals?hl=ko\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/guide/components/fundamentals?hl=ko</a></p>\n<p><a href=\"http://ggodol.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-4%EB%8C%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" target=\"_blank\" rel=\"noopener\">http://ggodol.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-4%EB%8C%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8</a></p>\n"},{"layout":"post","title":"MongoDB","date":"2018-11-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dbDoorImg.png","_content":"\n## MonogoDB란\n\nDocument Database\n\n## 특징\n\n- db > collection > document > key:value\n\n  ( RDBMS : db > table > row > column)\n\n- Schemaless\n\n  스키마란, 데이터베이스를 구성하는 개체(Entity), 속성(Attribute), 관계(Relationship) 및 데이터 조작 시\n  데이터 값들이 갖는 제약조건 등에 관해 전반적으로 정의하는 것.\n\n  MongoDB 는 이러한 스키마가 사전에 정의되지 않아도 된다. Document는 다른 필드를 가질 수 있다.\n\n- Document Oriented ( BSON format )\n\n  하나의 row에 하나의 Document를 저장한다.\n\n- Deep query ability\n\n  문서지향적 Query Language 를 사용. javascript expressions 으로 이해하기 쉽다.\n\n  (key-value queries / range queries / search queries / map reduce queries ..)\n\n- indexing\n\n  RDBMS인 MySQL에서 지원하는 대부분의 인덱스를 지원한다.\n\n  index는 메모리에 저장되기 때문에 메모리 크기에 영향을 많이 받는다.\n\n- auto-sharding\n\n  처음부터 자동으로 데이터를 분산하여 저장하며, 하나의 컬렉션처럼 사용할 수 있게 해준다. 수평적 확장 가능\n\n- replicication\n\n  간단한 설정만으로도 데이터 복제를 지원. 가용성 향상.\n\n- Read/Write 성능이 빠름\n\n  Write시에, Memory에 먼저 Write후에, 1분 단위로 Flushing하는 Write Back 방식을 쓴다. \n  즉 메모리에만 쓰면 되니까는 Write가 무지 빠르다. \n\n  단 Flushing전에 Fail이 되면 데이타 유실에 의해서 Consistency 가 깨지는 문제가 발생\n\n  Read시에, 파일의 Index를 메모리에 로딩해놓고 찾는다 (memory mapped file).\n\n- RDBMS와는 달리 데이터 간의 관계를 정의하지 않는다.\n\n  관계형 데이터베이스인 RDBMS는 데이터의 관계를 Foreign Key 등으로 정의하고, 이를 이용해서 Join 등\n  관계형 연산을 한다. \n  \n  NoSQL은 데이터 간의 관계를 정의하지 않는다. 데이터 테이블은 그냥 하나의 테이블이며 각 테이블 간의 관\n  를 정의하지도 않고 일반적으로 테이블 간의 Join도 불가능하다.\n\n## 장점\n\n- Flexibility \n\n  Schema-less라서 어떤 형태의 데이터라도 저장할 수 있다.\n\n- Performance \n\n  Read & Write 성능이 뛰어나다. 캐싱이나 많은 트래픽을 감당할 때 써도 좋다.\n\n- Scalability \n\n  애초부터 스케일아웃 구조를 채택해서 쉽게 운용가능하다. Auto sharding 지원\n\n- Deep Query ability\n\n  문서지향적 Query Language 를 사용하여 SQL 만큼 강력한 Query 성능을 제공한다.\n\n- Conversion / Mapping\n\n  JSON형태로 저장이 가능해서 직관적이고 개발이 편리하다.\n\n## 단점\n\n- 정합성이 떨어지므로 트랜잭션이 필요한 경우에는 부적합하다. (ex. 금융, 결제, 회원정보 등)\n\n- JOIN이 없다. join이 필요없도록 데이터 구조화 필요\n\n- memory mapped file으로 파일 엔진 DB이다. 메모리 관리를 OS에게 위임한다. 메모리 크기가 성능을 좌우\n\n- SQL을 완전히 이전할 수는 없다.\n\n- B트리 인덱스를 사용하여 인덱스를 생성하는데, B트리는 크기가 커질수록 새로운 데이터를 입력하거나 삭제할\n  때 성능이 저하된다. 이런 B트리의 특성 때문에 데이터를 넣어두면 변하지않고 정보를 조회하는 데에 적합하다.\n\n## Reference\n\n<https://nicewoong.github.io/development/2018/02/10/mongodb-feature/>\n\n<http://bcho.tistory.com/624?category=431296>\n\n<http://sjh836.tistory.com/98>","source":"_posts/2018-11-11-MongoDB.md","raw":"---\nlayout: post\ntitle:  \"MongoDB\"\ndate:   2018-11-11\ncategories: database\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dbDoorImg.png\n---\n\n## MonogoDB란\n\nDocument Database\n\n## 특징\n\n- db > collection > document > key:value\n\n  ( RDBMS : db > table > row > column)\n\n- Schemaless\n\n  스키마란, 데이터베이스를 구성하는 개체(Entity), 속성(Attribute), 관계(Relationship) 및 데이터 조작 시\n  데이터 값들이 갖는 제약조건 등에 관해 전반적으로 정의하는 것.\n\n  MongoDB 는 이러한 스키마가 사전에 정의되지 않아도 된다. Document는 다른 필드를 가질 수 있다.\n\n- Document Oriented ( BSON format )\n\n  하나의 row에 하나의 Document를 저장한다.\n\n- Deep query ability\n\n  문서지향적 Query Language 를 사용. javascript expressions 으로 이해하기 쉽다.\n\n  (key-value queries / range queries / search queries / map reduce queries ..)\n\n- indexing\n\n  RDBMS인 MySQL에서 지원하는 대부분의 인덱스를 지원한다.\n\n  index는 메모리에 저장되기 때문에 메모리 크기에 영향을 많이 받는다.\n\n- auto-sharding\n\n  처음부터 자동으로 데이터를 분산하여 저장하며, 하나의 컬렉션처럼 사용할 수 있게 해준다. 수평적 확장 가능\n\n- replicication\n\n  간단한 설정만으로도 데이터 복제를 지원. 가용성 향상.\n\n- Read/Write 성능이 빠름\n\n  Write시에, Memory에 먼저 Write후에, 1분 단위로 Flushing하는 Write Back 방식을 쓴다. \n  즉 메모리에만 쓰면 되니까는 Write가 무지 빠르다. \n\n  단 Flushing전에 Fail이 되면 데이타 유실에 의해서 Consistency 가 깨지는 문제가 발생\n\n  Read시에, 파일의 Index를 메모리에 로딩해놓고 찾는다 (memory mapped file).\n\n- RDBMS와는 달리 데이터 간의 관계를 정의하지 않는다.\n\n  관계형 데이터베이스인 RDBMS는 데이터의 관계를 Foreign Key 등으로 정의하고, 이를 이용해서 Join 등\n  관계형 연산을 한다. \n  \n  NoSQL은 데이터 간의 관계를 정의하지 않는다. 데이터 테이블은 그냥 하나의 테이블이며 각 테이블 간의 관\n  를 정의하지도 않고 일반적으로 테이블 간의 Join도 불가능하다.\n\n## 장점\n\n- Flexibility \n\n  Schema-less라서 어떤 형태의 데이터라도 저장할 수 있다.\n\n- Performance \n\n  Read & Write 성능이 뛰어나다. 캐싱이나 많은 트래픽을 감당할 때 써도 좋다.\n\n- Scalability \n\n  애초부터 스케일아웃 구조를 채택해서 쉽게 운용가능하다. Auto sharding 지원\n\n- Deep Query ability\n\n  문서지향적 Query Language 를 사용하여 SQL 만큼 강력한 Query 성능을 제공한다.\n\n- Conversion / Mapping\n\n  JSON형태로 저장이 가능해서 직관적이고 개발이 편리하다.\n\n## 단점\n\n- 정합성이 떨어지므로 트랜잭션이 필요한 경우에는 부적합하다. (ex. 금융, 결제, 회원정보 등)\n\n- JOIN이 없다. join이 필요없도록 데이터 구조화 필요\n\n- memory mapped file으로 파일 엔진 DB이다. 메모리 관리를 OS에게 위임한다. 메모리 크기가 성능을 좌우\n\n- SQL을 완전히 이전할 수는 없다.\n\n- B트리 인덱스를 사용하여 인덱스를 생성하는데, B트리는 크기가 커질수록 새로운 데이터를 입력하거나 삭제할\n  때 성능이 저하된다. 이런 B트리의 특성 때문에 데이터를 넣어두면 변하지않고 정보를 조회하는 데에 적합하다.\n\n## Reference\n\n<https://nicewoong.github.io/development/2018/02/10/mongodb-feature/>\n\n<http://bcho.tistory.com/624?category=431296>\n\n<http://sjh836.tistory.com/98>","slug":"2018-11-11-MongoDB","published":1,"updated":"2018-11-11T00:57:51.403Z","comments":1,"photos":[],"link":"","_id":"cjp6k65td00jw31x7nwkv6eq3","content":"<h2 id=\"MonogoDB란\"><a href=\"#MonogoDB란\" class=\"headerlink\" title=\"MonogoDB란\"></a>MonogoDB란</h2><p>Document Database</p>\n<h2 id=\"특징\"><a href=\"#특징\" class=\"headerlink\" title=\"특징\"></a>특징</h2><ul>\n<li><p>db &gt; collection &gt; document &gt; key:value</p>\n<p>( RDBMS : db &gt; table &gt; row &gt; column)</p>\n</li>\n<li><p>Schemaless</p>\n<p>스키마란, 데이터베이스를 구성하는 개체(Entity), 속성(Attribute), 관계(Relationship) 및 데이터 조작 시<br>데이터 값들이 갖는 제약조건 등에 관해 전반적으로 정의하는 것.</p>\n<p>MongoDB 는 이러한 스키마가 사전에 정의되지 않아도 된다. Document는 다른 필드를 가질 수 있다.</p>\n</li>\n<li><p>Document Oriented ( BSON format )</p>\n<p>하나의 row에 하나의 Document를 저장한다.</p>\n</li>\n<li><p>Deep query ability</p>\n<p>문서지향적 Query Language 를 사용. javascript expressions 으로 이해하기 쉽다.</p>\n<p>(key-value queries / range queries / search queries / map reduce queries ..)</p>\n</li>\n<li><p>indexing</p>\n<p>RDBMS인 MySQL에서 지원하는 대부분의 인덱스를 지원한다.</p>\n<p>index는 메모리에 저장되기 때문에 메모리 크기에 영향을 많이 받는다.</p>\n</li>\n<li><p>auto-sharding</p>\n<p>처음부터 자동으로 데이터를 분산하여 저장하며, 하나의 컬렉션처럼 사용할 수 있게 해준다. 수평적 확장 가능</p>\n</li>\n<li><p>replicication</p>\n<p>간단한 설정만으로도 데이터 복제를 지원. 가용성 향상.</p>\n</li>\n<li><p>Read/Write 성능이 빠름</p>\n<p>Write시에, Memory에 먼저 Write후에, 1분 단위로 Flushing하는 Write Back 방식을 쓴다.<br>즉 메모리에만 쓰면 되니까는 Write가 무지 빠르다. </p>\n<p>단 Flushing전에 Fail이 되면 데이타 유실에 의해서 Consistency 가 깨지는 문제가 발생</p>\n<p>Read시에, 파일의 Index를 메모리에 로딩해놓고 찾는다 (memory mapped file).</p>\n</li>\n<li><p>RDBMS와는 달리 데이터 간의 관계를 정의하지 않는다.</p>\n<p>관계형 데이터베이스인 RDBMS는 데이터의 관계를 Foreign Key 등으로 정의하고, 이를 이용해서 Join 등<br>관계형 연산을 한다. </p>\n<p>NoSQL은 데이터 간의 관계를 정의하지 않는다. 데이터 테이블은 그냥 하나의 테이블이며 각 테이블 간의 관<br>를 정의하지도 않고 일반적으로 테이블 간의 Join도 불가능하다.</p>\n</li>\n</ul>\n<h2 id=\"장점\"><a href=\"#장점\" class=\"headerlink\" title=\"장점\"></a>장점</h2><ul>\n<li><p>Flexibility </p>\n<p>Schema-less라서 어떤 형태의 데이터라도 저장할 수 있다.</p>\n</li>\n<li><p>Performance </p>\n<p>Read &amp; Write 성능이 뛰어나다. 캐싱이나 많은 트래픽을 감당할 때 써도 좋다.</p>\n</li>\n<li><p>Scalability </p>\n<p>애초부터 스케일아웃 구조를 채택해서 쉽게 운용가능하다. Auto sharding 지원</p>\n</li>\n<li><p>Deep Query ability</p>\n<p>문서지향적 Query Language 를 사용하여 SQL 만큼 강력한 Query 성능을 제공한다.</p>\n</li>\n<li><p>Conversion / Mapping</p>\n<p>JSON형태로 저장이 가능해서 직관적이고 개발이 편리하다.</p>\n</li>\n</ul>\n<h2 id=\"단점\"><a href=\"#단점\" class=\"headerlink\" title=\"단점\"></a>단점</h2><ul>\n<li><p>정합성이 떨어지므로 트랜잭션이 필요한 경우에는 부적합하다. (ex. 금융, 결제, 회원정보 등)</p>\n</li>\n<li><p>JOIN이 없다. join이 필요없도록 데이터 구조화 필요</p>\n</li>\n<li><p>memory mapped file으로 파일 엔진 DB이다. 메모리 관리를 OS에게 위임한다. 메모리 크기가 성능을 좌우</p>\n</li>\n<li><p>SQL을 완전히 이전할 수는 없다.</p>\n</li>\n<li><p>B트리 인덱스를 사용하여 인덱스를 생성하는데, B트리는 크기가 커질수록 새로운 데이터를 입력하거나 삭제할<br>때 성능이 저하된다. 이런 B트리의 특성 때문에 데이터를 넣어두면 변하지않고 정보를 조회하는 데에 적합하다.</p>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://nicewoong.github.io/development/2018/02/10/mongodb-feature/\" target=\"_blank\" rel=\"noopener\">https://nicewoong.github.io/development/2018/02/10/mongodb-feature/</a></p>\n<p><a href=\"http://bcho.tistory.com/624?category=431296\" target=\"_blank\" rel=\"noopener\">http://bcho.tistory.com/624?category=431296</a></p>\n<p><a href=\"http://sjh836.tistory.com/98\" target=\"_blank\" rel=\"noopener\">http://sjh836.tistory.com/98</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<h2 id=\"MonogoDB란\"><a href=\"#MonogoDB란\" class=\"headerlink\" title=\"MonogoDB란\"></a>MonogoDB란</h2><p>Document Database</p>\n<h2 id=\"특징\"><a href=\"#특징\" class=\"headerlink\" title=\"특징\"></a>특징</h2><ul>\n<li><p>db &gt; collection &gt; document &gt; key:value</p>\n<p>( RDBMS : db &gt; table &gt; row &gt; column)</p>\n</li>\n<li><p>Schemaless</p>\n<p>스키마란, 데이터베이스를 구성하는 개체(Entity), 속성(Attribute), 관계(Relationship) 및 데이터 조작 시<br>데이터 값들이 갖는 제약조건 등에 관해 전반적으로 정의하는 것.</p>\n<p>MongoDB 는 이러한 스키마가 사전에 정의되지 않아도 된다. Document는 다른 필드를 가질 수 있다.</p>\n</li>\n<li><p>Document Oriented ( BSON format )</p>\n<p>하나의 row에 하나의 Document를 저장한다.</p>\n</li>\n<li><p>Deep query ability</p>\n<p>문서지향적 Query Language 를 사용. javascript expressions 으로 이해하기 쉽다.</p>\n<p>(key-value queries / range queries / search queries / map reduce queries ..)</p>\n</li>\n<li><p>indexing</p>\n<p>RDBMS인 MySQL에서 지원하는 대부분의 인덱스를 지원한다.</p>\n<p>index는 메모리에 저장되기 때문에 메모리 크기에 영향을 많이 받는다.</p>\n</li>\n<li><p>auto-sharding</p>\n<p>처음부터 자동으로 데이터를 분산하여 저장하며, 하나의 컬렉션처럼 사용할 수 있게 해준다. 수평적 확장 가능</p>\n</li>\n<li><p>replicication</p>\n<p>간단한 설정만으로도 데이터 복제를 지원. 가용성 향상.</p>\n</li>\n<li><p>Read/Write 성능이 빠름</p>\n<p>Write시에, Memory에 먼저 Write후에, 1분 단위로 Flushing하는 Write Back 방식을 쓴다.<br>즉 메모리에만 쓰면 되니까는 Write가 무지 빠르다. </p>\n<p>단 Flushing전에 Fail이 되면 데이타 유실에 의해서 Consistency 가 깨지는 문제가 발생</p>\n<p>Read시에, 파일의 Index를 메모리에 로딩해놓고 찾는다 (memory mapped file).</p>\n</li>\n<li><p>RDBMS와는 달리 데이터 간의 관계를 정의하지 않는다.</p>\n<p>관계형 데이터베이스인 RDBMS는 데이터의 관계를 Foreign Key 등으로 정의하고, 이를 이용해서 Join 등<br>관계형 연산을 한다. </p>\n<p>NoSQL은 데이터 간의 관계를 정의하지 않는다. 데이터 테이블은 그냥 하나의 테이블이며 각 테이블 간의 관<br>를 정의하지도 않고 일반적으로 테이블 간의 Join도 불가능하다.</p>\n</li>\n</ul>\n<h2 id=\"장점\"><a href=\"#장점\" class=\"headerlink\" title=\"장점\"></a>장점</h2><ul>\n<li><p>Flexibility </p>\n<p>Schema-less라서 어떤 형태의 데이터라도 저장할 수 있다.</p>\n</li>\n<li><p>Performance </p>\n<p>Read &amp; Write 성능이 뛰어나다. 캐싱이나 많은 트래픽을 감당할 때 써도 좋다.</p>\n</li>\n<li><p>Scalability </p>\n<p>애초부터 스케일아웃 구조를 채택해서 쉽게 운용가능하다. Auto sharding 지원</p>\n</li>\n<li><p>Deep Query ability</p>\n<p>문서지향적 Query Language 를 사용하여 SQL 만큼 강력한 Query 성능을 제공한다.</p>\n</li>\n<li><p>Conversion / Mapping</p>\n<p>JSON형태로 저장이 가능해서 직관적이고 개발이 편리하다.</p>\n</li>\n</ul>\n<h2 id=\"단점\"><a href=\"#단점\" class=\"headerlink\" title=\"단점\"></a>단점</h2><ul>\n<li><p>정합성이 떨어지므로 트랜잭션이 필요한 경우에는 부적합하다. (ex. 금융, 결제, 회원정보 등)</p>\n</li>\n<li><p>JOIN이 없다. join이 필요없도록 데이터 구조화 필요</p>\n</li>\n<li><p>memory mapped file으로 파일 엔진 DB이다. 메모리 관리를 OS에게 위임한다. 메모리 크기가 성능을 좌우</p>\n</li>\n<li><p>SQL을 완전히 이전할 수는 없다.</p>\n</li>\n<li><p>B트리 인덱스를 사용하여 인덱스를 생성하는데, B트리는 크기가 커질수록 새로운 데이터를 입력하거나 삭제할<br>때 성능이 저하된다. 이런 B트리의 특성 때문에 데이터를 넣어두면 변하지않고 정보를 조회하는 데에 적합하다.</p>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://nicewoong.github.io/development/2018/02/10/mongodb-feature/\" target=\"_blank\" rel=\"noopener\">https://nicewoong.github.io/development/2018/02/10/mongodb-feature/</a></p>\n<p><a href=\"http://bcho.tistory.com/624?category=431296\" target=\"_blank\" rel=\"noopener\">http://bcho.tistory.com/624?category=431296</a></p>\n<p><a href=\"http://sjh836.tistory.com/98\" target=\"_blank\" rel=\"noopener\">http://sjh836.tistory.com/98</a></p>\n"},{"layout":"post","title":"OCP02","date":"2018-04-22T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png","_content":"\n- 설명\n  - 특정 시간에만 작동하는 MP3가 있다\n  - 테스트 하려면 그 시간까지 기다려야 한다\n  - OCP를 적용하여 이 문제 해결\n- Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt01.png)\n\n- Code\n\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt07.png)\n\n- Reference\n  - JAVA 객체지향 디자인 패턴 ( 정인상, 채흥석 지음 )\n\n\n","source":"_posts/2018-04-23-OCP02.md","raw":"---\nlayout: post\ntitle:  \"OCP02\"\ndate:   2018-04-23\ncategories: DesignPattern\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/dpci.png\n---\n\n- 설명\n  - 특정 시간에만 작동하는 MP3가 있다\n  - 테스트 하려면 그 시간까지 기다려야 한다\n  - OCP를 적용하여 이 문제 해결\n- Class Diagram\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt01.png)\n\n- Code\n\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt02.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt03.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt04.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt05.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt06.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt07.png)\n\n- Reference\n  - JAVA 객체지향 디자인 패턴 ( 정인상, 채흥석 지음 )\n\n\n","slug":"2018-04-23-OCP02","published":1,"updated":"2018-10-25T05:43:24.417Z","comments":1,"photos":[],"link":"","_id":"cjp6k65tj00jy31x74gzyk3cl","content":"<ul>\n<li>설명<ul>\n<li>특정 시간에만 작동하는 MP3가 있다</li>\n<li>테스트 하려면 그 시간까지 기다려야 한다</li>\n<li>OCP를 적용하여 이 문제 해결</li>\n</ul>\n</li>\n<li>Class Diagram</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt01.png\" alt=\"img\"></p>\n<ul>\n<li>Code</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt07.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li>JAVA 객체지향 디자인 패턴 ( 정인상, 채흥석 지음 )</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li>설명<ul>\n<li>특정 시간에만 작동하는 MP3가 있다</li>\n<li>테스트 하려면 그 시간까지 기다려야 한다</li>\n<li>OCP를 적용하여 이 문제 해결</li>\n</ul>\n</li>\n<li>Class Diagram</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt01.png\" alt=\"img\"></p>\n<ul>\n<li>Code</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt02.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt03.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt04.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt05.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt06.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/ocpt07.png\" alt=\"img\"></p>\n<ul>\n<li>Reference<ul>\n<li>JAVA 객체지향 디자인 패턴 ( 정인상, 채흥석 지음 )</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Process Sysncronization","date":"2018-10-05T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## 데이터의 접근\n\n데이터를 읽어와서 연산하고 다시 저장\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100601.png)\n\n## Race Condition\n\nS-box를 공유하는 E-box가 여럿 있는 경우 Race Condition의 가능성이 있음\n\nex) 커널 모드 수행 중 인터럽트로 커널모드 다른 루틴 수행시\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100602.png)\n\n## race condition (1/3)\n\n- kernel 수행 중 인터럽트 발생\n- 커널모드 running 중 inetrrupt 발생하여 인터럽트 처리 루틴이 수행\n- 양쪽 다 커널 코드이므로 kernel address space 공유\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100603.png)\n\n## race condition (2/3)\n\n해결책 : 커널 모드에서 수행 중일 때는 CPU를 preempt 하지 않음. 커널 모드에서 사용자 모드로 돌아 갈때 preempt.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100604.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100605.png)\n\n## race condition (3/3)\n\n- CPU가 여러개인 경우\n\n- 해결\n  - 커널 내부에 있는 각 공유 데이터에 접근할 때마다 그 데이터에 lock / unlock을 하는 방법\n  - 한번에 하나의 CPU만이 커널에 들어갈 수 있게 하는 방법\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100606.png)​\t\n\n## Process Syncronization 문제\n\n- 공유 데이터의 동시 접근은 데이터의 불일치 문제 발생시킬 수 있음\n- 일관성 유지를 위해서 협력 프로세스간의 실행순서를 정해주는 매커니즘 필요\n- Race condition\n  - 여러 프로세스들이 동시에 공유 데이터를 접근하는 상황\n  - 데이터의 최정 연산 결과는 마지막에 그 데이터를 다룬 프로세스에 따라다라짐\n  - 이를 막기 위해 concurrent processsms 동기화 되어야한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100607.png)\t\n\n## The Critical-Section Problem\n\n공유 데이터를 접근하는 코드\n\n- n개의 프로세스가 공유 데이터를 동시에 사용하기를 원하는 경우\n- 각 프로세스의 code segment에는 공유 데이터를 접근하는 코드인 ciritical sectoin이 존재\n- 하나의 프로세스가 ciritical section에 있을 때 다른 모든 프로세스는 ciritical section에 들어갈 수 없어야한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100608.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100701.png)\n\n## 프로그램적 해결법의 충족 조건\n\n- Mutual Exclution\n  - 프로세스가 pi가 critical section 부분을 수행중이면 다른 모든 프로세스들은 그들의 critical section에 들어가면 안된다.\n- Progress\n  - 아무도 critical section에 있지 않은 상태에서 critical section에 들어가고자 하는 프로세스가 있으면 critical section에 들어가게 해주어야 한다.\n- Bounded Wating\n  - 프로세스가 critical section에 들어가려고 요청한 후부터 그 요청이 허용될 때까지 다른 프로세스들이 critical section에 들어가는 횟수에 한계가 있어야 한다.\n\n## 알고리즘 1\n\nP0\n\nint turn ;\n\ninitially turn=0; (turn이 0 : 0번 프로세스 차례)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100702.png)\n\nP0이 빈번히 들어가고 싶으면?\n\n## 알고리즘 2\n\nboolean flag[2];\n\ninitially flag[모두] =false; // no one is in CS\n\nPi ready to enter its critical section if flag[i] == true\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100703.png)\n\n들어가기전에 둘다 깃발을 들으면 아무도 못들어가.\n\n## 알고리즘3 (Peterson's Algorithm)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100704.png)\n\nBusy Wating (spin lock)\n\n내가 CPU를 잡고 while문에 있는데, 그때 다른 애가 CPU를 잡으면 ? \n\n## Sysnchnization Hardware\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100705.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100706.png)\n\n- 하드웨어적으로 Test & modify를 atuomic하게 수행할 수 있도록 지원하는 경우 앞의 문제는 간단히 해결\n- 값을 읽어내고 바꾸는 과정을 한번에\n\n## Semaphores\n\n앞의 방식들을 추상화시킴\n\n- Semaphore S\n\n  - integer variable\n\n  - P(S) : 공유자원 획득\n\n    - If positive, decrement & enter. Ohterwise, wait until positive(busy wait)\n\n    ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100707.png)\n\n  - V(S) : 공유자원 반납\n\n    ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100708.png)\n\n## Critical Section of n Processes\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100709.png)\n\n## Block / Wakeup Impemetation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100710.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100711.png)\n\n- block\n  - 커널은 block을 호출한 프로세스를 suspend 시킴\n  - 이 프로세스의 PCB를 semaphore에 대한 wait queue에 넣음\n- wakeup(P)\n  - block 된 프로세스 P를 wakeup 시킴\n  - 이 프로세스의 PCB를 ready queue로 옮김\n\n## Implementation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100712.png)\n\n## Which is better\n\nbusy-wati vs block/wakeup\n\nCS 길이가 긴 경우 Block/Wakeup이 적당\n\nCS 길이가 매우 짧은 경우 Block/Wakeup 오버헤드가 busy-wait 오버헤드보다 더 커질 수 있음\n\n일반적으로  block/wakeup 방식이 더 좋음\n\n## Deadlock and Starvation\n\n- Deadlock\n\n  둘 이상의 프로세스가 서로 상대방에 의해 충족될 수 있는 event를 무한히 기다리는 현상\n\n  P0와 P1은 S와 Q 모두가 필요하다.\n\n  P0가 S를 차지했을 때, P1이 CPU를 가져가버리면, Deadlock 발생\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100713.png)\n\n- Starvation\n\n  indefinite blocking. 프로세스가 suspend된 이유에 해당하는 세마포어 큐에서 빠져나갈수 없는 현상\n\n## Bounded-Buffer Problem\n\nProducer-Consumer Problem\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100714.png)\n\n주황색은 Producer가 생성한다.\n\n생산자 둘이 한 위치에 생성하면?\n\n하나를 소비자 둘이 동시에 소비 하려고 하면?\n\n비버있는 버퍼가 없는데 또 생산자가 만들려고 하면?\n\n- Syncrhonization variables\n\n  - mutual exclution\n    - need binary semaphore (shared data의 mutual exlusion을 위해)\n    - lock 걸고 풀고\n  - resource count \n    - need integer semaphore (남은 full/empty buffer의 수 표시)\n    - 자원 개수\n\n  semaphore full =0, empty =n, mutex =1;\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100715.png)\n\n- Produer\n  - 빈 버퍼가 있으면 버퍼 획득하고, 버퍼에 락 걸고, 버퍼에 데이터 넣고, 버퍼에 락 풀고, full++\n\n- Consumer\n  - 내용이 들어잇는 버퍼 있으면, 버퍼에 락 걸고, 버퍼에서 데이터 빼고, 버퍼 락 풀고, empty ++\n\n## Readers-Writes Problem\n\n한 process가 DB에 write 중일 때 다른 process가 접근하면 안됨 / read는 동시에 여럿이 해도 됨\n\n- Shared data\n  - DB 자체\n  - int readcount=0; //현재 DB에 접근 중인 Reader의 수\n- Sysncronization variablees\n  - semaphore mutex =1 ( 공유변수 readcount를 접근하는 코드의 mutual exlution 보장), db=1;\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100716.png)\n\n## Dining-Philosophers Problem\n\n배가 고파지면 자기의 왼쪽과 오른쪽에 놓아져 있는 젓가락을 잡음\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100717.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100718.png)\n\n- 문제\n  - 모두다 왼쪽 젓가락을 잡아버리면? \n  - Deadlock\n\n- 해결\n  - 4명의 철학자만이 테이블에 동시에 앉을 수 있도록\n  - 젓가락을 두개 모두 집을 수 있을 때에만 젓가락을 잡을 수 있도록 (아래의 경우)\n  - 비대칭. 짝수 철학자는 왼쪽 젓가락부터 집도록\n\n\n\nenum {thinking, hungry, eating} state[5];\n\nsemaphore self[5]=0;\t// 동시에 젓가락 두개 모두 잡을 수 있는 권한\n\nsemaphore mutex=1;\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100719.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100720.png)\n\n## Monitor\n\n- Semaphore의 문제점\n  - 코딩이 힘들다\n  - 정확성의 입증이 어려움\n  - 자발적 협력이 필요\n  - 한번의 실수가 모든 시스템에 영향\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100721.png)\n\n- 동시 수행중인 프로세스 사이에서 abstract data type의 안전한 공유를 보장하기위한 high-level syncronization  construct \n  - 모니터 내에서는 한번에 하나의 하나의 프로세스만이 활동 가능\n  - 프로그래머가 동기화 제약 조건을 명시적으로 코딩할 필요 없음\n  - 프로세스가 모니터 안에서 기다릴수 있도록 하기 위해 condition variable 사용. condition x, y\n  - condition variable 은 wait와 signal 연산에 의해서만 접근 가능\n    - x.wait();\n      - x.wait()을 invoke한 프로세스는 다른 프로세스가 x.signal()을 invoke 하기 전까지 suspend\n    - x.siganl();\n      - x.signal()은 정확하게 하나의 suspend된 프로세스를 resume한다. Suspend된 프로세스가 없으면 아무 일도 일어나지 않는다. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100722.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100723.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100724.png)","source":"_posts/2018-10-06-Process Synchronization.md","raw":"---\nlayout: post\ntitle:  \"Process Sysncronization\"\ndate:   2018-10-06\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## 데이터의 접근\n\n데이터를 읽어와서 연산하고 다시 저장\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100601.png)\n\n## Race Condition\n\nS-box를 공유하는 E-box가 여럿 있는 경우 Race Condition의 가능성이 있음\n\nex) 커널 모드 수행 중 인터럽트로 커널모드 다른 루틴 수행시\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100602.png)\n\n## race condition (1/3)\n\n- kernel 수행 중 인터럽트 발생\n- 커널모드 running 중 inetrrupt 발생하여 인터럽트 처리 루틴이 수행\n- 양쪽 다 커널 코드이므로 kernel address space 공유\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100603.png)\n\n## race condition (2/3)\n\n해결책 : 커널 모드에서 수행 중일 때는 CPU를 preempt 하지 않음. 커널 모드에서 사용자 모드로 돌아 갈때 preempt.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100604.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100605.png)\n\n## race condition (3/3)\n\n- CPU가 여러개인 경우\n\n- 해결\n  - 커널 내부에 있는 각 공유 데이터에 접근할 때마다 그 데이터에 lock / unlock을 하는 방법\n  - 한번에 하나의 CPU만이 커널에 들어갈 수 있게 하는 방법\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100606.png)​\t\n\n## Process Syncronization 문제\n\n- 공유 데이터의 동시 접근은 데이터의 불일치 문제 발생시킬 수 있음\n- 일관성 유지를 위해서 협력 프로세스간의 실행순서를 정해주는 매커니즘 필요\n- Race condition\n  - 여러 프로세스들이 동시에 공유 데이터를 접근하는 상황\n  - 데이터의 최정 연산 결과는 마지막에 그 데이터를 다룬 프로세스에 따라다라짐\n  - 이를 막기 위해 concurrent processsms 동기화 되어야한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100607.png)\t\n\n## The Critical-Section Problem\n\n공유 데이터를 접근하는 코드\n\n- n개의 프로세스가 공유 데이터를 동시에 사용하기를 원하는 경우\n- 각 프로세스의 code segment에는 공유 데이터를 접근하는 코드인 ciritical sectoin이 존재\n- 하나의 프로세스가 ciritical section에 있을 때 다른 모든 프로세스는 ciritical section에 들어갈 수 없어야한다.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100608.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100701.png)\n\n## 프로그램적 해결법의 충족 조건\n\n- Mutual Exclution\n  - 프로세스가 pi가 critical section 부분을 수행중이면 다른 모든 프로세스들은 그들의 critical section에 들어가면 안된다.\n- Progress\n  - 아무도 critical section에 있지 않은 상태에서 critical section에 들어가고자 하는 프로세스가 있으면 critical section에 들어가게 해주어야 한다.\n- Bounded Wating\n  - 프로세스가 critical section에 들어가려고 요청한 후부터 그 요청이 허용될 때까지 다른 프로세스들이 critical section에 들어가는 횟수에 한계가 있어야 한다.\n\n## 알고리즘 1\n\nP0\n\nint turn ;\n\ninitially turn=0; (turn이 0 : 0번 프로세스 차례)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100702.png)\n\nP0이 빈번히 들어가고 싶으면?\n\n## 알고리즘 2\n\nboolean flag[2];\n\ninitially flag[모두] =false; // no one is in CS\n\nPi ready to enter its critical section if flag[i] == true\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100703.png)\n\n들어가기전에 둘다 깃발을 들으면 아무도 못들어가.\n\n## 알고리즘3 (Peterson's Algorithm)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100704.png)\n\nBusy Wating (spin lock)\n\n내가 CPU를 잡고 while문에 있는데, 그때 다른 애가 CPU를 잡으면 ? \n\n## Sysnchnization Hardware\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100705.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100706.png)\n\n- 하드웨어적으로 Test & modify를 atuomic하게 수행할 수 있도록 지원하는 경우 앞의 문제는 간단히 해결\n- 값을 읽어내고 바꾸는 과정을 한번에\n\n## Semaphores\n\n앞의 방식들을 추상화시킴\n\n- Semaphore S\n\n  - integer variable\n\n  - P(S) : 공유자원 획득\n\n    - If positive, decrement & enter. Ohterwise, wait until positive(busy wait)\n\n    ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100707.png)\n\n  - V(S) : 공유자원 반납\n\n    ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100708.png)\n\n## Critical Section of n Processes\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100709.png)\n\n## Block / Wakeup Impemetation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100710.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100711.png)\n\n- block\n  - 커널은 block을 호출한 프로세스를 suspend 시킴\n  - 이 프로세스의 PCB를 semaphore에 대한 wait queue에 넣음\n- wakeup(P)\n  - block 된 프로세스 P를 wakeup 시킴\n  - 이 프로세스의 PCB를 ready queue로 옮김\n\n## Implementation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100712.png)\n\n## Which is better\n\nbusy-wati vs block/wakeup\n\nCS 길이가 긴 경우 Block/Wakeup이 적당\n\nCS 길이가 매우 짧은 경우 Block/Wakeup 오버헤드가 busy-wait 오버헤드보다 더 커질 수 있음\n\n일반적으로  block/wakeup 방식이 더 좋음\n\n## Deadlock and Starvation\n\n- Deadlock\n\n  둘 이상의 프로세스가 서로 상대방에 의해 충족될 수 있는 event를 무한히 기다리는 현상\n\n  P0와 P1은 S와 Q 모두가 필요하다.\n\n  P0가 S를 차지했을 때, P1이 CPU를 가져가버리면, Deadlock 발생\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100713.png)\n\n- Starvation\n\n  indefinite blocking. 프로세스가 suspend된 이유에 해당하는 세마포어 큐에서 빠져나갈수 없는 현상\n\n## Bounded-Buffer Problem\n\nProducer-Consumer Problem\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100714.png)\n\n주황색은 Producer가 생성한다.\n\n생산자 둘이 한 위치에 생성하면?\n\n하나를 소비자 둘이 동시에 소비 하려고 하면?\n\n비버있는 버퍼가 없는데 또 생산자가 만들려고 하면?\n\n- Syncrhonization variables\n\n  - mutual exclution\n    - need binary semaphore (shared data의 mutual exlusion을 위해)\n    - lock 걸고 풀고\n  - resource count \n    - need integer semaphore (남은 full/empty buffer의 수 표시)\n    - 자원 개수\n\n  semaphore full =0, empty =n, mutex =1;\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100715.png)\n\n- Produer\n  - 빈 버퍼가 있으면 버퍼 획득하고, 버퍼에 락 걸고, 버퍼에 데이터 넣고, 버퍼에 락 풀고, full++\n\n- Consumer\n  - 내용이 들어잇는 버퍼 있으면, 버퍼에 락 걸고, 버퍼에서 데이터 빼고, 버퍼 락 풀고, empty ++\n\n## Readers-Writes Problem\n\n한 process가 DB에 write 중일 때 다른 process가 접근하면 안됨 / read는 동시에 여럿이 해도 됨\n\n- Shared data\n  - DB 자체\n  - int readcount=0; //현재 DB에 접근 중인 Reader의 수\n- Sysncronization variablees\n  - semaphore mutex =1 ( 공유변수 readcount를 접근하는 코드의 mutual exlution 보장), db=1;\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100716.png)\n\n## Dining-Philosophers Problem\n\n배가 고파지면 자기의 왼쪽과 오른쪽에 놓아져 있는 젓가락을 잡음\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100717.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100718.png)\n\n- 문제\n  - 모두다 왼쪽 젓가락을 잡아버리면? \n  - Deadlock\n\n- 해결\n  - 4명의 철학자만이 테이블에 동시에 앉을 수 있도록\n  - 젓가락을 두개 모두 집을 수 있을 때에만 젓가락을 잡을 수 있도록 (아래의 경우)\n  - 비대칭. 짝수 철학자는 왼쪽 젓가락부터 집도록\n\n\n\nenum {thinking, hungry, eating} state[5];\n\nsemaphore self[5]=0;\t// 동시에 젓가락 두개 모두 잡을 수 있는 권한\n\nsemaphore mutex=1;\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100719.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100720.png)\n\n## Monitor\n\n- Semaphore의 문제점\n  - 코딩이 힘들다\n  - 정확성의 입증이 어려움\n  - 자발적 협력이 필요\n  - 한번의 실수가 모든 시스템에 영향\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100721.png)\n\n- 동시 수행중인 프로세스 사이에서 abstract data type의 안전한 공유를 보장하기위한 high-level syncronization  construct \n  - 모니터 내에서는 한번에 하나의 하나의 프로세스만이 활동 가능\n  - 프로그래머가 동기화 제약 조건을 명시적으로 코딩할 필요 없음\n  - 프로세스가 모니터 안에서 기다릴수 있도록 하기 위해 condition variable 사용. condition x, y\n  - condition variable 은 wait와 signal 연산에 의해서만 접근 가능\n    - x.wait();\n      - x.wait()을 invoke한 프로세스는 다른 프로세스가 x.signal()을 invoke 하기 전까지 suspend\n    - x.siganl();\n      - x.signal()은 정확하게 하나의 suspend된 프로세스를 resume한다. Suspend된 프로세스가 없으면 아무 일도 일어나지 않는다. \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100722.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100723.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100724.png)","slug":"2018-10-06-Process Synchronization","published":1,"updated":"2018-10-07T02:11:11.225Z","comments":1,"photos":[],"link":"","_id":"cjp6k664l00k731x7hgafg8ct","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"데이터의-접근\"><a href=\"#데이터의-접근\" class=\"headerlink\" title=\"데이터의 접근\"></a>데이터의 접근</h2><p>데이터를 읽어와서 연산하고 다시 저장</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100601.png\" alt=\"img\"></p>\n<h2 id=\"Race-Condition\"><a href=\"#Race-Condition\" class=\"headerlink\" title=\"Race Condition\"></a>Race Condition</h2><p>S-box를 공유하는 E-box가 여럿 있는 경우 Race Condition의 가능성이 있음</p>\n<p>ex) 커널 모드 수행 중 인터럽트로 커널모드 다른 루틴 수행시</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100602.png\" alt=\"img\"></p>\n<h2 id=\"race-condition-1-3\"><a href=\"#race-condition-1-3\" class=\"headerlink\" title=\"race condition (1/3)\"></a>race condition (1/3)</h2><ul>\n<li>kernel 수행 중 인터럽트 발생</li>\n<li>커널모드 running 중 inetrrupt 발생하여 인터럽트 처리 루틴이 수행</li>\n<li>양쪽 다 커널 코드이므로 kernel address space 공유</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100603.png\" alt=\"img\"></p>\n<h2 id=\"race-condition-2-3\"><a href=\"#race-condition-2-3\" class=\"headerlink\" title=\"race condition (2/3)\"></a>race condition (2/3)</h2><p>해결책 : 커널 모드에서 수행 중일 때는 CPU를 preempt 하지 않음. 커널 모드에서 사용자 모드로 돌아 갈때 preempt.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100604.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100605.png\" alt=\"img\"></p>\n<h2 id=\"race-condition-3-3\"><a href=\"#race-condition-3-3\" class=\"headerlink\" title=\"race condition (3/3)\"></a>race condition (3/3)</h2><ul>\n<li><p>CPU가 여러개인 경우</p>\n</li>\n<li><p>해결</p>\n<ul>\n<li>커널 내부에 있는 각 공유 데이터에 접근할 때마다 그 데이터에 lock / unlock을 하는 방법</li>\n<li>한번에 하나의 CPU만이 커널에 들어갈 수 있게 하는 방법</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100606.png\" alt=\"img\">​    </p>\n<h2 id=\"Process-Syncronization-문제\"><a href=\"#Process-Syncronization-문제\" class=\"headerlink\" title=\"Process Syncronization 문제\"></a>Process Syncronization 문제</h2><ul>\n<li>공유 데이터의 동시 접근은 데이터의 불일치 문제 발생시킬 수 있음</li>\n<li>일관성 유지를 위해서 협력 프로세스간의 실행순서를 정해주는 매커니즘 필요</li>\n<li>Race condition<ul>\n<li>여러 프로세스들이 동시에 공유 데이터를 접근하는 상황</li>\n<li>데이터의 최정 연산 결과는 마지막에 그 데이터를 다룬 프로세스에 따라다라짐</li>\n<li>이를 막기 위해 concurrent processsms 동기화 되어야한다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100607.png\" alt=\"img\">    </p>\n<h2 id=\"The-Critical-Section-Problem\"><a href=\"#The-Critical-Section-Problem\" class=\"headerlink\" title=\"The Critical-Section Problem\"></a>The Critical-Section Problem</h2><p>공유 데이터를 접근하는 코드</p>\n<ul>\n<li>n개의 프로세스가 공유 데이터를 동시에 사용하기를 원하는 경우</li>\n<li>각 프로세스의 code segment에는 공유 데이터를 접근하는 코드인 ciritical sectoin이 존재</li>\n<li>하나의 프로세스가 ciritical section에 있을 때 다른 모든 프로세스는 ciritical section에 들어갈 수 없어야한다.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100608.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100701.png\" alt=\"img\"></p>\n<h2 id=\"프로그램적-해결법의-충족-조건\"><a href=\"#프로그램적-해결법의-충족-조건\" class=\"headerlink\" title=\"프로그램적 해결법의 충족 조건\"></a>프로그램적 해결법의 충족 조건</h2><ul>\n<li>Mutual Exclution<ul>\n<li>프로세스가 pi가 critical section 부분을 수행중이면 다른 모든 프로세스들은 그들의 critical section에 들어가면 안된다.</li>\n</ul>\n</li>\n<li>Progress<ul>\n<li>아무도 critical section에 있지 않은 상태에서 critical section에 들어가고자 하는 프로세스가 있으면 critical section에 들어가게 해주어야 한다.</li>\n</ul>\n</li>\n<li>Bounded Wating<ul>\n<li>프로세스가 critical section에 들어가려고 요청한 후부터 그 요청이 허용될 때까지 다른 프로세스들이 critical section에 들어가는 횟수에 한계가 있어야 한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"알고리즘-1\"><a href=\"#알고리즘-1\" class=\"headerlink\" title=\"알고리즘 1\"></a>알고리즘 1</h2><p>P0</p>\n<p>int turn ;</p>\n<p>initially turn=0; (turn이 0 : 0번 프로세스 차례)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100702.png\" alt=\"img\"></p>\n<p>P0이 빈번히 들어가고 싶으면?</p>\n<h2 id=\"알고리즘-2\"><a href=\"#알고리즘-2\" class=\"headerlink\" title=\"알고리즘 2\"></a>알고리즘 2</h2><p>boolean flag[2];</p>\n<p>initially flag[모두] =false; // no one is in CS</p>\n<p>Pi ready to enter its critical section if flag[i] == true</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100703.png\" alt=\"img\"></p>\n<p>들어가기전에 둘다 깃발을 들으면 아무도 못들어가.</p>\n<h2 id=\"알고리즘3-Peterson’s-Algorithm\"><a href=\"#알고리즘3-Peterson’s-Algorithm\" class=\"headerlink\" title=\"알고리즘3 (Peterson’s Algorithm)\"></a>알고리즘3 (Peterson’s Algorithm)</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100704.png\" alt=\"img\"></p>\n<p>Busy Wating (spin lock)</p>\n<p>내가 CPU를 잡고 while문에 있는데, 그때 다른 애가 CPU를 잡으면 ? </p>\n<h2 id=\"Sysnchnization-Hardware\"><a href=\"#Sysnchnization-Hardware\" class=\"headerlink\" title=\"Sysnchnization Hardware\"></a>Sysnchnization Hardware</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100705.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100706.png\" alt=\"img\"></p>\n<ul>\n<li>하드웨어적으로 Test &amp; modify를 atuomic하게 수행할 수 있도록 지원하는 경우 앞의 문제는 간단히 해결</li>\n<li>값을 읽어내고 바꾸는 과정을 한번에</li>\n</ul>\n<h2 id=\"Semaphores\"><a href=\"#Semaphores\" class=\"headerlink\" title=\"Semaphores\"></a>Semaphores</h2><p>앞의 방식들을 추상화시킴</p>\n<ul>\n<li><p>Semaphore S</p>\n<ul>\n<li><p>integer variable</p>\n</li>\n<li><p>P(S) : 공유자원 획득</p>\n<ul>\n<li>If positive, decrement &amp; enter. Ohterwise, wait until positive(busy wait)</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100707.png\" alt=\"img\"></p>\n</li>\n<li><p>V(S) : 공유자원 반납</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100708.png\" alt=\"img\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Critical-Section-of-n-Processes\"><a href=\"#Critical-Section-of-n-Processes\" class=\"headerlink\" title=\"Critical Section of n Processes\"></a>Critical Section of n Processes</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100709.png\" alt=\"img\"></p>\n<h2 id=\"Block-Wakeup-Impemetation\"><a href=\"#Block-Wakeup-Impemetation\" class=\"headerlink\" title=\"Block / Wakeup Impemetation\"></a>Block / Wakeup Impemetation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100710.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100711.png\" alt=\"img\"></p>\n<ul>\n<li>block<ul>\n<li>커널은 block을 호출한 프로세스를 suspend 시킴</li>\n<li>이 프로세스의 PCB를 semaphore에 대한 wait queue에 넣음</li>\n</ul>\n</li>\n<li>wakeup(P)<ul>\n<li>block 된 프로세스 P를 wakeup 시킴</li>\n<li>이 프로세스의 PCB를 ready queue로 옮김</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100712.png\" alt=\"img\"></p>\n<h2 id=\"Which-is-better\"><a href=\"#Which-is-better\" class=\"headerlink\" title=\"Which is better\"></a>Which is better</h2><p>busy-wati vs block/wakeup</p>\n<p>CS 길이가 긴 경우 Block/Wakeup이 적당</p>\n<p>CS 길이가 매우 짧은 경우 Block/Wakeup 오버헤드가 busy-wait 오버헤드보다 더 커질 수 있음</p>\n<p>일반적으로  block/wakeup 방식이 더 좋음</p>\n<h2 id=\"Deadlock-and-Starvation\"><a href=\"#Deadlock-and-Starvation\" class=\"headerlink\" title=\"Deadlock and Starvation\"></a>Deadlock and Starvation</h2><ul>\n<li><p>Deadlock</p>\n<p>둘 이상의 프로세스가 서로 상대방에 의해 충족될 수 있는 event를 무한히 기다리는 현상</p>\n<p>P0와 P1은 S와 Q 모두가 필요하다.</p>\n<p>P0가 S를 차지했을 때, P1이 CPU를 가져가버리면, Deadlock 발생</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100713.png\" alt=\"img\"></p>\n<ul>\n<li><p>Starvation</p>\n<p>indefinite blocking. 프로세스가 suspend된 이유에 해당하는 세마포어 큐에서 빠져나갈수 없는 현상</p>\n</li>\n</ul>\n<h2 id=\"Bounded-Buffer-Problem\"><a href=\"#Bounded-Buffer-Problem\" class=\"headerlink\" title=\"Bounded-Buffer Problem\"></a>Bounded-Buffer Problem</h2><p>Producer-Consumer Problem</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100714.png\" alt=\"img\"></p>\n<p>주황색은 Producer가 생성한다.</p>\n<p>생산자 둘이 한 위치에 생성하면?</p>\n<p>하나를 소비자 둘이 동시에 소비 하려고 하면?</p>\n<p>비버있는 버퍼가 없는데 또 생산자가 만들려고 하면?</p>\n<ul>\n<li><p>Syncrhonization variables</p>\n<ul>\n<li>mutual exclution<ul>\n<li>need binary semaphore (shared data의 mutual exlusion을 위해)</li>\n<li>lock 걸고 풀고</li>\n</ul>\n</li>\n<li>resource count <ul>\n<li>need integer semaphore (남은 full/empty buffer의 수 표시)</li>\n<li>자원 개수</li>\n</ul>\n</li>\n</ul>\n<p>semaphore full =0, empty =n, mutex =1;</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100715.png\" alt=\"img\"></p>\n<ul>\n<li><p>Produer</p>\n<ul>\n<li>빈 버퍼가 있으면 버퍼 획득하고, 버퍼에 락 걸고, 버퍼에 데이터 넣고, 버퍼에 락 풀고, full++</li>\n</ul>\n</li>\n<li><p>Consumer</p>\n<ul>\n<li>내용이 들어잇는 버퍼 있으면, 버퍼에 락 걸고, 버퍼에서 데이터 빼고, 버퍼 락 풀고, empty ++</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Readers-Writes-Problem\"><a href=\"#Readers-Writes-Problem\" class=\"headerlink\" title=\"Readers-Writes Problem\"></a>Readers-Writes Problem</h2><p>한 process가 DB에 write 중일 때 다른 process가 접근하면 안됨 / read는 동시에 여럿이 해도 됨</p>\n<ul>\n<li>Shared data<ul>\n<li>DB 자체</li>\n<li>int readcount=0; //현재 DB에 접근 중인 Reader의 수</li>\n</ul>\n</li>\n<li>Sysncronization variablees<ul>\n<li>semaphore mutex =1 ( 공유변수 readcount를 접근하는 코드의 mutual exlution 보장), db=1;</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100716.png\" alt=\"img\"></p>\n<h2 id=\"Dining-Philosophers-Problem\"><a href=\"#Dining-Philosophers-Problem\" class=\"headerlink\" title=\"Dining-Philosophers Problem\"></a>Dining-Philosophers Problem</h2><p>배가 고파지면 자기의 왼쪽과 오른쪽에 놓아져 있는 젓가락을 잡음</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100717.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100718.png\" alt=\"img\"></p>\n<ul>\n<li><p>문제</p>\n<ul>\n<li>모두다 왼쪽 젓가락을 잡아버리면? </li>\n<li>Deadlock</li>\n</ul>\n</li>\n<li><p>해결</p>\n<ul>\n<li>4명의 철학자만이 테이블에 동시에 앉을 수 있도록</li>\n<li>젓가락을 두개 모두 집을 수 있을 때에만 젓가락을 잡을 수 있도록 (아래의 경우)</li>\n<li>비대칭. 짝수 철학자는 왼쪽 젓가락부터 집도록</li>\n</ul>\n</li>\n</ul>\n<p>enum {thinking, hungry, eating} state[5];</p>\n<p>semaphore self[5]=0;    // 동시에 젓가락 두개 모두 잡을 수 있는 권한</p>\n<p>semaphore mutex=1;</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100719.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100720.png\" alt=\"img\"></p>\n<h2 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h2><ul>\n<li>Semaphore의 문제점<ul>\n<li>코딩이 힘들다</li>\n<li>정확성의 입증이 어려움</li>\n<li>자발적 협력이 필요</li>\n<li>한번의 실수가 모든 시스템에 영향</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100721.png\" alt=\"img\"></p>\n<ul>\n<li>동시 수행중인 프로세스 사이에서 abstract data type의 안전한 공유를 보장하기위한 high-level syncronization  construct <ul>\n<li>모니터 내에서는 한번에 하나의 하나의 프로세스만이 활동 가능</li>\n<li>프로그래머가 동기화 제약 조건을 명시적으로 코딩할 필요 없음</li>\n<li>프로세스가 모니터 안에서 기다릴수 있도록 하기 위해 condition variable 사용. condition x, y</li>\n<li>condition variable 은 wait와 signal 연산에 의해서만 접근 가능<ul>\n<li>x.wait();<ul>\n<li>x.wait()을 invoke한 프로세스는 다른 프로세스가 x.signal()을 invoke 하기 전까지 suspend</li>\n</ul>\n</li>\n<li>x.siganl();<ul>\n<li>x.signal()은 정확하게 하나의 suspend된 프로세스를 resume한다. Suspend된 프로세스가 없으면 아무 일도 일어나지 않는다. </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100722.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100723.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100724.png\" alt=\"img\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"데이터의-접근\"><a href=\"#데이터의-접근\" class=\"headerlink\" title=\"데이터의 접근\"></a>데이터의 접근</h2><p>데이터를 읽어와서 연산하고 다시 저장</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100601.png\" alt=\"img\"></p>\n<h2 id=\"Race-Condition\"><a href=\"#Race-Condition\" class=\"headerlink\" title=\"Race Condition\"></a>Race Condition</h2><p>S-box를 공유하는 E-box가 여럿 있는 경우 Race Condition의 가능성이 있음</p>\n<p>ex) 커널 모드 수행 중 인터럽트로 커널모드 다른 루틴 수행시</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100602.png\" alt=\"img\"></p>\n<h2 id=\"race-condition-1-3\"><a href=\"#race-condition-1-3\" class=\"headerlink\" title=\"race condition (1/3)\"></a>race condition (1/3)</h2><ul>\n<li>kernel 수행 중 인터럽트 발생</li>\n<li>커널모드 running 중 inetrrupt 발생하여 인터럽트 처리 루틴이 수행</li>\n<li>양쪽 다 커널 코드이므로 kernel address space 공유</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100603.png\" alt=\"img\"></p>\n<h2 id=\"race-condition-2-3\"><a href=\"#race-condition-2-3\" class=\"headerlink\" title=\"race condition (2/3)\"></a>race condition (2/3)</h2><p>해결책 : 커널 모드에서 수행 중일 때는 CPU를 preempt 하지 않음. 커널 모드에서 사용자 모드로 돌아 갈때 preempt.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100604.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100605.png\" alt=\"img\"></p>\n<h2 id=\"race-condition-3-3\"><a href=\"#race-condition-3-3\" class=\"headerlink\" title=\"race condition (3/3)\"></a>race condition (3/3)</h2><ul>\n<li><p>CPU가 여러개인 경우</p>\n</li>\n<li><p>해결</p>\n<ul>\n<li>커널 내부에 있는 각 공유 데이터에 접근할 때마다 그 데이터에 lock / unlock을 하는 방법</li>\n<li>한번에 하나의 CPU만이 커널에 들어갈 수 있게 하는 방법</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100606.png\" alt=\"img\">​    </p>\n<h2 id=\"Process-Syncronization-문제\"><a href=\"#Process-Syncronization-문제\" class=\"headerlink\" title=\"Process Syncronization 문제\"></a>Process Syncronization 문제</h2><ul>\n<li>공유 데이터의 동시 접근은 데이터의 불일치 문제 발생시킬 수 있음</li>\n<li>일관성 유지를 위해서 협력 프로세스간의 실행순서를 정해주는 매커니즘 필요</li>\n<li>Race condition<ul>\n<li>여러 프로세스들이 동시에 공유 데이터를 접근하는 상황</li>\n<li>데이터의 최정 연산 결과는 마지막에 그 데이터를 다룬 프로세스에 따라다라짐</li>\n<li>이를 막기 위해 concurrent processsms 동기화 되어야한다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100607.png\" alt=\"img\">    </p>\n<h2 id=\"The-Critical-Section-Problem\"><a href=\"#The-Critical-Section-Problem\" class=\"headerlink\" title=\"The Critical-Section Problem\"></a>The Critical-Section Problem</h2><p>공유 데이터를 접근하는 코드</p>\n<ul>\n<li>n개의 프로세스가 공유 데이터를 동시에 사용하기를 원하는 경우</li>\n<li>각 프로세스의 code segment에는 공유 데이터를 접근하는 코드인 ciritical sectoin이 존재</li>\n<li>하나의 프로세스가 ciritical section에 있을 때 다른 모든 프로세스는 ciritical section에 들어갈 수 없어야한다.</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/100608.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100701.png\" alt=\"img\"></p>\n<h2 id=\"프로그램적-해결법의-충족-조건\"><a href=\"#프로그램적-해결법의-충족-조건\" class=\"headerlink\" title=\"프로그램적 해결법의 충족 조건\"></a>프로그램적 해결법의 충족 조건</h2><ul>\n<li>Mutual Exclution<ul>\n<li>프로세스가 pi가 critical section 부분을 수행중이면 다른 모든 프로세스들은 그들의 critical section에 들어가면 안된다.</li>\n</ul>\n</li>\n<li>Progress<ul>\n<li>아무도 critical section에 있지 않은 상태에서 critical section에 들어가고자 하는 프로세스가 있으면 critical section에 들어가게 해주어야 한다.</li>\n</ul>\n</li>\n<li>Bounded Wating<ul>\n<li>프로세스가 critical section에 들어가려고 요청한 후부터 그 요청이 허용될 때까지 다른 프로세스들이 critical section에 들어가는 횟수에 한계가 있어야 한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"알고리즘-1\"><a href=\"#알고리즘-1\" class=\"headerlink\" title=\"알고리즘 1\"></a>알고리즘 1</h2><p>P0</p>\n<p>int turn ;</p>\n<p>initially turn=0; (turn이 0 : 0번 프로세스 차례)</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100702.png\" alt=\"img\"></p>\n<p>P0이 빈번히 들어가고 싶으면?</p>\n<h2 id=\"알고리즘-2\"><a href=\"#알고리즘-2\" class=\"headerlink\" title=\"알고리즘 2\"></a>알고리즘 2</h2><p>boolean flag[2];</p>\n<p>initially flag[모두] =false; // no one is in CS</p>\n<p>Pi ready to enter its critical section if flag[i] == true</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100703.png\" alt=\"img\"></p>\n<p>들어가기전에 둘다 깃발을 들으면 아무도 못들어가.</p>\n<h2 id=\"알고리즘3-Peterson’s-Algorithm\"><a href=\"#알고리즘3-Peterson’s-Algorithm\" class=\"headerlink\" title=\"알고리즘3 (Peterson’s Algorithm)\"></a>알고리즘3 (Peterson’s Algorithm)</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100704.png\" alt=\"img\"></p>\n<p>Busy Wating (spin lock)</p>\n<p>내가 CPU를 잡고 while문에 있는데, 그때 다른 애가 CPU를 잡으면 ? </p>\n<h2 id=\"Sysnchnization-Hardware\"><a href=\"#Sysnchnization-Hardware\" class=\"headerlink\" title=\"Sysnchnization Hardware\"></a>Sysnchnization Hardware</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100705.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100706.png\" alt=\"img\"></p>\n<ul>\n<li>하드웨어적으로 Test &amp; modify를 atuomic하게 수행할 수 있도록 지원하는 경우 앞의 문제는 간단히 해결</li>\n<li>값을 읽어내고 바꾸는 과정을 한번에</li>\n</ul>\n<h2 id=\"Semaphores\"><a href=\"#Semaphores\" class=\"headerlink\" title=\"Semaphores\"></a>Semaphores</h2><p>앞의 방식들을 추상화시킴</p>\n<ul>\n<li><p>Semaphore S</p>\n<ul>\n<li><p>integer variable</p>\n</li>\n<li><p>P(S) : 공유자원 획득</p>\n<ul>\n<li>If positive, decrement &amp; enter. Ohterwise, wait until positive(busy wait)</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100707.png\" alt=\"img\"></p>\n</li>\n<li><p>V(S) : 공유자원 반납</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100708.png\" alt=\"img\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Critical-Section-of-n-Processes\"><a href=\"#Critical-Section-of-n-Processes\" class=\"headerlink\" title=\"Critical Section of n Processes\"></a>Critical Section of n Processes</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100709.png\" alt=\"img\"></p>\n<h2 id=\"Block-Wakeup-Impemetation\"><a href=\"#Block-Wakeup-Impemetation\" class=\"headerlink\" title=\"Block / Wakeup Impemetation\"></a>Block / Wakeup Impemetation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100710.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100711.png\" alt=\"img\"></p>\n<ul>\n<li>block<ul>\n<li>커널은 block을 호출한 프로세스를 suspend 시킴</li>\n<li>이 프로세스의 PCB를 semaphore에 대한 wait queue에 넣음</li>\n</ul>\n</li>\n<li>wakeup(P)<ul>\n<li>block 된 프로세스 P를 wakeup 시킴</li>\n<li>이 프로세스의 PCB를 ready queue로 옮김</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100712.png\" alt=\"img\"></p>\n<h2 id=\"Which-is-better\"><a href=\"#Which-is-better\" class=\"headerlink\" title=\"Which is better\"></a>Which is better</h2><p>busy-wati vs block/wakeup</p>\n<p>CS 길이가 긴 경우 Block/Wakeup이 적당</p>\n<p>CS 길이가 매우 짧은 경우 Block/Wakeup 오버헤드가 busy-wait 오버헤드보다 더 커질 수 있음</p>\n<p>일반적으로  block/wakeup 방식이 더 좋음</p>\n<h2 id=\"Deadlock-and-Starvation\"><a href=\"#Deadlock-and-Starvation\" class=\"headerlink\" title=\"Deadlock and Starvation\"></a>Deadlock and Starvation</h2><ul>\n<li><p>Deadlock</p>\n<p>둘 이상의 프로세스가 서로 상대방에 의해 충족될 수 있는 event를 무한히 기다리는 현상</p>\n<p>P0와 P1은 S와 Q 모두가 필요하다.</p>\n<p>P0가 S를 차지했을 때, P1이 CPU를 가져가버리면, Deadlock 발생</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100713.png\" alt=\"img\"></p>\n<ul>\n<li><p>Starvation</p>\n<p>indefinite blocking. 프로세스가 suspend된 이유에 해당하는 세마포어 큐에서 빠져나갈수 없는 현상</p>\n</li>\n</ul>\n<h2 id=\"Bounded-Buffer-Problem\"><a href=\"#Bounded-Buffer-Problem\" class=\"headerlink\" title=\"Bounded-Buffer Problem\"></a>Bounded-Buffer Problem</h2><p>Producer-Consumer Problem</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100714.png\" alt=\"img\"></p>\n<p>주황색은 Producer가 생성한다.</p>\n<p>생산자 둘이 한 위치에 생성하면?</p>\n<p>하나를 소비자 둘이 동시에 소비 하려고 하면?</p>\n<p>비버있는 버퍼가 없는데 또 생산자가 만들려고 하면?</p>\n<ul>\n<li><p>Syncrhonization variables</p>\n<ul>\n<li>mutual exclution<ul>\n<li>need binary semaphore (shared data의 mutual exlusion을 위해)</li>\n<li>lock 걸고 풀고</li>\n</ul>\n</li>\n<li>resource count <ul>\n<li>need integer semaphore (남은 full/empty buffer의 수 표시)</li>\n<li>자원 개수</li>\n</ul>\n</li>\n</ul>\n<p>semaphore full =0, empty =n, mutex =1;</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100715.png\" alt=\"img\"></p>\n<ul>\n<li><p>Produer</p>\n<ul>\n<li>빈 버퍼가 있으면 버퍼 획득하고, 버퍼에 락 걸고, 버퍼에 데이터 넣고, 버퍼에 락 풀고, full++</li>\n</ul>\n</li>\n<li><p>Consumer</p>\n<ul>\n<li>내용이 들어잇는 버퍼 있으면, 버퍼에 락 걸고, 버퍼에서 데이터 빼고, 버퍼 락 풀고, empty ++</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Readers-Writes-Problem\"><a href=\"#Readers-Writes-Problem\" class=\"headerlink\" title=\"Readers-Writes Problem\"></a>Readers-Writes Problem</h2><p>한 process가 DB에 write 중일 때 다른 process가 접근하면 안됨 / read는 동시에 여럿이 해도 됨</p>\n<ul>\n<li>Shared data<ul>\n<li>DB 자체</li>\n<li>int readcount=0; //현재 DB에 접근 중인 Reader의 수</li>\n</ul>\n</li>\n<li>Sysncronization variablees<ul>\n<li>semaphore mutex =1 ( 공유변수 readcount를 접근하는 코드의 mutual exlution 보장), db=1;</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100716.png\" alt=\"img\"></p>\n<h2 id=\"Dining-Philosophers-Problem\"><a href=\"#Dining-Philosophers-Problem\" class=\"headerlink\" title=\"Dining-Philosophers Problem\"></a>Dining-Philosophers Problem</h2><p>배가 고파지면 자기의 왼쪽과 오른쪽에 놓아져 있는 젓가락을 잡음</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100717.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100718.png\" alt=\"img\"></p>\n<ul>\n<li><p>문제</p>\n<ul>\n<li>모두다 왼쪽 젓가락을 잡아버리면? </li>\n<li>Deadlock</li>\n</ul>\n</li>\n<li><p>해결</p>\n<ul>\n<li>4명의 철학자만이 테이블에 동시에 앉을 수 있도록</li>\n<li>젓가락을 두개 모두 집을 수 있을 때에만 젓가락을 잡을 수 있도록 (아래의 경우)</li>\n<li>비대칭. 짝수 철학자는 왼쪽 젓가락부터 집도록</li>\n</ul>\n</li>\n</ul>\n<p>enum {thinking, hungry, eating} state[5];</p>\n<p>semaphore self[5]=0;    // 동시에 젓가락 두개 모두 잡을 수 있는 권한</p>\n<p>semaphore mutex=1;</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100719.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100720.png\" alt=\"img\"></p>\n<h2 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h2><ul>\n<li>Semaphore의 문제점<ul>\n<li>코딩이 힘들다</li>\n<li>정확성의 입증이 어려움</li>\n<li>자발적 협력이 필요</li>\n<li>한번의 실수가 모든 시스템에 영향</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100721.png\" alt=\"img\"></p>\n<ul>\n<li>동시 수행중인 프로세스 사이에서 abstract data type의 안전한 공유를 보장하기위한 high-level syncronization  construct <ul>\n<li>모니터 내에서는 한번에 하나의 하나의 프로세스만이 활동 가능</li>\n<li>프로그래머가 동기화 제약 조건을 명시적으로 코딩할 필요 없음</li>\n<li>프로세스가 모니터 안에서 기다릴수 있도록 하기 위해 condition variable 사용. condition x, y</li>\n<li>condition variable 은 wait와 signal 연산에 의해서만 접근 가능<ul>\n<li>x.wait();<ul>\n<li>x.wait()을 invoke한 프로세스는 다른 프로세스가 x.signal()을 invoke 하기 전까지 suspend</li>\n</ul>\n</li>\n<li>x.siganl();<ul>\n<li>x.signal()은 정확하게 하나의 suspend된 프로세스를 resume한다. Suspend된 프로세스가 없으면 아무 일도 일어나지 않는다. </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100722.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100723.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os100724.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"Memory Management","date":"2018-10-08T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## Logical vs Physical Address\n\n- Logical address (=virtual address)\n  - 프로세스마다 독립적으로 가지는 주소 공간\n  - 각 프로세스마다 0번지 부터 시작\n  - CPU가 보는 주소는 logical address임 \n\n- physical address \n  - 메모리에 실제 올라가는 위치 \n\n- 주소바인딩 : 주소를 결정하는 것\n  - Symbolic address ->Logical Address -> Physical address\n\n## Address Binding \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm01.png)\n\n컴파일 타임 바인딩이나 로드 타임 바인딩 모두 실행될때 물리주소가 결정되지만, \n\n런타임 바인딩은 실행 이후에도 물리 주소가 바뀔 수 있다.\n\n소스코드 : A위치에 있는 값과 B위치에 값을 더해서 A에 저장해라. C위치로 점프해라\n\n- Compile time binding\n  - 물리적 메모리 주소가 컴파일 시 알려짐\n  - 시작 위치 변경시 재컴파일\n  - 컴파일러는 절대코드(absolute code) 생성\n- Load time binding\n  - Loader의 책임 하에 물리적 주소 부여\n  - 컴파일러가 재배치가능코드를 생성하는 경우 가능\n- Execution time binding(run time binding)\n  - 수행이 시작된 이후에도 프로세스의 메모리 상 위치를 옮길 수 있음\n  - CPU가 주소를 참조할 때마다 binding을 점검\n  - 하드웨어적인 자원이 필요 (base and limit registers, MMU)\n\n## Memory-Management Unit (MMU)\n\nlogical address를 physical address로 매핑해 주는 hardware device\n\n- MMU scheme\n  - 사용자 프로세스가 CPU에서 수행되며 생성해내는 모든 주소값에 대해 base regiseter(relocation register)의 값을 더한다.\n- user program\n  - logical address만을 다룬다\n  - 실제 physical address를 볼수 없으며 알 필요가 없다.\n\n## Dynamic Relocation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm02.png)\n\nCPU가 프로세스 p1의 346번지를 요청한 상태.\n\n프로세스1은 물리주소 14000번지에 올라가있음.\n\n논리주소에 시작위치(relocation register)를 더해서 14346 구함.\n\n한가지 더 체크하는 것은?\n\n프로세스 p1의 크기를 limit register가 가지고 있어.\n\nCPU가 남의 프로그램의 메모리를 보려고 하는 시도를 막을 수 있음.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm03.png)\n\nlimit register : CPU가 요청하는 논리주소가 프로그램 크기보다 큰  논리 주소를 요청한 것은 아닌지 먼저 체크 \n\n## Dynamic Loading \n\n프로세스 전체를 메모리에 미리 다 올리는 것이 아니라 해당 루틴이 불려질 때 메모리에 load 하는 것\n\n- memory utilization 향상\n- 가끔씩 사용되는 많은 양의 코드의 경우 유용 (ex) 오류 처리 루틴\n- 운영체제의 특별한 지원 없이 프로그램 자체에서 구현 가능 (OS는 라이브러리를 통해 지원 가능)\n- Loading : 메모리로 올리는 것\n\n## Overlays\n\n메모리에 프로세스 부분 중 실제 필요한 정보많을 올림\n\n프로세스의 크기가 메모리보다 클 때 유용\n\n운영체제의 지원없이 사용자에 의해 구현\n\n작은 공간의 메모리를 사용하던 초창기 시스템에서 수작으로 프로그래머가 구현\n\nManual Overlay\n\n프로그램이 매우 복잡\n\n## Swapping\n\n프로세스를 일시적으로 메모리에서 backing store로 쫓아내는것\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm04.png)\n\n- backing store (swap area)\n  - 디스크\n  - 많은 사용자의 프로세스 이미지를 담을 만큼 충분히 빠르고 큰 저장 공간\n- Swap in / Swap out\n  - 일반적으로 중기 스케쥴러에 의해 swap out 시킬 프로세스 선정\n  - CPU 우선순위가 낮은 프로세스를 swapped out 시킴\n  - Compile time 혹은 Load time binding 에서는 원래 메모리 위치로 swap in 해야함\n  - Execution time binding 에서는 추후 빈 메모리 영역 아무 곳에서나 올릴 수 있음 \n  - swap time은 대부분 transfer time (swap 되는 양에 비례하는 시간) 임\n\n## Dynamic Linking\n\nLinking : 여러 군데 존재하던 컴파일된 파일들을 묶어서 실행 파일 만드는 것\n\n- static linking \n  - 라이브러리가 프로그램의 실행 파일 코드에 포함됨\n  - 실행 파일의 크기가 커짐\n  - 동일한 라이브러리를 각각의 프로세스가 메모리에 올리므로 메모리 낭비 (ex. printf 함수의 라이브러리 코드)\n- dynamic linking\n  - 라이브러리가 실행시 연결됨\n  - 라이브러리 호출 부분에 라이브러리 루틴의 위치를 찾기 위한 stub이라는 작은 코드를 줌 (라이브러리 위치 찾을 수 있는)\n  - 라이브러리가 이미 메모리에 있으면 그 루틴의 주소로 가고 없으면 디스크에서 읽어옴\n  - 운영체제의 도움이 필요\n\n## Allocation of Physical Memory\n\n- 메모리는 일반적으로 두 영역으로 나뉘어 사용\n  - OS 상주 영역 \n    - interrupt vector와 함께 낮은 주소 영역 사용\n  - 사용자 프로세스 영역\n    - 높은 주소 영역\n- 사용자 프로세스 영역의 할당 방법\n  - Contiguous allocation\n    - 각각의 프로세스가 메모리의 연속적인 공간에 적재되록 하는 것\n    - 고정분할방식 / 가변분할방식\n  - Noncontiguous allocation\n    - 하나의 프로세스가 메모리 영역에 분산되어 올라 갈수 있음\n    - Paging / Segmentaion / Paged Segmentation\n\n## Contiguous Allocation \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm05.png)\n\n- 고정 분할 방식\n  - 물리적 메모리를 몇 개의 영구적 분할(partition) 로 나눔\n  - 분할의 크기가 모두 동일한 방힉과 서로  다른 방식이 존재\n  - 분할당 하나의 프로그램 적재\n  - 융통성 없음\n    - 동시에 메모리에 load되는 프로그램의 수가 고정됨\n    - 최대 수행 가능 프로그램 크기 제한\n  - internal fragmentation, external fragmentation 발생\n- 가변 분할 방식\n  - 프로그램이 실핼될때마다 차곡차곡 메모리에 올려\n  - 프로그램의 크기를 고려해서 할당\n  - 분할의 크기, 개수가 동적으로 변함\n  - 기술적 관리 기법 필요\n  - external fragmenation 발생\n\n## Hole\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm06.png)\n\n- 가용 메모리 공간\n\n- 가변분할 방식에서 생김\n- 다양한 크기의 hole들이 메모리 여러 곳에 흩어져 있음\n- 프로세스가 도착하면 수용 가능한 hole을 할당\n- 운영체제는 다음의 정보를 유지\n  - 할당공간(프로그램이 사용하고 있는)\n  - 가용공간(hole)\n\n- Dynamic Storage-Allocation Problem\n  - 가변 분할 방식에서 size n인 요청을 만족하는 가장 적절한 hole을 찾는 문제\n  - First-fit \n    - Size가 n이상인 것 중 최초로 찾아지는 Hole에 할당\n  - Best-fit\n    - Size가 n이상인 가장 작은 hole을 찾아서 할당\n    - hole들의 리스트가 크기 순으로 정렬되지 않은 경우 모든 hole의 리스트를 탐색해야함\n    - 많은 수의 아주 작은 hole들이 생성됨\n  - Worst-fit\n    - 가장 큰 hole에 할당\n    - 역시 모든 리스트를 탐색해야함\n    - 상대적으로 아주 큰 hole들이 생성됨\n- Compaction\n  - external fragmentation 문제를 해결하는 방법\n  - 사용 중인 메모리 영역을 한구데로 몰고 hole들을 다 한곳으로 몰아 큰 block을 만드는 것\n  - 매우 큰 비용이 드는 방법\n  - 프로세스의 주소가 실행 시간에 동적으로 재배치 가능한 경우에만 수행될 수 있음\n\n## Paging\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm08.png)\n\n- Process의 virtual memory를 동일한 사이즈의 page 단위로 나눔\n- virtual memory의 내용이 page 단위로 noncontiguous하게 저장됨\n- 일부는 backing storage에 일부는 physical memory에 저장\n- Basic method\n  - physical memory를 동일한 크기의 frame으로 나눔\n  - logical memory를 동일 크기의 page로 나눔 (frame과 같은 크기)\n  - 모든 가용 frame들을 관리\n  - page table을 사용하여 logical address를 physical address로 변환\n  - external fragmentation 발생 안함\n  - internal fragmentation 발생가능\n\n- page table\n  - 페이지들이 물리적인 메모리 어디에 올라가 있나\n  - logical memory의 page 개수 만큼 entry 가 존재\n\n- logical address\n  - p : page 번호\n  - d: 그 페이지 내에서 얼만큼 떨어져 있나\n\n## Implementation of Page Table\n\n- Page table은 main memory 에 상주\n\n- Page table base register (PTBR) 가 page table을 가리킴\n\n- Page table length register (PTLR) 가 테이블 크기를 보관\n\n- 모든 메모리 접근 연산에는 2번의 memory access 필요\n\n  - page table 접근 1번\n  - 실제 data/instruction 접근  1번\n\n- 속도 향상을 위해 associative register / translation look-aside buffter(TLB)\n\n  라 불리는 고속의 lookup hardware cache 사용\n\n## Paging Hardware with TLB\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm09.png)\n\n 주소 변환을 위한 케쉬 메모리. \n\n빈번히 참조되는 엔트리 몇개 만을 가지고 있음.\n\n전체 항목을 검색해야봐야함.  여기 어디에도 없으면 page table을 봄\n\nTLB에서 전체 항목을 다 검색해야하기 때문에, parallel search로 빠르게 함. 병력적으로 한번에 쫙 검색함.\n\n## Two-Level Page Table\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm10.png)\n\npage table이 2단계. \n\n속도는 더 걸림. page table을 위한 공간은 줄어듦. \n\n주소공간에서 실제로 사용되지 않는 페이지에 대해서는 안쪽 테이블이 안만들어져.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm11.png)\n\n- p1 \n  - 10bit\n  - outer page table의 index\n- p2\n  - 10bit\n  - outer page table의 page에서의 변위(displacement)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm12.png)\n\n## Multilevel Paging and Performance\n\nAddress space가 더 커지면 다단게 페이지 테이블이 필요.\n\n각 단계의 페이지 테이블이 메모리에 존재하므로 logical address의 physical address 변환에 더 많은 메모리 접근 필요.\n\nTLB를 통해 메모리 접근 시간을 줄일 수 있음.\n\n## Valid / Invalid Bit in a Page Table\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm13.png)\n\n- protection bit\n  - page에 대한 접근 권한 (read /write / read-only)\n- valid\n  - 해당 주소의 frame에 그 프로세스를 구성하는 유요한 내용이 있음\n- invalid\n  - 프로세스가 그 주소 부분을 사용하지 않는 경우 \n  - 해당 페이지가 메모리에 올라와 있지 않고 swap area에 있는 경우\n\n## Inverted Page Table\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm14.png)\n\n- Page table이 매우 큰 이유\n\n  - 모든 process 별로 그 logical address에 대응하는 모든 page에 대해 page table entry 존재\n  - 대응하는 page가 메모리에 있든 아니든 간에 page table에는 entry로 존재\n\n- inverted page table\n\n  - Page frame 하나당 page table에 하나의 entry를 둔것\n\n  - 각 page table entry는 각각의 물리적 메모리의 page frame이 담고 있는 내용 표시\n\n    (process-id, process의 logical address)\n\n  - page frame 개수만큼 entry 존재.\n\n  - entry 전부 검색해서 pid랑 p 찾아야함. associative registe 찾아서 병렬 검색을 함\n\n  - 단점\n\n    - 테이블 전체를 탐색\n\n  - 조치\n\n    - associative register 사용 (expensive)\n\n## Shared Page\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm15.png)\n\n공유할 수 있는 코드는 같은 프레임으로 매핑 시켜서 메모리에 한 카피만 올려\n\n- Shared code\n\n  - Re-entrant Code (= Pure code)\n\n  - read-only 로 하여 프로세스 간에 하나의 code만 메모리에 올림\n\n    (eg, text editords, compilers, window systems)\n\n  - Shared code는 모든 프로세스의 logical address space에서 동일한 위치에 있어야함\n\n    - 위 그림에서, ed1, 2, 3 순으로 되어야 함\n\n- Private code and data\n\n  - 각 프로세스들은 독자적으로 메모리에 올림\n  - private data는 logical addreess space 의 아무 곳에 와도 무방\n\n## Segmentation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm16.png)\n\n프로그램은 의미 단위인 여러 개의 segment로 구성\n\n작게는  프로그램을 구성하는 함수 하나하나를 세그먼트로 정의\n\n크게는 프로그램 전체를 하나의 세그먼트로 정의 가능\n\n일반적으로 code, data, stack 부분이 하나씩 세그먼트로 정의됨\n\nSegment는 의미 단위 이기 떄문에 공유와 보안에 있어서 paging 보다 효과적\n\nSegment의 길이가 동일하지 않으므로 가변 분할 방식에서와 동일한 문제점들이 발생\n\n- Logical address는 다음의 두가지로 구성\n  - <segment-number, offset>\n- Segment table\n  - each table entry has\n    - base : starting physical address of the segment\n    - limit : length of the segment\n  - Segment-table base reigster (STLR)\n    - 물리적 메모리에서의 segment table의 위치 \n  - Segment-table length reigster (STLR)\n    - 프로그램이 사용하는 segment의 수\n\n- 체크\n  - 세그먼트 번호가 STLR 보다 작은지 체크해야함 \n  - 세그먼트의 길이보다 세그먼트안에서 떨어진 offset 값이 더 크지는 않은가\n\n## Segmentation Example \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm17.png)\n\n다섯 개의 segment. 각각의 세그먼트에 대해서 주소 변환을 위한 테이블이 있음\n\n## Sharing of Segments\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm18.png)\n\n0번 세그먼트는 같은 역할을 하는 세그먼트. 이 두 개의 세그먼트는 같은 물리주소에 올라감.\n\n1번 세그먼트는 다른 물리주소에 올라감.\n\n## Segmentation with Paging\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm19.png)\n\n세그먼트 하나가 여러개의 페이지로 구성\n\n먼저 세그먼트에 대해 주소 변환\n\nlogical address : 세그먼트 번호와 세그먼트 안에서 얼마나 떨어있는지\n\nSTBR에 세그먼트 시작 위치가들어있고, 거기서부터 위에서부터 s번째 엔트리에 가면 page table의 시작 위치가 나옴\n\n 세그먼트의 길이보다 세그먼트 안에서 떨어진 offset이 크다면 잘못된 요청\n\nd는 page 번호와 page 안에서 얼마나 떨어져 있는지 (p, d`)\n\npage table의 시작 위치로부터 page 번호 만큼 떨어진 엔트리에 가면 이 페이지에 대한 주소 변환 결과 (물리적인 메모리의 몇번째 프레임인지) 나와\n\n- pure segmentation 과 차이점\n  - segment-table entry가 segment의 base address를 가지고있는 것이 아니라, segment를 구서하는 page table의 base address를 가지고 있음\n\n## 주소 변환을 위한 OS의 역할\n\n어떤 프로세스가 CPU를 가지고 메모리 접근을 하는데, \n\n주소 변환을 할 때 마다 운영체제가 중간에 개입하면 CPU가 이 프로세스로부터 운영체제에게 넘어가야돼.\n\n주소 변환 다 했으니까 다시 CPU가 이 프로세스에게 넘어온다? 말이 안돼. \n\n주소 변환은 무조건 하드웨어적으로 일어남. IO 장치에 접근하려면 OS가 끼어들어야돼.","source":"_posts/2018-10-09-Memory Management.md","raw":"---\nlayout: post\ntitle:  \"Memory Management\"\ndate:   2018-10-09\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## Logical vs Physical Address\n\n- Logical address (=virtual address)\n  - 프로세스마다 독립적으로 가지는 주소 공간\n  - 각 프로세스마다 0번지 부터 시작\n  - CPU가 보는 주소는 logical address임 \n\n- physical address \n  - 메모리에 실제 올라가는 위치 \n\n- 주소바인딩 : 주소를 결정하는 것\n  - Symbolic address ->Logical Address -> Physical address\n\n## Address Binding \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm01.png)\n\n컴파일 타임 바인딩이나 로드 타임 바인딩 모두 실행될때 물리주소가 결정되지만, \n\n런타임 바인딩은 실행 이후에도 물리 주소가 바뀔 수 있다.\n\n소스코드 : A위치에 있는 값과 B위치에 값을 더해서 A에 저장해라. C위치로 점프해라\n\n- Compile time binding\n  - 물리적 메모리 주소가 컴파일 시 알려짐\n  - 시작 위치 변경시 재컴파일\n  - 컴파일러는 절대코드(absolute code) 생성\n- Load time binding\n  - Loader의 책임 하에 물리적 주소 부여\n  - 컴파일러가 재배치가능코드를 생성하는 경우 가능\n- Execution time binding(run time binding)\n  - 수행이 시작된 이후에도 프로세스의 메모리 상 위치를 옮길 수 있음\n  - CPU가 주소를 참조할 때마다 binding을 점검\n  - 하드웨어적인 자원이 필요 (base and limit registers, MMU)\n\n## Memory-Management Unit (MMU)\n\nlogical address를 physical address로 매핑해 주는 hardware device\n\n- MMU scheme\n  - 사용자 프로세스가 CPU에서 수행되며 생성해내는 모든 주소값에 대해 base regiseter(relocation register)의 값을 더한다.\n- user program\n  - logical address만을 다룬다\n  - 실제 physical address를 볼수 없으며 알 필요가 없다.\n\n## Dynamic Relocation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm02.png)\n\nCPU가 프로세스 p1의 346번지를 요청한 상태.\n\n프로세스1은 물리주소 14000번지에 올라가있음.\n\n논리주소에 시작위치(relocation register)를 더해서 14346 구함.\n\n한가지 더 체크하는 것은?\n\n프로세스 p1의 크기를 limit register가 가지고 있어.\n\nCPU가 남의 프로그램의 메모리를 보려고 하는 시도를 막을 수 있음.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm03.png)\n\nlimit register : CPU가 요청하는 논리주소가 프로그램 크기보다 큰  논리 주소를 요청한 것은 아닌지 먼저 체크 \n\n## Dynamic Loading \n\n프로세스 전체를 메모리에 미리 다 올리는 것이 아니라 해당 루틴이 불려질 때 메모리에 load 하는 것\n\n- memory utilization 향상\n- 가끔씩 사용되는 많은 양의 코드의 경우 유용 (ex) 오류 처리 루틴\n- 운영체제의 특별한 지원 없이 프로그램 자체에서 구현 가능 (OS는 라이브러리를 통해 지원 가능)\n- Loading : 메모리로 올리는 것\n\n## Overlays\n\n메모리에 프로세스 부분 중 실제 필요한 정보많을 올림\n\n프로세스의 크기가 메모리보다 클 때 유용\n\n운영체제의 지원없이 사용자에 의해 구현\n\n작은 공간의 메모리를 사용하던 초창기 시스템에서 수작으로 프로그래머가 구현\n\nManual Overlay\n\n프로그램이 매우 복잡\n\n## Swapping\n\n프로세스를 일시적으로 메모리에서 backing store로 쫓아내는것\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm04.png)\n\n- backing store (swap area)\n  - 디스크\n  - 많은 사용자의 프로세스 이미지를 담을 만큼 충분히 빠르고 큰 저장 공간\n- Swap in / Swap out\n  - 일반적으로 중기 스케쥴러에 의해 swap out 시킬 프로세스 선정\n  - CPU 우선순위가 낮은 프로세스를 swapped out 시킴\n  - Compile time 혹은 Load time binding 에서는 원래 메모리 위치로 swap in 해야함\n  - Execution time binding 에서는 추후 빈 메모리 영역 아무 곳에서나 올릴 수 있음 \n  - swap time은 대부분 transfer time (swap 되는 양에 비례하는 시간) 임\n\n## Dynamic Linking\n\nLinking : 여러 군데 존재하던 컴파일된 파일들을 묶어서 실행 파일 만드는 것\n\n- static linking \n  - 라이브러리가 프로그램의 실행 파일 코드에 포함됨\n  - 실행 파일의 크기가 커짐\n  - 동일한 라이브러리를 각각의 프로세스가 메모리에 올리므로 메모리 낭비 (ex. printf 함수의 라이브러리 코드)\n- dynamic linking\n  - 라이브러리가 실행시 연결됨\n  - 라이브러리 호출 부분에 라이브러리 루틴의 위치를 찾기 위한 stub이라는 작은 코드를 줌 (라이브러리 위치 찾을 수 있는)\n  - 라이브러리가 이미 메모리에 있으면 그 루틴의 주소로 가고 없으면 디스크에서 읽어옴\n  - 운영체제의 도움이 필요\n\n## Allocation of Physical Memory\n\n- 메모리는 일반적으로 두 영역으로 나뉘어 사용\n  - OS 상주 영역 \n    - interrupt vector와 함께 낮은 주소 영역 사용\n  - 사용자 프로세스 영역\n    - 높은 주소 영역\n- 사용자 프로세스 영역의 할당 방법\n  - Contiguous allocation\n    - 각각의 프로세스가 메모리의 연속적인 공간에 적재되록 하는 것\n    - 고정분할방식 / 가변분할방식\n  - Noncontiguous allocation\n    - 하나의 프로세스가 메모리 영역에 분산되어 올라 갈수 있음\n    - Paging / Segmentaion / Paged Segmentation\n\n## Contiguous Allocation \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm05.png)\n\n- 고정 분할 방식\n  - 물리적 메모리를 몇 개의 영구적 분할(partition) 로 나눔\n  - 분할의 크기가 모두 동일한 방힉과 서로  다른 방식이 존재\n  - 분할당 하나의 프로그램 적재\n  - 융통성 없음\n    - 동시에 메모리에 load되는 프로그램의 수가 고정됨\n    - 최대 수행 가능 프로그램 크기 제한\n  - internal fragmentation, external fragmentation 발생\n- 가변 분할 방식\n  - 프로그램이 실핼될때마다 차곡차곡 메모리에 올려\n  - 프로그램의 크기를 고려해서 할당\n  - 분할의 크기, 개수가 동적으로 변함\n  - 기술적 관리 기법 필요\n  - external fragmenation 발생\n\n## Hole\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm06.png)\n\n- 가용 메모리 공간\n\n- 가변분할 방식에서 생김\n- 다양한 크기의 hole들이 메모리 여러 곳에 흩어져 있음\n- 프로세스가 도착하면 수용 가능한 hole을 할당\n- 운영체제는 다음의 정보를 유지\n  - 할당공간(프로그램이 사용하고 있는)\n  - 가용공간(hole)\n\n- Dynamic Storage-Allocation Problem\n  - 가변 분할 방식에서 size n인 요청을 만족하는 가장 적절한 hole을 찾는 문제\n  - First-fit \n    - Size가 n이상인 것 중 최초로 찾아지는 Hole에 할당\n  - Best-fit\n    - Size가 n이상인 가장 작은 hole을 찾아서 할당\n    - hole들의 리스트가 크기 순으로 정렬되지 않은 경우 모든 hole의 리스트를 탐색해야함\n    - 많은 수의 아주 작은 hole들이 생성됨\n  - Worst-fit\n    - 가장 큰 hole에 할당\n    - 역시 모든 리스트를 탐색해야함\n    - 상대적으로 아주 큰 hole들이 생성됨\n- Compaction\n  - external fragmentation 문제를 해결하는 방법\n  - 사용 중인 메모리 영역을 한구데로 몰고 hole들을 다 한곳으로 몰아 큰 block을 만드는 것\n  - 매우 큰 비용이 드는 방법\n  - 프로세스의 주소가 실행 시간에 동적으로 재배치 가능한 경우에만 수행될 수 있음\n\n## Paging\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm07.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm08.png)\n\n- Process의 virtual memory를 동일한 사이즈의 page 단위로 나눔\n- virtual memory의 내용이 page 단위로 noncontiguous하게 저장됨\n- 일부는 backing storage에 일부는 physical memory에 저장\n- Basic method\n  - physical memory를 동일한 크기의 frame으로 나눔\n  - logical memory를 동일 크기의 page로 나눔 (frame과 같은 크기)\n  - 모든 가용 frame들을 관리\n  - page table을 사용하여 logical address를 physical address로 변환\n  - external fragmentation 발생 안함\n  - internal fragmentation 발생가능\n\n- page table\n  - 페이지들이 물리적인 메모리 어디에 올라가 있나\n  - logical memory의 page 개수 만큼 entry 가 존재\n\n- logical address\n  - p : page 번호\n  - d: 그 페이지 내에서 얼만큼 떨어져 있나\n\n## Implementation of Page Table\n\n- Page table은 main memory 에 상주\n\n- Page table base register (PTBR) 가 page table을 가리킴\n\n- Page table length register (PTLR) 가 테이블 크기를 보관\n\n- 모든 메모리 접근 연산에는 2번의 memory access 필요\n\n  - page table 접근 1번\n  - 실제 data/instruction 접근  1번\n\n- 속도 향상을 위해 associative register / translation look-aside buffter(TLB)\n\n  라 불리는 고속의 lookup hardware cache 사용\n\n## Paging Hardware with TLB\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm09.png)\n\n 주소 변환을 위한 케쉬 메모리. \n\n빈번히 참조되는 엔트리 몇개 만을 가지고 있음.\n\n전체 항목을 검색해야봐야함.  여기 어디에도 없으면 page table을 봄\n\nTLB에서 전체 항목을 다 검색해야하기 때문에, parallel search로 빠르게 함. 병력적으로 한번에 쫙 검색함.\n\n## Two-Level Page Table\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm10.png)\n\npage table이 2단계. \n\n속도는 더 걸림. page table을 위한 공간은 줄어듦. \n\n주소공간에서 실제로 사용되지 않는 페이지에 대해서는 안쪽 테이블이 안만들어져.\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm11.png)\n\n- p1 \n  - 10bit\n  - outer page table의 index\n- p2\n  - 10bit\n  - outer page table의 page에서의 변위(displacement)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm12.png)\n\n## Multilevel Paging and Performance\n\nAddress space가 더 커지면 다단게 페이지 테이블이 필요.\n\n각 단계의 페이지 테이블이 메모리에 존재하므로 logical address의 physical address 변환에 더 많은 메모리 접근 필요.\n\nTLB를 통해 메모리 접근 시간을 줄일 수 있음.\n\n## Valid / Invalid Bit in a Page Table\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm13.png)\n\n- protection bit\n  - page에 대한 접근 권한 (read /write / read-only)\n- valid\n  - 해당 주소의 frame에 그 프로세스를 구성하는 유요한 내용이 있음\n- invalid\n  - 프로세스가 그 주소 부분을 사용하지 않는 경우 \n  - 해당 페이지가 메모리에 올라와 있지 않고 swap area에 있는 경우\n\n## Inverted Page Table\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm14.png)\n\n- Page table이 매우 큰 이유\n\n  - 모든 process 별로 그 logical address에 대응하는 모든 page에 대해 page table entry 존재\n  - 대응하는 page가 메모리에 있든 아니든 간에 page table에는 entry로 존재\n\n- inverted page table\n\n  - Page frame 하나당 page table에 하나의 entry를 둔것\n\n  - 각 page table entry는 각각의 물리적 메모리의 page frame이 담고 있는 내용 표시\n\n    (process-id, process의 logical address)\n\n  - page frame 개수만큼 entry 존재.\n\n  - entry 전부 검색해서 pid랑 p 찾아야함. associative registe 찾아서 병렬 검색을 함\n\n  - 단점\n\n    - 테이블 전체를 탐색\n\n  - 조치\n\n    - associative register 사용 (expensive)\n\n## Shared Page\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm15.png)\n\n공유할 수 있는 코드는 같은 프레임으로 매핑 시켜서 메모리에 한 카피만 올려\n\n- Shared code\n\n  - Re-entrant Code (= Pure code)\n\n  - read-only 로 하여 프로세스 간에 하나의 code만 메모리에 올림\n\n    (eg, text editords, compilers, window systems)\n\n  - Shared code는 모든 프로세스의 logical address space에서 동일한 위치에 있어야함\n\n    - 위 그림에서, ed1, 2, 3 순으로 되어야 함\n\n- Private code and data\n\n  - 각 프로세스들은 독자적으로 메모리에 올림\n  - private data는 logical addreess space 의 아무 곳에 와도 무방\n\n## Segmentation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm16.png)\n\n프로그램은 의미 단위인 여러 개의 segment로 구성\n\n작게는  프로그램을 구성하는 함수 하나하나를 세그먼트로 정의\n\n크게는 프로그램 전체를 하나의 세그먼트로 정의 가능\n\n일반적으로 code, data, stack 부분이 하나씩 세그먼트로 정의됨\n\nSegment는 의미 단위 이기 떄문에 공유와 보안에 있어서 paging 보다 효과적\n\nSegment의 길이가 동일하지 않으므로 가변 분할 방식에서와 동일한 문제점들이 발생\n\n- Logical address는 다음의 두가지로 구성\n  - <segment-number, offset>\n- Segment table\n  - each table entry has\n    - base : starting physical address of the segment\n    - limit : length of the segment\n  - Segment-table base reigster (STLR)\n    - 물리적 메모리에서의 segment table의 위치 \n  - Segment-table length reigster (STLR)\n    - 프로그램이 사용하는 segment의 수\n\n- 체크\n  - 세그먼트 번호가 STLR 보다 작은지 체크해야함 \n  - 세그먼트의 길이보다 세그먼트안에서 떨어진 offset 값이 더 크지는 않은가\n\n## Segmentation Example \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm17.png)\n\n다섯 개의 segment. 각각의 세그먼트에 대해서 주소 변환을 위한 테이블이 있음\n\n## Sharing of Segments\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm18.png)\n\n0번 세그먼트는 같은 역할을 하는 세그먼트. 이 두 개의 세그먼트는 같은 물리주소에 올라감.\n\n1번 세그먼트는 다른 물리주소에 올라감.\n\n## Segmentation with Paging\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm19.png)\n\n세그먼트 하나가 여러개의 페이지로 구성\n\n먼저 세그먼트에 대해 주소 변환\n\nlogical address : 세그먼트 번호와 세그먼트 안에서 얼마나 떨어있는지\n\nSTBR에 세그먼트 시작 위치가들어있고, 거기서부터 위에서부터 s번째 엔트리에 가면 page table의 시작 위치가 나옴\n\n 세그먼트의 길이보다 세그먼트 안에서 떨어진 offset이 크다면 잘못된 요청\n\nd는 page 번호와 page 안에서 얼마나 떨어져 있는지 (p, d`)\n\npage table의 시작 위치로부터 page 번호 만큼 떨어진 엔트리에 가면 이 페이지에 대한 주소 변환 결과 (물리적인 메모리의 몇번째 프레임인지) 나와\n\n- pure segmentation 과 차이점\n  - segment-table entry가 segment의 base address를 가지고있는 것이 아니라, segment를 구서하는 page table의 base address를 가지고 있음\n\n## 주소 변환을 위한 OS의 역할\n\n어떤 프로세스가 CPU를 가지고 메모리 접근을 하는데, \n\n주소 변환을 할 때 마다 운영체제가 중간에 개입하면 CPU가 이 프로세스로부터 운영체제에게 넘어가야돼.\n\n주소 변환 다 했으니까 다시 CPU가 이 프로세스에게 넘어온다? 말이 안돼. \n\n주소 변환은 무조건 하드웨어적으로 일어남. IO 장치에 접근하려면 OS가 끼어들어야돼.","slug":"2018-10-09-Memory Management","published":1,"updated":"2018-10-10T09:26:37.197Z","comments":1,"photos":[],"link":"","_id":"cjp6k664t00k831x7jezncggj","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"Logical-vs-Physical-Address\"><a href=\"#Logical-vs-Physical-Address\" class=\"headerlink\" title=\"Logical vs Physical Address\"></a>Logical vs Physical Address</h2><ul>\n<li><p>Logical address (=virtual address)</p>\n<ul>\n<li>프로세스마다 독립적으로 가지는 주소 공간</li>\n<li>각 프로세스마다 0번지 부터 시작</li>\n<li>CPU가 보는 주소는 logical address임 </li>\n</ul>\n</li>\n<li><p>physical address </p>\n<ul>\n<li>메모리에 실제 올라가는 위치 </li>\n</ul>\n</li>\n<li><p>주소바인딩 : 주소를 결정하는 것</p>\n<ul>\n<li>Symbolic address -&gt;Logical Address -&gt; Physical address</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Address-Binding\"><a href=\"#Address-Binding\" class=\"headerlink\" title=\"Address Binding\"></a>Address Binding</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm01.png\" alt=\"img\"></p>\n<p>컴파일 타임 바인딩이나 로드 타임 바인딩 모두 실행될때 물리주소가 결정되지만, </p>\n<p>런타임 바인딩은 실행 이후에도 물리 주소가 바뀔 수 있다.</p>\n<p>소스코드 : A위치에 있는 값과 B위치에 값을 더해서 A에 저장해라. C위치로 점프해라</p>\n<ul>\n<li>Compile time binding<ul>\n<li>물리적 메모리 주소가 컴파일 시 알려짐</li>\n<li>시작 위치 변경시 재컴파일</li>\n<li>컴파일러는 절대코드(absolute code) 생성</li>\n</ul>\n</li>\n<li>Load time binding<ul>\n<li>Loader의 책임 하에 물리적 주소 부여</li>\n<li>컴파일러가 재배치가능코드를 생성하는 경우 가능</li>\n</ul>\n</li>\n<li>Execution time binding(run time binding)<ul>\n<li>수행이 시작된 이후에도 프로세스의 메모리 상 위치를 옮길 수 있음</li>\n<li>CPU가 주소를 참조할 때마다 binding을 점검</li>\n<li>하드웨어적인 자원이 필요 (base and limit registers, MMU)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Memory-Management-Unit-MMU\"><a href=\"#Memory-Management-Unit-MMU\" class=\"headerlink\" title=\"Memory-Management Unit (MMU)\"></a>Memory-Management Unit (MMU)</h2><p>logical address를 physical address로 매핑해 주는 hardware device</p>\n<ul>\n<li>MMU scheme<ul>\n<li>사용자 프로세스가 CPU에서 수행되며 생성해내는 모든 주소값에 대해 base regiseter(relocation register)의 값을 더한다.</li>\n</ul>\n</li>\n<li>user program<ul>\n<li>logical address만을 다룬다</li>\n<li>실제 physical address를 볼수 없으며 알 필요가 없다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Dynamic-Relocation\"><a href=\"#Dynamic-Relocation\" class=\"headerlink\" title=\"Dynamic Relocation\"></a>Dynamic Relocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm02.png\" alt=\"img\"></p>\n<p>CPU가 프로세스 p1의 346번지를 요청한 상태.</p>\n<p>프로세스1은 물리주소 14000번지에 올라가있음.</p>\n<p>논리주소에 시작위치(relocation register)를 더해서 14346 구함.</p>\n<p>한가지 더 체크하는 것은?</p>\n<p>프로세스 p1의 크기를 limit register가 가지고 있어.</p>\n<p>CPU가 남의 프로그램의 메모리를 보려고 하는 시도를 막을 수 있음.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm03.png\" alt=\"img\"></p>\n<p>limit register : CPU가 요청하는 논리주소가 프로그램 크기보다 큰  논리 주소를 요청한 것은 아닌지 먼저 체크 </p>\n<h2 id=\"Dynamic-Loading\"><a href=\"#Dynamic-Loading\" class=\"headerlink\" title=\"Dynamic Loading\"></a>Dynamic Loading</h2><p>프로세스 전체를 메모리에 미리 다 올리는 것이 아니라 해당 루틴이 불려질 때 메모리에 load 하는 것</p>\n<ul>\n<li>memory utilization 향상</li>\n<li>가끔씩 사용되는 많은 양의 코드의 경우 유용 (ex) 오류 처리 루틴</li>\n<li>운영체제의 특별한 지원 없이 프로그램 자체에서 구현 가능 (OS는 라이브러리를 통해 지원 가능)</li>\n<li>Loading : 메모리로 올리는 것</li>\n</ul>\n<h2 id=\"Overlays\"><a href=\"#Overlays\" class=\"headerlink\" title=\"Overlays\"></a>Overlays</h2><p>메모리에 프로세스 부분 중 실제 필요한 정보많을 올림</p>\n<p>프로세스의 크기가 메모리보다 클 때 유용</p>\n<p>운영체제의 지원없이 사용자에 의해 구현</p>\n<p>작은 공간의 메모리를 사용하던 초창기 시스템에서 수작으로 프로그래머가 구현</p>\n<p>Manual Overlay</p>\n<p>프로그램이 매우 복잡</p>\n<h2 id=\"Swapping\"><a href=\"#Swapping\" class=\"headerlink\" title=\"Swapping\"></a>Swapping</h2><p>프로세스를 일시적으로 메모리에서 backing store로 쫓아내는것</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm04.png\" alt=\"img\"></p>\n<ul>\n<li>backing store (swap area)<ul>\n<li>디스크</li>\n<li>많은 사용자의 프로세스 이미지를 담을 만큼 충분히 빠르고 큰 저장 공간</li>\n</ul>\n</li>\n<li>Swap in / Swap out<ul>\n<li>일반적으로 중기 스케쥴러에 의해 swap out 시킬 프로세스 선정</li>\n<li>CPU 우선순위가 낮은 프로세스를 swapped out 시킴</li>\n<li>Compile time 혹은 Load time binding 에서는 원래 메모리 위치로 swap in 해야함</li>\n<li>Execution time binding 에서는 추후 빈 메모리 영역 아무 곳에서나 올릴 수 있음 </li>\n<li>swap time은 대부분 transfer time (swap 되는 양에 비례하는 시간) 임</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Dynamic-Linking\"><a href=\"#Dynamic-Linking\" class=\"headerlink\" title=\"Dynamic Linking\"></a>Dynamic Linking</h2><p>Linking : 여러 군데 존재하던 컴파일된 파일들을 묶어서 실행 파일 만드는 것</p>\n<ul>\n<li>static linking <ul>\n<li>라이브러리가 프로그램의 실행 파일 코드에 포함됨</li>\n<li>실행 파일의 크기가 커짐</li>\n<li>동일한 라이브러리를 각각의 프로세스가 메모리에 올리므로 메모리 낭비 (ex. printf 함수의 라이브러리 코드)</li>\n</ul>\n</li>\n<li>dynamic linking<ul>\n<li>라이브러리가 실행시 연결됨</li>\n<li>라이브러리 호출 부분에 라이브러리 루틴의 위치를 찾기 위한 stub이라는 작은 코드를 줌 (라이브러리 위치 찾을 수 있는)</li>\n<li>라이브러리가 이미 메모리에 있으면 그 루틴의 주소로 가고 없으면 디스크에서 읽어옴</li>\n<li>운영체제의 도움이 필요</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Allocation-of-Physical-Memory\"><a href=\"#Allocation-of-Physical-Memory\" class=\"headerlink\" title=\"Allocation of Physical Memory\"></a>Allocation of Physical Memory</h2><ul>\n<li>메모리는 일반적으로 두 영역으로 나뉘어 사용<ul>\n<li>OS 상주 영역 <ul>\n<li>interrupt vector와 함께 낮은 주소 영역 사용</li>\n</ul>\n</li>\n<li>사용자 프로세스 영역<ul>\n<li>높은 주소 영역</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>사용자 프로세스 영역의 할당 방법<ul>\n<li>Contiguous allocation<ul>\n<li>각각의 프로세스가 메모리의 연속적인 공간에 적재되록 하는 것</li>\n<li>고정분할방식 / 가변분할방식</li>\n</ul>\n</li>\n<li>Noncontiguous allocation<ul>\n<li>하나의 프로세스가 메모리 영역에 분산되어 올라 갈수 있음</li>\n<li>Paging / Segmentaion / Paged Segmentation</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Contiguous-Allocation\"><a href=\"#Contiguous-Allocation\" class=\"headerlink\" title=\"Contiguous Allocation\"></a>Contiguous Allocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm05.png\" alt=\"img\"></p>\n<ul>\n<li>고정 분할 방식<ul>\n<li>물리적 메모리를 몇 개의 영구적 분할(partition) 로 나눔</li>\n<li>분할의 크기가 모두 동일한 방힉과 서로  다른 방식이 존재</li>\n<li>분할당 하나의 프로그램 적재</li>\n<li>융통성 없음<ul>\n<li>동시에 메모리에 load되는 프로그램의 수가 고정됨</li>\n<li>최대 수행 가능 프로그램 크기 제한</li>\n</ul>\n</li>\n<li>internal fragmentation, external fragmentation 발생</li>\n</ul>\n</li>\n<li>가변 분할 방식<ul>\n<li>프로그램이 실핼될때마다 차곡차곡 메모리에 올려</li>\n<li>프로그램의 크기를 고려해서 할당</li>\n<li>분할의 크기, 개수가 동적으로 변함</li>\n<li>기술적 관리 기법 필요</li>\n<li>external fragmenation 발생</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Hole\"><a href=\"#Hole\" class=\"headerlink\" title=\"Hole\"></a>Hole</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm06.png\" alt=\"img\"></p>\n<ul>\n<li><p>가용 메모리 공간</p>\n</li>\n<li><p>가변분할 방식에서 생김</p>\n</li>\n<li>다양한 크기의 hole들이 메모리 여러 곳에 흩어져 있음</li>\n<li>프로세스가 도착하면 수용 가능한 hole을 할당</li>\n<li><p>운영체제는 다음의 정보를 유지</p>\n<ul>\n<li>할당공간(프로그램이 사용하고 있는)</li>\n<li>가용공간(hole)</li>\n</ul>\n</li>\n<li><p>Dynamic Storage-Allocation Problem</p>\n<ul>\n<li>가변 분할 방식에서 size n인 요청을 만족하는 가장 적절한 hole을 찾는 문제</li>\n<li>First-fit <ul>\n<li>Size가 n이상인 것 중 최초로 찾아지는 Hole에 할당</li>\n</ul>\n</li>\n<li>Best-fit<ul>\n<li>Size가 n이상인 가장 작은 hole을 찾아서 할당</li>\n<li>hole들의 리스트가 크기 순으로 정렬되지 않은 경우 모든 hole의 리스트를 탐색해야함</li>\n<li>많은 수의 아주 작은 hole들이 생성됨</li>\n</ul>\n</li>\n<li>Worst-fit<ul>\n<li>가장 큰 hole에 할당</li>\n<li>역시 모든 리스트를 탐색해야함</li>\n<li>상대적으로 아주 큰 hole들이 생성됨</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Compaction<ul>\n<li>external fragmentation 문제를 해결하는 방법</li>\n<li>사용 중인 메모리 영역을 한구데로 몰고 hole들을 다 한곳으로 몰아 큰 block을 만드는 것</li>\n<li>매우 큰 비용이 드는 방법</li>\n<li>프로세스의 주소가 실행 시간에 동적으로 재배치 가능한 경우에만 수행될 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Paging\"><a href=\"#Paging\" class=\"headerlink\" title=\"Paging\"></a>Paging</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm08.png\" alt=\"img\"></p>\n<ul>\n<li>Process의 virtual memory를 동일한 사이즈의 page 단위로 나눔</li>\n<li>virtual memory의 내용이 page 단위로 noncontiguous하게 저장됨</li>\n<li>일부는 backing storage에 일부는 physical memory에 저장</li>\n<li><p>Basic method</p>\n<ul>\n<li>physical memory를 동일한 크기의 frame으로 나눔</li>\n<li>logical memory를 동일 크기의 page로 나눔 (frame과 같은 크기)</li>\n<li>모든 가용 frame들을 관리</li>\n<li>page table을 사용하여 logical address를 physical address로 변환</li>\n<li>external fragmentation 발생 안함</li>\n<li>internal fragmentation 발생가능</li>\n</ul>\n</li>\n<li><p>page table</p>\n<ul>\n<li>페이지들이 물리적인 메모리 어디에 올라가 있나</li>\n<li>logical memory의 page 개수 만큼 entry 가 존재</li>\n</ul>\n</li>\n<li><p>logical address</p>\n<ul>\n<li>p : page 번호</li>\n<li>d: 그 페이지 내에서 얼만큼 떨어져 있나</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Implementation-of-Page-Table\"><a href=\"#Implementation-of-Page-Table\" class=\"headerlink\" title=\"Implementation of Page Table\"></a>Implementation of Page Table</h2><ul>\n<li><p>Page table은 main memory 에 상주</p>\n</li>\n<li><p>Page table base register (PTBR) 가 page table을 가리킴</p>\n</li>\n<li><p>Page table length register (PTLR) 가 테이블 크기를 보관</p>\n</li>\n<li><p>모든 메모리 접근 연산에는 2번의 memory access 필요</p>\n<ul>\n<li>page table 접근 1번</li>\n<li>실제 data/instruction 접근  1번</li>\n</ul>\n</li>\n<li><p>속도 향상을 위해 associative register / translation look-aside buffter(TLB)</p>\n<p>라 불리는 고속의 lookup hardware cache 사용</p>\n</li>\n</ul>\n<h2 id=\"Paging-Hardware-with-TLB\"><a href=\"#Paging-Hardware-with-TLB\" class=\"headerlink\" title=\"Paging Hardware with TLB\"></a>Paging Hardware with TLB</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm09.png\" alt=\"img\"></p>\n<p> 주소 변환을 위한 케쉬 메모리. </p>\n<p>빈번히 참조되는 엔트리 몇개 만을 가지고 있음.</p>\n<p>전체 항목을 검색해야봐야함.  여기 어디에도 없으면 page table을 봄</p>\n<p>TLB에서 전체 항목을 다 검색해야하기 때문에, parallel search로 빠르게 함. 병력적으로 한번에 쫙 검색함.</p>\n<h2 id=\"Two-Level-Page-Table\"><a href=\"#Two-Level-Page-Table\" class=\"headerlink\" title=\"Two-Level Page Table\"></a>Two-Level Page Table</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm10.png\" alt=\"img\"></p>\n<p>page table이 2단계. </p>\n<p>속도는 더 걸림. page table을 위한 공간은 줄어듦. </p>\n<p>주소공간에서 실제로 사용되지 않는 페이지에 대해서는 안쪽 테이블이 안만들어져.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm11.png\" alt=\"img\"></p>\n<ul>\n<li>p1 <ul>\n<li>10bit</li>\n<li>outer page table의 index</li>\n</ul>\n</li>\n<li>p2<ul>\n<li>10bit</li>\n<li>outer page table의 page에서의 변위(displacement)</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm12.png\" alt=\"img\"></p>\n<h2 id=\"Multilevel-Paging-and-Performance\"><a href=\"#Multilevel-Paging-and-Performance\" class=\"headerlink\" title=\"Multilevel Paging and Performance\"></a>Multilevel Paging and Performance</h2><p>Address space가 더 커지면 다단게 페이지 테이블이 필요.</p>\n<p>각 단계의 페이지 테이블이 메모리에 존재하므로 logical address의 physical address 변환에 더 많은 메모리 접근 필요.</p>\n<p>TLB를 통해 메모리 접근 시간을 줄일 수 있음.</p>\n<h2 id=\"Valid-Invalid-Bit-in-a-Page-Table\"><a href=\"#Valid-Invalid-Bit-in-a-Page-Table\" class=\"headerlink\" title=\"Valid / Invalid Bit in a Page Table\"></a>Valid / Invalid Bit in a Page Table</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm13.png\" alt=\"img\"></p>\n<ul>\n<li>protection bit<ul>\n<li>page에 대한 접근 권한 (read /write / read-only)</li>\n</ul>\n</li>\n<li>valid<ul>\n<li>해당 주소의 frame에 그 프로세스를 구성하는 유요한 내용이 있음</li>\n</ul>\n</li>\n<li>invalid<ul>\n<li>프로세스가 그 주소 부분을 사용하지 않는 경우 </li>\n<li>해당 페이지가 메모리에 올라와 있지 않고 swap area에 있는 경우</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Inverted-Page-Table\"><a href=\"#Inverted-Page-Table\" class=\"headerlink\" title=\"Inverted Page Table\"></a>Inverted Page Table</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm14.png\" alt=\"img\"></p>\n<ul>\n<li><p>Page table이 매우 큰 이유</p>\n<ul>\n<li>모든 process 별로 그 logical address에 대응하는 모든 page에 대해 page table entry 존재</li>\n<li>대응하는 page가 메모리에 있든 아니든 간에 page table에는 entry로 존재</li>\n</ul>\n</li>\n<li><p>inverted page table</p>\n<ul>\n<li><p>Page frame 하나당 page table에 하나의 entry를 둔것</p>\n</li>\n<li><p>각 page table entry는 각각의 물리적 메모리의 page frame이 담고 있는 내용 표시</p>\n<p>(process-id, process의 logical address)</p>\n</li>\n<li><p>page frame 개수만큼 entry 존재.</p>\n</li>\n<li><p>entry 전부 검색해서 pid랑 p 찾아야함. associative registe 찾아서 병렬 검색을 함</p>\n</li>\n<li><p>단점</p>\n<ul>\n<li>테이블 전체를 탐색</li>\n</ul>\n</li>\n<li><p>조치</p>\n<ul>\n<li>associative register 사용 (expensive)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Shared-Page\"><a href=\"#Shared-Page\" class=\"headerlink\" title=\"Shared Page\"></a>Shared Page</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm15.png\" alt=\"img\"></p>\n<p>공유할 수 있는 코드는 같은 프레임으로 매핑 시켜서 메모리에 한 카피만 올려</p>\n<ul>\n<li><p>Shared code</p>\n<ul>\n<li><p>Re-entrant Code (= Pure code)</p>\n</li>\n<li><p>read-only 로 하여 프로세스 간에 하나의 code만 메모리에 올림</p>\n<p>(eg, text editords, compilers, window systems)</p>\n</li>\n<li><p>Shared code는 모든 프로세스의 logical address space에서 동일한 위치에 있어야함</p>\n<ul>\n<li>위 그림에서, ed1, 2, 3 순으로 되어야 함</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Private code and data</p>\n<ul>\n<li>각 프로세스들은 독자적으로 메모리에 올림</li>\n<li>private data는 logical addreess space 의 아무 곳에 와도 무방</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Segmentation\"><a href=\"#Segmentation\" class=\"headerlink\" title=\"Segmentation\"></a>Segmentation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm16.png\" alt=\"img\"></p>\n<p>프로그램은 의미 단위인 여러 개의 segment로 구성</p>\n<p>작게는  프로그램을 구성하는 함수 하나하나를 세그먼트로 정의</p>\n<p>크게는 프로그램 전체를 하나의 세그먼트로 정의 가능</p>\n<p>일반적으로 code, data, stack 부분이 하나씩 세그먼트로 정의됨</p>\n<p>Segment는 의미 단위 이기 떄문에 공유와 보안에 있어서 paging 보다 효과적</p>\n<p>Segment의 길이가 동일하지 않으므로 가변 분할 방식에서와 동일한 문제점들이 발생</p>\n<ul>\n<li>Logical address는 다음의 두가지로 구성<ul>\n<li>&lt;segment-number, offset&gt;</li>\n</ul>\n</li>\n<li><p>Segment table</p>\n<ul>\n<li>each table entry has<ul>\n<li>base : starting physical address of the segment</li>\n<li>limit : length of the segment</li>\n</ul>\n</li>\n<li>Segment-table base reigster (STLR)<ul>\n<li>물리적 메모리에서의 segment table의 위치 </li>\n</ul>\n</li>\n<li>Segment-table length reigster (STLR)<ul>\n<li>프로그램이 사용하는 segment의 수</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>체크</p>\n<ul>\n<li>세그먼트 번호가 STLR 보다 작은지 체크해야함 </li>\n<li>세그먼트의 길이보다 세그먼트안에서 떨어진 offset 값이 더 크지는 않은가</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Segmentation-Example\"><a href=\"#Segmentation-Example\" class=\"headerlink\" title=\"Segmentation Example\"></a>Segmentation Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm17.png\" alt=\"img\"></p>\n<p>다섯 개의 segment. 각각의 세그먼트에 대해서 주소 변환을 위한 테이블이 있음</p>\n<h2 id=\"Sharing-of-Segments\"><a href=\"#Sharing-of-Segments\" class=\"headerlink\" title=\"Sharing of Segments\"></a>Sharing of Segments</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm18.png\" alt=\"img\"></p>\n<p>0번 세그먼트는 같은 역할을 하는 세그먼트. 이 두 개의 세그먼트는 같은 물리주소에 올라감.</p>\n<p>1번 세그먼트는 다른 물리주소에 올라감.</p>\n<h2 id=\"Segmentation-with-Paging\"><a href=\"#Segmentation-with-Paging\" class=\"headerlink\" title=\"Segmentation with Paging\"></a>Segmentation with Paging</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm19.png\" alt=\"img\"></p>\n<p>세그먼트 하나가 여러개의 페이지로 구성</p>\n<p>먼저 세그먼트에 대해 주소 변환</p>\n<p>logical address : 세그먼트 번호와 세그먼트 안에서 얼마나 떨어있는지</p>\n<p>STBR에 세그먼트 시작 위치가들어있고, 거기서부터 위에서부터 s번째 엔트리에 가면 page table의 시작 위치가 나옴</p>\n<p> 세그먼트의 길이보다 세그먼트 안에서 떨어진 offset이 크다면 잘못된 요청</p>\n<p>d는 page 번호와 page 안에서 얼마나 떨어져 있는지 (p, d`)</p>\n<p>page table의 시작 위치로부터 page 번호 만큼 떨어진 엔트리에 가면 이 페이지에 대한 주소 변환 결과 (물리적인 메모리의 몇번째 프레임인지) 나와</p>\n<ul>\n<li>pure segmentation 과 차이점<ul>\n<li>segment-table entry가 segment의 base address를 가지고있는 것이 아니라, segment를 구서하는 page table의 base address를 가지고 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"주소-변환을-위한-OS의-역할\"><a href=\"#주소-변환을-위한-OS의-역할\" class=\"headerlink\" title=\"주소 변환을 위한 OS의 역할\"></a>주소 변환을 위한 OS의 역할</h2><p>어떤 프로세스가 CPU를 가지고 메모리 접근을 하는데, </p>\n<p>주소 변환을 할 때 마다 운영체제가 중간에 개입하면 CPU가 이 프로세스로부터 운영체제에게 넘어가야돼.</p>\n<p>주소 변환 다 했으니까 다시 CPU가 이 프로세스에게 넘어온다? 말이 안돼. </p>\n<p>주소 변환은 무조건 하드웨어적으로 일어남. IO 장치에 접근하려면 OS가 끼어들어야돼.</p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"Logical-vs-Physical-Address\"><a href=\"#Logical-vs-Physical-Address\" class=\"headerlink\" title=\"Logical vs Physical Address\"></a>Logical vs Physical Address</h2><ul>\n<li><p>Logical address (=virtual address)</p>\n<ul>\n<li>프로세스마다 독립적으로 가지는 주소 공간</li>\n<li>각 프로세스마다 0번지 부터 시작</li>\n<li>CPU가 보는 주소는 logical address임 </li>\n</ul>\n</li>\n<li><p>physical address </p>\n<ul>\n<li>메모리에 실제 올라가는 위치 </li>\n</ul>\n</li>\n<li><p>주소바인딩 : 주소를 결정하는 것</p>\n<ul>\n<li>Symbolic address -&gt;Logical Address -&gt; Physical address</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Address-Binding\"><a href=\"#Address-Binding\" class=\"headerlink\" title=\"Address Binding\"></a>Address Binding</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm01.png\" alt=\"img\"></p>\n<p>컴파일 타임 바인딩이나 로드 타임 바인딩 모두 실행될때 물리주소가 결정되지만, </p>\n<p>런타임 바인딩은 실행 이후에도 물리 주소가 바뀔 수 있다.</p>\n<p>소스코드 : A위치에 있는 값과 B위치에 값을 더해서 A에 저장해라. C위치로 점프해라</p>\n<ul>\n<li>Compile time binding<ul>\n<li>물리적 메모리 주소가 컴파일 시 알려짐</li>\n<li>시작 위치 변경시 재컴파일</li>\n<li>컴파일러는 절대코드(absolute code) 생성</li>\n</ul>\n</li>\n<li>Load time binding<ul>\n<li>Loader의 책임 하에 물리적 주소 부여</li>\n<li>컴파일러가 재배치가능코드를 생성하는 경우 가능</li>\n</ul>\n</li>\n<li>Execution time binding(run time binding)<ul>\n<li>수행이 시작된 이후에도 프로세스의 메모리 상 위치를 옮길 수 있음</li>\n<li>CPU가 주소를 참조할 때마다 binding을 점검</li>\n<li>하드웨어적인 자원이 필요 (base and limit registers, MMU)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Memory-Management-Unit-MMU\"><a href=\"#Memory-Management-Unit-MMU\" class=\"headerlink\" title=\"Memory-Management Unit (MMU)\"></a>Memory-Management Unit (MMU)</h2><p>logical address를 physical address로 매핑해 주는 hardware device</p>\n<ul>\n<li>MMU scheme<ul>\n<li>사용자 프로세스가 CPU에서 수행되며 생성해내는 모든 주소값에 대해 base regiseter(relocation register)의 값을 더한다.</li>\n</ul>\n</li>\n<li>user program<ul>\n<li>logical address만을 다룬다</li>\n<li>실제 physical address를 볼수 없으며 알 필요가 없다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Dynamic-Relocation\"><a href=\"#Dynamic-Relocation\" class=\"headerlink\" title=\"Dynamic Relocation\"></a>Dynamic Relocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm02.png\" alt=\"img\"></p>\n<p>CPU가 프로세스 p1의 346번지를 요청한 상태.</p>\n<p>프로세스1은 물리주소 14000번지에 올라가있음.</p>\n<p>논리주소에 시작위치(relocation register)를 더해서 14346 구함.</p>\n<p>한가지 더 체크하는 것은?</p>\n<p>프로세스 p1의 크기를 limit register가 가지고 있어.</p>\n<p>CPU가 남의 프로그램의 메모리를 보려고 하는 시도를 막을 수 있음.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm03.png\" alt=\"img\"></p>\n<p>limit register : CPU가 요청하는 논리주소가 프로그램 크기보다 큰  논리 주소를 요청한 것은 아닌지 먼저 체크 </p>\n<h2 id=\"Dynamic-Loading\"><a href=\"#Dynamic-Loading\" class=\"headerlink\" title=\"Dynamic Loading\"></a>Dynamic Loading</h2><p>프로세스 전체를 메모리에 미리 다 올리는 것이 아니라 해당 루틴이 불려질 때 메모리에 load 하는 것</p>\n<ul>\n<li>memory utilization 향상</li>\n<li>가끔씩 사용되는 많은 양의 코드의 경우 유용 (ex) 오류 처리 루틴</li>\n<li>운영체제의 특별한 지원 없이 프로그램 자체에서 구현 가능 (OS는 라이브러리를 통해 지원 가능)</li>\n<li>Loading : 메모리로 올리는 것</li>\n</ul>\n<h2 id=\"Overlays\"><a href=\"#Overlays\" class=\"headerlink\" title=\"Overlays\"></a>Overlays</h2><p>메모리에 프로세스 부분 중 실제 필요한 정보많을 올림</p>\n<p>프로세스의 크기가 메모리보다 클 때 유용</p>\n<p>운영체제의 지원없이 사용자에 의해 구현</p>\n<p>작은 공간의 메모리를 사용하던 초창기 시스템에서 수작으로 프로그래머가 구현</p>\n<p>Manual Overlay</p>\n<p>프로그램이 매우 복잡</p>\n<h2 id=\"Swapping\"><a href=\"#Swapping\" class=\"headerlink\" title=\"Swapping\"></a>Swapping</h2><p>프로세스를 일시적으로 메모리에서 backing store로 쫓아내는것</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm04.png\" alt=\"img\"></p>\n<ul>\n<li>backing store (swap area)<ul>\n<li>디스크</li>\n<li>많은 사용자의 프로세스 이미지를 담을 만큼 충분히 빠르고 큰 저장 공간</li>\n</ul>\n</li>\n<li>Swap in / Swap out<ul>\n<li>일반적으로 중기 스케쥴러에 의해 swap out 시킬 프로세스 선정</li>\n<li>CPU 우선순위가 낮은 프로세스를 swapped out 시킴</li>\n<li>Compile time 혹은 Load time binding 에서는 원래 메모리 위치로 swap in 해야함</li>\n<li>Execution time binding 에서는 추후 빈 메모리 영역 아무 곳에서나 올릴 수 있음 </li>\n<li>swap time은 대부분 transfer time (swap 되는 양에 비례하는 시간) 임</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Dynamic-Linking\"><a href=\"#Dynamic-Linking\" class=\"headerlink\" title=\"Dynamic Linking\"></a>Dynamic Linking</h2><p>Linking : 여러 군데 존재하던 컴파일된 파일들을 묶어서 실행 파일 만드는 것</p>\n<ul>\n<li>static linking <ul>\n<li>라이브러리가 프로그램의 실행 파일 코드에 포함됨</li>\n<li>실행 파일의 크기가 커짐</li>\n<li>동일한 라이브러리를 각각의 프로세스가 메모리에 올리므로 메모리 낭비 (ex. printf 함수의 라이브러리 코드)</li>\n</ul>\n</li>\n<li>dynamic linking<ul>\n<li>라이브러리가 실행시 연결됨</li>\n<li>라이브러리 호출 부분에 라이브러리 루틴의 위치를 찾기 위한 stub이라는 작은 코드를 줌 (라이브러리 위치 찾을 수 있는)</li>\n<li>라이브러리가 이미 메모리에 있으면 그 루틴의 주소로 가고 없으면 디스크에서 읽어옴</li>\n<li>운영체제의 도움이 필요</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Allocation-of-Physical-Memory\"><a href=\"#Allocation-of-Physical-Memory\" class=\"headerlink\" title=\"Allocation of Physical Memory\"></a>Allocation of Physical Memory</h2><ul>\n<li>메모리는 일반적으로 두 영역으로 나뉘어 사용<ul>\n<li>OS 상주 영역 <ul>\n<li>interrupt vector와 함께 낮은 주소 영역 사용</li>\n</ul>\n</li>\n<li>사용자 프로세스 영역<ul>\n<li>높은 주소 영역</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>사용자 프로세스 영역의 할당 방법<ul>\n<li>Contiguous allocation<ul>\n<li>각각의 프로세스가 메모리의 연속적인 공간에 적재되록 하는 것</li>\n<li>고정분할방식 / 가변분할방식</li>\n</ul>\n</li>\n<li>Noncontiguous allocation<ul>\n<li>하나의 프로세스가 메모리 영역에 분산되어 올라 갈수 있음</li>\n<li>Paging / Segmentaion / Paged Segmentation</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Contiguous-Allocation\"><a href=\"#Contiguous-Allocation\" class=\"headerlink\" title=\"Contiguous Allocation\"></a>Contiguous Allocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm05.png\" alt=\"img\"></p>\n<ul>\n<li>고정 분할 방식<ul>\n<li>물리적 메모리를 몇 개의 영구적 분할(partition) 로 나눔</li>\n<li>분할의 크기가 모두 동일한 방힉과 서로  다른 방식이 존재</li>\n<li>분할당 하나의 프로그램 적재</li>\n<li>융통성 없음<ul>\n<li>동시에 메모리에 load되는 프로그램의 수가 고정됨</li>\n<li>최대 수행 가능 프로그램 크기 제한</li>\n</ul>\n</li>\n<li>internal fragmentation, external fragmentation 발생</li>\n</ul>\n</li>\n<li>가변 분할 방식<ul>\n<li>프로그램이 실핼될때마다 차곡차곡 메모리에 올려</li>\n<li>프로그램의 크기를 고려해서 할당</li>\n<li>분할의 크기, 개수가 동적으로 변함</li>\n<li>기술적 관리 기법 필요</li>\n<li>external fragmenation 발생</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Hole\"><a href=\"#Hole\" class=\"headerlink\" title=\"Hole\"></a>Hole</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm06.png\" alt=\"img\"></p>\n<ul>\n<li><p>가용 메모리 공간</p>\n</li>\n<li><p>가변분할 방식에서 생김</p>\n</li>\n<li>다양한 크기의 hole들이 메모리 여러 곳에 흩어져 있음</li>\n<li>프로세스가 도착하면 수용 가능한 hole을 할당</li>\n<li><p>운영체제는 다음의 정보를 유지</p>\n<ul>\n<li>할당공간(프로그램이 사용하고 있는)</li>\n<li>가용공간(hole)</li>\n</ul>\n</li>\n<li><p>Dynamic Storage-Allocation Problem</p>\n<ul>\n<li>가변 분할 방식에서 size n인 요청을 만족하는 가장 적절한 hole을 찾는 문제</li>\n<li>First-fit <ul>\n<li>Size가 n이상인 것 중 최초로 찾아지는 Hole에 할당</li>\n</ul>\n</li>\n<li>Best-fit<ul>\n<li>Size가 n이상인 가장 작은 hole을 찾아서 할당</li>\n<li>hole들의 리스트가 크기 순으로 정렬되지 않은 경우 모든 hole의 리스트를 탐색해야함</li>\n<li>많은 수의 아주 작은 hole들이 생성됨</li>\n</ul>\n</li>\n<li>Worst-fit<ul>\n<li>가장 큰 hole에 할당</li>\n<li>역시 모든 리스트를 탐색해야함</li>\n<li>상대적으로 아주 큰 hole들이 생성됨</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Compaction<ul>\n<li>external fragmentation 문제를 해결하는 방법</li>\n<li>사용 중인 메모리 영역을 한구데로 몰고 hole들을 다 한곳으로 몰아 큰 block을 만드는 것</li>\n<li>매우 큰 비용이 드는 방법</li>\n<li>프로세스의 주소가 실행 시간에 동적으로 재배치 가능한 경우에만 수행될 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Paging\"><a href=\"#Paging\" class=\"headerlink\" title=\"Paging\"></a>Paging</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm07.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm08.png\" alt=\"img\"></p>\n<ul>\n<li>Process의 virtual memory를 동일한 사이즈의 page 단위로 나눔</li>\n<li>virtual memory의 내용이 page 단위로 noncontiguous하게 저장됨</li>\n<li>일부는 backing storage에 일부는 physical memory에 저장</li>\n<li><p>Basic method</p>\n<ul>\n<li>physical memory를 동일한 크기의 frame으로 나눔</li>\n<li>logical memory를 동일 크기의 page로 나눔 (frame과 같은 크기)</li>\n<li>모든 가용 frame들을 관리</li>\n<li>page table을 사용하여 logical address를 physical address로 변환</li>\n<li>external fragmentation 발생 안함</li>\n<li>internal fragmentation 발생가능</li>\n</ul>\n</li>\n<li><p>page table</p>\n<ul>\n<li>페이지들이 물리적인 메모리 어디에 올라가 있나</li>\n<li>logical memory의 page 개수 만큼 entry 가 존재</li>\n</ul>\n</li>\n<li><p>logical address</p>\n<ul>\n<li>p : page 번호</li>\n<li>d: 그 페이지 내에서 얼만큼 떨어져 있나</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Implementation-of-Page-Table\"><a href=\"#Implementation-of-Page-Table\" class=\"headerlink\" title=\"Implementation of Page Table\"></a>Implementation of Page Table</h2><ul>\n<li><p>Page table은 main memory 에 상주</p>\n</li>\n<li><p>Page table base register (PTBR) 가 page table을 가리킴</p>\n</li>\n<li><p>Page table length register (PTLR) 가 테이블 크기를 보관</p>\n</li>\n<li><p>모든 메모리 접근 연산에는 2번의 memory access 필요</p>\n<ul>\n<li>page table 접근 1번</li>\n<li>실제 data/instruction 접근  1번</li>\n</ul>\n</li>\n<li><p>속도 향상을 위해 associative register / translation look-aside buffter(TLB)</p>\n<p>라 불리는 고속의 lookup hardware cache 사용</p>\n</li>\n</ul>\n<h2 id=\"Paging-Hardware-with-TLB\"><a href=\"#Paging-Hardware-with-TLB\" class=\"headerlink\" title=\"Paging Hardware with TLB\"></a>Paging Hardware with TLB</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm09.png\" alt=\"img\"></p>\n<p> 주소 변환을 위한 케쉬 메모리. </p>\n<p>빈번히 참조되는 엔트리 몇개 만을 가지고 있음.</p>\n<p>전체 항목을 검색해야봐야함.  여기 어디에도 없으면 page table을 봄</p>\n<p>TLB에서 전체 항목을 다 검색해야하기 때문에, parallel search로 빠르게 함. 병력적으로 한번에 쫙 검색함.</p>\n<h2 id=\"Two-Level-Page-Table\"><a href=\"#Two-Level-Page-Table\" class=\"headerlink\" title=\"Two-Level Page Table\"></a>Two-Level Page Table</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm10.png\" alt=\"img\"></p>\n<p>page table이 2단계. </p>\n<p>속도는 더 걸림. page table을 위한 공간은 줄어듦. </p>\n<p>주소공간에서 실제로 사용되지 않는 페이지에 대해서는 안쪽 테이블이 안만들어져.</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm11.png\" alt=\"img\"></p>\n<ul>\n<li>p1 <ul>\n<li>10bit</li>\n<li>outer page table의 index</li>\n</ul>\n</li>\n<li>p2<ul>\n<li>10bit</li>\n<li>outer page table의 page에서의 변위(displacement)</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm12.png\" alt=\"img\"></p>\n<h2 id=\"Multilevel-Paging-and-Performance\"><a href=\"#Multilevel-Paging-and-Performance\" class=\"headerlink\" title=\"Multilevel Paging and Performance\"></a>Multilevel Paging and Performance</h2><p>Address space가 더 커지면 다단게 페이지 테이블이 필요.</p>\n<p>각 단계의 페이지 테이블이 메모리에 존재하므로 logical address의 physical address 변환에 더 많은 메모리 접근 필요.</p>\n<p>TLB를 통해 메모리 접근 시간을 줄일 수 있음.</p>\n<h2 id=\"Valid-Invalid-Bit-in-a-Page-Table\"><a href=\"#Valid-Invalid-Bit-in-a-Page-Table\" class=\"headerlink\" title=\"Valid / Invalid Bit in a Page Table\"></a>Valid / Invalid Bit in a Page Table</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm13.png\" alt=\"img\"></p>\n<ul>\n<li>protection bit<ul>\n<li>page에 대한 접근 권한 (read /write / read-only)</li>\n</ul>\n</li>\n<li>valid<ul>\n<li>해당 주소의 frame에 그 프로세스를 구성하는 유요한 내용이 있음</li>\n</ul>\n</li>\n<li>invalid<ul>\n<li>프로세스가 그 주소 부분을 사용하지 않는 경우 </li>\n<li>해당 페이지가 메모리에 올라와 있지 않고 swap area에 있는 경우</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Inverted-Page-Table\"><a href=\"#Inverted-Page-Table\" class=\"headerlink\" title=\"Inverted Page Table\"></a>Inverted Page Table</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm14.png\" alt=\"img\"></p>\n<ul>\n<li><p>Page table이 매우 큰 이유</p>\n<ul>\n<li>모든 process 별로 그 logical address에 대응하는 모든 page에 대해 page table entry 존재</li>\n<li>대응하는 page가 메모리에 있든 아니든 간에 page table에는 entry로 존재</li>\n</ul>\n</li>\n<li><p>inverted page table</p>\n<ul>\n<li><p>Page frame 하나당 page table에 하나의 entry를 둔것</p>\n</li>\n<li><p>각 page table entry는 각각의 물리적 메모리의 page frame이 담고 있는 내용 표시</p>\n<p>(process-id, process의 logical address)</p>\n</li>\n<li><p>page frame 개수만큼 entry 존재.</p>\n</li>\n<li><p>entry 전부 검색해서 pid랑 p 찾아야함. associative registe 찾아서 병렬 검색을 함</p>\n</li>\n<li><p>단점</p>\n<ul>\n<li>테이블 전체를 탐색</li>\n</ul>\n</li>\n<li><p>조치</p>\n<ul>\n<li>associative register 사용 (expensive)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Shared-Page\"><a href=\"#Shared-Page\" class=\"headerlink\" title=\"Shared Page\"></a>Shared Page</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm15.png\" alt=\"img\"></p>\n<p>공유할 수 있는 코드는 같은 프레임으로 매핑 시켜서 메모리에 한 카피만 올려</p>\n<ul>\n<li><p>Shared code</p>\n<ul>\n<li><p>Re-entrant Code (= Pure code)</p>\n</li>\n<li><p>read-only 로 하여 프로세스 간에 하나의 code만 메모리에 올림</p>\n<p>(eg, text editords, compilers, window systems)</p>\n</li>\n<li><p>Shared code는 모든 프로세스의 logical address space에서 동일한 위치에 있어야함</p>\n<ul>\n<li>위 그림에서, ed1, 2, 3 순으로 되어야 함</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Private code and data</p>\n<ul>\n<li>각 프로세스들은 독자적으로 메모리에 올림</li>\n<li>private data는 logical addreess space 의 아무 곳에 와도 무방</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Segmentation\"><a href=\"#Segmentation\" class=\"headerlink\" title=\"Segmentation\"></a>Segmentation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm16.png\" alt=\"img\"></p>\n<p>프로그램은 의미 단위인 여러 개의 segment로 구성</p>\n<p>작게는  프로그램을 구성하는 함수 하나하나를 세그먼트로 정의</p>\n<p>크게는 프로그램 전체를 하나의 세그먼트로 정의 가능</p>\n<p>일반적으로 code, data, stack 부분이 하나씩 세그먼트로 정의됨</p>\n<p>Segment는 의미 단위 이기 떄문에 공유와 보안에 있어서 paging 보다 효과적</p>\n<p>Segment의 길이가 동일하지 않으므로 가변 분할 방식에서와 동일한 문제점들이 발생</p>\n<ul>\n<li>Logical address는 다음의 두가지로 구성<ul>\n<li>&lt;segment-number, offset&gt;</li>\n</ul>\n</li>\n<li><p>Segment table</p>\n<ul>\n<li>each table entry has<ul>\n<li>base : starting physical address of the segment</li>\n<li>limit : length of the segment</li>\n</ul>\n</li>\n<li>Segment-table base reigster (STLR)<ul>\n<li>물리적 메모리에서의 segment table의 위치 </li>\n</ul>\n</li>\n<li>Segment-table length reigster (STLR)<ul>\n<li>프로그램이 사용하는 segment의 수</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>체크</p>\n<ul>\n<li>세그먼트 번호가 STLR 보다 작은지 체크해야함 </li>\n<li>세그먼트의 길이보다 세그먼트안에서 떨어진 offset 값이 더 크지는 않은가</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Segmentation-Example\"><a href=\"#Segmentation-Example\" class=\"headerlink\" title=\"Segmentation Example\"></a>Segmentation Example</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm17.png\" alt=\"img\"></p>\n<p>다섯 개의 segment. 각각의 세그먼트에 대해서 주소 변환을 위한 테이블이 있음</p>\n<h2 id=\"Sharing-of-Segments\"><a href=\"#Sharing-of-Segments\" class=\"headerlink\" title=\"Sharing of Segments\"></a>Sharing of Segments</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm18.png\" alt=\"img\"></p>\n<p>0번 세그먼트는 같은 역할을 하는 세그먼트. 이 두 개의 세그먼트는 같은 물리주소에 올라감.</p>\n<p>1번 세그먼트는 다른 물리주소에 올라감.</p>\n<h2 id=\"Segmentation-with-Paging\"><a href=\"#Segmentation-with-Paging\" class=\"headerlink\" title=\"Segmentation with Paging\"></a>Segmentation with Paging</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/mmmm19.png\" alt=\"img\"></p>\n<p>세그먼트 하나가 여러개의 페이지로 구성</p>\n<p>먼저 세그먼트에 대해 주소 변환</p>\n<p>logical address : 세그먼트 번호와 세그먼트 안에서 얼마나 떨어있는지</p>\n<p>STBR에 세그먼트 시작 위치가들어있고, 거기서부터 위에서부터 s번째 엔트리에 가면 page table의 시작 위치가 나옴</p>\n<p> 세그먼트의 길이보다 세그먼트 안에서 떨어진 offset이 크다면 잘못된 요청</p>\n<p>d는 page 번호와 page 안에서 얼마나 떨어져 있는지 (p, d`)</p>\n<p>page table의 시작 위치로부터 page 번호 만큼 떨어진 엔트리에 가면 이 페이지에 대한 주소 변환 결과 (물리적인 메모리의 몇번째 프레임인지) 나와</p>\n<ul>\n<li>pure segmentation 과 차이점<ul>\n<li>segment-table entry가 segment의 base address를 가지고있는 것이 아니라, segment를 구서하는 page table의 base address를 가지고 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"주소-변환을-위한-OS의-역할\"><a href=\"#주소-변환을-위한-OS의-역할\" class=\"headerlink\" title=\"주소 변환을 위한 OS의 역할\"></a>주소 변환을 위한 OS의 역할</h2><p>어떤 프로세스가 CPU를 가지고 메모리 접근을 하는데, </p>\n<p>주소 변환을 할 때 마다 운영체제가 중간에 개입하면 CPU가 이 프로세스로부터 운영체제에게 넘어가야돼.</p>\n<p>주소 변환 다 했으니까 다시 CPU가 이 프로세스에게 넘어온다? 말이 안돼. </p>\n<p>주소 변환은 무조건 하드웨어적으로 일어남. IO 장치에 접근하려면 OS가 끼어들어야돼.</p>\n"},{"layout":"post","title":"File System","date":"2018-10-11T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## File and File System\n\n- File \n  - 이름을 통해 접근 (cf. 메모리는 주소를 통해 접근)\n  - A named collection of related information\n  - 일반적으로 비화발성의 보조기억장치에 저장\n  - 운영체제는 다양한 저장 장치를 file이라는 동일한 논리적 단위로 볼 수 있게 해줌\n  - 연산\n    - create / read / write / reposition (lseek) / delete / open / close\n\n- File attritbute ( or 파일의 metadata)\n  - 파일 자체의 내용이 아니라 파일을 관리하기 위한 각종 정보들\n    - 파일 이름, 유형, 저장된 위치, 파일 사이즈\n    - 접근 권한 (읽기, 쓰기, 실행), 시간 (생성, 변경, 사용), 소유자 등\n- File System\n  - 운영체제에서 파일을 관리하는 부분\n  - 파일 및 파일의 메타데이터, 디렉토리 정보 등을 관리 \n  - 파일의 저장 방법 결정\n  - 파일 보호 등 \n\n## Directory and Logical Disk\n\n- Directory\n  - 파일의 메타데이터 중 일부를 보관하고 있는 일종의 특별한 파일 \n  - 그 디렉토리에 속한 파일 이름 및 파일 attribute 들\n  - 연산\n    - search for a file, create a file, delete a file\n    - list a direcotry, rename a file, traverse the file system\n- Partition (==Logical Disk)\n  - 하나의 물리적 디스크 안에 여러 파티션을 두는게 일바적\n  - 물리적 디스크를 파티션으로 구성한 뒤 각각의 파티션에 file system을 깔거나 swapping 등 다른 용도로 사용 가능\n\n## open()\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem02.png)\n\n1. open시스템 콜을 하면 운영체제에게 CPU 제어권이 넘어가\n\n2. 운영체제는 root를 먼저 open하여 root의 content를 찾아\n\n3. a라는 파일의 메타데이터를 찾아서 이걸 메모리에 올려\n\n4. a의 메타데이터로부터 a의 내용을 찾아\n\n5. a안의 b의 metadata를 메모리에 올려\n\n\n\n각 프로세스마다 그 프로세스가 오픈한 파일들에 대한 메타데이터 포인터를 가지고 있는 일종의 배열이 있어\n\nb의 metadata를 가리키고 있는 index 가 file discriptor (fd) 를 사용자 프로세스에게 리턴\n\nread(fd..)\n\nfd를 가진 파일에서 읽어와\n\nA의 PCB에 가서 해당 fd에 대응하는 파일의 metadata로부터 b의 내용에 접근\n\nb 내용을 읽어서 운영체제가 자신의 메모리 공간 일부에 읽어놓음.\n\ncopy해서 사용자 프로그램에게 전달\n\n다른 프로그램이나 이 프로그램이 동일한 파일의 동일한 위치를 read 요청하면\n\n디스크까지 가는것이 아니라 운영체제가 읽어놓은거 바로 전달 \n\n이게 바로 Buffer caching\n\n## File Protection\n\n각 파일에 대해 누구에게 어떤 유형의 접근(read/write/execution) 을 허락할 것인가?\n\nAccess Control 방법\n\n- Access Control Matrix\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem03.png)\n\n  - 공간 낭비 발생해서\n  - Access Control List : 파일별로 누구에게 어떤 접근 권한이 있는지 ( Linked list )\n  - Capability : 사용자 별로 자신이 접근 권한을 가진 파일 및 해당 권한 (Linked List)\n- Grouping\n  - 전체 user를 owner / group / public 의 세 그룹으로 구분\n  - 각 파일에 대해서 세 그룹의 접근 권한(rwx)을 3 비트씩으로 표시\n  - 9개의 비트만으로 표현 가능\n\n    ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem04.png)\n\n- password\n  - 파일 마다 패스워드 두는 방법 ( 디렉토리 파일에 두는 방법도 가능)\n  - 모든 접근 권한에 대해 하나의 패스워드 : all or nothing\n  - 접근 권한별 패스워드 : 암기문제, 관리문제\n\n## File System의 Mounting\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem05.png)\n\n루트 파일 시스템의 특정 디렉토리 이름에 또 다른 파티션에 있는 파일 시스템을 마운팅 하면,\n\n마운트 된 디렉토리에 접근하면 또 다른 파일 시스템의 루트 디렉토리에 접근하게 됨\n\n\n\n## Access Methods\n\n시스템이 제공하는 파일 정보의 접근 방식\n\n- 순차 접근\n  - 카세트 테이프를 사용하는 방식처럼 접근\n  - 읽거나 쓰면 offset은 자동적으로 접근\n  - a b c 순서대로 저장되어 있는데 b 보고 싶으면 a를 먼저 접근해야함 \n- 직접 접근\n  - 파일을 구성하는 레코드를 임의의 순서로 접근할 수 있음\n  - a b c 순서대로 저장되어 있는데 b 보고 싶으면 바로 볼 수 있음\n\n## Allocation of File Data in Disk\n\n1. contiguous allocation\n2. Linked Allocation\n3. Indexed Allocation\n\n## Contiguous Allocation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem06.png)\n\n블럭의 크기가 2면, 0 1 이렇게 들어감.\n\ndirecotory 에 5개의 파일 메타데이터를 가지고 있음\n\n0번 위치부터 길이 2면, 0 1 이렇게 저장됨\n\n- 단점\n  - 외부 조각이 생길 수 있어\n  - 파일 크키가 커질 수 있다는 거에 제약 (=file grow가 어려움)\n  - 파일 커질 것을 대비해서 미리 어느 정도 공간 할당하면 내부조각 발생 (공간의 낭비)\n- 장점\n  - Fast I/O\n  - 한번의 seek/rotation 으로 많은 bite transfer\n  - Direct access(=random access) 가능\n  - mail의 경우, 앞에서부터 5번째 보고 싶다. 그럼 19에다가 5 더하면 돼\n\n## Linked Allocation \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem07.png)\n\njeep이란 파일의 시작은 9번이고, 두번째 블럭은 9번에 적혀 있어.\n\n시작위치만 directory가 가지고 있어.\n\n- 장점\n  - 외부조각 발생하지 않아\n- 단점\n  - 직접 접근이 안돼\n  - 4번째 위치 보려면 1, 2, 3 번째 봐야해\n  - 한 sector가 고장나 pointer가 유실되면 많은 부분을 잃음\n  - pointer를 위한 공간이 block의 일부가 되어 공간 효율성이 떨어짐\n- 변형\n  - File allocation table (FAT) 파일 시스템\n\n## Indexed Allocation \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem08.png)\n\n- 장점\n  - 외부 조각 발생하지 않아\n  - direct access 가능\n- 단점 \n  - small file의 경우 공간 낭비\n  - too large file의 경우 하나의 block으로 index저장하기에 부족\n    - 해결\n      - linked scheme\n      - multil-level index\n\n## UNIX 파일 시스템의 구조\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem10.png)\n\n- Boot block\n  - 어떤 파일 시스템이든 가장 먼저 나와\n  - 부팅에 필요한 정보\n- Super block\n  - 파일 시스템에 관한 총체적인 정보 담고 있음\n  - 어디가 빈 블럭이고 어디가 사용되고 있는지\n  - 어디부터 Inode list이고 data block 이고 ..\n- Inode list\n  - 파일 하나당 Inode 하나 할당\n  - Inode는 그 파일의 메타데이터를 가지고 있어\n  - 파일의 이름은 디렉토리가 직접 가지고 있어\n  - indirect : 따라가면 index를 거쳐서 파일의 위치 정보 찾아\n- Data block\n  - 파일의 실제 내용 보관\n\n## FAT file system\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem11.png)\n\n- FAT\n  - 위치 정보만 FAT가 가지고 있어\n  - FAT의 217 번지에 217번지의 다음 블럭 번지가 저장되어 있어\n  - 직접 접근 가능(메모리에 올라와 있는 FAT만 참고하여 바로 위치 알아낼 수 있어)\n\n## Free-Space Management\n\n중간 중간 비어 있는 블럭은 어떻게 관리?\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem12.png)\n\n- bit\n  - 부가적인 공간을 필요\n  - 연속적인 n개의 free block을 찾는데 효과적\n  - 연속적으로 0인 공간을 찾는데 쉬워\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem13.png)\n\n- Linked Free-Space List on Disk\n\n  - 모든 free block들을 링크로 연결 (free list)\n  - 연속적인 가용 공간을 찾는 것은 쉽지 않다\n  - 공간의 낭비가 없다\n\n- Grouping\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem20.png)\n\n  - 비어 있는 위치가 index 역할\n  - linked list 방법의 변형\n\n  - 첫번째 free block 이 n개의 포인터를 가짐\n\n- Counting\n\n  - (first free block, # of contiguous free blocks) 을 유지 \n\n## Directory Implementation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem14.png)\n\n- Linear list\n  - <file name, file의 metadata)의 list\n  - 구현이 간단\n  - 디렉토리 내에 파일이 있는지 찾기위해서는 linear search 필요\n- Hash table\n  - linear list + hashing\n  - file name을 이 파일의 linear list의 위치로 바꿔줌\n  - search time을 없앰\n  - collision 발생 가능\n\n- file 의 metadata 보관 위치\n\n  - 디렉토리 내에 직접 보관\n  - 디렉토리에는 포인터를 두고 다른 곳에 보관\n    - inode, FAT 등\n\n- Long file name의 지원\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem15.png)\n\n  - <file name, file의 메타데이터> 의 리스트에서 각 entry는 일반적으로 고정 크기\n  - file name이 고정 크기의 entry길이보다 길어지는 경우 entry의 마지막 부분에 이름의 뒷 부분이 위치한 곳의 포인터를 두는 방법\n  - 이름의 나머지 부분은 동일한 directory file의 일부에 존재\n\n## VFS and NFS \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem16.png)\n\n- Virtual File System (VFS)\n  - 서로 다른 다양한 file system에 대해 동일한 시스템콜 인터페이스를 통해 접근할 수 있게 해주는 OS의 layer\n- Network File System\n  - 분산 시스템에서는 네트워크를 통해 파일이 공유될 수 있음\n  - 분산 환경에서의 대표적인 파일 공유 방법\n\n## Page cache and Buffer cache\n\nOS는 사용자 프로그램의 요청을 받아서 디스크에서 읽어온 내용을 그냥 전달하고 끝내는 것이 아니라, 자신의 버퍼 케쉬 영역에 읽어 놓고, 그 내용을 카피해서 사용자 프로그램에게 넘겨줘\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem17.png)\n\n- Page cache\n  - Virtual memory의 pagin system에서 사용하는 pafe frame을 caching의 관점에서 설명하는 용어\n  - Memory-Mapped I/O를 쓰는 경우 file의 I/O에서도 page cache 사용\n- Memory-Mapped I/O\n  - file의 일부를 virtual memory에 mapping\n  - 매핑 시킨 영역에 대한 메모리 접근 연산은 파일의 입출력을 수행하게 함\n- Buffer cache\n  - 파일 시스템을 통한 I/O 연산은 메모리의 특정 영역인 buffer cache사용\n  - file 사용의 locality 활용\n  - 한번 읽어온 block에 대한 후속 요청시 buffer cache에서 즉시 전달\n  - 모든 프로세스가 공용으로 사용\n  - Replacement algiritm 필요(LRU, LFU 등)\n- Unified Buffer Cache\n  - 최근의 OS에서는 기존의 buffer cahce가 page cache에 통합\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem18.png)\n\n- 왼쪽\n  - read/write system call 하면 항상 OS에게 요청해서 받아옴\n  - memory mapped IO를 쓰면, 일단 페이지 케쉬에 올라온 내용을 사용자 프로세스가 직접 메모리 접근해서 IO (이미 메모리에 올라온 내용은 커널의 도움을 받지 않음)","source":"_posts/2018-10-12-File System.md","raw":"---\nlayout: post\ntitle:  \"File System\"\ndate:   2018-10-12\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## File and File System\n\n- File \n  - 이름을 통해 접근 (cf. 메모리는 주소를 통해 접근)\n  - A named collection of related information\n  - 일반적으로 비화발성의 보조기억장치에 저장\n  - 운영체제는 다양한 저장 장치를 file이라는 동일한 논리적 단위로 볼 수 있게 해줌\n  - 연산\n    - create / read / write / reposition (lseek) / delete / open / close\n\n- File attritbute ( or 파일의 metadata)\n  - 파일 자체의 내용이 아니라 파일을 관리하기 위한 각종 정보들\n    - 파일 이름, 유형, 저장된 위치, 파일 사이즈\n    - 접근 권한 (읽기, 쓰기, 실행), 시간 (생성, 변경, 사용), 소유자 등\n- File System\n  - 운영체제에서 파일을 관리하는 부분\n  - 파일 및 파일의 메타데이터, 디렉토리 정보 등을 관리 \n  - 파일의 저장 방법 결정\n  - 파일 보호 등 \n\n## Directory and Logical Disk\n\n- Directory\n  - 파일의 메타데이터 중 일부를 보관하고 있는 일종의 특별한 파일 \n  - 그 디렉토리에 속한 파일 이름 및 파일 attribute 들\n  - 연산\n    - search for a file, create a file, delete a file\n    - list a direcotry, rename a file, traverse the file system\n- Partition (==Logical Disk)\n  - 하나의 물리적 디스크 안에 여러 파티션을 두는게 일바적\n  - 물리적 디스크를 파티션으로 구성한 뒤 각각의 파티션에 file system을 깔거나 swapping 등 다른 용도로 사용 가능\n\n## open()\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem01.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem02.png)\n\n1. open시스템 콜을 하면 운영체제에게 CPU 제어권이 넘어가\n\n2. 운영체제는 root를 먼저 open하여 root의 content를 찾아\n\n3. a라는 파일의 메타데이터를 찾아서 이걸 메모리에 올려\n\n4. a의 메타데이터로부터 a의 내용을 찾아\n\n5. a안의 b의 metadata를 메모리에 올려\n\n\n\n각 프로세스마다 그 프로세스가 오픈한 파일들에 대한 메타데이터 포인터를 가지고 있는 일종의 배열이 있어\n\nb의 metadata를 가리키고 있는 index 가 file discriptor (fd) 를 사용자 프로세스에게 리턴\n\nread(fd..)\n\nfd를 가진 파일에서 읽어와\n\nA의 PCB에 가서 해당 fd에 대응하는 파일의 metadata로부터 b의 내용에 접근\n\nb 내용을 읽어서 운영체제가 자신의 메모리 공간 일부에 읽어놓음.\n\ncopy해서 사용자 프로그램에게 전달\n\n다른 프로그램이나 이 프로그램이 동일한 파일의 동일한 위치를 read 요청하면\n\n디스크까지 가는것이 아니라 운영체제가 읽어놓은거 바로 전달 \n\n이게 바로 Buffer caching\n\n## File Protection\n\n각 파일에 대해 누구에게 어떤 유형의 접근(read/write/execution) 을 허락할 것인가?\n\nAccess Control 방법\n\n- Access Control Matrix\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem03.png)\n\n  - 공간 낭비 발생해서\n  - Access Control List : 파일별로 누구에게 어떤 접근 권한이 있는지 ( Linked list )\n  - Capability : 사용자 별로 자신이 접근 권한을 가진 파일 및 해당 권한 (Linked List)\n- Grouping\n  - 전체 user를 owner / group / public 의 세 그룹으로 구분\n  - 각 파일에 대해서 세 그룹의 접근 권한(rwx)을 3 비트씩으로 표시\n  - 9개의 비트만으로 표현 가능\n\n    ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem04.png)\n\n- password\n  - 파일 마다 패스워드 두는 방법 ( 디렉토리 파일에 두는 방법도 가능)\n  - 모든 접근 권한에 대해 하나의 패스워드 : all or nothing\n  - 접근 권한별 패스워드 : 암기문제, 관리문제\n\n## File System의 Mounting\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem05.png)\n\n루트 파일 시스템의 특정 디렉토리 이름에 또 다른 파티션에 있는 파일 시스템을 마운팅 하면,\n\n마운트 된 디렉토리에 접근하면 또 다른 파일 시스템의 루트 디렉토리에 접근하게 됨\n\n\n\n## Access Methods\n\n시스템이 제공하는 파일 정보의 접근 방식\n\n- 순차 접근\n  - 카세트 테이프를 사용하는 방식처럼 접근\n  - 읽거나 쓰면 offset은 자동적으로 접근\n  - a b c 순서대로 저장되어 있는데 b 보고 싶으면 a를 먼저 접근해야함 \n- 직접 접근\n  - 파일을 구성하는 레코드를 임의의 순서로 접근할 수 있음\n  - a b c 순서대로 저장되어 있는데 b 보고 싶으면 바로 볼 수 있음\n\n## Allocation of File Data in Disk\n\n1. contiguous allocation\n2. Linked Allocation\n3. Indexed Allocation\n\n## Contiguous Allocation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem06.png)\n\n블럭의 크기가 2면, 0 1 이렇게 들어감.\n\ndirecotory 에 5개의 파일 메타데이터를 가지고 있음\n\n0번 위치부터 길이 2면, 0 1 이렇게 저장됨\n\n- 단점\n  - 외부 조각이 생길 수 있어\n  - 파일 크키가 커질 수 있다는 거에 제약 (=file grow가 어려움)\n  - 파일 커질 것을 대비해서 미리 어느 정도 공간 할당하면 내부조각 발생 (공간의 낭비)\n- 장점\n  - Fast I/O\n  - 한번의 seek/rotation 으로 많은 bite transfer\n  - Direct access(=random access) 가능\n  - mail의 경우, 앞에서부터 5번째 보고 싶다. 그럼 19에다가 5 더하면 돼\n\n## Linked Allocation \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem07.png)\n\njeep이란 파일의 시작은 9번이고, 두번째 블럭은 9번에 적혀 있어.\n\n시작위치만 directory가 가지고 있어.\n\n- 장점\n  - 외부조각 발생하지 않아\n- 단점\n  - 직접 접근이 안돼\n  - 4번째 위치 보려면 1, 2, 3 번째 봐야해\n  - 한 sector가 고장나 pointer가 유실되면 많은 부분을 잃음\n  - pointer를 위한 공간이 block의 일부가 되어 공간 효율성이 떨어짐\n- 변형\n  - File allocation table (FAT) 파일 시스템\n\n## Indexed Allocation \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem08.png)\n\n- 장점\n  - 외부 조각 발생하지 않아\n  - direct access 가능\n- 단점 \n  - small file의 경우 공간 낭비\n  - too large file의 경우 하나의 block으로 index저장하기에 부족\n    - 해결\n      - linked scheme\n      - multil-level index\n\n## UNIX 파일 시스템의 구조\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem09.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem10.png)\n\n- Boot block\n  - 어떤 파일 시스템이든 가장 먼저 나와\n  - 부팅에 필요한 정보\n- Super block\n  - 파일 시스템에 관한 총체적인 정보 담고 있음\n  - 어디가 빈 블럭이고 어디가 사용되고 있는지\n  - 어디부터 Inode list이고 data block 이고 ..\n- Inode list\n  - 파일 하나당 Inode 하나 할당\n  - Inode는 그 파일의 메타데이터를 가지고 있어\n  - 파일의 이름은 디렉토리가 직접 가지고 있어\n  - indirect : 따라가면 index를 거쳐서 파일의 위치 정보 찾아\n- Data block\n  - 파일의 실제 내용 보관\n\n## FAT file system\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem11.png)\n\n- FAT\n  - 위치 정보만 FAT가 가지고 있어\n  - FAT의 217 번지에 217번지의 다음 블럭 번지가 저장되어 있어\n  - 직접 접근 가능(메모리에 올라와 있는 FAT만 참고하여 바로 위치 알아낼 수 있어)\n\n## Free-Space Management\n\n중간 중간 비어 있는 블럭은 어떻게 관리?\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem12.png)\n\n- bit\n  - 부가적인 공간을 필요\n  - 연속적인 n개의 free block을 찾는데 효과적\n  - 연속적으로 0인 공간을 찾는데 쉬워\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem13.png)\n\n- Linked Free-Space List on Disk\n\n  - 모든 free block들을 링크로 연결 (free list)\n  - 연속적인 가용 공간을 찾는 것은 쉽지 않다\n  - 공간의 낭비가 없다\n\n- Grouping\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem20.png)\n\n  - 비어 있는 위치가 index 역할\n  - linked list 방법의 변형\n\n  - 첫번째 free block 이 n개의 포인터를 가짐\n\n- Counting\n\n  - (first free block, # of contiguous free blocks) 을 유지 \n\n## Directory Implementation\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem14.png)\n\n- Linear list\n  - <file name, file의 metadata)의 list\n  - 구현이 간단\n  - 디렉토리 내에 파일이 있는지 찾기위해서는 linear search 필요\n- Hash table\n  - linear list + hashing\n  - file name을 이 파일의 linear list의 위치로 바꿔줌\n  - search time을 없앰\n  - collision 발생 가능\n\n- file 의 metadata 보관 위치\n\n  - 디렉토리 내에 직접 보관\n  - 디렉토리에는 포인터를 두고 다른 곳에 보관\n    - inode, FAT 등\n\n- Long file name의 지원\n\n  ![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem15.png)\n\n  - <file name, file의 메타데이터> 의 리스트에서 각 entry는 일반적으로 고정 크기\n  - file name이 고정 크기의 entry길이보다 길어지는 경우 entry의 마지막 부분에 이름의 뒷 부분이 위치한 곳의 포인터를 두는 방법\n  - 이름의 나머지 부분은 동일한 directory file의 일부에 존재\n\n## VFS and NFS \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem16.png)\n\n- Virtual File System (VFS)\n  - 서로 다른 다양한 file system에 대해 동일한 시스템콜 인터페이스를 통해 접근할 수 있게 해주는 OS의 layer\n- Network File System\n  - 분산 시스템에서는 네트워크를 통해 파일이 공유될 수 있음\n  - 분산 환경에서의 대표적인 파일 공유 방법\n\n## Page cache and Buffer cache\n\nOS는 사용자 프로그램의 요청을 받아서 디스크에서 읽어온 내용을 그냥 전달하고 끝내는 것이 아니라, 자신의 버퍼 케쉬 영역에 읽어 놓고, 그 내용을 카피해서 사용자 프로그램에게 넘겨줘\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem17.png)\n\n- Page cache\n  - Virtual memory의 pagin system에서 사용하는 pafe frame을 caching의 관점에서 설명하는 용어\n  - Memory-Mapped I/O를 쓰는 경우 file의 I/O에서도 page cache 사용\n- Memory-Mapped I/O\n  - file의 일부를 virtual memory에 mapping\n  - 매핑 시킨 영역에 대한 메모리 접근 연산은 파일의 입출력을 수행하게 함\n- Buffer cache\n  - 파일 시스템을 통한 I/O 연산은 메모리의 특정 영역인 buffer cache사용\n  - file 사용의 locality 활용\n  - 한번 읽어온 block에 대한 후속 요청시 buffer cache에서 즉시 전달\n  - 모든 프로세스가 공용으로 사용\n  - Replacement algiritm 필요(LRU, LFU 등)\n- Unified Buffer Cache\n  - 최근의 OS에서는 기존의 buffer cahce가 page cache에 통합\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem18.png)\n\n- 왼쪽\n  - read/write system call 하면 항상 OS에게 요청해서 받아옴\n  - memory mapped IO를 쓰면, 일단 페이지 케쉬에 올라온 내용을 사용자 프로세스가 직접 메모리 접근해서 IO (이미 메모리에 올라온 내용은 커널의 도움을 받지 않음)","slug":"2018-10-12-File System","published":1,"updated":"2018-10-16T04:55:18.840Z","comments":1,"photos":[],"link":"","_id":"cjp6k665200k931x7qy8jahkx","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"File-and-File-System\"><a href=\"#File-and-File-System\" class=\"headerlink\" title=\"File and File System\"></a>File and File System</h2><ul>\n<li><p>File </p>\n<ul>\n<li>이름을 통해 접근 (cf. 메모리는 주소를 통해 접근)</li>\n<li>A named collection of related information</li>\n<li>일반적으로 비화발성의 보조기억장치에 저장</li>\n<li>운영체제는 다양한 저장 장치를 file이라는 동일한 논리적 단위로 볼 수 있게 해줌</li>\n<li>연산<ul>\n<li>create / read / write / reposition (lseek) / delete / open / close</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>File attritbute ( or 파일의 metadata)</p>\n<ul>\n<li>파일 자체의 내용이 아니라 파일을 관리하기 위한 각종 정보들<ul>\n<li>파일 이름, 유형, 저장된 위치, 파일 사이즈</li>\n<li>접근 권한 (읽기, 쓰기, 실행), 시간 (생성, 변경, 사용), 소유자 등</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>File System<ul>\n<li>운영체제에서 파일을 관리하는 부분</li>\n<li>파일 및 파일의 메타데이터, 디렉토리 정보 등을 관리 </li>\n<li>파일의 저장 방법 결정</li>\n<li>파일 보호 등 </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Directory-and-Logical-Disk\"><a href=\"#Directory-and-Logical-Disk\" class=\"headerlink\" title=\"Directory and Logical Disk\"></a>Directory and Logical Disk</h2><ul>\n<li>Directory<ul>\n<li>파일의 메타데이터 중 일부를 보관하고 있는 일종의 특별한 파일 </li>\n<li>그 디렉토리에 속한 파일 이름 및 파일 attribute 들</li>\n<li>연산<ul>\n<li>search for a file, create a file, delete a file</li>\n<li>list a direcotry, rename a file, traverse the file system</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Partition (==Logical Disk)<ul>\n<li>하나의 물리적 디스크 안에 여러 파티션을 두는게 일바적</li>\n<li>물리적 디스크를 파티션으로 구성한 뒤 각각의 파티션에 file system을 깔거나 swapping 등 다른 용도로 사용 가능</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open()\"></a>open()</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem02.png\" alt=\"img\"></p>\n<ol>\n<li><p>open시스템 콜을 하면 운영체제에게 CPU 제어권이 넘어가</p>\n</li>\n<li><p>운영체제는 root를 먼저 open하여 root의 content를 찾아</p>\n</li>\n<li><p>a라는 파일의 메타데이터를 찾아서 이걸 메모리에 올려</p>\n</li>\n<li><p>a의 메타데이터로부터 a의 내용을 찾아</p>\n</li>\n<li><p>a안의 b의 metadata를 메모리에 올려</p>\n</li>\n</ol>\n<p>각 프로세스마다 그 프로세스가 오픈한 파일들에 대한 메타데이터 포인터를 가지고 있는 일종의 배열이 있어</p>\n<p>b의 metadata를 가리키고 있는 index 가 file discriptor (fd) 를 사용자 프로세스에게 리턴</p>\n<p>read(fd..)</p>\n<p>fd를 가진 파일에서 읽어와</p>\n<p>A의 PCB에 가서 해당 fd에 대응하는 파일의 metadata로부터 b의 내용에 접근</p>\n<p>b 내용을 읽어서 운영체제가 자신의 메모리 공간 일부에 읽어놓음.</p>\n<p>copy해서 사용자 프로그램에게 전달</p>\n<p>다른 프로그램이나 이 프로그램이 동일한 파일의 동일한 위치를 read 요청하면</p>\n<p>디스크까지 가는것이 아니라 운영체제가 읽어놓은거 바로 전달 </p>\n<p>이게 바로 Buffer caching</p>\n<h2 id=\"File-Protection\"><a href=\"#File-Protection\" class=\"headerlink\" title=\"File Protection\"></a>File Protection</h2><p>각 파일에 대해 누구에게 어떤 유형의 접근(read/write/execution) 을 허락할 것인가?</p>\n<p>Access Control 방법</p>\n<ul>\n<li><p>Access Control Matrix</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem03.png\" alt=\"img\"></p>\n<ul>\n<li>공간 낭비 발생해서</li>\n<li>Access Control List : 파일별로 누구에게 어떤 접근 권한이 있는지 ( Linked list )</li>\n<li>Capability : 사용자 별로 자신이 접근 권한을 가진 파일 및 해당 권한 (Linked List)</li>\n</ul>\n</li>\n<li><p>Grouping</p>\n<ul>\n<li>전체 user를 owner / group / public 의 세 그룹으로 구분</li>\n<li>각 파일에 대해서 세 그룹의 접근 권한(rwx)을 3 비트씩으로 표시</li>\n<li><p>9개의 비트만으로 표현 가능</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem04.png\" alt=\"img\"></p>\n</li>\n</ul>\n</li>\n<li><p>password</p>\n<ul>\n<li>파일 마다 패스워드 두는 방법 ( 디렉토리 파일에 두는 방법도 가능)</li>\n<li>모든 접근 권한에 대해 하나의 패스워드 : all or nothing</li>\n<li>접근 권한별 패스워드 : 암기문제, 관리문제</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"File-System의-Mounting\"><a href=\"#File-System의-Mounting\" class=\"headerlink\" title=\"File System의 Mounting\"></a>File System의 Mounting</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem05.png\" alt=\"img\"></p>\n<p>루트 파일 시스템의 특정 디렉토리 이름에 또 다른 파티션에 있는 파일 시스템을 마운팅 하면,</p>\n<p>마운트 된 디렉토리에 접근하면 또 다른 파일 시스템의 루트 디렉토리에 접근하게 됨</p>\n<h2 id=\"Access-Methods\"><a href=\"#Access-Methods\" class=\"headerlink\" title=\"Access Methods\"></a>Access Methods</h2><p>시스템이 제공하는 파일 정보의 접근 방식</p>\n<ul>\n<li>순차 접근<ul>\n<li>카세트 테이프를 사용하는 방식처럼 접근</li>\n<li>읽거나 쓰면 offset은 자동적으로 접근</li>\n<li>a b c 순서대로 저장되어 있는데 b 보고 싶으면 a를 먼저 접근해야함 </li>\n</ul>\n</li>\n<li>직접 접근<ul>\n<li>파일을 구성하는 레코드를 임의의 순서로 접근할 수 있음</li>\n<li>a b c 순서대로 저장되어 있는데 b 보고 싶으면 바로 볼 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Allocation-of-File-Data-in-Disk\"><a href=\"#Allocation-of-File-Data-in-Disk\" class=\"headerlink\" title=\"Allocation of File Data in Disk\"></a>Allocation of File Data in Disk</h2><ol>\n<li>contiguous allocation</li>\n<li>Linked Allocation</li>\n<li>Indexed Allocation</li>\n</ol>\n<h2 id=\"Contiguous-Allocation\"><a href=\"#Contiguous-Allocation\" class=\"headerlink\" title=\"Contiguous Allocation\"></a>Contiguous Allocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem06.png\" alt=\"img\"></p>\n<p>블럭의 크기가 2면, 0 1 이렇게 들어감.</p>\n<p>direcotory 에 5개의 파일 메타데이터를 가지고 있음</p>\n<p>0번 위치부터 길이 2면, 0 1 이렇게 저장됨</p>\n<ul>\n<li>단점<ul>\n<li>외부 조각이 생길 수 있어</li>\n<li>파일 크키가 커질 수 있다는 거에 제약 (=file grow가 어려움)</li>\n<li>파일 커질 것을 대비해서 미리 어느 정도 공간 할당하면 내부조각 발생 (공간의 낭비)</li>\n</ul>\n</li>\n<li>장점<ul>\n<li>Fast I/O</li>\n<li>한번의 seek/rotation 으로 많은 bite transfer</li>\n<li>Direct access(=random access) 가능</li>\n<li>mail의 경우, 앞에서부터 5번째 보고 싶다. 그럼 19에다가 5 더하면 돼</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Linked-Allocation\"><a href=\"#Linked-Allocation\" class=\"headerlink\" title=\"Linked Allocation\"></a>Linked Allocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem07.png\" alt=\"img\"></p>\n<p>jeep이란 파일의 시작은 9번이고, 두번째 블럭은 9번에 적혀 있어.</p>\n<p>시작위치만 directory가 가지고 있어.</p>\n<ul>\n<li>장점<ul>\n<li>외부조각 발생하지 않아</li>\n</ul>\n</li>\n<li>단점<ul>\n<li>직접 접근이 안돼</li>\n<li>4번째 위치 보려면 1, 2, 3 번째 봐야해</li>\n<li>한 sector가 고장나 pointer가 유실되면 많은 부분을 잃음</li>\n<li>pointer를 위한 공간이 block의 일부가 되어 공간 효율성이 떨어짐</li>\n</ul>\n</li>\n<li>변형<ul>\n<li>File allocation table (FAT) 파일 시스템</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Indexed-Allocation\"><a href=\"#Indexed-Allocation\" class=\"headerlink\" title=\"Indexed Allocation\"></a>Indexed Allocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem08.png\" alt=\"img\"></p>\n<ul>\n<li>장점<ul>\n<li>외부 조각 발생하지 않아</li>\n<li>direct access 가능</li>\n</ul>\n</li>\n<li>단점 <ul>\n<li>small file의 경우 공간 낭비</li>\n<li>too large file의 경우 하나의 block으로 index저장하기에 부족<ul>\n<li>해결<ul>\n<li>linked scheme</li>\n<li>multil-level index</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"UNIX-파일-시스템의-구조\"><a href=\"#UNIX-파일-시스템의-구조\" class=\"headerlink\" title=\"UNIX 파일 시스템의 구조\"></a>UNIX 파일 시스템의 구조</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem10.png\" alt=\"img\"></p>\n<ul>\n<li>Boot block<ul>\n<li>어떤 파일 시스템이든 가장 먼저 나와</li>\n<li>부팅에 필요한 정보</li>\n</ul>\n</li>\n<li>Super block<ul>\n<li>파일 시스템에 관한 총체적인 정보 담고 있음</li>\n<li>어디가 빈 블럭이고 어디가 사용되고 있는지</li>\n<li>어디부터 Inode list이고 data block 이고 ..</li>\n</ul>\n</li>\n<li>Inode list<ul>\n<li>파일 하나당 Inode 하나 할당</li>\n<li>Inode는 그 파일의 메타데이터를 가지고 있어</li>\n<li>파일의 이름은 디렉토리가 직접 가지고 있어</li>\n<li>indirect : 따라가면 index를 거쳐서 파일의 위치 정보 찾아</li>\n</ul>\n</li>\n<li>Data block<ul>\n<li>파일의 실제 내용 보관</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"FAT-file-system\"><a href=\"#FAT-file-system\" class=\"headerlink\" title=\"FAT file system\"></a>FAT file system</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem11.png\" alt=\"img\"></p>\n<ul>\n<li>FAT<ul>\n<li>위치 정보만 FAT가 가지고 있어</li>\n<li>FAT의 217 번지에 217번지의 다음 블럭 번지가 저장되어 있어</li>\n<li>직접 접근 가능(메모리에 올라와 있는 FAT만 참고하여 바로 위치 알아낼 수 있어)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Free-Space-Management\"><a href=\"#Free-Space-Management\" class=\"headerlink\" title=\"Free-Space Management\"></a>Free-Space Management</h2><p>중간 중간 비어 있는 블럭은 어떻게 관리?</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem12.png\" alt=\"img\"></p>\n<ul>\n<li>bit<ul>\n<li>부가적인 공간을 필요</li>\n<li>연속적인 n개의 free block을 찾는데 효과적</li>\n<li>연속적으로 0인 공간을 찾는데 쉬워</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem13.png\" alt=\"img\"></p>\n<ul>\n<li><p>Linked Free-Space List on Disk</p>\n<ul>\n<li>모든 free block들을 링크로 연결 (free list)</li>\n<li>연속적인 가용 공간을 찾는 것은 쉽지 않다</li>\n<li>공간의 낭비가 없다</li>\n</ul>\n</li>\n<li><p>Grouping</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem20.png\" alt=\"img\"></p>\n<ul>\n<li>비어 있는 위치가 index 역할</li>\n<li><p>linked list 방법의 변형</p>\n</li>\n<li><p>첫번째 free block 이 n개의 포인터를 가짐</p>\n</li>\n</ul>\n</li>\n<li><p>Counting</p>\n<ul>\n<li>(first free block, # of contiguous free blocks) 을 유지 </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Directory-Implementation\"><a href=\"#Directory-Implementation\" class=\"headerlink\" title=\"Directory Implementation\"></a>Directory Implementation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem14.png\" alt=\"img\"></p>\n<ul>\n<li>Linear list<ul>\n<li>&lt;file name, file의 metadata)의 list</li>\n<li>구현이 간단</li>\n<li>디렉토리 내에 파일이 있는지 찾기위해서는 linear search 필요</li>\n</ul>\n</li>\n<li><p>Hash table</p>\n<ul>\n<li>linear list + hashing</li>\n<li>file name을 이 파일의 linear list의 위치로 바꿔줌</li>\n<li>search time을 없앰</li>\n<li>collision 발생 가능</li>\n</ul>\n</li>\n<li><p>file 의 metadata 보관 위치</p>\n<ul>\n<li>디렉토리 내에 직접 보관</li>\n<li>디렉토리에는 포인터를 두고 다른 곳에 보관<ul>\n<li>inode, FAT 등</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Long file name의 지원</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem15.png\" alt=\"img\"></p>\n<ul>\n<li><file name,=\"\" file의=\"\" 메타데이터=\"\"> 의 리스트에서 각 entry는 일반적으로 고정 크기</file></li>\n<li>file name이 고정 크기의 entry길이보다 길어지는 경우 entry의 마지막 부분에 이름의 뒷 부분이 위치한 곳의 포인터를 두는 방법</li>\n<li>이름의 나머지 부분은 동일한 directory file의 일부에 존재</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"VFS-and-NFS\"><a href=\"#VFS-and-NFS\" class=\"headerlink\" title=\"VFS and NFS\"></a>VFS and NFS</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem16.png\" alt=\"img\"></p>\n<ul>\n<li>Virtual File System (VFS)<ul>\n<li>서로 다른 다양한 file system에 대해 동일한 시스템콜 인터페이스를 통해 접근할 수 있게 해주는 OS의 layer</li>\n</ul>\n</li>\n<li>Network File System<ul>\n<li>분산 시스템에서는 네트워크를 통해 파일이 공유될 수 있음</li>\n<li>분산 환경에서의 대표적인 파일 공유 방법</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Page-cache-and-Buffer-cache\"><a href=\"#Page-cache-and-Buffer-cache\" class=\"headerlink\" title=\"Page cache and Buffer cache\"></a>Page cache and Buffer cache</h2><p>OS는 사용자 프로그램의 요청을 받아서 디스크에서 읽어온 내용을 그냥 전달하고 끝내는 것이 아니라, 자신의 버퍼 케쉬 영역에 읽어 놓고, 그 내용을 카피해서 사용자 프로그램에게 넘겨줘</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem17.png\" alt=\"img\"></p>\n<ul>\n<li>Page cache<ul>\n<li>Virtual memory의 pagin system에서 사용하는 pafe frame을 caching의 관점에서 설명하는 용어</li>\n<li>Memory-Mapped I/O를 쓰는 경우 file의 I/O에서도 page cache 사용</li>\n</ul>\n</li>\n<li>Memory-Mapped I/O<ul>\n<li>file의 일부를 virtual memory에 mapping</li>\n<li>매핑 시킨 영역에 대한 메모리 접근 연산은 파일의 입출력을 수행하게 함</li>\n</ul>\n</li>\n<li>Buffer cache<ul>\n<li>파일 시스템을 통한 I/O 연산은 메모리의 특정 영역인 buffer cache사용</li>\n<li>file 사용의 locality 활용</li>\n<li>한번 읽어온 block에 대한 후속 요청시 buffer cache에서 즉시 전달</li>\n<li>모든 프로세스가 공용으로 사용</li>\n<li>Replacement algiritm 필요(LRU, LFU 등)</li>\n</ul>\n</li>\n<li>Unified Buffer Cache<ul>\n<li>최근의 OS에서는 기존의 buffer cahce가 page cache에 통합</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem18.png\" alt=\"img\"></p>\n<ul>\n<li>왼쪽<ul>\n<li>read/write system call 하면 항상 OS에게 요청해서 받아옴</li>\n<li>memory mapped IO를 쓰면, 일단 페이지 케쉬에 올라온 내용을 사용자 프로세스가 직접 메모리 접근해서 IO (이미 메모리에 올라온 내용은 커널의 도움을 받지 않음)</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"File-and-File-System\"><a href=\"#File-and-File-System\" class=\"headerlink\" title=\"File and File System\"></a>File and File System</h2><ul>\n<li><p>File </p>\n<ul>\n<li>이름을 통해 접근 (cf. 메모리는 주소를 통해 접근)</li>\n<li>A named collection of related information</li>\n<li>일반적으로 비화발성의 보조기억장치에 저장</li>\n<li>운영체제는 다양한 저장 장치를 file이라는 동일한 논리적 단위로 볼 수 있게 해줌</li>\n<li>연산<ul>\n<li>create / read / write / reposition (lseek) / delete / open / close</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>File attritbute ( or 파일의 metadata)</p>\n<ul>\n<li>파일 자체의 내용이 아니라 파일을 관리하기 위한 각종 정보들<ul>\n<li>파일 이름, 유형, 저장된 위치, 파일 사이즈</li>\n<li>접근 권한 (읽기, 쓰기, 실행), 시간 (생성, 변경, 사용), 소유자 등</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>File System<ul>\n<li>운영체제에서 파일을 관리하는 부분</li>\n<li>파일 및 파일의 메타데이터, 디렉토리 정보 등을 관리 </li>\n<li>파일의 저장 방법 결정</li>\n<li>파일 보호 등 </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Directory-and-Logical-Disk\"><a href=\"#Directory-and-Logical-Disk\" class=\"headerlink\" title=\"Directory and Logical Disk\"></a>Directory and Logical Disk</h2><ul>\n<li>Directory<ul>\n<li>파일의 메타데이터 중 일부를 보관하고 있는 일종의 특별한 파일 </li>\n<li>그 디렉토리에 속한 파일 이름 및 파일 attribute 들</li>\n<li>연산<ul>\n<li>search for a file, create a file, delete a file</li>\n<li>list a direcotry, rename a file, traverse the file system</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Partition (==Logical Disk)<ul>\n<li>하나의 물리적 디스크 안에 여러 파티션을 두는게 일바적</li>\n<li>물리적 디스크를 파티션으로 구성한 뒤 각각의 파티션에 file system을 깔거나 swapping 등 다른 용도로 사용 가능</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open()\"></a>open()</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem01.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem02.png\" alt=\"img\"></p>\n<ol>\n<li><p>open시스템 콜을 하면 운영체제에게 CPU 제어권이 넘어가</p>\n</li>\n<li><p>운영체제는 root를 먼저 open하여 root의 content를 찾아</p>\n</li>\n<li><p>a라는 파일의 메타데이터를 찾아서 이걸 메모리에 올려</p>\n</li>\n<li><p>a의 메타데이터로부터 a의 내용을 찾아</p>\n</li>\n<li><p>a안의 b의 metadata를 메모리에 올려</p>\n</li>\n</ol>\n<p>각 프로세스마다 그 프로세스가 오픈한 파일들에 대한 메타데이터 포인터를 가지고 있는 일종의 배열이 있어</p>\n<p>b의 metadata를 가리키고 있는 index 가 file discriptor (fd) 를 사용자 프로세스에게 리턴</p>\n<p>read(fd..)</p>\n<p>fd를 가진 파일에서 읽어와</p>\n<p>A의 PCB에 가서 해당 fd에 대응하는 파일의 metadata로부터 b의 내용에 접근</p>\n<p>b 내용을 읽어서 운영체제가 자신의 메모리 공간 일부에 읽어놓음.</p>\n<p>copy해서 사용자 프로그램에게 전달</p>\n<p>다른 프로그램이나 이 프로그램이 동일한 파일의 동일한 위치를 read 요청하면</p>\n<p>디스크까지 가는것이 아니라 운영체제가 읽어놓은거 바로 전달 </p>\n<p>이게 바로 Buffer caching</p>\n<h2 id=\"File-Protection\"><a href=\"#File-Protection\" class=\"headerlink\" title=\"File Protection\"></a>File Protection</h2><p>각 파일에 대해 누구에게 어떤 유형의 접근(read/write/execution) 을 허락할 것인가?</p>\n<p>Access Control 방법</p>\n<ul>\n<li><p>Access Control Matrix</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem03.png\" alt=\"img\"></p>\n<ul>\n<li>공간 낭비 발생해서</li>\n<li>Access Control List : 파일별로 누구에게 어떤 접근 권한이 있는지 ( Linked list )</li>\n<li>Capability : 사용자 별로 자신이 접근 권한을 가진 파일 및 해당 권한 (Linked List)</li>\n</ul>\n</li>\n<li><p>Grouping</p>\n<ul>\n<li>전체 user를 owner / group / public 의 세 그룹으로 구분</li>\n<li>각 파일에 대해서 세 그룹의 접근 권한(rwx)을 3 비트씩으로 표시</li>\n<li><p>9개의 비트만으로 표현 가능</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem04.png\" alt=\"img\"></p>\n</li>\n</ul>\n</li>\n<li><p>password</p>\n<ul>\n<li>파일 마다 패스워드 두는 방법 ( 디렉토리 파일에 두는 방법도 가능)</li>\n<li>모든 접근 권한에 대해 하나의 패스워드 : all or nothing</li>\n<li>접근 권한별 패스워드 : 암기문제, 관리문제</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"File-System의-Mounting\"><a href=\"#File-System의-Mounting\" class=\"headerlink\" title=\"File System의 Mounting\"></a>File System의 Mounting</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem05.png\" alt=\"img\"></p>\n<p>루트 파일 시스템의 특정 디렉토리 이름에 또 다른 파티션에 있는 파일 시스템을 마운팅 하면,</p>\n<p>마운트 된 디렉토리에 접근하면 또 다른 파일 시스템의 루트 디렉토리에 접근하게 됨</p>\n<h2 id=\"Access-Methods\"><a href=\"#Access-Methods\" class=\"headerlink\" title=\"Access Methods\"></a>Access Methods</h2><p>시스템이 제공하는 파일 정보의 접근 방식</p>\n<ul>\n<li>순차 접근<ul>\n<li>카세트 테이프를 사용하는 방식처럼 접근</li>\n<li>읽거나 쓰면 offset은 자동적으로 접근</li>\n<li>a b c 순서대로 저장되어 있는데 b 보고 싶으면 a를 먼저 접근해야함 </li>\n</ul>\n</li>\n<li>직접 접근<ul>\n<li>파일을 구성하는 레코드를 임의의 순서로 접근할 수 있음</li>\n<li>a b c 순서대로 저장되어 있는데 b 보고 싶으면 바로 볼 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Allocation-of-File-Data-in-Disk\"><a href=\"#Allocation-of-File-Data-in-Disk\" class=\"headerlink\" title=\"Allocation of File Data in Disk\"></a>Allocation of File Data in Disk</h2><ol>\n<li>contiguous allocation</li>\n<li>Linked Allocation</li>\n<li>Indexed Allocation</li>\n</ol>\n<h2 id=\"Contiguous-Allocation\"><a href=\"#Contiguous-Allocation\" class=\"headerlink\" title=\"Contiguous Allocation\"></a>Contiguous Allocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem06.png\" alt=\"img\"></p>\n<p>블럭의 크기가 2면, 0 1 이렇게 들어감.</p>\n<p>direcotory 에 5개의 파일 메타데이터를 가지고 있음</p>\n<p>0번 위치부터 길이 2면, 0 1 이렇게 저장됨</p>\n<ul>\n<li>단점<ul>\n<li>외부 조각이 생길 수 있어</li>\n<li>파일 크키가 커질 수 있다는 거에 제약 (=file grow가 어려움)</li>\n<li>파일 커질 것을 대비해서 미리 어느 정도 공간 할당하면 내부조각 발생 (공간의 낭비)</li>\n</ul>\n</li>\n<li>장점<ul>\n<li>Fast I/O</li>\n<li>한번의 seek/rotation 으로 많은 bite transfer</li>\n<li>Direct access(=random access) 가능</li>\n<li>mail의 경우, 앞에서부터 5번째 보고 싶다. 그럼 19에다가 5 더하면 돼</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Linked-Allocation\"><a href=\"#Linked-Allocation\" class=\"headerlink\" title=\"Linked Allocation\"></a>Linked Allocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem07.png\" alt=\"img\"></p>\n<p>jeep이란 파일의 시작은 9번이고, 두번째 블럭은 9번에 적혀 있어.</p>\n<p>시작위치만 directory가 가지고 있어.</p>\n<ul>\n<li>장점<ul>\n<li>외부조각 발생하지 않아</li>\n</ul>\n</li>\n<li>단점<ul>\n<li>직접 접근이 안돼</li>\n<li>4번째 위치 보려면 1, 2, 3 번째 봐야해</li>\n<li>한 sector가 고장나 pointer가 유실되면 많은 부분을 잃음</li>\n<li>pointer를 위한 공간이 block의 일부가 되어 공간 효율성이 떨어짐</li>\n</ul>\n</li>\n<li>변형<ul>\n<li>File allocation table (FAT) 파일 시스템</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Indexed-Allocation\"><a href=\"#Indexed-Allocation\" class=\"headerlink\" title=\"Indexed Allocation\"></a>Indexed Allocation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem08.png\" alt=\"img\"></p>\n<ul>\n<li>장점<ul>\n<li>외부 조각 발생하지 않아</li>\n<li>direct access 가능</li>\n</ul>\n</li>\n<li>단점 <ul>\n<li>small file의 경우 공간 낭비</li>\n<li>too large file의 경우 하나의 block으로 index저장하기에 부족<ul>\n<li>해결<ul>\n<li>linked scheme</li>\n<li>multil-level index</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"UNIX-파일-시스템의-구조\"><a href=\"#UNIX-파일-시스템의-구조\" class=\"headerlink\" title=\"UNIX 파일 시스템의 구조\"></a>UNIX 파일 시스템의 구조</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem09.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem10.png\" alt=\"img\"></p>\n<ul>\n<li>Boot block<ul>\n<li>어떤 파일 시스템이든 가장 먼저 나와</li>\n<li>부팅에 필요한 정보</li>\n</ul>\n</li>\n<li>Super block<ul>\n<li>파일 시스템에 관한 총체적인 정보 담고 있음</li>\n<li>어디가 빈 블럭이고 어디가 사용되고 있는지</li>\n<li>어디부터 Inode list이고 data block 이고 ..</li>\n</ul>\n</li>\n<li>Inode list<ul>\n<li>파일 하나당 Inode 하나 할당</li>\n<li>Inode는 그 파일의 메타데이터를 가지고 있어</li>\n<li>파일의 이름은 디렉토리가 직접 가지고 있어</li>\n<li>indirect : 따라가면 index를 거쳐서 파일의 위치 정보 찾아</li>\n</ul>\n</li>\n<li>Data block<ul>\n<li>파일의 실제 내용 보관</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"FAT-file-system\"><a href=\"#FAT-file-system\" class=\"headerlink\" title=\"FAT file system\"></a>FAT file system</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem11.png\" alt=\"img\"></p>\n<ul>\n<li>FAT<ul>\n<li>위치 정보만 FAT가 가지고 있어</li>\n<li>FAT의 217 번지에 217번지의 다음 블럭 번지가 저장되어 있어</li>\n<li>직접 접근 가능(메모리에 올라와 있는 FAT만 참고하여 바로 위치 알아낼 수 있어)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Free-Space-Management\"><a href=\"#Free-Space-Management\" class=\"headerlink\" title=\"Free-Space Management\"></a>Free-Space Management</h2><p>중간 중간 비어 있는 블럭은 어떻게 관리?</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem12.png\" alt=\"img\"></p>\n<ul>\n<li>bit<ul>\n<li>부가적인 공간을 필요</li>\n<li>연속적인 n개의 free block을 찾는데 효과적</li>\n<li>연속적으로 0인 공간을 찾는데 쉬워</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem13.png\" alt=\"img\"></p>\n<ul>\n<li><p>Linked Free-Space List on Disk</p>\n<ul>\n<li>모든 free block들을 링크로 연결 (free list)</li>\n<li>연속적인 가용 공간을 찾는 것은 쉽지 않다</li>\n<li>공간의 낭비가 없다</li>\n</ul>\n</li>\n<li><p>Grouping</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem20.png\" alt=\"img\"></p>\n<ul>\n<li>비어 있는 위치가 index 역할</li>\n<li><p>linked list 방법의 변형</p>\n</li>\n<li><p>첫번째 free block 이 n개의 포인터를 가짐</p>\n</li>\n</ul>\n</li>\n<li><p>Counting</p>\n<ul>\n<li>(first free block, # of contiguous free blocks) 을 유지 </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Directory-Implementation\"><a href=\"#Directory-Implementation\" class=\"headerlink\" title=\"Directory Implementation\"></a>Directory Implementation</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem14.png\" alt=\"img\"></p>\n<ul>\n<li>Linear list<ul>\n<li>&lt;file name, file의 metadata)의 list</li>\n<li>구현이 간단</li>\n<li>디렉토리 내에 파일이 있는지 찾기위해서는 linear search 필요</li>\n</ul>\n</li>\n<li><p>Hash table</p>\n<ul>\n<li>linear list + hashing</li>\n<li>file name을 이 파일의 linear list의 위치로 바꿔줌</li>\n<li>search time을 없앰</li>\n<li>collision 발생 가능</li>\n</ul>\n</li>\n<li><p>file 의 metadata 보관 위치</p>\n<ul>\n<li>디렉토리 내에 직접 보관</li>\n<li>디렉토리에는 포인터를 두고 다른 곳에 보관<ul>\n<li>inode, FAT 등</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Long file name의 지원</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem15.png\" alt=\"img\"></p>\n<ul>\n<li><file name,=\"\" file의=\"\" 메타데이터=\"\"> 의 리스트에서 각 entry는 일반적으로 고정 크기</file></li>\n<li>file name이 고정 크기의 entry길이보다 길어지는 경우 entry의 마지막 부분에 이름의 뒷 부분이 위치한 곳의 포인터를 두는 방법</li>\n<li>이름의 나머지 부분은 동일한 directory file의 일부에 존재</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"VFS-and-NFS\"><a href=\"#VFS-and-NFS\" class=\"headerlink\" title=\"VFS and NFS\"></a>VFS and NFS</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem16.png\" alt=\"img\"></p>\n<ul>\n<li>Virtual File System (VFS)<ul>\n<li>서로 다른 다양한 file system에 대해 동일한 시스템콜 인터페이스를 통해 접근할 수 있게 해주는 OS의 layer</li>\n</ul>\n</li>\n<li>Network File System<ul>\n<li>분산 시스템에서는 네트워크를 통해 파일이 공유될 수 있음</li>\n<li>분산 환경에서의 대표적인 파일 공유 방법</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Page-cache-and-Buffer-cache\"><a href=\"#Page-cache-and-Buffer-cache\" class=\"headerlink\" title=\"Page cache and Buffer cache\"></a>Page cache and Buffer cache</h2><p>OS는 사용자 프로그램의 요청을 받아서 디스크에서 읽어온 내용을 그냥 전달하고 끝내는 것이 아니라, 자신의 버퍼 케쉬 영역에 읽어 놓고, 그 내용을 카피해서 사용자 프로그램에게 넘겨줘</p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem17.png\" alt=\"img\"></p>\n<ul>\n<li>Page cache<ul>\n<li>Virtual memory의 pagin system에서 사용하는 pafe frame을 caching의 관점에서 설명하는 용어</li>\n<li>Memory-Mapped I/O를 쓰는 경우 file의 I/O에서도 page cache 사용</li>\n</ul>\n</li>\n<li>Memory-Mapped I/O<ul>\n<li>file의 일부를 virtual memory에 mapping</li>\n<li>매핑 시킨 영역에 대한 메모리 접근 연산은 파일의 입출력을 수행하게 함</li>\n</ul>\n</li>\n<li>Buffer cache<ul>\n<li>파일 시스템을 통한 I/O 연산은 메모리의 특정 영역인 buffer cache사용</li>\n<li>file 사용의 locality 활용</li>\n<li>한번 읽어온 block에 대한 후속 요청시 buffer cache에서 즉시 전달</li>\n<li>모든 프로세스가 공용으로 사용</li>\n<li>Replacement algiritm 필요(LRU, LFU 등)</li>\n</ul>\n</li>\n<li>Unified Buffer Cache<ul>\n<li>최근의 OS에서는 기존의 buffer cahce가 page cache에 통합</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/osfilesystem18.png\" alt=\"img\"></p>\n<ul>\n<li>왼쪽<ul>\n<li>read/write system call 하면 항상 OS에게 요청해서 받아옴</li>\n<li>memory mapped IO를 쓰면, 일단 페이지 케쉬에 올라온 내용을 사용자 프로세스가 직접 메모리 접근해서 IO (이미 메모리에 올라온 내용은 커널의 도움을 받지 않음)</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Virtual Memory","date":"2018-10-10T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png","_content":"\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## Demand Paging \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP01.png)\n\n- 실제로 필요할 때 page를 메모리에 올리는 것\n  - I/O양의 감소\n  - Memory 사용량 감소\n  - 빠른 응답 시간\n  - 더 많은 사용자 수용\n\n- Valid / Invalid bit의 사용\n  - Valid\n    - 사용되지 않는 주소 영역인 경우\n    - 페이지가 물리적 메모리에 없는 경우\n  - 처음에는 모든 page entry 가 invalid로 초기화\n  - address translation 시에 invalid bit이 set되어 있으면 \"page fault\"\n    - 요청한 페이지가 메모리에 없는 경우\n    - 운영체제가 CPU를 가지고 fault난 페이지를 메모리에 올림 \n\n## Page Fault\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP02.png)\n\n- invalid page를 접근하면 MMU가 trap을 발생시키고 (page fault trap)\n  - Kernel mode로 들어가서 page fault handler 가 invoke 됨\n- 다음과 같은 순서로 page fault 를 처리\n  - invalid reference? (eg. bad address, protection violation) => abort process\n    - 잘못된 요청인지 아닌지 체크하는 것\n  - get an empty page frame (replace : 없으면 뺏어온다)\n  - 해당 페이지를 disk 에서 memory로 읽어온다\n    - disk I/O가 끝나기까지 이 프로세스는 CPU를 preempt 당함 (block)\n    - Dist read가 끝나면 page tables entry 기록, valid/invalid bit = \"valid\"\n    - ready queue에 process를 insert -> dispatch later\n  - 이 프로세스가 CPU를 잡고 다시 running\n  - 아까 중단되었던 instruction 재개\n\n## Page Replacement\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP03.png)\n\n- Page replacement\n  - 어떤 frame을 빼앗아 올지 결정\n  - 곧바로 사용되지 않을 page를 쫗아내는 것이 좋음\n  - 동일한 페이지가 여러번 메모리에서 쫓겨났다가 다시 들어올 수 있음\n- Replacement Algoritm\n  - page fault rate을 최소화 하는 것이 목표\n  - 알고리즘을 평가 : 주어진 page reference string에 대해 page fault를 얼마나 내는지 조사\n\n## Optimal Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP04.png)\n\n- 미래에 참조되는 페이지들을 미리 다 안다고 가정 : Offiline algorithm\n- 가장 먼 미래에 참조되는 페이지를 replace\n  - 네모칸 : 메모리\n  - 빨간색 : 페이지 폴트 난 경우\n  - 연보라 : 페이지 폴트 나지 않고 이미 메모리에 올라가 있는 경우\n- 5번이 처음으로 참조 되는 경우\n  - 1번이 바로 다음으로 참조되기 때문에, 메모리에서 쫓겨나지 않아\n  - 4번이 가장 먼 미래에 참조되기 때문에, 4번이 쫓겨나\n\n## FIFO Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP05.png)\n\n메모리에 먼저 들어온 것을 먼저 내쫓음\n\nFIFO Anomaly : 메모리 크기 들어나면 성능이 안좋아져\n\n## LRU(Least Recently Used) Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP06.png)\n\n가장 오래전에 참조된 것을 지움\n\n- 5번이 처음으로 참조 되는 경우를 보면,\n  - 2번이 가장 최근에 참조\n  - 그 다음에 1번, 4번\n  - 가장 오래 전에 참조된 것이 3번\n\n## LFU (Least Frequently Used) Algorithm\n\n참조 횟수가 가장 적은 페이지를 지움\n\n- 최저 참조 횟수인 page가 여럿 있는 경우\n  - 여러 page 중 임의로 선정\n  - 선능 향상을 위해 가장 오래 전에 참조된 page를 지우게 구현할 수도 있다\n\n## LRU / LFU 비교\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP07.png)\n\n- LRU\n  - 1번이 가장 오래 전에 참조되긴 했지만,\n  - 과거에 많은 참조가 있었다는 것을 무시\n- LFU\n  - 비록 4번이 참조횟수가 한 번이지만\n  - 이제 막 참조가 시작되는 걸 쫓아냄\n\n## LRU / LFU 구현\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP09.png)\n\n- LRU\n  - 어떤 페이지가 참조될 때마다 그 페이지를 제일 아래 쪽에 매달고\n  - 쫓아낼 때는 제일 위에 있는걸 쫓아내\n- LFU\n  - 참조 횟수 1이 늘어나면\n  - 비교를 해서 어디까지 내려갈 수 있는지 체크 (min-heap으로 구현)\n\n## Caching\n\n- 캐슁 기법\n  - 한정된 빠른 공강(cache)에 요청된 데이터를 저장해 두었다가 후속 요청히 캐쉬로부터 직접 서비스\n  - paging sytem 외에도 cache memory, buffer caching, Web caching등 다양한 분야에 사용\n- 시간 제약\n  - 교체 알고리즘에서 삭제할 항목을 결정하는 일에 지나치게 많은 시간이 걸리는 경우 실제 시스템에서 사용할 수 없음\n  - Buffer caching 이나 Web caching인 경우\n    - O(1) 에서 O(logn) 정도까지 허용\n  - Pagin System 인 경우\n    - page fault 인 경우에만 OS가 관여\n    - 페이지가 이미 메모리에 존재하는 경우 참조 시각등의 정보를 OS가 알 수 없음\n    - O(1)인 LRU의 list 조작 조차 불가능 \n\n## Paging System에서 LRU, LFU 가능한가?\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP10.png)\n\n- page fault가 발생하면, trap 발생하여 CPU 제어권이 OS에게 넘어가\n\n  - OS가 LRU 알고리즘을 사용한다면, OS가 가장 오래 전에 참조된 페이지를 알 수 있는가? NO\n\n  - OS가 LFU 알고리즘을 사용한다면, OS가 가장 참조 횟수가 적은 페이지를 알 수 있는가? NO\n\n- 프로세스가 요청한 페이지가 이미 메모리에 올라와있으면 \n  - 운영체제에게 CPU가 넘어가지 않고\n  - 하드웨어적으로 주소 변환해서 CPU가 바로 읽어들여\n  - 그러면 이 페이지의 접근 시간을 운영체제는 몰라\n\n## Clock Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP11.png)\n\n- LRU의 근사 알고리즘\n- 여러 명칭\n  - Second chance algorithm\n  - NUR ( Not Used Recently)\n  - NRU ( Not Recently Used)\n- Reference bit을 사용해서 교체 대상 페이지 선정 (circular list)\n  - Reference bit가 0 인 것을 찾을 때 까지 포인터를 하나씩 앞으로 이동\n  - 포인터 이동하는 중에 reference bit 1은 모두 0으로 바꿈\n  - reference bit 이 0인 것을 찾으면 그 페이지를 교체\n  - 한 바퀴 되돌아와서도 (second chance) 0이면 그때에는 replace 당함\n  - 자주 사용되는 페이지라면 second chance가 올 때 1\n- 개선\n  - reference bit과 modified bit (dirty bit)을 함께 사용\n  - reference bit ==1 : 최근에 참조된 페이지\n  - modified bit == 1 : 최근에 변경된 페이지 ( I/O를 동반하는 페이지 )\n\n- 사각형 \n  - 페이지 프레임\n  - 물리적인 메모리에 들어있는 페이지\n- reference bit가 1이면 최근에 참조되 페이지이기 때문에 0으로 바꾸고 다음으로 넘어가\n- 어떤 페이지를 쫓아내야하는데, modified bit가 1이면 \n  - 그 페이지는 메모리에 올라온 이후로 적어도 한 번은 CPU에서 write를 한것. 내용을 수정한 것. \n  - 이 페이지를 메모리로부터 쫓겨낼 때는 backing store에 수정된 내용을 반영하고 쫓아내.\n\n## Page Frame의 Allocation\n\n각 프로세스에 얼만큼의 page frame을 할당할 것인가.\n\n- Equal allocation\n  - 모든 프로세스에 똑같은 개수 할당\n- Proportional allocation\n  - 프로세스 크기에 비례하여 할당\n- Priority allocation\n  - 프로세스의 priority 에 따라 다르게 할당\n\n## Global vs Local Replacement\n\n- Globlal replacement\n\n  - 다른 프로그램의 페이지도 쫓아낼 수 있음\n\n  - replace 시 다른 프로세스에 할당된 frame을 빼앗아 올 수 있다\n  - 프로세스별 할당량을 조절하는 또 다른 방법\n  - FIFO, LRU, LFU 등의 알고리즘을 globla replacement 사용시에 해당\n  - working set / PFF 알고리즘 사용\n\n- Local replacement\n\n  - 자신에게 할당된 frame 내에서만 replacement\n  - FIFO, LRU, LFU 등의 알고리즘을 프로세스 별로 운영시\n\n## Thrashing\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP12.png)\n\n- 프로세스의 원활한 수행에 필요한 최소한의 page frame 수를 할당 받지 못한 경우 발생\n\n  - pafe fault rate이 매우 높아짐\n\n  - CPU utilization이 매우 낮아짐\n\n- OS는 MPF (Multiprogramming degree)를 높여야 한다고 판단\n\n  - 또 다른 프로세스가 시스템에 추가됨 (higher MPD)\n\n  - 프로세스 당 할당된 프레임의 수가 더욱 감소\n\n  - 프로세스는 페이지의 swap in / swap out 으로 매우 바쁨\n\n  - 대부분의 시간에 CPU는 한가함\n  - low throughput\n\n- x 축\n  - 지금 메모리에 올라와있는 프로그램의 개수\n\n- 프로그램 하나만 올라가 있으면 \n  - CPU utilizaiton이 낮아 => IO를 하러 가면, CPU는 놀아\n\n- 계속해서 메모리에 올라와있는 프로그램의 개수 올리면 thrashing 발생\n  - CPU가 인스트럭션 수행하려고 하면 그 페이지게 메모리에 없어서 IO를 해\n  - 또 다른 프로그램에게 CPU가 넘어가 또 요청한 페이지가 메모리에 없어서 IO를 해\n\n## Working-Set model\n\n- Locality of reference\n  - 프로세스는 특정 시간 동안 일정 장소만을 집중적으로 참조\n  - 집중적으로 참조되는 해당 page들의 집합을 locality set이라 함\n- working set model\n  - locality에 기반하여 프로세스가 일정 시간 동안 원활하게 수행되기 위해 한꺼번에 메모리에 올라와 있어야 하는 page들의 집합을 working set 이라 정의함\n  - working set 모델에서는 process의 working set 전체가 메모리에 올라와 있어야 수행되고 그렇지 않을 경우 모든 frame을 반납한 후 swap out(suspend)\n  - thrashing을 방지\n  - multiprogramming degree를 결정\n\n## Working-Set Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP13.png)\n\nWorking set의 결정\n\n- Wokring set window를 통해 알아냄\n- 과거 델타 시간(window) 동안 참조된 페이지들을 working set이라 간주해서 쫓아내지 않고 메모리에 유지\n- 참조된 후 델타 시간 동안 해당 Page를 메모리에 유지한 후 버림\n\n## PFF (Page-Fault Frequency) Scheme\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP14.png)\n\n현재 시점에 page fault 얼마나 났는지 직접 봐. 프로그램이 pafe fault 얼마나 내는지 봐.\n\n- 이 프로그램이 pafe fault 많이 내고 있으면,  \n\n  - 이 프로그램의 working set이 메모리에 보장되고 있지 않구나.\n\n  - 페이지를 더줘.\n\n- pafe fault rate의 상한값과 하한값을 둔다\n\n  - pafe fault rate이 상한값을 넘으면 프레임을 더 할당\n\n  - 하한값 이하이면 프레임 수를 줄임\n\n- 빈 프레임이 없으면 일부 프로세스를 swap out\n\n## Page Size의 결정\n\n- Page size를 감소시키면\n\n  - 페이지 수 증가\n\n  - 페이지 테이블 크기 중가\n\n  - internal fragmentation 감소\n\n  - Disk transfer 의 효율성 감소\n\n- 필요한 정보만 메모리에 올라와 메모리 이용이 효율적\n  - locality 활용 측면에서는 좋지 않음\n\n- trend\n  - Larger page size","source":"_posts/2018-10-11-Virtual Memory.md","raw":"---\nlayout: post\ntitle:  \"Virtual Memory\"\ndate:   2018-10-11\ncategories: OS\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/os.png\n---\n\n출처 : 이화여자대학교 반효경 (http://www.kocw.net/home/search/kemView.do?kemId=1046323)\n\n## Demand Paging \n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP01.png)\n\n- 실제로 필요할 때 page를 메모리에 올리는 것\n  - I/O양의 감소\n  - Memory 사용량 감소\n  - 빠른 응답 시간\n  - 더 많은 사용자 수용\n\n- Valid / Invalid bit의 사용\n  - Valid\n    - 사용되지 않는 주소 영역인 경우\n    - 페이지가 물리적 메모리에 없는 경우\n  - 처음에는 모든 page entry 가 invalid로 초기화\n  - address translation 시에 invalid bit이 set되어 있으면 \"page fault\"\n    - 요청한 페이지가 메모리에 없는 경우\n    - 운영체제가 CPU를 가지고 fault난 페이지를 메모리에 올림 \n\n## Page Fault\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP02.png)\n\n- invalid page를 접근하면 MMU가 trap을 발생시키고 (page fault trap)\n  - Kernel mode로 들어가서 page fault handler 가 invoke 됨\n- 다음과 같은 순서로 page fault 를 처리\n  - invalid reference? (eg. bad address, protection violation) => abort process\n    - 잘못된 요청인지 아닌지 체크하는 것\n  - get an empty page frame (replace : 없으면 뺏어온다)\n  - 해당 페이지를 disk 에서 memory로 읽어온다\n    - disk I/O가 끝나기까지 이 프로세스는 CPU를 preempt 당함 (block)\n    - Dist read가 끝나면 page tables entry 기록, valid/invalid bit = \"valid\"\n    - ready queue에 process를 insert -> dispatch later\n  - 이 프로세스가 CPU를 잡고 다시 running\n  - 아까 중단되었던 instruction 재개\n\n## Page Replacement\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP03.png)\n\n- Page replacement\n  - 어떤 frame을 빼앗아 올지 결정\n  - 곧바로 사용되지 않을 page를 쫗아내는 것이 좋음\n  - 동일한 페이지가 여러번 메모리에서 쫓겨났다가 다시 들어올 수 있음\n- Replacement Algoritm\n  - page fault rate을 최소화 하는 것이 목표\n  - 알고리즘을 평가 : 주어진 page reference string에 대해 page fault를 얼마나 내는지 조사\n\n## Optimal Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP04.png)\n\n- 미래에 참조되는 페이지들을 미리 다 안다고 가정 : Offiline algorithm\n- 가장 먼 미래에 참조되는 페이지를 replace\n  - 네모칸 : 메모리\n  - 빨간색 : 페이지 폴트 난 경우\n  - 연보라 : 페이지 폴트 나지 않고 이미 메모리에 올라가 있는 경우\n- 5번이 처음으로 참조 되는 경우\n  - 1번이 바로 다음으로 참조되기 때문에, 메모리에서 쫓겨나지 않아\n  - 4번이 가장 먼 미래에 참조되기 때문에, 4번이 쫓겨나\n\n## FIFO Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP05.png)\n\n메모리에 먼저 들어온 것을 먼저 내쫓음\n\nFIFO Anomaly : 메모리 크기 들어나면 성능이 안좋아져\n\n## LRU(Least Recently Used) Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP06.png)\n\n가장 오래전에 참조된 것을 지움\n\n- 5번이 처음으로 참조 되는 경우를 보면,\n  - 2번이 가장 최근에 참조\n  - 그 다음에 1번, 4번\n  - 가장 오래 전에 참조된 것이 3번\n\n## LFU (Least Frequently Used) Algorithm\n\n참조 횟수가 가장 적은 페이지를 지움\n\n- 최저 참조 횟수인 page가 여럿 있는 경우\n  - 여러 page 중 임의로 선정\n  - 선능 향상을 위해 가장 오래 전에 참조된 page를 지우게 구현할 수도 있다\n\n## LRU / LFU 비교\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP07.png)\n\n- LRU\n  - 1번이 가장 오래 전에 참조되긴 했지만,\n  - 과거에 많은 참조가 있었다는 것을 무시\n- LFU\n  - 비록 4번이 참조횟수가 한 번이지만\n  - 이제 막 참조가 시작되는 걸 쫓아냄\n\n## LRU / LFU 구현\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP08.png)\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP09.png)\n\n- LRU\n  - 어떤 페이지가 참조될 때마다 그 페이지를 제일 아래 쪽에 매달고\n  - 쫓아낼 때는 제일 위에 있는걸 쫓아내\n- LFU\n  - 참조 횟수 1이 늘어나면\n  - 비교를 해서 어디까지 내려갈 수 있는지 체크 (min-heap으로 구현)\n\n## Caching\n\n- 캐슁 기법\n  - 한정된 빠른 공강(cache)에 요청된 데이터를 저장해 두었다가 후속 요청히 캐쉬로부터 직접 서비스\n  - paging sytem 외에도 cache memory, buffer caching, Web caching등 다양한 분야에 사용\n- 시간 제약\n  - 교체 알고리즘에서 삭제할 항목을 결정하는 일에 지나치게 많은 시간이 걸리는 경우 실제 시스템에서 사용할 수 없음\n  - Buffer caching 이나 Web caching인 경우\n    - O(1) 에서 O(logn) 정도까지 허용\n  - Pagin System 인 경우\n    - page fault 인 경우에만 OS가 관여\n    - 페이지가 이미 메모리에 존재하는 경우 참조 시각등의 정보를 OS가 알 수 없음\n    - O(1)인 LRU의 list 조작 조차 불가능 \n\n## Paging System에서 LRU, LFU 가능한가?\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP10.png)\n\n- page fault가 발생하면, trap 발생하여 CPU 제어권이 OS에게 넘어가\n\n  - OS가 LRU 알고리즘을 사용한다면, OS가 가장 오래 전에 참조된 페이지를 알 수 있는가? NO\n\n  - OS가 LFU 알고리즘을 사용한다면, OS가 가장 참조 횟수가 적은 페이지를 알 수 있는가? NO\n\n- 프로세스가 요청한 페이지가 이미 메모리에 올라와있으면 \n  - 운영체제에게 CPU가 넘어가지 않고\n  - 하드웨어적으로 주소 변환해서 CPU가 바로 읽어들여\n  - 그러면 이 페이지의 접근 시간을 운영체제는 몰라\n\n## Clock Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP11.png)\n\n- LRU의 근사 알고리즘\n- 여러 명칭\n  - Second chance algorithm\n  - NUR ( Not Used Recently)\n  - NRU ( Not Recently Used)\n- Reference bit을 사용해서 교체 대상 페이지 선정 (circular list)\n  - Reference bit가 0 인 것을 찾을 때 까지 포인터를 하나씩 앞으로 이동\n  - 포인터 이동하는 중에 reference bit 1은 모두 0으로 바꿈\n  - reference bit 이 0인 것을 찾으면 그 페이지를 교체\n  - 한 바퀴 되돌아와서도 (second chance) 0이면 그때에는 replace 당함\n  - 자주 사용되는 페이지라면 second chance가 올 때 1\n- 개선\n  - reference bit과 modified bit (dirty bit)을 함께 사용\n  - reference bit ==1 : 최근에 참조된 페이지\n  - modified bit == 1 : 최근에 변경된 페이지 ( I/O를 동반하는 페이지 )\n\n- 사각형 \n  - 페이지 프레임\n  - 물리적인 메모리에 들어있는 페이지\n- reference bit가 1이면 최근에 참조되 페이지이기 때문에 0으로 바꾸고 다음으로 넘어가\n- 어떤 페이지를 쫓아내야하는데, modified bit가 1이면 \n  - 그 페이지는 메모리에 올라온 이후로 적어도 한 번은 CPU에서 write를 한것. 내용을 수정한 것. \n  - 이 페이지를 메모리로부터 쫓겨낼 때는 backing store에 수정된 내용을 반영하고 쫓아내.\n\n## Page Frame의 Allocation\n\n각 프로세스에 얼만큼의 page frame을 할당할 것인가.\n\n- Equal allocation\n  - 모든 프로세스에 똑같은 개수 할당\n- Proportional allocation\n  - 프로세스 크기에 비례하여 할당\n- Priority allocation\n  - 프로세스의 priority 에 따라 다르게 할당\n\n## Global vs Local Replacement\n\n- Globlal replacement\n\n  - 다른 프로그램의 페이지도 쫓아낼 수 있음\n\n  - replace 시 다른 프로세스에 할당된 frame을 빼앗아 올 수 있다\n  - 프로세스별 할당량을 조절하는 또 다른 방법\n  - FIFO, LRU, LFU 등의 알고리즘을 globla replacement 사용시에 해당\n  - working set / PFF 알고리즘 사용\n\n- Local replacement\n\n  - 자신에게 할당된 frame 내에서만 replacement\n  - FIFO, LRU, LFU 등의 알고리즘을 프로세스 별로 운영시\n\n## Thrashing\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP12.png)\n\n- 프로세스의 원활한 수행에 필요한 최소한의 page frame 수를 할당 받지 못한 경우 발생\n\n  - pafe fault rate이 매우 높아짐\n\n  - CPU utilization이 매우 낮아짐\n\n- OS는 MPF (Multiprogramming degree)를 높여야 한다고 판단\n\n  - 또 다른 프로세스가 시스템에 추가됨 (higher MPD)\n\n  - 프로세스 당 할당된 프레임의 수가 더욱 감소\n\n  - 프로세스는 페이지의 swap in / swap out 으로 매우 바쁨\n\n  - 대부분의 시간에 CPU는 한가함\n  - low throughput\n\n- x 축\n  - 지금 메모리에 올라와있는 프로그램의 개수\n\n- 프로그램 하나만 올라가 있으면 \n  - CPU utilizaiton이 낮아 => IO를 하러 가면, CPU는 놀아\n\n- 계속해서 메모리에 올라와있는 프로그램의 개수 올리면 thrashing 발생\n  - CPU가 인스트럭션 수행하려고 하면 그 페이지게 메모리에 없어서 IO를 해\n  - 또 다른 프로그램에게 CPU가 넘어가 또 요청한 페이지가 메모리에 없어서 IO를 해\n\n## Working-Set model\n\n- Locality of reference\n  - 프로세스는 특정 시간 동안 일정 장소만을 집중적으로 참조\n  - 집중적으로 참조되는 해당 page들의 집합을 locality set이라 함\n- working set model\n  - locality에 기반하여 프로세스가 일정 시간 동안 원활하게 수행되기 위해 한꺼번에 메모리에 올라와 있어야 하는 page들의 집합을 working set 이라 정의함\n  - working set 모델에서는 process의 working set 전체가 메모리에 올라와 있어야 수행되고 그렇지 않을 경우 모든 frame을 반납한 후 swap out(suspend)\n  - thrashing을 방지\n  - multiprogramming degree를 결정\n\n## Working-Set Algorithm\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP13.png)\n\nWorking set의 결정\n\n- Wokring set window를 통해 알아냄\n- 과거 델타 시간(window) 동안 참조된 페이지들을 working set이라 간주해서 쫓아내지 않고 메모리에 유지\n- 참조된 후 델타 시간 동안 해당 Page를 메모리에 유지한 후 버림\n\n## PFF (Page-Fault Frequency) Scheme\n\n![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP14.png)\n\n현재 시점에 page fault 얼마나 났는지 직접 봐. 프로그램이 pafe fault 얼마나 내는지 봐.\n\n- 이 프로그램이 pafe fault 많이 내고 있으면,  \n\n  - 이 프로그램의 working set이 메모리에 보장되고 있지 않구나.\n\n  - 페이지를 더줘.\n\n- pafe fault rate의 상한값과 하한값을 둔다\n\n  - pafe fault rate이 상한값을 넘으면 프레임을 더 할당\n\n  - 하한값 이하이면 프레임 수를 줄임\n\n- 빈 프레임이 없으면 일부 프로세스를 swap out\n\n## Page Size의 결정\n\n- Page size를 감소시키면\n\n  - 페이지 수 증가\n\n  - 페이지 테이블 크기 중가\n\n  - internal fragmentation 감소\n\n  - Disk transfer 의 효율성 감소\n\n- 필요한 정보만 메모리에 올라와 메모리 이용이 효율적\n  - locality 활용 측면에서는 좋지 않음\n\n- trend\n  - Larger page size","slug":"2018-10-11-Virtual Memory","published":1,"updated":"2018-10-11T02:47:35.546Z","comments":1,"photos":[],"link":"","_id":"cjp6k665300ka31x7dh4mh90l","content":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"Demand-Paging\"><a href=\"#Demand-Paging\" class=\"headerlink\" title=\"Demand Paging\"></a>Demand Paging</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP01.png\" alt=\"img\"></p>\n<ul>\n<li><p>실제로 필요할 때 page를 메모리에 올리는 것</p>\n<ul>\n<li>I/O양의 감소</li>\n<li>Memory 사용량 감소</li>\n<li>빠른 응답 시간</li>\n<li>더 많은 사용자 수용</li>\n</ul>\n</li>\n<li><p>Valid / Invalid bit의 사용</p>\n<ul>\n<li>Valid<ul>\n<li>사용되지 않는 주소 영역인 경우</li>\n<li>페이지가 물리적 메모리에 없는 경우</li>\n</ul>\n</li>\n<li>처음에는 모든 page entry 가 invalid로 초기화</li>\n<li>address translation 시에 invalid bit이 set되어 있으면 “page fault”<ul>\n<li>요청한 페이지가 메모리에 없는 경우</li>\n<li>운영체제가 CPU를 가지고 fault난 페이지를 메모리에 올림 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Page-Fault\"><a href=\"#Page-Fault\" class=\"headerlink\" title=\"Page Fault\"></a>Page Fault</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP02.png\" alt=\"img\"></p>\n<ul>\n<li>invalid page를 접근하면 MMU가 trap을 발생시키고 (page fault trap)<ul>\n<li>Kernel mode로 들어가서 page fault handler 가 invoke 됨</li>\n</ul>\n</li>\n<li>다음과 같은 순서로 page fault 를 처리<ul>\n<li>invalid reference? (eg. bad address, protection violation) =&gt; abort process<ul>\n<li>잘못된 요청인지 아닌지 체크하는 것</li>\n</ul>\n</li>\n<li>get an empty page frame (replace : 없으면 뺏어온다)</li>\n<li>해당 페이지를 disk 에서 memory로 읽어온다<ul>\n<li>disk I/O가 끝나기까지 이 프로세스는 CPU를 preempt 당함 (block)</li>\n<li>Dist read가 끝나면 page tables entry 기록, valid/invalid bit = “valid”</li>\n<li>ready queue에 process를 insert -&gt; dispatch later</li>\n</ul>\n</li>\n<li>이 프로세스가 CPU를 잡고 다시 running</li>\n<li>아까 중단되었던 instruction 재개</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Page-Replacement\"><a href=\"#Page-Replacement\" class=\"headerlink\" title=\"Page Replacement\"></a>Page Replacement</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP03.png\" alt=\"img\"></p>\n<ul>\n<li>Page replacement<ul>\n<li>어떤 frame을 빼앗아 올지 결정</li>\n<li>곧바로 사용되지 않을 page를 쫗아내는 것이 좋음</li>\n<li>동일한 페이지가 여러번 메모리에서 쫓겨났다가 다시 들어올 수 있음</li>\n</ul>\n</li>\n<li>Replacement Algoritm<ul>\n<li>page fault rate을 최소화 하는 것이 목표</li>\n<li>알고리즘을 평가 : 주어진 page reference string에 대해 page fault를 얼마나 내는지 조사</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Optimal-Algorithm\"><a href=\"#Optimal-Algorithm\" class=\"headerlink\" title=\"Optimal Algorithm\"></a>Optimal Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP04.png\" alt=\"img\"></p>\n<ul>\n<li>미래에 참조되는 페이지들을 미리 다 안다고 가정 : Offiline algorithm</li>\n<li>가장 먼 미래에 참조되는 페이지를 replace<ul>\n<li>네모칸 : 메모리</li>\n<li>빨간색 : 페이지 폴트 난 경우</li>\n<li>연보라 : 페이지 폴트 나지 않고 이미 메모리에 올라가 있는 경우</li>\n</ul>\n</li>\n<li>5번이 처음으로 참조 되는 경우<ul>\n<li>1번이 바로 다음으로 참조되기 때문에, 메모리에서 쫓겨나지 않아</li>\n<li>4번이 가장 먼 미래에 참조되기 때문에, 4번이 쫓겨나</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"FIFO-Algorithm\"><a href=\"#FIFO-Algorithm\" class=\"headerlink\" title=\"FIFO Algorithm\"></a>FIFO Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP05.png\" alt=\"img\"></p>\n<p>메모리에 먼저 들어온 것을 먼저 내쫓음</p>\n<p>FIFO Anomaly : 메모리 크기 들어나면 성능이 안좋아져</p>\n<h2 id=\"LRU-Least-Recently-Used-Algorithm\"><a href=\"#LRU-Least-Recently-Used-Algorithm\" class=\"headerlink\" title=\"LRU(Least Recently Used) Algorithm\"></a>LRU(Least Recently Used) Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP06.png\" alt=\"img\"></p>\n<p>가장 오래전에 참조된 것을 지움</p>\n<ul>\n<li>5번이 처음으로 참조 되는 경우를 보면,<ul>\n<li>2번이 가장 최근에 참조</li>\n<li>그 다음에 1번, 4번</li>\n<li>가장 오래 전에 참조된 것이 3번</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"LFU-Least-Frequently-Used-Algorithm\"><a href=\"#LFU-Least-Frequently-Used-Algorithm\" class=\"headerlink\" title=\"LFU (Least Frequently Used) Algorithm\"></a>LFU (Least Frequently Used) Algorithm</h2><p>참조 횟수가 가장 적은 페이지를 지움</p>\n<ul>\n<li>최저 참조 횟수인 page가 여럿 있는 경우<ul>\n<li>여러 page 중 임의로 선정</li>\n<li>선능 향상을 위해 가장 오래 전에 참조된 page를 지우게 구현할 수도 있다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"LRU-LFU-비교\"><a href=\"#LRU-LFU-비교\" class=\"headerlink\" title=\"LRU / LFU 비교\"></a>LRU / LFU 비교</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP07.png\" alt=\"img\"></p>\n<ul>\n<li>LRU<ul>\n<li>1번이 가장 오래 전에 참조되긴 했지만,</li>\n<li>과거에 많은 참조가 있었다는 것을 무시</li>\n</ul>\n</li>\n<li>LFU<ul>\n<li>비록 4번이 참조횟수가 한 번이지만</li>\n<li>이제 막 참조가 시작되는 걸 쫓아냄</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"LRU-LFU-구현\"><a href=\"#LRU-LFU-구현\" class=\"headerlink\" title=\"LRU / LFU 구현\"></a>LRU / LFU 구현</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP09.png\" alt=\"img\"></p>\n<ul>\n<li>LRU<ul>\n<li>어떤 페이지가 참조될 때마다 그 페이지를 제일 아래 쪽에 매달고</li>\n<li>쫓아낼 때는 제일 위에 있는걸 쫓아내</li>\n</ul>\n</li>\n<li>LFU<ul>\n<li>참조 횟수 1이 늘어나면</li>\n<li>비교를 해서 어디까지 내려갈 수 있는지 체크 (min-heap으로 구현)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Caching\"><a href=\"#Caching\" class=\"headerlink\" title=\"Caching\"></a>Caching</h2><ul>\n<li>캐슁 기법<ul>\n<li>한정된 빠른 공강(cache)에 요청된 데이터를 저장해 두었다가 후속 요청히 캐쉬로부터 직접 서비스</li>\n<li>paging sytem 외에도 cache memory, buffer caching, Web caching등 다양한 분야에 사용</li>\n</ul>\n</li>\n<li>시간 제약<ul>\n<li>교체 알고리즘에서 삭제할 항목을 결정하는 일에 지나치게 많은 시간이 걸리는 경우 실제 시스템에서 사용할 수 없음</li>\n<li>Buffer caching 이나 Web caching인 경우<ul>\n<li>O(1) 에서 O(logn) 정도까지 허용</li>\n</ul>\n</li>\n<li>Pagin System 인 경우<ul>\n<li>page fault 인 경우에만 OS가 관여</li>\n<li>페이지가 이미 메모리에 존재하는 경우 참조 시각등의 정보를 OS가 알 수 없음</li>\n<li>O(1)인 LRU의 list 조작 조차 불가능 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Paging-System에서-LRU-LFU-가능한가\"><a href=\"#Paging-System에서-LRU-LFU-가능한가\" class=\"headerlink\" title=\"Paging System에서 LRU, LFU 가능한가?\"></a>Paging System에서 LRU, LFU 가능한가?</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP10.png\" alt=\"img\"></p>\n<ul>\n<li><p>page fault가 발생하면, trap 발생하여 CPU 제어권이 OS에게 넘어가</p>\n<ul>\n<li><p>OS가 LRU 알고리즘을 사용한다면, OS가 가장 오래 전에 참조된 페이지를 알 수 있는가? NO</p>\n</li>\n<li><p>OS가 LFU 알고리즘을 사용한다면, OS가 가장 참조 횟수가 적은 페이지를 알 수 있는가? NO</p>\n</li>\n</ul>\n</li>\n<li><p>프로세스가 요청한 페이지가 이미 메모리에 올라와있으면 </p>\n<ul>\n<li>운영체제에게 CPU가 넘어가지 않고</li>\n<li>하드웨어적으로 주소 변환해서 CPU가 바로 읽어들여</li>\n<li>그러면 이 페이지의 접근 시간을 운영체제는 몰라</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Clock-Algorithm\"><a href=\"#Clock-Algorithm\" class=\"headerlink\" title=\"Clock Algorithm\"></a>Clock Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP11.png\" alt=\"img\"></p>\n<ul>\n<li>LRU의 근사 알고리즘</li>\n<li>여러 명칭<ul>\n<li>Second chance algorithm</li>\n<li>NUR ( Not Used Recently)</li>\n<li>NRU ( Not Recently Used)</li>\n</ul>\n</li>\n<li>Reference bit을 사용해서 교체 대상 페이지 선정 (circular list)<ul>\n<li>Reference bit가 0 인 것을 찾을 때 까지 포인터를 하나씩 앞으로 이동</li>\n<li>포인터 이동하는 중에 reference bit 1은 모두 0으로 바꿈</li>\n<li>reference bit 이 0인 것을 찾으면 그 페이지를 교체</li>\n<li>한 바퀴 되돌아와서도 (second chance) 0이면 그때에는 replace 당함</li>\n<li>자주 사용되는 페이지라면 second chance가 올 때 1</li>\n</ul>\n</li>\n<li><p>개선</p>\n<ul>\n<li>reference bit과 modified bit (dirty bit)을 함께 사용</li>\n<li>reference bit ==1 : 최근에 참조된 페이지</li>\n<li>modified bit == 1 : 최근에 변경된 페이지 ( I/O를 동반하는 페이지 )</li>\n</ul>\n</li>\n<li><p>사각형 </p>\n<ul>\n<li>페이지 프레임</li>\n<li>물리적인 메모리에 들어있는 페이지</li>\n</ul>\n</li>\n<li>reference bit가 1이면 최근에 참조되 페이지이기 때문에 0으로 바꾸고 다음으로 넘어가</li>\n<li>어떤 페이지를 쫓아내야하는데, modified bit가 1이면 <ul>\n<li>그 페이지는 메모리에 올라온 이후로 적어도 한 번은 CPU에서 write를 한것. 내용을 수정한 것. </li>\n<li>이 페이지를 메모리로부터 쫓겨낼 때는 backing store에 수정된 내용을 반영하고 쫓아내.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Page-Frame의-Allocation\"><a href=\"#Page-Frame의-Allocation\" class=\"headerlink\" title=\"Page Frame의 Allocation\"></a>Page Frame의 Allocation</h2><p>각 프로세스에 얼만큼의 page frame을 할당할 것인가.</p>\n<ul>\n<li>Equal allocation<ul>\n<li>모든 프로세스에 똑같은 개수 할당</li>\n</ul>\n</li>\n<li>Proportional allocation<ul>\n<li>프로세스 크기에 비례하여 할당</li>\n</ul>\n</li>\n<li>Priority allocation<ul>\n<li>프로세스의 priority 에 따라 다르게 할당</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Global-vs-Local-Replacement\"><a href=\"#Global-vs-Local-Replacement\" class=\"headerlink\" title=\"Global vs Local Replacement\"></a>Global vs Local Replacement</h2><ul>\n<li><p>Globlal replacement</p>\n<ul>\n<li><p>다른 프로그램의 페이지도 쫓아낼 수 있음</p>\n</li>\n<li><p>replace 시 다른 프로세스에 할당된 frame을 빼앗아 올 수 있다</p>\n</li>\n<li>프로세스별 할당량을 조절하는 또 다른 방법</li>\n<li>FIFO, LRU, LFU 등의 알고리즘을 globla replacement 사용시에 해당</li>\n<li>working set / PFF 알고리즘 사용</li>\n</ul>\n</li>\n<li><p>Local replacement</p>\n<ul>\n<li>자신에게 할당된 frame 내에서만 replacement</li>\n<li>FIFO, LRU, LFU 등의 알고리즘을 프로세스 별로 운영시</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Thrashing\"><a href=\"#Thrashing\" class=\"headerlink\" title=\"Thrashing\"></a>Thrashing</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP12.png\" alt=\"img\"></p>\n<ul>\n<li><p>프로세스의 원활한 수행에 필요한 최소한의 page frame 수를 할당 받지 못한 경우 발생</p>\n<ul>\n<li><p>pafe fault rate이 매우 높아짐</p>\n</li>\n<li><p>CPU utilization이 매우 낮아짐</p>\n</li>\n</ul>\n</li>\n<li><p>OS는 MPF (Multiprogramming degree)를 높여야 한다고 판단</p>\n<ul>\n<li><p>또 다른 프로세스가 시스템에 추가됨 (higher MPD)</p>\n</li>\n<li><p>프로세스 당 할당된 프레임의 수가 더욱 감소</p>\n</li>\n<li><p>프로세스는 페이지의 swap in / swap out 으로 매우 바쁨</p>\n</li>\n<li><p>대부분의 시간에 CPU는 한가함</p>\n</li>\n<li>low throughput</li>\n</ul>\n</li>\n<li><p>x 축</p>\n<ul>\n<li>지금 메모리에 올라와있는 프로그램의 개수</li>\n</ul>\n</li>\n<li><p>프로그램 하나만 올라가 있으면 </p>\n<ul>\n<li>CPU utilizaiton이 낮아 =&gt; IO를 하러 가면, CPU는 놀아</li>\n</ul>\n</li>\n<li><p>계속해서 메모리에 올라와있는 프로그램의 개수 올리면 thrashing 발생</p>\n<ul>\n<li>CPU가 인스트럭션 수행하려고 하면 그 페이지게 메모리에 없어서 IO를 해</li>\n<li>또 다른 프로그램에게 CPU가 넘어가 또 요청한 페이지가 메모리에 없어서 IO를 해</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Working-Set-model\"><a href=\"#Working-Set-model\" class=\"headerlink\" title=\"Working-Set model\"></a>Working-Set model</h2><ul>\n<li>Locality of reference<ul>\n<li>프로세스는 특정 시간 동안 일정 장소만을 집중적으로 참조</li>\n<li>집중적으로 참조되는 해당 page들의 집합을 locality set이라 함</li>\n</ul>\n</li>\n<li>working set model<ul>\n<li>locality에 기반하여 프로세스가 일정 시간 동안 원활하게 수행되기 위해 한꺼번에 메모리에 올라와 있어야 하는 page들의 집합을 working set 이라 정의함</li>\n<li>working set 모델에서는 process의 working set 전체가 메모리에 올라와 있어야 수행되고 그렇지 않을 경우 모든 frame을 반납한 후 swap out(suspend)</li>\n<li>thrashing을 방지</li>\n<li>multiprogramming degree를 결정</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Working-Set-Algorithm\"><a href=\"#Working-Set-Algorithm\" class=\"headerlink\" title=\"Working-Set Algorithm\"></a>Working-Set Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP13.png\" alt=\"img\"></p>\n<p>Working set의 결정</p>\n<ul>\n<li>Wokring set window를 통해 알아냄</li>\n<li>과거 델타 시간(window) 동안 참조된 페이지들을 working set이라 간주해서 쫓아내지 않고 메모리에 유지</li>\n<li>참조된 후 델타 시간 동안 해당 Page를 메모리에 유지한 후 버림</li>\n</ul>\n<h2 id=\"PFF-Page-Fault-Frequency-Scheme\"><a href=\"#PFF-Page-Fault-Frequency-Scheme\" class=\"headerlink\" title=\"PFF (Page-Fault Frequency) Scheme\"></a>PFF (Page-Fault Frequency) Scheme</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP14.png\" alt=\"img\"></p>\n<p>현재 시점에 page fault 얼마나 났는지 직접 봐. 프로그램이 pafe fault 얼마나 내는지 봐.</p>\n<ul>\n<li><p>이 프로그램이 pafe fault 많이 내고 있으면,  </p>\n<ul>\n<li><p>이 프로그램의 working set이 메모리에 보장되고 있지 않구나.</p>\n</li>\n<li><p>페이지를 더줘.</p>\n</li>\n</ul>\n</li>\n<li><p>pafe fault rate의 상한값과 하한값을 둔다</p>\n<ul>\n<li><p>pafe fault rate이 상한값을 넘으면 프레임을 더 할당</p>\n</li>\n<li><p>하한값 이하이면 프레임 수를 줄임</p>\n</li>\n</ul>\n</li>\n<li><p>빈 프레임이 없으면 일부 프로세스를 swap out</p>\n</li>\n</ul>\n<h2 id=\"Page-Size의-결정\"><a href=\"#Page-Size의-결정\" class=\"headerlink\" title=\"Page Size의 결정\"></a>Page Size의 결정</h2><ul>\n<li><p>Page size를 감소시키면</p>\n<ul>\n<li><p>페이지 수 증가</p>\n</li>\n<li><p>페이지 테이블 크기 중가</p>\n</li>\n<li><p>internal fragmentation 감소</p>\n</li>\n<li><p>Disk transfer 의 효율성 감소</p>\n</li>\n</ul>\n</li>\n<li><p>필요한 정보만 메모리에 올라와 메모리 이용이 효율적</p>\n<ul>\n<li>locality 활용 측면에서는 좋지 않음</li>\n</ul>\n</li>\n<li><p>trend</p>\n<ul>\n<li>Larger page size</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>출처 : 이화여자대학교 반효경 (<a href=\"http://www.kocw.net/home/search/kemView.do?kemId=1046323\" target=\"_blank\" rel=\"noopener\">http://www.kocw.net/home/search/kemView.do?kemId=1046323</a>)</p>\n<h2 id=\"Demand-Paging\"><a href=\"#Demand-Paging\" class=\"headerlink\" title=\"Demand Paging\"></a>Demand Paging</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP01.png\" alt=\"img\"></p>\n<ul>\n<li><p>실제로 필요할 때 page를 메모리에 올리는 것</p>\n<ul>\n<li>I/O양의 감소</li>\n<li>Memory 사용량 감소</li>\n<li>빠른 응답 시간</li>\n<li>더 많은 사용자 수용</li>\n</ul>\n</li>\n<li><p>Valid / Invalid bit의 사용</p>\n<ul>\n<li>Valid<ul>\n<li>사용되지 않는 주소 영역인 경우</li>\n<li>페이지가 물리적 메모리에 없는 경우</li>\n</ul>\n</li>\n<li>처음에는 모든 page entry 가 invalid로 초기화</li>\n<li>address translation 시에 invalid bit이 set되어 있으면 “page fault”<ul>\n<li>요청한 페이지가 메모리에 없는 경우</li>\n<li>운영체제가 CPU를 가지고 fault난 페이지를 메모리에 올림 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Page-Fault\"><a href=\"#Page-Fault\" class=\"headerlink\" title=\"Page Fault\"></a>Page Fault</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP02.png\" alt=\"img\"></p>\n<ul>\n<li>invalid page를 접근하면 MMU가 trap을 발생시키고 (page fault trap)<ul>\n<li>Kernel mode로 들어가서 page fault handler 가 invoke 됨</li>\n</ul>\n</li>\n<li>다음과 같은 순서로 page fault 를 처리<ul>\n<li>invalid reference? (eg. bad address, protection violation) =&gt; abort process<ul>\n<li>잘못된 요청인지 아닌지 체크하는 것</li>\n</ul>\n</li>\n<li>get an empty page frame (replace : 없으면 뺏어온다)</li>\n<li>해당 페이지를 disk 에서 memory로 읽어온다<ul>\n<li>disk I/O가 끝나기까지 이 프로세스는 CPU를 preempt 당함 (block)</li>\n<li>Dist read가 끝나면 page tables entry 기록, valid/invalid bit = “valid”</li>\n<li>ready queue에 process를 insert -&gt; dispatch later</li>\n</ul>\n</li>\n<li>이 프로세스가 CPU를 잡고 다시 running</li>\n<li>아까 중단되었던 instruction 재개</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Page-Replacement\"><a href=\"#Page-Replacement\" class=\"headerlink\" title=\"Page Replacement\"></a>Page Replacement</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP03.png\" alt=\"img\"></p>\n<ul>\n<li>Page replacement<ul>\n<li>어떤 frame을 빼앗아 올지 결정</li>\n<li>곧바로 사용되지 않을 page를 쫗아내는 것이 좋음</li>\n<li>동일한 페이지가 여러번 메모리에서 쫓겨났다가 다시 들어올 수 있음</li>\n</ul>\n</li>\n<li>Replacement Algoritm<ul>\n<li>page fault rate을 최소화 하는 것이 목표</li>\n<li>알고리즘을 평가 : 주어진 page reference string에 대해 page fault를 얼마나 내는지 조사</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Optimal-Algorithm\"><a href=\"#Optimal-Algorithm\" class=\"headerlink\" title=\"Optimal Algorithm\"></a>Optimal Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP04.png\" alt=\"img\"></p>\n<ul>\n<li>미래에 참조되는 페이지들을 미리 다 안다고 가정 : Offiline algorithm</li>\n<li>가장 먼 미래에 참조되는 페이지를 replace<ul>\n<li>네모칸 : 메모리</li>\n<li>빨간색 : 페이지 폴트 난 경우</li>\n<li>연보라 : 페이지 폴트 나지 않고 이미 메모리에 올라가 있는 경우</li>\n</ul>\n</li>\n<li>5번이 처음으로 참조 되는 경우<ul>\n<li>1번이 바로 다음으로 참조되기 때문에, 메모리에서 쫓겨나지 않아</li>\n<li>4번이 가장 먼 미래에 참조되기 때문에, 4번이 쫓겨나</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"FIFO-Algorithm\"><a href=\"#FIFO-Algorithm\" class=\"headerlink\" title=\"FIFO Algorithm\"></a>FIFO Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP05.png\" alt=\"img\"></p>\n<p>메모리에 먼저 들어온 것을 먼저 내쫓음</p>\n<p>FIFO Anomaly : 메모리 크기 들어나면 성능이 안좋아져</p>\n<h2 id=\"LRU-Least-Recently-Used-Algorithm\"><a href=\"#LRU-Least-Recently-Used-Algorithm\" class=\"headerlink\" title=\"LRU(Least Recently Used) Algorithm\"></a>LRU(Least Recently Used) Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP06.png\" alt=\"img\"></p>\n<p>가장 오래전에 참조된 것을 지움</p>\n<ul>\n<li>5번이 처음으로 참조 되는 경우를 보면,<ul>\n<li>2번이 가장 최근에 참조</li>\n<li>그 다음에 1번, 4번</li>\n<li>가장 오래 전에 참조된 것이 3번</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"LFU-Least-Frequently-Used-Algorithm\"><a href=\"#LFU-Least-Frequently-Used-Algorithm\" class=\"headerlink\" title=\"LFU (Least Frequently Used) Algorithm\"></a>LFU (Least Frequently Used) Algorithm</h2><p>참조 횟수가 가장 적은 페이지를 지움</p>\n<ul>\n<li>최저 참조 횟수인 page가 여럿 있는 경우<ul>\n<li>여러 page 중 임의로 선정</li>\n<li>선능 향상을 위해 가장 오래 전에 참조된 page를 지우게 구현할 수도 있다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"LRU-LFU-비교\"><a href=\"#LRU-LFU-비교\" class=\"headerlink\" title=\"LRU / LFU 비교\"></a>LRU / LFU 비교</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP07.png\" alt=\"img\"></p>\n<ul>\n<li>LRU<ul>\n<li>1번이 가장 오래 전에 참조되긴 했지만,</li>\n<li>과거에 많은 참조가 있었다는 것을 무시</li>\n</ul>\n</li>\n<li>LFU<ul>\n<li>비록 4번이 참조횟수가 한 번이지만</li>\n<li>이제 막 참조가 시작되는 걸 쫓아냄</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"LRU-LFU-구현\"><a href=\"#LRU-LFU-구현\" class=\"headerlink\" title=\"LRU / LFU 구현\"></a>LRU / LFU 구현</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP08.png\" alt=\"img\"></p>\n<p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP09.png\" alt=\"img\"></p>\n<ul>\n<li>LRU<ul>\n<li>어떤 페이지가 참조될 때마다 그 페이지를 제일 아래 쪽에 매달고</li>\n<li>쫓아낼 때는 제일 위에 있는걸 쫓아내</li>\n</ul>\n</li>\n<li>LFU<ul>\n<li>참조 횟수 1이 늘어나면</li>\n<li>비교를 해서 어디까지 내려갈 수 있는지 체크 (min-heap으로 구현)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Caching\"><a href=\"#Caching\" class=\"headerlink\" title=\"Caching\"></a>Caching</h2><ul>\n<li>캐슁 기법<ul>\n<li>한정된 빠른 공강(cache)에 요청된 데이터를 저장해 두었다가 후속 요청히 캐쉬로부터 직접 서비스</li>\n<li>paging sytem 외에도 cache memory, buffer caching, Web caching등 다양한 분야에 사용</li>\n</ul>\n</li>\n<li>시간 제약<ul>\n<li>교체 알고리즘에서 삭제할 항목을 결정하는 일에 지나치게 많은 시간이 걸리는 경우 실제 시스템에서 사용할 수 없음</li>\n<li>Buffer caching 이나 Web caching인 경우<ul>\n<li>O(1) 에서 O(logn) 정도까지 허용</li>\n</ul>\n</li>\n<li>Pagin System 인 경우<ul>\n<li>page fault 인 경우에만 OS가 관여</li>\n<li>페이지가 이미 메모리에 존재하는 경우 참조 시각등의 정보를 OS가 알 수 없음</li>\n<li>O(1)인 LRU의 list 조작 조차 불가능 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Paging-System에서-LRU-LFU-가능한가\"><a href=\"#Paging-System에서-LRU-LFU-가능한가\" class=\"headerlink\" title=\"Paging System에서 LRU, LFU 가능한가?\"></a>Paging System에서 LRU, LFU 가능한가?</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP10.png\" alt=\"img\"></p>\n<ul>\n<li><p>page fault가 발생하면, trap 발생하여 CPU 제어권이 OS에게 넘어가</p>\n<ul>\n<li><p>OS가 LRU 알고리즘을 사용한다면, OS가 가장 오래 전에 참조된 페이지를 알 수 있는가? NO</p>\n</li>\n<li><p>OS가 LFU 알고리즘을 사용한다면, OS가 가장 참조 횟수가 적은 페이지를 알 수 있는가? NO</p>\n</li>\n</ul>\n</li>\n<li><p>프로세스가 요청한 페이지가 이미 메모리에 올라와있으면 </p>\n<ul>\n<li>운영체제에게 CPU가 넘어가지 않고</li>\n<li>하드웨어적으로 주소 변환해서 CPU가 바로 읽어들여</li>\n<li>그러면 이 페이지의 접근 시간을 운영체제는 몰라</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Clock-Algorithm\"><a href=\"#Clock-Algorithm\" class=\"headerlink\" title=\"Clock Algorithm\"></a>Clock Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP11.png\" alt=\"img\"></p>\n<ul>\n<li>LRU의 근사 알고리즘</li>\n<li>여러 명칭<ul>\n<li>Second chance algorithm</li>\n<li>NUR ( Not Used Recently)</li>\n<li>NRU ( Not Recently Used)</li>\n</ul>\n</li>\n<li>Reference bit을 사용해서 교체 대상 페이지 선정 (circular list)<ul>\n<li>Reference bit가 0 인 것을 찾을 때 까지 포인터를 하나씩 앞으로 이동</li>\n<li>포인터 이동하는 중에 reference bit 1은 모두 0으로 바꿈</li>\n<li>reference bit 이 0인 것을 찾으면 그 페이지를 교체</li>\n<li>한 바퀴 되돌아와서도 (second chance) 0이면 그때에는 replace 당함</li>\n<li>자주 사용되는 페이지라면 second chance가 올 때 1</li>\n</ul>\n</li>\n<li><p>개선</p>\n<ul>\n<li>reference bit과 modified bit (dirty bit)을 함께 사용</li>\n<li>reference bit ==1 : 최근에 참조된 페이지</li>\n<li>modified bit == 1 : 최근에 변경된 페이지 ( I/O를 동반하는 페이지 )</li>\n</ul>\n</li>\n<li><p>사각형 </p>\n<ul>\n<li>페이지 프레임</li>\n<li>물리적인 메모리에 들어있는 페이지</li>\n</ul>\n</li>\n<li>reference bit가 1이면 최근에 참조되 페이지이기 때문에 0으로 바꾸고 다음으로 넘어가</li>\n<li>어떤 페이지를 쫓아내야하는데, modified bit가 1이면 <ul>\n<li>그 페이지는 메모리에 올라온 이후로 적어도 한 번은 CPU에서 write를 한것. 내용을 수정한 것. </li>\n<li>이 페이지를 메모리로부터 쫓겨낼 때는 backing store에 수정된 내용을 반영하고 쫓아내.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Page-Frame의-Allocation\"><a href=\"#Page-Frame의-Allocation\" class=\"headerlink\" title=\"Page Frame의 Allocation\"></a>Page Frame의 Allocation</h2><p>각 프로세스에 얼만큼의 page frame을 할당할 것인가.</p>\n<ul>\n<li>Equal allocation<ul>\n<li>모든 프로세스에 똑같은 개수 할당</li>\n</ul>\n</li>\n<li>Proportional allocation<ul>\n<li>프로세스 크기에 비례하여 할당</li>\n</ul>\n</li>\n<li>Priority allocation<ul>\n<li>프로세스의 priority 에 따라 다르게 할당</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Global-vs-Local-Replacement\"><a href=\"#Global-vs-Local-Replacement\" class=\"headerlink\" title=\"Global vs Local Replacement\"></a>Global vs Local Replacement</h2><ul>\n<li><p>Globlal replacement</p>\n<ul>\n<li><p>다른 프로그램의 페이지도 쫓아낼 수 있음</p>\n</li>\n<li><p>replace 시 다른 프로세스에 할당된 frame을 빼앗아 올 수 있다</p>\n</li>\n<li>프로세스별 할당량을 조절하는 또 다른 방법</li>\n<li>FIFO, LRU, LFU 등의 알고리즘을 globla replacement 사용시에 해당</li>\n<li>working set / PFF 알고리즘 사용</li>\n</ul>\n</li>\n<li><p>Local replacement</p>\n<ul>\n<li>자신에게 할당된 frame 내에서만 replacement</li>\n<li>FIFO, LRU, LFU 등의 알고리즘을 프로세스 별로 운영시</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Thrashing\"><a href=\"#Thrashing\" class=\"headerlink\" title=\"Thrashing\"></a>Thrashing</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP12.png\" alt=\"img\"></p>\n<ul>\n<li><p>프로세스의 원활한 수행에 필요한 최소한의 page frame 수를 할당 받지 못한 경우 발생</p>\n<ul>\n<li><p>pafe fault rate이 매우 높아짐</p>\n</li>\n<li><p>CPU utilization이 매우 낮아짐</p>\n</li>\n</ul>\n</li>\n<li><p>OS는 MPF (Multiprogramming degree)를 높여야 한다고 판단</p>\n<ul>\n<li><p>또 다른 프로세스가 시스템에 추가됨 (higher MPD)</p>\n</li>\n<li><p>프로세스 당 할당된 프레임의 수가 더욱 감소</p>\n</li>\n<li><p>프로세스는 페이지의 swap in / swap out 으로 매우 바쁨</p>\n</li>\n<li><p>대부분의 시간에 CPU는 한가함</p>\n</li>\n<li>low throughput</li>\n</ul>\n</li>\n<li><p>x 축</p>\n<ul>\n<li>지금 메모리에 올라와있는 프로그램의 개수</li>\n</ul>\n</li>\n<li><p>프로그램 하나만 올라가 있으면 </p>\n<ul>\n<li>CPU utilizaiton이 낮아 =&gt; IO를 하러 가면, CPU는 놀아</li>\n</ul>\n</li>\n<li><p>계속해서 메모리에 올라와있는 프로그램의 개수 올리면 thrashing 발생</p>\n<ul>\n<li>CPU가 인스트럭션 수행하려고 하면 그 페이지게 메모리에 없어서 IO를 해</li>\n<li>또 다른 프로그램에게 CPU가 넘어가 또 요청한 페이지가 메모리에 없어서 IO를 해</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Working-Set-model\"><a href=\"#Working-Set-model\" class=\"headerlink\" title=\"Working-Set model\"></a>Working-Set model</h2><ul>\n<li>Locality of reference<ul>\n<li>프로세스는 특정 시간 동안 일정 장소만을 집중적으로 참조</li>\n<li>집중적으로 참조되는 해당 page들의 집합을 locality set이라 함</li>\n</ul>\n</li>\n<li>working set model<ul>\n<li>locality에 기반하여 프로세스가 일정 시간 동안 원활하게 수행되기 위해 한꺼번에 메모리에 올라와 있어야 하는 page들의 집합을 working set 이라 정의함</li>\n<li>working set 모델에서는 process의 working set 전체가 메모리에 올라와 있어야 수행되고 그렇지 않을 경우 모든 frame을 반납한 후 swap out(suspend)</li>\n<li>thrashing을 방지</li>\n<li>multiprogramming degree를 결정</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Working-Set-Algorithm\"><a href=\"#Working-Set-Algorithm\" class=\"headerlink\" title=\"Working-Set Algorithm\"></a>Working-Set Algorithm</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP13.png\" alt=\"img\"></p>\n<p>Working set의 결정</p>\n<ul>\n<li>Wokring set window를 통해 알아냄</li>\n<li>과거 델타 시간(window) 동안 참조된 페이지들을 working set이라 간주해서 쫓아내지 않고 메모리에 유지</li>\n<li>참조된 후 델타 시간 동안 해당 Page를 메모리에 유지한 후 버림</li>\n</ul>\n<h2 id=\"PFF-Page-Fault-Frequency-Scheme\"><a href=\"#PFF-Page-Fault-Frequency-Scheme\" class=\"headerlink\" title=\"PFF (Page-Fault Frequency) Scheme\"></a>PFF (Page-Fault Frequency) Scheme</h2><p><img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/demandP14.png\" alt=\"img\"></p>\n<p>현재 시점에 page fault 얼마나 났는지 직접 봐. 프로그램이 pafe fault 얼마나 내는지 봐.</p>\n<ul>\n<li><p>이 프로그램이 pafe fault 많이 내고 있으면,  </p>\n<ul>\n<li><p>이 프로그램의 working set이 메모리에 보장되고 있지 않구나.</p>\n</li>\n<li><p>페이지를 더줘.</p>\n</li>\n</ul>\n</li>\n<li><p>pafe fault rate의 상한값과 하한값을 둔다</p>\n<ul>\n<li><p>pafe fault rate이 상한값을 넘으면 프레임을 더 할당</p>\n</li>\n<li><p>하한값 이하이면 프레임 수를 줄임</p>\n</li>\n</ul>\n</li>\n<li><p>빈 프레임이 없으면 일부 프로세스를 swap out</p>\n</li>\n</ul>\n<h2 id=\"Page-Size의-결정\"><a href=\"#Page-Size의-결정\" class=\"headerlink\" title=\"Page Size의 결정\"></a>Page Size의 결정</h2><ul>\n<li><p>Page size를 감소시키면</p>\n<ul>\n<li><p>페이지 수 증가</p>\n</li>\n<li><p>페이지 테이블 크기 중가</p>\n</li>\n<li><p>internal fragmentation 감소</p>\n</li>\n<li><p>Disk transfer 의 효율성 감소</p>\n</li>\n</ul>\n</li>\n<li><p>필요한 정보만 메모리에 올라와 메모리 이용이 효율적</p>\n<ul>\n<li>locality 활용 측면에서는 좋지 않음</li>\n</ul>\n</li>\n<li><p>trend</p>\n<ul>\n<li>Larger page size</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"데이터 타입 고급","date":"2018-01-28T15:00:00.000Z","image":"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png","_content":"\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309>\n\n# Type Safety and Type Inference\n\n- A type safe language encourages you to be clear about the types of values your code can work with. \n- If part of your code requires a String, you can’t pass it an Int by mistake.\n- If you don’t specify the type of value you need, Swift uses type inference to work out the appropriate type\n- Type inference enables a compiler to deduce the type of a particular expression automatically when it compiles your code, simply by examining the values you provide.\n\n\t```\n\tlet meaningOfLife = 42\n\t// meaningOfLife is inferred to be of type Int\n\t\n\tlet pi = 3.14159\n\t// pi is inferred to be of type Double\n\t\n\tlet anotherPi = 3 + 0.14159\n\t// anotherPi is also inferred to be of type Double\n\t```\n\t\n# Type Aliases\n\n- Type aliases define an alternative name for an existing type. \n\n\t```\n\ttypealias AudioSample = UInt16\n\tvar maxAmplitudeFound = AudioSample.min\n\t// maxAmplitudeFound is now 0\n\t```\n\t\n# tuples \n\n- Tuples group multiple values into a single compound value\n- Tuples are useful for temporary groups of related values.\n\n\t```\n\tlet http404Error = (404, \"Not Found\")\n\t// http404Error is of type (Int, String), and equals (404, \"Not Found\")\n\t\t\n\tlet (statusCode, statusMessage) = http404Error\n\tprint(\"The status code is \\(statusCode)\")\n\t// Prints \"The status code is 404\"\n\tprint(\"The status message is \\(statusMessage)\")\n\t// Prints \"The status message is Not Found\"\n\t\n\tlet (justTheStatusCode, _) = http404Error\n\tprint(\"The status code is \\(justTheStatusCode)\")\n\t// Prints \"The status code is 404\"\n\t\n\tprint(\"The status code is \\(http404Error.0)\")\n\t// Prints \"The status code is 404\"\n\tprint(\"The status message is \\(http404Error.1)\")\n\t// Prints \"The status message is Not Found\"\n\t```\n\t\n\t```\n\tlet http200Status = (statusCode: 200, description: \"OK\")\n\tprint(\"The status code is \\(http200Status.statusCode)\")\n\t// Prints \"The status code is 200\"\n\tprint(\"The status message is \\(http200Status.description)\")\n\t// Prints \"The status message is OK\"\n\t```\n\t\n# Collection Types\n\n- Arrays are ordered collections of values. \n- Sets are unordered collections of unique values. \n- Dictionaries are unordered collections of key-value associations.\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/collection.png)\n\t\n- Mutability of Collections\n\n\t- If you create an array, a set, or a dictionary, and assign it to a variable, the collection that is created will be mutable. \n\t- If you assign an array, a set, or a dictionary to a constant, that collection is immutable, and its size and contents cannot be changed.\n\n\n### Arrays\n\n- Creating an Empty Array\n\n\t```\n\tvar someInts = [Int]()\n\tprint(\"someInts is of type [Int] with \\(someInts.count) items.\")\n\t// Prints \"someInts is of type [Int] with 0 items.\"\n\t\n\tsomeInts.append(3)\n\t// someInts now contains 1 value of type Int\n\tsomeInts = []\n\t// someInts is now an empty array, but is still of type [Int]\n\t```\n\t\n- Creating an Array with a Default Value\n\n\t```\n\tvar threeDoubles = Array(repeating: 0.0, count: 3)\n\t// threeDoubles is of type [Double], and equals [0.0, 0.0, 0.0]\n\t```\n\n- Creating an Array by Adding Two Arrays Together\n\n\t```\n\tvar anotherThreeDoubles = Array(repeating: 2.5, count: 3)\n\t// anotherThreeDoubles is of type [Double], and equals [2.5, 2.5, 2.5]\n \n\tvar sixDoubles = threeDoubles + anotherThreeDoubles\n\t// sixDoubles is inferred as [Double], and equals [0.0, 0.0, 0.0, 2.5, 2.5, 2.5]\n\t```\n\n- Creating an Array with an Array Literal\n\n\t```\n\tvar shoppingList: [String] = [\"Eggs\", \"Milk\"]\n\t// shoppingList has been initialized with two initial items\n\t```\n\n- Accessing and Modifying an Array\n\n\t```\n\tprint(\"The shopping list contains \\(shoppingList.count) items.\")\n\t// Prints \"The shopping list contains 2 items.\"\n\t\n\tif shoppingList.isEmpty {\n    print(\"The shopping list is empty.\")\n\t} else {\n    print(\"The shopping list is not empty.\")\n\t}\n\t// Prints \"The shopping list is not empty.\"\n\t\n\tshoppingList.append(\"Flour\")\n\t// shoppingList now contains 3 items, and someone is making pancakes\n\n\tshoppingList += [\"Baking Powder\"]\n\t// shoppingList now contains 4 items\n\tshoppingList += [\"Chocolate Spread\", \"Cheese\", \"Butter\"]\n\t// shoppingList now contains 7 items\n\t\n\tvar firstItem = shoppingList[0]\n\t// firstItem is equal to \"Eggs\"\n\t\n\tshoppingList[0] = \"Six eggs\"\n\t// the first item in the list is now equal to \"Six eggs\" rather than \"Eggs\"\n\t\n\tshoppingList[4...6] = [\"Bananas\", \"Apples\"]\n\t// shoppingList now contains 6 items\n\t\n\tshoppingList.insert(\"Maple Syrup\", at: 0)\n\t// shoppingList now contains 7 items\n\t// \"Maple Syrup\" is now the first item in the list\n\t\n\tlet mapleSyrup = shoppingList.remove(at: 0)\n\t// the item that was at index 0 has just been removed\n\t// shoppingList now contains 6 items, and no Maple Syrup\n\t// the mapleSyrup constant is now equal to the removed \"Maple Syrup\" string\n\t\n\tfirstItem = shoppingList[0]\n\t// firstItem is now equal to \"Six eggs\"\n\t\n\tlet apples = shoppingList.removeLast()\n\t// the last item in the array has just been removed\n\t// shoppingList now contains 5 items, and no apples\n\t// the apples constant is now equal to the removed \"Apples\" string\n\t```\n\t\n- Iterating Over an Array\n\n\t```\n\tfor item in shoppingList {\n    print(item)\n\t}\n\t// Six eggs\n\t// Milk\n\t// Flour\n\t// Baking Powder\n\t// Bananas\n\t\n\tfor (index, value) in shoppingList.enumerated() {\n    print(\"Item \\(index + 1): \\(value)\")\n\t}\n\t// Item 1: Six eggs\n\t// Item 2: Milk\n\t// Item 3: Flour\n\t// Item 4: Baking Powder\n\t// Item 5: Bananas\n\t```\n\t\n### Sets\n\n- Hash Values for Set Types\n\n\t- A type must be hashable in order to be stored in a set\n\t- that is, the type must provide a way to compute a hash value for itself\n\n- Creating and Initializing an Empty Set\n\n\t```\n\tvar letters = Set<Character>()\n\tprint(\"letters is of type Set<Character> with \\(letters.count) items.\")\n\t// Prints \"letters is of type Set<Character> with 0 items.\"\n\n\n\tletters.insert(\"a\")\n\t// letters now contains 1 value of type Character\n\tletters = []\n\t// letters is now an empty set, but is still of type Set<Character>\n\t```\n\t\n- Creating a Set with an Array Literal\n\n\t```\n\tvar favoriteGenres: Set<String> = [\"Rock\", \"Classical\", \"Hip hop\"]\n\t// favoriteGenres has been initialized with three initial items\n\t\n\tvar favoriteGenres: Set = [\"Rock\", \"Classical\", \"Hip hop\"]\n\t// Because all values in the array literal are of the same type, Swift can infer that Set<String> is the correct type to use for the favoriteGenres variable.\n\t```\n- Accessing and Modifying a Set\n\n\t```\n\tprint(\"I have \\(favoriteGenres.count) favorite music genres.\")\n\t// Prints \"I have 3 favorite music genres.\"\n\t\n\tif favoriteGenres.isEmpty {\n\t    print(\"As far as music goes, I'm not picky.\")\n\t} else {\n\t    print(\"I have particular music preferences.\")\n\t}\n\t// Prints \"I have particular music preferences.\"\n\t\n\tfavoriteGenres.insert(\"Jazz\")\n\t// favoriteGenres now contains 4 items\n\t\n\tif let removedGenre = favoriteGenres.remove(\"Rock\") {\n    print(\"\\(removedGenre)? I'm over it.\")\n\t} else {\n\t    print(\"I never much cared for that.\")\n\t}\n\t// Prints \"Rock? I'm over it.\"\t\n\t\n\tif favoriteGenres.contains(\"Funk\") {\n    print(\"I get up on the good foot.\")\n\t} else {\n\t    print(\"It's too funky in here.\")\n\t}\n\t// Prints \"It's too funky in here.\"\n\t```\n\n- Iterating Over a Set\n\n\t```\n\tfor genre in favoriteGenres {\n    print(\"\\(genre)\")\n\t}\n\t// Jazz\n\t// Hip hop\n\t// Classical\n\t\n\tfor genre in favoriteGenres.sorted() {\n    print(\"\\(genre)\")\n\t}\n\t// Classical\n\t// Hip hop\n\t// Jazz\n\t```\n- Fundamental Set Operations\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SetOperations.png)\n\t\n\t```\n \tlet oddDigits: Set = [1, 3, 5, 7, 9]\n\tlet evenDigits: Set = [0, 2, 4, 6, 8]\n\tlet singleDigitPrimeNumbers: Set = [2, 3, 5, 7]\n\t \n\toddDigits.union(evenDigits).sorted()\n\t// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] \n\toddDigits.intersection(evenDigits).sorted()\n\t// []\n\toddDigits.subtracting(singleDigitPrimeNumbers).sorted()\n\t// [1, 9]\n\toddDigits.symmetricDifference(singleDigitPrimeNumbers).sorted()\n\t// [1, 2, 9]\n\t```\n\t\n\t```\n\tlet houseAnimals: Set = [\"🐶\", \"🐱\"]\n\tlet farmAnimals: Set = [\"🐮\", \"🐔\", \"🐑\", \"🐶\", \"🐱\"]\n\tlet cityAnimals: Set = [\"🐦\", \"🐭\"]\n\t \n\thouseAnimals.isSubset(of: farmAnimals)\n\t// true\n\tfarmAnimals.isSuperset(of: houseAnimals)\n\t// true\n\tfarmAnimals.isDisjoint(with: cityAnimals)\n\t// true\n\t```\n\n### Dictionaries\n\n- Creating an Empty Dictionary\n\n\t```\n\tvar namesOfIntegers = [Int: String]()\n\t// namesOfIntegers is an empty [Int: String] dictionary\n\t// Its keys are of type Int, and its values are of type String.\n\t\n\tnamesOfIntegers[16] = \"sixteen\"\n\t// namesOfIntegers now contains 1 key-value pair\n\tnamesOfIntegers = [:]\n\t// namesOfIntegers is once again an empty dictionary of type [Int: String]\n\t```\n- Creating a Dictionary with a Dictionary Literal\n\n\t```\n\tvar airports: [String: String] = [\"YYZ\": \"Toronto Pearson\", \"DUB\": \"Dublin\"]\n\t\n\tvar airports = [\"YYZ\": \"Toronto Pearson\", \"DUB\": \"Dublin\"]\t//type inference\n\t```\n- Accessing and Modifying a Dictionary\n\n\t```\n\tprint(\"The airports dictionary contains \\(airports.count) items.\")\n\t// Prints \"The airports dictionary contains 2 items.\"\n\t\n\tif airports.isEmpty {\n    print(\"The airports dictionary is empty.\")\n\t} else {\n\t    print(\"The airports dictionary is not empty.\")\n\t}\n\t// Prints \"The airports dictionary is not empty.\"\n\t\n\tairports[\"LHR\"] = \"London\"\n\t// the airports dictionary now contains 3 items\n\t\n\tairports[\"LHR\"] = \"London Heathrow\"\n\t// the value for \"LHR\" has been changed to \"London Heathrow\"\n\t\n\tif let oldValue = airports.updateValue(\"Dublin Airport\", forKey: \"DUB\") {\n   \t \tprint(\"The old value for DUB was \\(oldValue).\")\n\t}\n\t// Prints \"The old value for DUB was Dublin.\"\n\t\n\tif let airportName = airports[\"DUB\"] {\n\t    print(\"The name of the airport is \\(airportName).\")\n\t} else {\n\t    print(\"That airport is not in the airports dictionary.\")\n\t}\n\t// Prints \"The name of the airport is Dublin Airport.\"\n\t\n\tairports[\"APL\"] = \"Apple International\"\n\t// \"Apple International\" is not the real airport for APL, so delete it\n\tairports[\"APL\"] = nil\n\t// APL has now been removed from the dictionary\n\t\n\tif let removedValue = airports.removeValue(forKey: \"DUB\") {\n\t    print(\"The removed airport's name is \\(removedValue).\")\n\t} else {\n\t    print(\"The airports dictionary does not contain a value for DUB.\")\n\t}\n\t// Prints \"The removed airport's name is Dublin Airport.\"\n\t```\n\n- Iterating Over a Dictionary\n\n\t```\n\tfor (airportCode, airportName) in airports {\n\t    print(\"\\(airportCode): \\(airportName)\")\n\t}\n\t// YYZ: Toronto Pearson\n\t// LHR: London Heathrow\n\t\n\tfor airportCode in airports.keys {\n\t    print(\"Airport code: \\(airportCode)\")\n\t}\n\t// Airport code: YYZ\n\t// Airport code: LHR\n\t \n\tfor airportName in airports.values {\n\t    print(\"Airport name: \\(airportName)\")\n\t}\n\t// Airport name: Toronto Pearson\n\t// Airport name: London Heathrow\n\t\n\tlet airportCodes = [String](airports.keys)\n\t// airportCodes is [\"YYZ\", \"LHR\"]\n\t \n\tlet airportNames = [String](airports.values)\n\t// airportNames is [\"Toronto Pearson\", \"London Heathrow\"]\n\t```\n\t\n# Enumerations\n\n- Enumeration Syntax\n\t\n\t```\n\tenum CompassPoint {\n\t\tcase north\n\t\tcase south\n\t\tcase east\n\t\tcase west\n\t}\n\t\n\tenum Planet {\n\t\t case mercury, venus, earth, mars, jupiter, saturn, uranus, neptune\n\t}\n\t\t\n\tvar directionToHead = CompassPoint.west\n\tdirectionToHead = .east\n\t```\n\t\n\n- Matching Enumeration Values with a Switch Statement\n\n\t```\n\tdirectionToHead = .south\n\tswitch directionToHead {\n\tcase .north:\n\t    print(\"Lots of planets have a north\")\n\tcase .south:\n\t    print(\"Watch out for penguins\")\n\tcase .east:\n\t    print(\"Where the sun rises\")\n\tcase .west:\n\t    print(\"Where the skies are blue\")\n\t}\n\t// Prints \"Watch out for penguins\"\n\t\n\tlet somePlanet = Planet.earth\n\tswitch somePlanet {\n\tcase .earth:\n\t    print(\"Mostly harmless\")\n\tdefault:\n\t    print(\"Not a safe place for humans\")\n\t}\n\t// Prints \"Mostly harmless\"\n\t```\n\n\n\n\t\n\n\n\t\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n","source":"_posts/2018-01-29-데이터 타입 고급.md","raw":"---\nlayout: post\ntitle:  \"데이터 타입 고급\"\ndate:   2018-01-29\ncategories: ios\nimage : https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/sl.png\n---\n\n<https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309>\n\n# Type Safety and Type Inference\n\n- A type safe language encourages you to be clear about the types of values your code can work with. \n- If part of your code requires a String, you can’t pass it an Int by mistake.\n- If you don’t specify the type of value you need, Swift uses type inference to work out the appropriate type\n- Type inference enables a compiler to deduce the type of a particular expression automatically when it compiles your code, simply by examining the values you provide.\n\n\t```\n\tlet meaningOfLife = 42\n\t// meaningOfLife is inferred to be of type Int\n\t\n\tlet pi = 3.14159\n\t// pi is inferred to be of type Double\n\t\n\tlet anotherPi = 3 + 0.14159\n\t// anotherPi is also inferred to be of type Double\n\t```\n\t\n# Type Aliases\n\n- Type aliases define an alternative name for an existing type. \n\n\t```\n\ttypealias AudioSample = UInt16\n\tvar maxAmplitudeFound = AudioSample.min\n\t// maxAmplitudeFound is now 0\n\t```\n\t\n# tuples \n\n- Tuples group multiple values into a single compound value\n- Tuples are useful for temporary groups of related values.\n\n\t```\n\tlet http404Error = (404, \"Not Found\")\n\t// http404Error is of type (Int, String), and equals (404, \"Not Found\")\n\t\t\n\tlet (statusCode, statusMessage) = http404Error\n\tprint(\"The status code is \\(statusCode)\")\n\t// Prints \"The status code is 404\"\n\tprint(\"The status message is \\(statusMessage)\")\n\t// Prints \"The status message is Not Found\"\n\t\n\tlet (justTheStatusCode, _) = http404Error\n\tprint(\"The status code is \\(justTheStatusCode)\")\n\t// Prints \"The status code is 404\"\n\t\n\tprint(\"The status code is \\(http404Error.0)\")\n\t// Prints \"The status code is 404\"\n\tprint(\"The status message is \\(http404Error.1)\")\n\t// Prints \"The status message is Not Found\"\n\t```\n\t\n\t```\n\tlet http200Status = (statusCode: 200, description: \"OK\")\n\tprint(\"The status code is \\(http200Status.statusCode)\")\n\t// Prints \"The status code is 200\"\n\tprint(\"The status message is \\(http200Status.description)\")\n\t// Prints \"The status message is OK\"\n\t```\n\t\n# Collection Types\n\n- Arrays are ordered collections of values. \n- Sets are unordered collections of unique values. \n- Dictionaries are unordered collections of key-value associations.\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/collection.png)\n\t\n- Mutability of Collections\n\n\t- If you create an array, a set, or a dictionary, and assign it to a variable, the collection that is created will be mutable. \n\t- If you assign an array, a set, or a dictionary to a constant, that collection is immutable, and its size and contents cannot be changed.\n\n\n### Arrays\n\n- Creating an Empty Array\n\n\t```\n\tvar someInts = [Int]()\n\tprint(\"someInts is of type [Int] with \\(someInts.count) items.\")\n\t// Prints \"someInts is of type [Int] with 0 items.\"\n\t\n\tsomeInts.append(3)\n\t// someInts now contains 1 value of type Int\n\tsomeInts = []\n\t// someInts is now an empty array, but is still of type [Int]\n\t```\n\t\n- Creating an Array with a Default Value\n\n\t```\n\tvar threeDoubles = Array(repeating: 0.0, count: 3)\n\t// threeDoubles is of type [Double], and equals [0.0, 0.0, 0.0]\n\t```\n\n- Creating an Array by Adding Two Arrays Together\n\n\t```\n\tvar anotherThreeDoubles = Array(repeating: 2.5, count: 3)\n\t// anotherThreeDoubles is of type [Double], and equals [2.5, 2.5, 2.5]\n \n\tvar sixDoubles = threeDoubles + anotherThreeDoubles\n\t// sixDoubles is inferred as [Double], and equals [0.0, 0.0, 0.0, 2.5, 2.5, 2.5]\n\t```\n\n- Creating an Array with an Array Literal\n\n\t```\n\tvar shoppingList: [String] = [\"Eggs\", \"Milk\"]\n\t// shoppingList has been initialized with two initial items\n\t```\n\n- Accessing and Modifying an Array\n\n\t```\n\tprint(\"The shopping list contains \\(shoppingList.count) items.\")\n\t// Prints \"The shopping list contains 2 items.\"\n\t\n\tif shoppingList.isEmpty {\n    print(\"The shopping list is empty.\")\n\t} else {\n    print(\"The shopping list is not empty.\")\n\t}\n\t// Prints \"The shopping list is not empty.\"\n\t\n\tshoppingList.append(\"Flour\")\n\t// shoppingList now contains 3 items, and someone is making pancakes\n\n\tshoppingList += [\"Baking Powder\"]\n\t// shoppingList now contains 4 items\n\tshoppingList += [\"Chocolate Spread\", \"Cheese\", \"Butter\"]\n\t// shoppingList now contains 7 items\n\t\n\tvar firstItem = shoppingList[0]\n\t// firstItem is equal to \"Eggs\"\n\t\n\tshoppingList[0] = \"Six eggs\"\n\t// the first item in the list is now equal to \"Six eggs\" rather than \"Eggs\"\n\t\n\tshoppingList[4...6] = [\"Bananas\", \"Apples\"]\n\t// shoppingList now contains 6 items\n\t\n\tshoppingList.insert(\"Maple Syrup\", at: 0)\n\t// shoppingList now contains 7 items\n\t// \"Maple Syrup\" is now the first item in the list\n\t\n\tlet mapleSyrup = shoppingList.remove(at: 0)\n\t// the item that was at index 0 has just been removed\n\t// shoppingList now contains 6 items, and no Maple Syrup\n\t// the mapleSyrup constant is now equal to the removed \"Maple Syrup\" string\n\t\n\tfirstItem = shoppingList[0]\n\t// firstItem is now equal to \"Six eggs\"\n\t\n\tlet apples = shoppingList.removeLast()\n\t// the last item in the array has just been removed\n\t// shoppingList now contains 5 items, and no apples\n\t// the apples constant is now equal to the removed \"Apples\" string\n\t```\n\t\n- Iterating Over an Array\n\n\t```\n\tfor item in shoppingList {\n    print(item)\n\t}\n\t// Six eggs\n\t// Milk\n\t// Flour\n\t// Baking Powder\n\t// Bananas\n\t\n\tfor (index, value) in shoppingList.enumerated() {\n    print(\"Item \\(index + 1): \\(value)\")\n\t}\n\t// Item 1: Six eggs\n\t// Item 2: Milk\n\t// Item 3: Flour\n\t// Item 4: Baking Powder\n\t// Item 5: Bananas\n\t```\n\t\n### Sets\n\n- Hash Values for Set Types\n\n\t- A type must be hashable in order to be stored in a set\n\t- that is, the type must provide a way to compute a hash value for itself\n\n- Creating and Initializing an Empty Set\n\n\t```\n\tvar letters = Set<Character>()\n\tprint(\"letters is of type Set<Character> with \\(letters.count) items.\")\n\t// Prints \"letters is of type Set<Character> with 0 items.\"\n\n\n\tletters.insert(\"a\")\n\t// letters now contains 1 value of type Character\n\tletters = []\n\t// letters is now an empty set, but is still of type Set<Character>\n\t```\n\t\n- Creating a Set with an Array Literal\n\n\t```\n\tvar favoriteGenres: Set<String> = [\"Rock\", \"Classical\", \"Hip hop\"]\n\t// favoriteGenres has been initialized with three initial items\n\t\n\tvar favoriteGenres: Set = [\"Rock\", \"Classical\", \"Hip hop\"]\n\t// Because all values in the array literal are of the same type, Swift can infer that Set<String> is the correct type to use for the favoriteGenres variable.\n\t```\n- Accessing and Modifying a Set\n\n\t```\n\tprint(\"I have \\(favoriteGenres.count) favorite music genres.\")\n\t// Prints \"I have 3 favorite music genres.\"\n\t\n\tif favoriteGenres.isEmpty {\n\t    print(\"As far as music goes, I'm not picky.\")\n\t} else {\n\t    print(\"I have particular music preferences.\")\n\t}\n\t// Prints \"I have particular music preferences.\"\n\t\n\tfavoriteGenres.insert(\"Jazz\")\n\t// favoriteGenres now contains 4 items\n\t\n\tif let removedGenre = favoriteGenres.remove(\"Rock\") {\n    print(\"\\(removedGenre)? I'm over it.\")\n\t} else {\n\t    print(\"I never much cared for that.\")\n\t}\n\t// Prints \"Rock? I'm over it.\"\t\n\t\n\tif favoriteGenres.contains(\"Funk\") {\n    print(\"I get up on the good foot.\")\n\t} else {\n\t    print(\"It's too funky in here.\")\n\t}\n\t// Prints \"It's too funky in here.\"\n\t```\n\n- Iterating Over a Set\n\n\t```\n\tfor genre in favoriteGenres {\n    print(\"\\(genre)\")\n\t}\n\t// Jazz\n\t// Hip hop\n\t// Classical\n\t\n\tfor genre in favoriteGenres.sorted() {\n    print(\"\\(genre)\")\n\t}\n\t// Classical\n\t// Hip hop\n\t// Jazz\n\t```\n- Fundamental Set Operations\n\n\t![img](https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SetOperations.png)\n\t\n\t```\n \tlet oddDigits: Set = [1, 3, 5, 7, 9]\n\tlet evenDigits: Set = [0, 2, 4, 6, 8]\n\tlet singleDigitPrimeNumbers: Set = [2, 3, 5, 7]\n\t \n\toddDigits.union(evenDigits).sorted()\n\t// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] \n\toddDigits.intersection(evenDigits).sorted()\n\t// []\n\toddDigits.subtracting(singleDigitPrimeNumbers).sorted()\n\t// [1, 9]\n\toddDigits.symmetricDifference(singleDigitPrimeNumbers).sorted()\n\t// [1, 2, 9]\n\t```\n\t\n\t```\n\tlet houseAnimals: Set = [\"🐶\", \"🐱\"]\n\tlet farmAnimals: Set = [\"🐮\", \"🐔\", \"🐑\", \"🐶\", \"🐱\"]\n\tlet cityAnimals: Set = [\"🐦\", \"🐭\"]\n\t \n\thouseAnimals.isSubset(of: farmAnimals)\n\t// true\n\tfarmAnimals.isSuperset(of: houseAnimals)\n\t// true\n\tfarmAnimals.isDisjoint(with: cityAnimals)\n\t// true\n\t```\n\n### Dictionaries\n\n- Creating an Empty Dictionary\n\n\t```\n\tvar namesOfIntegers = [Int: String]()\n\t// namesOfIntegers is an empty [Int: String] dictionary\n\t// Its keys are of type Int, and its values are of type String.\n\t\n\tnamesOfIntegers[16] = \"sixteen\"\n\t// namesOfIntegers now contains 1 key-value pair\n\tnamesOfIntegers = [:]\n\t// namesOfIntegers is once again an empty dictionary of type [Int: String]\n\t```\n- Creating a Dictionary with a Dictionary Literal\n\n\t```\n\tvar airports: [String: String] = [\"YYZ\": \"Toronto Pearson\", \"DUB\": \"Dublin\"]\n\t\n\tvar airports = [\"YYZ\": \"Toronto Pearson\", \"DUB\": \"Dublin\"]\t//type inference\n\t```\n- Accessing and Modifying a Dictionary\n\n\t```\n\tprint(\"The airports dictionary contains \\(airports.count) items.\")\n\t// Prints \"The airports dictionary contains 2 items.\"\n\t\n\tif airports.isEmpty {\n    print(\"The airports dictionary is empty.\")\n\t} else {\n\t    print(\"The airports dictionary is not empty.\")\n\t}\n\t// Prints \"The airports dictionary is not empty.\"\n\t\n\tairports[\"LHR\"] = \"London\"\n\t// the airports dictionary now contains 3 items\n\t\n\tairports[\"LHR\"] = \"London Heathrow\"\n\t// the value for \"LHR\" has been changed to \"London Heathrow\"\n\t\n\tif let oldValue = airports.updateValue(\"Dublin Airport\", forKey: \"DUB\") {\n   \t \tprint(\"The old value for DUB was \\(oldValue).\")\n\t}\n\t// Prints \"The old value for DUB was Dublin.\"\n\t\n\tif let airportName = airports[\"DUB\"] {\n\t    print(\"The name of the airport is \\(airportName).\")\n\t} else {\n\t    print(\"That airport is not in the airports dictionary.\")\n\t}\n\t// Prints \"The name of the airport is Dublin Airport.\"\n\t\n\tairports[\"APL\"] = \"Apple International\"\n\t// \"Apple International\" is not the real airport for APL, so delete it\n\tairports[\"APL\"] = nil\n\t// APL has now been removed from the dictionary\n\t\n\tif let removedValue = airports.removeValue(forKey: \"DUB\") {\n\t    print(\"The removed airport's name is \\(removedValue).\")\n\t} else {\n\t    print(\"The airports dictionary does not contain a value for DUB.\")\n\t}\n\t// Prints \"The removed airport's name is Dublin Airport.\"\n\t```\n\n- Iterating Over a Dictionary\n\n\t```\n\tfor (airportCode, airportName) in airports {\n\t    print(\"\\(airportCode): \\(airportName)\")\n\t}\n\t// YYZ: Toronto Pearson\n\t// LHR: London Heathrow\n\t\n\tfor airportCode in airports.keys {\n\t    print(\"Airport code: \\(airportCode)\")\n\t}\n\t// Airport code: YYZ\n\t// Airport code: LHR\n\t \n\tfor airportName in airports.values {\n\t    print(\"Airport name: \\(airportName)\")\n\t}\n\t// Airport name: Toronto Pearson\n\t// Airport name: London Heathrow\n\t\n\tlet airportCodes = [String](airports.keys)\n\t// airportCodes is [\"YYZ\", \"LHR\"]\n\t \n\tlet airportNames = [String](airports.values)\n\t// airportNames is [\"Toronto Pearson\", \"London Heathrow\"]\n\t```\n\t\n# Enumerations\n\n- Enumeration Syntax\n\t\n\t```\n\tenum CompassPoint {\n\t\tcase north\n\t\tcase south\n\t\tcase east\n\t\tcase west\n\t}\n\t\n\tenum Planet {\n\t\t case mercury, venus, earth, mars, jupiter, saturn, uranus, neptune\n\t}\n\t\t\n\tvar directionToHead = CompassPoint.west\n\tdirectionToHead = .east\n\t```\n\t\n\n- Matching Enumeration Values with a Switch Statement\n\n\t```\n\tdirectionToHead = .south\n\tswitch directionToHead {\n\tcase .north:\n\t    print(\"Lots of planets have a north\")\n\tcase .south:\n\t    print(\"Watch out for penguins\")\n\tcase .east:\n\t    print(\"Where the sun rises\")\n\tcase .west:\n\t    print(\"Where the skies are blue\")\n\t}\n\t// Prints \"Watch out for penguins\"\n\t\n\tlet somePlanet = Planet.earth\n\tswitch somePlanet {\n\tcase .earth:\n\t    print(\"Mostly harmless\")\n\tdefault:\n\t    print(\"Not a safe place for humans\")\n\t}\n\t// Prints \"Mostly harmless\"\n\t```\n\n\n\n\t\n\n\n\t\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n","slug":"2018-01-29-데이터 타입 고급","published":1,"updated":"2018-04-16T04:14:25.674Z","comments":1,"photos":[],"link":"","_id":"cjp6k665500kc31x72crnia3l","content":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309</a></p>\n<h1 id=\"Type-Safety-and-Type-Inference\"><a href=\"#Type-Safety-and-Type-Inference\" class=\"headerlink\" title=\"Type Safety and Type Inference\"></a>Type Safety and Type Inference</h1><ul>\n<li>A type safe language encourages you to be clear about the types of values your code can work with. </li>\n<li>If part of your code requires a String, you can’t pass it an Int by mistake.</li>\n<li>If you don’t specify the type of value you need, Swift uses type inference to work out the appropriate type</li>\n<li><p>Type inference enables a compiler to deduce the type of a particular expression automatically when it compiles your code, simply by examining the values you provide.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let meaningOfLife = 42</span><br><span class=\"line\">// meaningOfLife is inferred to be of type Int</span><br><span class=\"line\"></span><br><span class=\"line\">let pi = 3.14159</span><br><span class=\"line\">// pi is inferred to be of type Double</span><br><span class=\"line\"></span><br><span class=\"line\">let anotherPi = 3 + 0.14159</span><br><span class=\"line\">// anotherPi is also inferred to be of type Double</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"Type-Aliases\"><a href=\"#Type-Aliases\" class=\"headerlink\" title=\"Type Aliases\"></a>Type Aliases</h1><ul>\n<li><p>Type aliases define an alternative name for an existing type. </p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typealias AudioSample = UInt16</span><br><span class=\"line\">var maxAmplitudeFound = AudioSample.min</span><br><span class=\"line\">// maxAmplitudeFound is now 0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"tuples\"><a href=\"#tuples\" class=\"headerlink\" title=\"tuples\"></a>tuples</h1><ul>\n<li>Tuples group multiple values into a single compound value</li>\n<li><p>Tuples are useful for temporary groups of related values.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let http404Error = (404, &quot;Not Found&quot;)</span><br><span class=\"line\">// http404Error is of type (Int, String), and equals (404, &quot;Not Found&quot;)</span><br><span class=\"line\">\t</span><br><span class=\"line\">let (statusCode, statusMessage) = http404Error</span><br><span class=\"line\">print(&quot;The status code is \\(statusCode)&quot;)</span><br><span class=\"line\">// Prints &quot;The status code is 404&quot;</span><br><span class=\"line\">print(&quot;The status message is \\(statusMessage)&quot;)</span><br><span class=\"line\">// Prints &quot;The status message is Not Found&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">let (justTheStatusCode, _) = http404Error</span><br><span class=\"line\">print(&quot;The status code is \\(justTheStatusCode)&quot;)</span><br><span class=\"line\">// Prints &quot;The status code is 404&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;The status code is \\(http404Error.0)&quot;)</span><br><span class=\"line\">// Prints &quot;The status code is 404&quot;</span><br><span class=\"line\">print(&quot;The status message is \\(http404Error.1)&quot;)</span><br><span class=\"line\">// Prints &quot;The status message is Not Found&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let http200Status = (statusCode: 200, description: &quot;OK&quot;)</span><br><span class=\"line\">print(&quot;The status code is \\(http200Status.statusCode)&quot;)</span><br><span class=\"line\">// Prints &quot;The status code is 200&quot;</span><br><span class=\"line\">print(&quot;The status message is \\(http200Status.description)&quot;)</span><br><span class=\"line\">// Prints &quot;The status message is OK&quot;</span><br></pre></td></tr></table></figure>\n</code></pre><h1 id=\"Collection-Types\"><a href=\"#Collection-Types\" class=\"headerlink\" title=\"Collection Types\"></a>Collection Types</h1><ul>\n<li>Arrays are ordered collections of values. </li>\n<li>Sets are unordered collections of unique values. </li>\n<li><p>Dictionaries are unordered collections of key-value associations.</p>\n<p>  <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/collection.png\" alt=\"img\"></p>\n</li>\n<li><p>Mutability of Collections</p>\n<ul>\n<li>If you create an array, a set, or a dictionary, and assign it to a variable, the collection that is created will be mutable. </li>\n<li>If you assign an array, a set, or a dictionary to a constant, that collection is immutable, and its size and contents cannot be changed.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Arrays\"><a href=\"#Arrays\" class=\"headerlink\" title=\"Arrays\"></a>Arrays</h3><ul>\n<li><p>Creating an Empty Array</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var someInts = [Int]()</span><br><span class=\"line\">print(&quot;someInts is of type [Int] with \\(someInts.count) items.&quot;)</span><br><span class=\"line\">// Prints &quot;someInts is of type [Int] with 0 items.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">someInts.append(3)</span><br><span class=\"line\">// someInts now contains 1 value of type Int</span><br><span class=\"line\">someInts = []</span><br><span class=\"line\">// someInts is now an empty array, but is still of type [Int]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Creating an Array with a Default Value</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var threeDoubles = Array(repeating: 0.0, count: 3)</span><br><span class=\"line\">// threeDoubles is of type [Double], and equals [0.0, 0.0, 0.0]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Creating an Array by Adding Two Arrays Together</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var anotherThreeDoubles = Array(repeating: 2.5, count: 3)</span><br><span class=\"line\">// anotherThreeDoubles is of type [Double], and equals [2.5, 2.5, 2.5]</span><br><span class=\"line\"></span><br><span class=\"line\">var sixDoubles = threeDoubles + anotherThreeDoubles</span><br><span class=\"line\">// sixDoubles is inferred as [Double], and equals [0.0, 0.0, 0.0, 2.5, 2.5, 2.5]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Creating an Array with an Array Literal</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var shoppingList: [String] = [&quot;Eggs&quot;, &quot;Milk&quot;]</span><br><span class=\"line\">// shoppingList has been initialized with two initial items</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Accessing and Modifying an Array</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;The shopping list contains \\(shoppingList.count) items.&quot;)</span><br><span class=\"line\">// Prints &quot;The shopping list contains 2 items.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if shoppingList.isEmpty &#123;</span><br><span class=\"line\">   print(&quot;The shopping list is empty.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">   print(&quot;The shopping list is not empty.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The shopping list is not empty.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList.append(&quot;Flour&quot;)</span><br><span class=\"line\">// shoppingList now contains 3 items, and someone is making pancakes</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList += [&quot;Baking Powder&quot;]</span><br><span class=\"line\">// shoppingList now contains 4 items</span><br><span class=\"line\">shoppingList += [&quot;Chocolate Spread&quot;, &quot;Cheese&quot;, &quot;Butter&quot;]</span><br><span class=\"line\">// shoppingList now contains 7 items</span><br><span class=\"line\"></span><br><span class=\"line\">var firstItem = shoppingList[0]</span><br><span class=\"line\">// firstItem is equal to &quot;Eggs&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList[0] = &quot;Six eggs&quot;</span><br><span class=\"line\">// the first item in the list is now equal to &quot;Six eggs&quot; rather than &quot;Eggs&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList[4...6] = [&quot;Bananas&quot;, &quot;Apples&quot;]</span><br><span class=\"line\">// shoppingList now contains 6 items</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList.insert(&quot;Maple Syrup&quot;, at: 0)</span><br><span class=\"line\">// shoppingList now contains 7 items</span><br><span class=\"line\">// &quot;Maple Syrup&quot; is now the first item in the list</span><br><span class=\"line\"></span><br><span class=\"line\">let mapleSyrup = shoppingList.remove(at: 0)</span><br><span class=\"line\">// the item that was at index 0 has just been removed</span><br><span class=\"line\">// shoppingList now contains 6 items, and no Maple Syrup</span><br><span class=\"line\">// the mapleSyrup constant is now equal to the removed &quot;Maple Syrup&quot; string</span><br><span class=\"line\"></span><br><span class=\"line\">firstItem = shoppingList[0]</span><br><span class=\"line\">// firstItem is now equal to &quot;Six eggs&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">let apples = shoppingList.removeLast()</span><br><span class=\"line\">// the last item in the array has just been removed</span><br><span class=\"line\">// shoppingList now contains 5 items, and no apples</span><br><span class=\"line\">// the apples constant is now equal to the removed &quot;Apples&quot; string</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Iterating Over an Array</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for item in shoppingList &#123;</span><br><span class=\"line\">   print(item)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Six eggs</span><br><span class=\"line\">// Milk</span><br><span class=\"line\">// Flour</span><br><span class=\"line\">// Baking Powder</span><br><span class=\"line\">// Bananas</span><br><span class=\"line\"></span><br><span class=\"line\">for (index, value) in shoppingList.enumerated() &#123;</span><br><span class=\"line\">   print(&quot;Item \\(index + 1): \\(value)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Item 1: Six eggs</span><br><span class=\"line\">// Item 2: Milk</span><br><span class=\"line\">// Item 3: Flour</span><br><span class=\"line\">// Item 4: Baking Powder</span><br><span class=\"line\">// Item 5: Bananas</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Sets\"><a href=\"#Sets\" class=\"headerlink\" title=\"Sets\"></a>Sets</h3><ul>\n<li><p>Hash Values for Set Types</p>\n<ul>\n<li>A type must be hashable in order to be stored in a set</li>\n<li>that is, the type must provide a way to compute a hash value for itself</li>\n</ul>\n</li>\n<li><p>Creating and Initializing an Empty Set</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var letters = Set&lt;Character&gt;()</span><br><span class=\"line\">print(&quot;letters is of type Set&lt;Character&gt; with \\(letters.count) items.&quot;)</span><br><span class=\"line\">// Prints &quot;letters is of type Set&lt;Character&gt; with 0 items.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">letters.insert(&quot;a&quot;)</span><br><span class=\"line\">// letters now contains 1 value of type Character</span><br><span class=\"line\">letters = []</span><br><span class=\"line\">// letters is now an empty set, but is still of type Set&lt;Character&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Creating a Set with an Array Literal</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var favoriteGenres: Set&lt;String&gt; = [&quot;Rock&quot;, &quot;Classical&quot;, &quot;Hip hop&quot;]</span><br><span class=\"line\">// favoriteGenres has been initialized with three initial items</span><br><span class=\"line\"></span><br><span class=\"line\">var favoriteGenres: Set = [&quot;Rock&quot;, &quot;Classical&quot;, &quot;Hip hop&quot;]</span><br><span class=\"line\">// Because all values in the array literal are of the same type, Swift can infer that Set&lt;String&gt; is the correct type to use for the favoriteGenres variable.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Accessing and Modifying a Set</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;I have \\(favoriteGenres.count) favorite music genres.&quot;)</span><br><span class=\"line\">// Prints &quot;I have 3 favorite music genres.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if favoriteGenres.isEmpty &#123;</span><br><span class=\"line\">    print(&quot;As far as music goes, I&apos;m not picky.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;I have particular music preferences.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;I have particular music preferences.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">favoriteGenres.insert(&quot;Jazz&quot;)</span><br><span class=\"line\">// favoriteGenres now contains 4 items</span><br><span class=\"line\"></span><br><span class=\"line\">if let removedGenre = favoriteGenres.remove(&quot;Rock&quot;) &#123;</span><br><span class=\"line\">   print(&quot;\\(removedGenre)? I&apos;m over it.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;I never much cared for that.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;Rock? I&apos;m over it.&quot;\t</span><br><span class=\"line\"></span><br><span class=\"line\">if favoriteGenres.contains(&quot;Funk&quot;) &#123;</span><br><span class=\"line\">   print(&quot;I get up on the good foot.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;It&apos;s too funky in here.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;It&apos;s too funky in here.&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Iterating Over a Set</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for genre in favoriteGenres &#123;</span><br><span class=\"line\">   print(&quot;\\(genre)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Jazz</span><br><span class=\"line\">// Hip hop</span><br><span class=\"line\">// Classical</span><br><span class=\"line\"></span><br><span class=\"line\">for genre in favoriteGenres.sorted() &#123;</span><br><span class=\"line\">   print(&quot;\\(genre)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Classical</span><br><span class=\"line\">// Hip hop</span><br><span class=\"line\">// Jazz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Fundamental Set Operations</p>\n<p>  <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SetOperations.png\" alt=\"img\"></p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tlet oddDigits: Set = [1, 3, 5, 7, 9]</span><br><span class=\"line\">let evenDigits: Set = [0, 2, 4, 6, 8]</span><br><span class=\"line\">let singleDigitPrimeNumbers: Set = [2, 3, 5, 7]</span><br><span class=\"line\"> </span><br><span class=\"line\">oddDigits.union(evenDigits).sorted()</span><br><span class=\"line\">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] </span><br><span class=\"line\">oddDigits.intersection(evenDigits).sorted()</span><br><span class=\"line\">// []</span><br><span class=\"line\">oddDigits.subtracting(singleDigitPrimeNumbers).sorted()</span><br><span class=\"line\">// [1, 9]</span><br><span class=\"line\">oddDigits.symmetricDifference(singleDigitPrimeNumbers).sorted()</span><br><span class=\"line\">// [1, 2, 9]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let houseAnimals: Set = [&quot;🐶&quot;, &quot;🐱&quot;]</span><br><span class=\"line\">let farmAnimals: Set = [&quot;🐮&quot;, &quot;🐔&quot;, &quot;🐑&quot;, &quot;🐶&quot;, &quot;🐱&quot;]</span><br><span class=\"line\">let cityAnimals: Set = [&quot;🐦&quot;, &quot;🐭&quot;]</span><br><span class=\"line\"> </span><br><span class=\"line\">houseAnimals.isSubset(of: farmAnimals)</span><br><span class=\"line\">// true</span><br><span class=\"line\">farmAnimals.isSuperset(of: houseAnimals)</span><br><span class=\"line\">// true</span><br><span class=\"line\">farmAnimals.isDisjoint(with: cityAnimals)</span><br><span class=\"line\">// true</span><br></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Dictionaries\"><a href=\"#Dictionaries\" class=\"headerlink\" title=\"Dictionaries\"></a>Dictionaries</h3><ul>\n<li><p>Creating an Empty Dictionary</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var namesOfIntegers = [Int: String]()</span><br><span class=\"line\">// namesOfIntegers is an empty [Int: String] dictionary</span><br><span class=\"line\">// Its keys are of type Int, and its values are of type String.</span><br><span class=\"line\"></span><br><span class=\"line\">namesOfIntegers[16] = &quot;sixteen&quot;</span><br><span class=\"line\">// namesOfIntegers now contains 1 key-value pair</span><br><span class=\"line\">namesOfIntegers = [:]</span><br><span class=\"line\">// namesOfIntegers is once again an empty dictionary of type [Int: String]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Creating a Dictionary with a Dictionary Literal</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var airports: [String: String] = [&quot;YYZ&quot;: &quot;Toronto Pearson&quot;, &quot;DUB&quot;: &quot;Dublin&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">var airports = [&quot;YYZ&quot;: &quot;Toronto Pearson&quot;, &quot;DUB&quot;: &quot;Dublin&quot;]\t//type inference</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Accessing and Modifying a Dictionary</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;The airports dictionary contains \\(airports.count) items.&quot;)</span><br><span class=\"line\">// Prints &quot;The airports dictionary contains 2 items.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if airports.isEmpty &#123;</span><br><span class=\"line\">   print(&quot;The airports dictionary is empty.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;The airports dictionary is not empty.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The airports dictionary is not empty.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">airports[&quot;LHR&quot;] = &quot;London&quot;</span><br><span class=\"line\">// the airports dictionary now contains 3 items</span><br><span class=\"line\"></span><br><span class=\"line\">airports[&quot;LHR&quot;] = &quot;London Heathrow&quot;</span><br><span class=\"line\">// the value for &quot;LHR&quot; has been changed to &quot;London Heathrow&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if let oldValue = airports.updateValue(&quot;Dublin Airport&quot;, forKey: &quot;DUB&quot;) &#123;</span><br><span class=\"line\">  \t \tprint(&quot;The old value for DUB was \\(oldValue).&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The old value for DUB was Dublin.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if let airportName = airports[&quot;DUB&quot;] &#123;</span><br><span class=\"line\">    print(&quot;The name of the airport is \\(airportName).&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;That airport is not in the airports dictionary.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The name of the airport is Dublin Airport.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">airports[&quot;APL&quot;] = &quot;Apple International&quot;</span><br><span class=\"line\">// &quot;Apple International&quot; is not the real airport for APL, so delete it</span><br><span class=\"line\">airports[&quot;APL&quot;] = nil</span><br><span class=\"line\">// APL has now been removed from the dictionary</span><br><span class=\"line\"></span><br><span class=\"line\">if let removedValue = airports.removeValue(forKey: &quot;DUB&quot;) &#123;</span><br><span class=\"line\">    print(&quot;The removed airport&apos;s name is \\(removedValue).&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;The airports dictionary does not contain a value for DUB.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The removed airport&apos;s name is Dublin Airport.&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Iterating Over a Dictionary</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (airportCode, airportName) in airports &#123;</span><br><span class=\"line\">    print(&quot;\\(airportCode): \\(airportName)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// YYZ: Toronto Pearson</span><br><span class=\"line\">// LHR: London Heathrow</span><br><span class=\"line\"></span><br><span class=\"line\">for airportCode in airports.keys &#123;</span><br><span class=\"line\">    print(&quot;Airport code: \\(airportCode)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Airport code: YYZ</span><br><span class=\"line\">// Airport code: LHR</span><br><span class=\"line\"> </span><br><span class=\"line\">for airportName in airports.values &#123;</span><br><span class=\"line\">    print(&quot;Airport name: \\(airportName)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Airport name: Toronto Pearson</span><br><span class=\"line\">// Airport name: London Heathrow</span><br><span class=\"line\"></span><br><span class=\"line\">let airportCodes = [String](airports.keys)</span><br><span class=\"line\">// airportCodes is [&quot;YYZ&quot;, &quot;LHR&quot;]</span><br><span class=\"line\"> </span><br><span class=\"line\">let airportNames = [String](airports.values)</span><br><span class=\"line\">// airportNames is [&quot;Toronto Pearson&quot;, &quot;London Heathrow&quot;]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"Enumerations\"><a href=\"#Enumerations\" class=\"headerlink\" title=\"Enumerations\"></a>Enumerations</h1><ul>\n<li><p>Enumeration Syntax</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum CompassPoint &#123;</span><br><span class=\"line\">\tcase north</span><br><span class=\"line\">\tcase south</span><br><span class=\"line\">\tcase east</span><br><span class=\"line\">\tcase west</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">enum Planet &#123;</span><br><span class=\"line\">\t case mercury, venus, earth, mars, jupiter, saturn, uranus, neptune</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">var directionToHead = CompassPoint.west</span><br><span class=\"line\">directionToHead = .east</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Matching Enumeration Values with a Switch Statement</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">directionToHead = .south</span><br><span class=\"line\">switch directionToHead &#123;</span><br><span class=\"line\">case .north:</span><br><span class=\"line\">    print(&quot;Lots of planets have a north&quot;)</span><br><span class=\"line\">case .south:</span><br><span class=\"line\">    print(&quot;Watch out for penguins&quot;)</span><br><span class=\"line\">case .east:</span><br><span class=\"line\">    print(&quot;Where the sun rises&quot;)</span><br><span class=\"line\">case .west:</span><br><span class=\"line\">    print(&quot;Where the skies are blue&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;Watch out for penguins&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">let somePlanet = Planet.earth</span><br><span class=\"line\">switch somePlanet &#123;</span><br><span class=\"line\">case .earth:</span><br><span class=\"line\">    print(&quot;Mostly harmless&quot;)</span><br><span class=\"line\">default:</span><br><span class=\"line\">    print(&quot;Not a safe place for humans&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;Mostly harmless&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p><a href=\"https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309</a></p>\n<h1 id=\"Type-Safety-and-Type-Inference\"><a href=\"#Type-Safety-and-Type-Inference\" class=\"headerlink\" title=\"Type Safety and Type Inference\"></a>Type Safety and Type Inference</h1><ul>\n<li>A type safe language encourages you to be clear about the types of values your code can work with. </li>\n<li>If part of your code requires a String, you can’t pass it an Int by mistake.</li>\n<li>If you don’t specify the type of value you need, Swift uses type inference to work out the appropriate type</li>\n<li><p>Type inference enables a compiler to deduce the type of a particular expression automatically when it compiles your code, simply by examining the values you provide.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let meaningOfLife = 42</span><br><span class=\"line\">// meaningOfLife is inferred to be of type Int</span><br><span class=\"line\"></span><br><span class=\"line\">let pi = 3.14159</span><br><span class=\"line\">// pi is inferred to be of type Double</span><br><span class=\"line\"></span><br><span class=\"line\">let anotherPi = 3 + 0.14159</span><br><span class=\"line\">// anotherPi is also inferred to be of type Double</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"Type-Aliases\"><a href=\"#Type-Aliases\" class=\"headerlink\" title=\"Type Aliases\"></a>Type Aliases</h1><ul>\n<li><p>Type aliases define an alternative name for an existing type. </p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typealias AudioSample = UInt16</span><br><span class=\"line\">var maxAmplitudeFound = AudioSample.min</span><br><span class=\"line\">// maxAmplitudeFound is now 0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"tuples\"><a href=\"#tuples\" class=\"headerlink\" title=\"tuples\"></a>tuples</h1><ul>\n<li>Tuples group multiple values into a single compound value</li>\n<li><p>Tuples are useful for temporary groups of related values.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let http404Error = (404, &quot;Not Found&quot;)</span><br><span class=\"line\">// http404Error is of type (Int, String), and equals (404, &quot;Not Found&quot;)</span><br><span class=\"line\">\t</span><br><span class=\"line\">let (statusCode, statusMessage) = http404Error</span><br><span class=\"line\">print(&quot;The status code is \\(statusCode)&quot;)</span><br><span class=\"line\">// Prints &quot;The status code is 404&quot;</span><br><span class=\"line\">print(&quot;The status message is \\(statusMessage)&quot;)</span><br><span class=\"line\">// Prints &quot;The status message is Not Found&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">let (justTheStatusCode, _) = http404Error</span><br><span class=\"line\">print(&quot;The status code is \\(justTheStatusCode)&quot;)</span><br><span class=\"line\">// Prints &quot;The status code is 404&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;The status code is \\(http404Error.0)&quot;)</span><br><span class=\"line\">// Prints &quot;The status code is 404&quot;</span><br><span class=\"line\">print(&quot;The status message is \\(http404Error.1)&quot;)</span><br><span class=\"line\">// Prints &quot;The status message is Not Found&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let http200Status = (statusCode: 200, description: &quot;OK&quot;)</span><br><span class=\"line\">print(&quot;The status code is \\(http200Status.statusCode)&quot;)</span><br><span class=\"line\">// Prints &quot;The status code is 200&quot;</span><br><span class=\"line\">print(&quot;The status message is \\(http200Status.description)&quot;)</span><br><span class=\"line\">// Prints &quot;The status message is OK&quot;</span><br></pre></td></tr></table></figure>\n</code></pre><h1 id=\"Collection-Types\"><a href=\"#Collection-Types\" class=\"headerlink\" title=\"Collection Types\"></a>Collection Types</h1><ul>\n<li>Arrays are ordered collections of values. </li>\n<li>Sets are unordered collections of unique values. </li>\n<li><p>Dictionaries are unordered collections of key-value associations.</p>\n<p>  <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/collection.png\" alt=\"img\"></p>\n</li>\n<li><p>Mutability of Collections</p>\n<ul>\n<li>If you create an array, a set, or a dictionary, and assign it to a variable, the collection that is created will be mutable. </li>\n<li>If you assign an array, a set, or a dictionary to a constant, that collection is immutable, and its size and contents cannot be changed.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Arrays\"><a href=\"#Arrays\" class=\"headerlink\" title=\"Arrays\"></a>Arrays</h3><ul>\n<li><p>Creating an Empty Array</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var someInts = [Int]()</span><br><span class=\"line\">print(&quot;someInts is of type [Int] with \\(someInts.count) items.&quot;)</span><br><span class=\"line\">// Prints &quot;someInts is of type [Int] with 0 items.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">someInts.append(3)</span><br><span class=\"line\">// someInts now contains 1 value of type Int</span><br><span class=\"line\">someInts = []</span><br><span class=\"line\">// someInts is now an empty array, but is still of type [Int]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Creating an Array with a Default Value</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var threeDoubles = Array(repeating: 0.0, count: 3)</span><br><span class=\"line\">// threeDoubles is of type [Double], and equals [0.0, 0.0, 0.0]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Creating an Array by Adding Two Arrays Together</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var anotherThreeDoubles = Array(repeating: 2.5, count: 3)</span><br><span class=\"line\">// anotherThreeDoubles is of type [Double], and equals [2.5, 2.5, 2.5]</span><br><span class=\"line\"></span><br><span class=\"line\">var sixDoubles = threeDoubles + anotherThreeDoubles</span><br><span class=\"line\">// sixDoubles is inferred as [Double], and equals [0.0, 0.0, 0.0, 2.5, 2.5, 2.5]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Creating an Array with an Array Literal</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var shoppingList: [String] = [&quot;Eggs&quot;, &quot;Milk&quot;]</span><br><span class=\"line\">// shoppingList has been initialized with two initial items</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Accessing and Modifying an Array</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;The shopping list contains \\(shoppingList.count) items.&quot;)</span><br><span class=\"line\">// Prints &quot;The shopping list contains 2 items.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if shoppingList.isEmpty &#123;</span><br><span class=\"line\">   print(&quot;The shopping list is empty.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">   print(&quot;The shopping list is not empty.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The shopping list is not empty.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList.append(&quot;Flour&quot;)</span><br><span class=\"line\">// shoppingList now contains 3 items, and someone is making pancakes</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList += [&quot;Baking Powder&quot;]</span><br><span class=\"line\">// shoppingList now contains 4 items</span><br><span class=\"line\">shoppingList += [&quot;Chocolate Spread&quot;, &quot;Cheese&quot;, &quot;Butter&quot;]</span><br><span class=\"line\">// shoppingList now contains 7 items</span><br><span class=\"line\"></span><br><span class=\"line\">var firstItem = shoppingList[0]</span><br><span class=\"line\">// firstItem is equal to &quot;Eggs&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList[0] = &quot;Six eggs&quot;</span><br><span class=\"line\">// the first item in the list is now equal to &quot;Six eggs&quot; rather than &quot;Eggs&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList[4...6] = [&quot;Bananas&quot;, &quot;Apples&quot;]</span><br><span class=\"line\">// shoppingList now contains 6 items</span><br><span class=\"line\"></span><br><span class=\"line\">shoppingList.insert(&quot;Maple Syrup&quot;, at: 0)</span><br><span class=\"line\">// shoppingList now contains 7 items</span><br><span class=\"line\">// &quot;Maple Syrup&quot; is now the first item in the list</span><br><span class=\"line\"></span><br><span class=\"line\">let mapleSyrup = shoppingList.remove(at: 0)</span><br><span class=\"line\">// the item that was at index 0 has just been removed</span><br><span class=\"line\">// shoppingList now contains 6 items, and no Maple Syrup</span><br><span class=\"line\">// the mapleSyrup constant is now equal to the removed &quot;Maple Syrup&quot; string</span><br><span class=\"line\"></span><br><span class=\"line\">firstItem = shoppingList[0]</span><br><span class=\"line\">// firstItem is now equal to &quot;Six eggs&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">let apples = shoppingList.removeLast()</span><br><span class=\"line\">// the last item in the array has just been removed</span><br><span class=\"line\">// shoppingList now contains 5 items, and no apples</span><br><span class=\"line\">// the apples constant is now equal to the removed &quot;Apples&quot; string</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Iterating Over an Array</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for item in shoppingList &#123;</span><br><span class=\"line\">   print(item)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Six eggs</span><br><span class=\"line\">// Milk</span><br><span class=\"line\">// Flour</span><br><span class=\"line\">// Baking Powder</span><br><span class=\"line\">// Bananas</span><br><span class=\"line\"></span><br><span class=\"line\">for (index, value) in shoppingList.enumerated() &#123;</span><br><span class=\"line\">   print(&quot;Item \\(index + 1): \\(value)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Item 1: Six eggs</span><br><span class=\"line\">// Item 2: Milk</span><br><span class=\"line\">// Item 3: Flour</span><br><span class=\"line\">// Item 4: Baking Powder</span><br><span class=\"line\">// Item 5: Bananas</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Sets\"><a href=\"#Sets\" class=\"headerlink\" title=\"Sets\"></a>Sets</h3><ul>\n<li><p>Hash Values for Set Types</p>\n<ul>\n<li>A type must be hashable in order to be stored in a set</li>\n<li>that is, the type must provide a way to compute a hash value for itself</li>\n</ul>\n</li>\n<li><p>Creating and Initializing an Empty Set</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var letters = Set&lt;Character&gt;()</span><br><span class=\"line\">print(&quot;letters is of type Set&lt;Character&gt; with \\(letters.count) items.&quot;)</span><br><span class=\"line\">// Prints &quot;letters is of type Set&lt;Character&gt; with 0 items.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">letters.insert(&quot;a&quot;)</span><br><span class=\"line\">// letters now contains 1 value of type Character</span><br><span class=\"line\">letters = []</span><br><span class=\"line\">// letters is now an empty set, but is still of type Set&lt;Character&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Creating a Set with an Array Literal</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var favoriteGenres: Set&lt;String&gt; = [&quot;Rock&quot;, &quot;Classical&quot;, &quot;Hip hop&quot;]</span><br><span class=\"line\">// favoriteGenres has been initialized with three initial items</span><br><span class=\"line\"></span><br><span class=\"line\">var favoriteGenres: Set = [&quot;Rock&quot;, &quot;Classical&quot;, &quot;Hip hop&quot;]</span><br><span class=\"line\">// Because all values in the array literal are of the same type, Swift can infer that Set&lt;String&gt; is the correct type to use for the favoriteGenres variable.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Accessing and Modifying a Set</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;I have \\(favoriteGenres.count) favorite music genres.&quot;)</span><br><span class=\"line\">// Prints &quot;I have 3 favorite music genres.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if favoriteGenres.isEmpty &#123;</span><br><span class=\"line\">    print(&quot;As far as music goes, I&apos;m not picky.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;I have particular music preferences.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;I have particular music preferences.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">favoriteGenres.insert(&quot;Jazz&quot;)</span><br><span class=\"line\">// favoriteGenres now contains 4 items</span><br><span class=\"line\"></span><br><span class=\"line\">if let removedGenre = favoriteGenres.remove(&quot;Rock&quot;) &#123;</span><br><span class=\"line\">   print(&quot;\\(removedGenre)? I&apos;m over it.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;I never much cared for that.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;Rock? I&apos;m over it.&quot;\t</span><br><span class=\"line\"></span><br><span class=\"line\">if favoriteGenres.contains(&quot;Funk&quot;) &#123;</span><br><span class=\"line\">   print(&quot;I get up on the good foot.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;It&apos;s too funky in here.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;It&apos;s too funky in here.&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Iterating Over a Set</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for genre in favoriteGenres &#123;</span><br><span class=\"line\">   print(&quot;\\(genre)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Jazz</span><br><span class=\"line\">// Hip hop</span><br><span class=\"line\">// Classical</span><br><span class=\"line\"></span><br><span class=\"line\">for genre in favoriteGenres.sorted() &#123;</span><br><span class=\"line\">   print(&quot;\\(genre)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Classical</span><br><span class=\"line\">// Hip hop</span><br><span class=\"line\">// Jazz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Fundamental Set Operations</p>\n<p>  <img src=\"https://github.com/KoJunHee/kojunhee.github.io/raw/master/img/SetOperations.png\" alt=\"img\"></p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tlet oddDigits: Set = [1, 3, 5, 7, 9]</span><br><span class=\"line\">let evenDigits: Set = [0, 2, 4, 6, 8]</span><br><span class=\"line\">let singleDigitPrimeNumbers: Set = [2, 3, 5, 7]</span><br><span class=\"line\"> </span><br><span class=\"line\">oddDigits.union(evenDigits).sorted()</span><br><span class=\"line\">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] </span><br><span class=\"line\">oddDigits.intersection(evenDigits).sorted()</span><br><span class=\"line\">// []</span><br><span class=\"line\">oddDigits.subtracting(singleDigitPrimeNumbers).sorted()</span><br><span class=\"line\">// [1, 9]</span><br><span class=\"line\">oddDigits.symmetricDifference(singleDigitPrimeNumbers).sorted()</span><br><span class=\"line\">// [1, 2, 9]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let houseAnimals: Set = [&quot;🐶&quot;, &quot;🐱&quot;]</span><br><span class=\"line\">let farmAnimals: Set = [&quot;🐮&quot;, &quot;🐔&quot;, &quot;🐑&quot;, &quot;🐶&quot;, &quot;🐱&quot;]</span><br><span class=\"line\">let cityAnimals: Set = [&quot;🐦&quot;, &quot;🐭&quot;]</span><br><span class=\"line\"> </span><br><span class=\"line\">houseAnimals.isSubset(of: farmAnimals)</span><br><span class=\"line\">// true</span><br><span class=\"line\">farmAnimals.isSuperset(of: houseAnimals)</span><br><span class=\"line\">// true</span><br><span class=\"line\">farmAnimals.isDisjoint(with: cityAnimals)</span><br><span class=\"line\">// true</span><br></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Dictionaries\"><a href=\"#Dictionaries\" class=\"headerlink\" title=\"Dictionaries\"></a>Dictionaries</h3><ul>\n<li><p>Creating an Empty Dictionary</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var namesOfIntegers = [Int: String]()</span><br><span class=\"line\">// namesOfIntegers is an empty [Int: String] dictionary</span><br><span class=\"line\">// Its keys are of type Int, and its values are of type String.</span><br><span class=\"line\"></span><br><span class=\"line\">namesOfIntegers[16] = &quot;sixteen&quot;</span><br><span class=\"line\">// namesOfIntegers now contains 1 key-value pair</span><br><span class=\"line\">namesOfIntegers = [:]</span><br><span class=\"line\">// namesOfIntegers is once again an empty dictionary of type [Int: String]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Creating a Dictionary with a Dictionary Literal</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var airports: [String: String] = [&quot;YYZ&quot;: &quot;Toronto Pearson&quot;, &quot;DUB&quot;: &quot;Dublin&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">var airports = [&quot;YYZ&quot;: &quot;Toronto Pearson&quot;, &quot;DUB&quot;: &quot;Dublin&quot;]\t//type inference</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Accessing and Modifying a Dictionary</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;The airports dictionary contains \\(airports.count) items.&quot;)</span><br><span class=\"line\">// Prints &quot;The airports dictionary contains 2 items.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if airports.isEmpty &#123;</span><br><span class=\"line\">   print(&quot;The airports dictionary is empty.&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;The airports dictionary is not empty.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The airports dictionary is not empty.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">airports[&quot;LHR&quot;] = &quot;London&quot;</span><br><span class=\"line\">// the airports dictionary now contains 3 items</span><br><span class=\"line\"></span><br><span class=\"line\">airports[&quot;LHR&quot;] = &quot;London Heathrow&quot;</span><br><span class=\"line\">// the value for &quot;LHR&quot; has been changed to &quot;London Heathrow&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if let oldValue = airports.updateValue(&quot;Dublin Airport&quot;, forKey: &quot;DUB&quot;) &#123;</span><br><span class=\"line\">  \t \tprint(&quot;The old value for DUB was \\(oldValue).&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The old value for DUB was Dublin.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if let airportName = airports[&quot;DUB&quot;] &#123;</span><br><span class=\"line\">    print(&quot;The name of the airport is \\(airportName).&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;That airport is not in the airports dictionary.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The name of the airport is Dublin Airport.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">airports[&quot;APL&quot;] = &quot;Apple International&quot;</span><br><span class=\"line\">// &quot;Apple International&quot; is not the real airport for APL, so delete it</span><br><span class=\"line\">airports[&quot;APL&quot;] = nil</span><br><span class=\"line\">// APL has now been removed from the dictionary</span><br><span class=\"line\"></span><br><span class=\"line\">if let removedValue = airports.removeValue(forKey: &quot;DUB&quot;) &#123;</span><br><span class=\"line\">    print(&quot;The removed airport&apos;s name is \\(removedValue).&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    print(&quot;The airports dictionary does not contain a value for DUB.&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;The removed airport&apos;s name is Dublin Airport.&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Iterating Over a Dictionary</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (airportCode, airportName) in airports &#123;</span><br><span class=\"line\">    print(&quot;\\(airportCode): \\(airportName)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// YYZ: Toronto Pearson</span><br><span class=\"line\">// LHR: London Heathrow</span><br><span class=\"line\"></span><br><span class=\"line\">for airportCode in airports.keys &#123;</span><br><span class=\"line\">    print(&quot;Airport code: \\(airportCode)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Airport code: YYZ</span><br><span class=\"line\">// Airport code: LHR</span><br><span class=\"line\"> </span><br><span class=\"line\">for airportName in airports.values &#123;</span><br><span class=\"line\">    print(&quot;Airport name: \\(airportName)&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Airport name: Toronto Pearson</span><br><span class=\"line\">// Airport name: London Heathrow</span><br><span class=\"line\"></span><br><span class=\"line\">let airportCodes = [String](airports.keys)</span><br><span class=\"line\">// airportCodes is [&quot;YYZ&quot;, &quot;LHR&quot;]</span><br><span class=\"line\"> </span><br><span class=\"line\">let airportNames = [String](airports.values)</span><br><span class=\"line\">// airportNames is [&quot;Toronto Pearson&quot;, &quot;London Heathrow&quot;]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"Enumerations\"><a href=\"#Enumerations\" class=\"headerlink\" title=\"Enumerations\"></a>Enumerations</h1><ul>\n<li><p>Enumeration Syntax</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum CompassPoint &#123;</span><br><span class=\"line\">\tcase north</span><br><span class=\"line\">\tcase south</span><br><span class=\"line\">\tcase east</span><br><span class=\"line\">\tcase west</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">enum Planet &#123;</span><br><span class=\"line\">\t case mercury, venus, earth, mars, jupiter, saturn, uranus, neptune</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">var directionToHead = CompassPoint.west</span><br><span class=\"line\">directionToHead = .east</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Matching Enumeration Values with a Switch Statement</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">directionToHead = .south</span><br><span class=\"line\">switch directionToHead &#123;</span><br><span class=\"line\">case .north:</span><br><span class=\"line\">    print(&quot;Lots of planets have a north&quot;)</span><br><span class=\"line\">case .south:</span><br><span class=\"line\">    print(&quot;Watch out for penguins&quot;)</span><br><span class=\"line\">case .east:</span><br><span class=\"line\">    print(&quot;Where the sun rises&quot;)</span><br><span class=\"line\">case .west:</span><br><span class=\"line\">    print(&quot;Where the skies are blue&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;Watch out for penguins&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">let somePlanet = Planet.earth</span><br><span class=\"line\">switch somePlanet &#123;</span><br><span class=\"line\">case .earth:</span><br><span class=\"line\">    print(&quot;Mostly harmless&quot;)</span><br><span class=\"line\">default:</span><br><span class=\"line\">    print(&quot;Not a safe place for humans&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Prints &quot;Mostly harmless&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjp6k652t000731x7eoyn79mi","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k653k000c31x7fpo5f5jy"},{"post_id":"cjp6k652a000131x7awbgq8l8","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k653t000f31x78mu4tfqm"},{"post_id":"cjp6k652y000831x7bywr3lwi","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k653u000h31x7kh3do0hu"},{"post_id":"cjp6k6535000a31x75g6q3y13","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k653v000j31x70rlbtwa0"},{"post_id":"cjp6k652h000331x79ycc9wkg","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k653x000l31x71pi0kjej"},{"post_id":"cjp6k6537000b31x7ui11scog","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k653z000n31x7fg4fpyn6"},{"post_id":"cjp6k653r000e31x74ul07eg0","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6540000p31x7h0cbon3s"},{"post_id":"cjp6k652q000631x7vv5mllxg","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6541000r31x71b7fa6xl"},{"post_id":"cjp6k653u000g31x71x4lbaw7","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6543000t31x7vayypgea"},{"post_id":"cjp6k653v000i31x7dwb9nk44","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6544000v31x7g95lqwoy"},{"post_id":"cjp6k653w000k31x7ut6i564j","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6545000x31x7uh36a8ob"},{"post_id":"cjp6k653y000m31x7ogk2mbtp","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6547000z31x7px3n3psw"},{"post_id":"cjp6k6540000o31x7f9aenn3m","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6549001131x7tbxbmf18"},{"post_id":"cjp6k6541000q31x7ohce3h12","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654a001331x77abdz2rf"},{"post_id":"cjp6k6542000s31x74wxf7gqa","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654c001631x79cj3v26h"},{"post_id":"cjp6k6543000u31x7vcoxufxg","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654g001831x73xwdbj31"},{"post_id":"cjp6k6544000w31x7pazj5fgq","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654i001a31x7726c4nk0"},{"post_id":"cjp6k6546000y31x7qo9hexi4","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654k001c31x7as3jjel5"},{"post_id":"cjp6k6549001231x7fmpirmx4","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654m001e31x7bb7llbpt"},{"post_id":"cjp6k654b001531x7k6urrvo9","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654n001g31x7fuzvg0da"},{"post_id":"cjp6k654d001731x7a4r3j65j","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654p001i31x7u4lozk46"},{"post_id":"cjp6k6548001031x7oaownjnu","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k654q001k31x7htl5fwfr"},{"post_id":"cjp6k654h001931x7po0pxgfo","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654r001m31x7jtq4z0eq"},{"post_id":"cjp6k654j001b31x7qwmoqh9q","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k654t001o31x7d89gt3jm"},{"post_id":"cjp6k654l001d31x7d72mxkwn","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6552001q31x7zybc3l2t"},{"post_id":"cjp6k654n001f31x76a4z38r4","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6555001s31x7y54autmt"},{"post_id":"cjp6k654o001h31x7fwt8n7x3","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6556001u31x7u4dmhot4"},{"post_id":"cjp6k654p001j31x7sjepy13w","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6558001w31x7vokuphpr"},{"post_id":"cjp6k654q001l31x798h2f51z","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k655a001y31x7k2j7gkio"},{"post_id":"cjp6k654s001n31x76h5v6k00","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k655c002031x7m1jor9xu"},{"post_id":"cjp6k654z001p31x76xpp1vt5","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k655d002231x7385gfp0l"},{"post_id":"cjp6k6553001r31x7h65han06","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k655i002431x7g3pk7nob"},{"post_id":"cjp6k6556001t31x7q7bz1mkf","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k655l002631x7dpba17j1"},{"post_id":"cjp6k6557001v31x7g0agj6n7","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k655m002831x7yd36zys7"},{"post_id":"cjp6k6559001x31x7fx6dny9w","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k655o002a31x7ddsav4s1"},{"post_id":"cjp6k655b001z31x7mnf5mef9","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k655q002c31x7f2o7fpng"},{"post_id":"cjp6k655c002131x7j11ggcnr","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k655r002e31x78c2uf7hn"},{"post_id":"cjp6k655f002331x7taagsq0z","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k655s002g31x78uljbmr9"},{"post_id":"cjp6k655i002531x7pyv6jqx8","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k655t002i31x7ksph2giv"},{"post_id":"cjp6k655m002731x7v54o1pk9","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6566002k31x79eejn6nk"},{"post_id":"cjp6k655n002931x7362s9mhh","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6569002m31x7nknirwys"},{"post_id":"cjp6k655p002b31x7wr86lk78","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k656g002o31x7m50krsa3"},{"post_id":"cjp6k655q002d31x7z7d16idf","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k656i002q31x79y3ehkot"},{"post_id":"cjp6k655r002f31x7m55igqd0","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k656j002s31x7x3swdthj"},{"post_id":"cjp6k655s002h31x7gas94py7","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k656l002u31x7gf36756u"},{"post_id":"cjp6k655u002j31x744t0efxa","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k656n002w31x7ume44z9u"},{"post_id":"cjp6k6568002l31x713qggiu3","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k656o002y31x73e2pyngz"},{"post_id":"cjp6k6569002n31x7mah3ex9n","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k656p003031x7klo8w3bk"},{"post_id":"cjp6k656h002p31x7bnoh89t3","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k656t003231x7dxu12jdk"},{"post_id":"cjp6k656i002r31x7sejsxnp1","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k656w003431x71guymim1"},{"post_id":"cjp6k656k002t31x7053voayd","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k656y003631x7o9cf4nrx"},{"post_id":"cjp6k656m002v31x7q5pzloqr","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6572003831x7l6uehg9h"},{"post_id":"cjp6k656n002x31x7rmkfxwoe","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6573003a31x7987h9nbg"},{"post_id":"cjp6k656o002z31x7lfom3tog","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k657l003c31x73sxl7sbz"},{"post_id":"cjp6k656q003131x7qu6tci6b","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k657m003e31x7arqzbjlc"},{"post_id":"cjp6k656t003331x7crzxsc0o","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k657p003g31x7du5urc9w"},{"post_id":"cjp6k656x003531x7qkhc98zp","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k657q003i31x7h6dbqypo"},{"post_id":"cjp6k6570003731x7yjby9xot","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k657u003k31x7la65wlon"},{"post_id":"cjp6k6573003931x70yf7thwc","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k657w003m31x7tb083znd"},{"post_id":"cjp6k6574003b31x7bmdm1wgh","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k657y003o31x75r1yj4us"},{"post_id":"cjp6k657m003d31x7wbnwqvvg","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k657z003q31x703rrl460"},{"post_id":"cjp6k657n003f31x7vt81i1r1","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k6580003s31x75ezumk34"},{"post_id":"cjp6k657p003h31x7s0fd057n","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6582003v31x7f8xeqf3b"},{"post_id":"cjp6k657s003j31x7vgp0yhjz","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k6584003x31x7n2glfj5j"},{"post_id":"cjp6k657v003l31x7yrj0r19n","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6585004031x7ibco1d15"},{"post_id":"cjp6k657x003n31x72c1bf23s","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k6588004231x7fo9vtgj0"},{"post_id":"cjp6k6580003r31x7ac3hvreb","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k658a004431x7mpir72gn"},{"post_id":"cjp6k6582003w31x7jgztn406","category_id":"cjp6k6580003t31x7jquj4gms","_id":"cjp6k658c004631x7t97unmet"},{"post_id":"cjp6k657z003p31x7s2un5zo1","category_id":"cjp6k6580003t31x7jquj4gms","_id":"cjp6k658d004831x77ncspyv2"},{"post_id":"cjp6k6584003y31x7ckvkxhkw","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k658e004a31x75wbtn20b"},{"post_id":"cjp6k6587004131x7qfjovqrs","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k658g004c31x7fnxoyk32"},{"post_id":"cjp6k6581003u31x7wtnlyyul","category_id":"cjp6k6580003t31x7jquj4gms","_id":"cjp6k658h004e31x7mbk4rwyq"},{"post_id":"cjp6k6589004331x78gml4aa4","category_id":"cjp6k6580003t31x7jquj4gms","_id":"cjp6k658j004g31x7cdkpb1we"},{"post_id":"cjp6k658a004531x7vgxhck6d","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k658n004i31x75tmpgiip"},{"post_id":"cjp6k658c004731x780bwrfms","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k658p004k31x7iffqzuir"},{"post_id":"cjp6k658d004931x7ec1id652","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k658w004m31x7z0hra2no"},{"post_id":"cjp6k658e004b31x7h3fwlgdd","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k658x004o31x75yczxvzj"},{"post_id":"cjp6k658g004d31x740lxp40k","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659g004q31x7zhxvvta5"},{"post_id":"cjp6k658i004f31x7lqc2pioe","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659h004s31x7071qasl5"},{"post_id":"cjp6k658k004h31x7x94ihbra","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659j004u31x7w7ewt8fo"},{"post_id":"cjp6k658n004j31x778i1iwmx","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659l004w31x7jhrblbmd"},{"post_id":"cjp6k658q004l31x7wetq7nyr","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659t004y31x7tsokw2jg"},{"post_id":"cjp6k658w004n31x7hsmwzmob","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659v005031x7h35wzt76"},{"post_id":"cjp6k659e004p31x7r1hewefk","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659w005231x7o5b17ge6"},{"post_id":"cjp6k659g004r31x7ui92eqfh","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659x005431x7q73y1i1z"},{"post_id":"cjp6k659h004t31x7li1ggx40","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k659z005631x7sy4bjso4"},{"post_id":"cjp6k659k004v31x7zb9xhhen","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65a0005831x7glodmh0r"},{"post_id":"cjp6k659o004x31x70vbeilxp","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65a9005a31x715cvjd42"},{"post_id":"cjp6k659u004z31x7s43q364r","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ab005c31x7o1nui32a"},{"post_id":"cjp6k659v005131x7xfh33t6i","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ac005e31x7emq1n33x"},{"post_id":"cjp6k659w005331x7x1wv3gei","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ad005g31x75nd2eiww"},{"post_id":"cjp6k659y005531x74adc583q","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ah005i31x7bk3jdazp"},{"post_id":"cjp6k659z005731x7klvwhzvt","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ai005k31x7tpsef2fp"},{"post_id":"cjp6k65a1005931x7wtpq6lgw","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ak005m31x7fbg0he6b"},{"post_id":"cjp6k65aa005b31x7l2rwhkmt","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65al005o31x7v6g4cogu"},{"post_id":"cjp6k65ab005d31x7xecrsq5a","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65am005q31x7724qm7ht"},{"post_id":"cjp6k65ac005f31x7qjaxd7if","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ao005s31x7enp84a14"},{"post_id":"cjp6k65ae005h31x76e5h2ajv","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65aq005u31x78oe00kd6"},{"post_id":"cjp6k65ah005j31x782faea8o","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ar005w31x7tdd68m8v"},{"post_id":"cjp6k65aj005l31x7w451ino4","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65as005y31x7q02afca2"},{"post_id":"cjp6k65al005n31x7r2qqzodx","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65at006031x7erd1iirc"},{"post_id":"cjp6k65al005p31x7spi2zdz0","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65au006231x7qpdxcj8w"},{"post_id":"cjp6k65am005r31x7rfp1qmvr","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65av006431x7mhl07lhb"},{"post_id":"cjp6k65ap005t31x7iajj0y06","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ay006631x77hu70jh5"},{"post_id":"cjp6k65aq005v31x7q1qdbuov","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65b1006831x7wfn3c951"},{"post_id":"cjp6k65ar005x31x7vke2uu6d","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k65b3006b31x7f218l1m9"},{"post_id":"cjp6k65as005z31x747xf3a3m","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bc006d31x7ji5gxy93"},{"post_id":"cjp6k65at006131x78m56d1vc","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k65bd006g31x7ub30qpzd"},{"post_id":"cjp6k65av006331x7pdj8jzgj","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bf006i31x75ytk0g14"},{"post_id":"cjp6k65az006731x7iaa3prxh","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k65bh006k31x7dcz9a73a"},{"post_id":"cjp6k65ba006c31x7ebup1aji","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bi006m31x7s5jzp5du"},{"post_id":"cjp6k65ax006531x77vao8n2c","category_id":"cjp6k65b2006931x7gohzzegd","_id":"cjp6k65bj006o31x7racx3deh"},{"post_id":"cjp6k65bc006e31x726wabgau","category_id":"cjp6k65b2006931x7gohzzegd","_id":"cjp6k65bk006q31x71q66vzzs"},{"post_id":"cjp6k65be006h31x7e60g3ywd","category_id":"cjp6k65b2006931x7gohzzegd","_id":"cjp6k65bl006s31x7tfu3my03"},{"post_id":"cjp6k65b2006a31x7lv1gkeax","category_id":"cjp6k65b2006931x7gohzzegd","_id":"cjp6k65bq006u31x7xbxdorg6"},{"post_id":"cjp6k65bg006j31x7i7xr7b07","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bs006w31x7uedql53j"},{"post_id":"cjp6k65bh006l31x74abvt6jl","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bt006y31x7wlp8rxn7"},{"post_id":"cjp6k65bi006n31x7ie4l3lr2","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bv007031x7qe057s11"},{"post_id":"cjp6k65bj006p31x7pfeummu5","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bw007231x7zputh34m"},{"post_id":"cjp6k65bk006r31x7bd3t5iur","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bx007431x759d9xlhp"},{"post_id":"cjp6k65bl006t31x7bln0hd08","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65bz007631x70zibmgm7"},{"post_id":"cjp6k65br006v31x77cprgjog","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65c1007831x76chbxhbo"},{"post_id":"cjp6k65bt006x31x7gad66nx2","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65c2007a31x738berbgf"},{"post_id":"cjp6k65bu006z31x7icqfnbuy","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65c4007d31x7x4yvybrq"},{"post_id":"cjp6k65bw007131x7mjq46wzr","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65c5007f31x7j0vah7dw"},{"post_id":"cjp6k65bx007331x7dcclearr","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65c7007i31x7i0aypotf"},{"post_id":"cjp6k65by007531x7xpzmkcvg","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65c8007k31x7ic790cha"},{"post_id":"cjp6k65c1007931x73290sfn8","category_id":"cjp6k6580003t31x7jquj4gms","_id":"cjp6k65c9007m31x7cvvrmrhs"},{"post_id":"cjp6k65c4007e31x71qm1hiq2","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65ca007o31x7oh2tmp7x"},{"post_id":"cjp6k65c0007731x7pj37pvtf","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65cb007q31x7wq1404mk"},{"post_id":"cjp6k65c6007g31x7rnhbdurr","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65d5007s31x728b845a2"},{"post_id":"cjp6k65c7007j31x7atar3h1u","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65d9007u31x77kfb59v5"},{"post_id":"cjp6k65c2007c31x74ukaaqok","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65dd007w31x751wxg4z8"},{"post_id":"cjp6k65c8007l31x76ub02evh","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65df007y31x7t060m0dw"},{"post_id":"cjp6k65c9007n31x7s0idpmsu","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65dj008031x7i7x9y1hq"},{"post_id":"cjp6k65cb007p31x7n8sauonz","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65dk008231x7o9x2ocvv"},{"post_id":"cjp6k65cj007r31x7cer6v13o","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65do008431x71xd2erl5"},{"post_id":"cjp6k65d7007t31x79arc5str","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65dr008631x72luq2y55"},{"post_id":"cjp6k65da007v31x7y5r4sbeh","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65dt008831x7k9nmdfs8"},{"post_id":"cjp6k65dd007x31x7mn142n5e","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65dw008b31x7pzwmksgx"},{"post_id":"cjp6k65dg007z31x7bacgcpn8","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65dy008d31x7ulk655c6"},{"post_id":"cjp6k65dj008131x7l6zj0fsg","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65e9008f31x7s49vnevf"},{"post_id":"cjp6k65dm008331x78w1groxj","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65ee008h31x7nn5s0v1d"},{"post_id":"cjp6k65dr008731x7idnr068g","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65et008j31x7mhf4vcyc"},{"post_id":"cjp6k65dv008a31x74jsqzvmx","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ev008l31x7om0hwv5w"},{"post_id":"cjp6k65dw008c31x7yg51lfr9","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ez008n31x7epr3t1ec"},{"post_id":"cjp6k65dp008531x7tq3cljxr","category_id":"cjp6k65du008931x7qgwm3so7","_id":"cjp6k65f1008p31x72oij00eb"},{"post_id":"cjp6k65dz008e31x7xqo007u5","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k65fd008r31x7tk533x8h"},{"post_id":"cjp6k65eb008g31x7sieirwjk","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k65g2008t31x72kkehmgg"},{"post_id":"cjp6k65ee008i31x7x9y1peyq","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65g3008v31x7c0tp9ako"},{"post_id":"cjp6k65eu008k31x70af0twnf","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65g5008x31x7pk5ckfv2"},{"post_id":"cjp6k65ew008m31x7snbj2fcj","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65g6008z31x7rfm89ts2"},{"post_id":"cjp6k65f0008o31x7yqnmwbpc","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65g7009131x7b64bsb05"},{"post_id":"cjp6k65f8008q31x7wcb9k4g8","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ga009331x7rilrs83k"},{"post_id":"cjp6k65fw008s31x77269r4fc","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65gb009631x7f85kqjdx"},{"post_id":"cjp6k65g2008u31x7dl4ps5vo","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65gc009831x7ahcuzxyi"},{"post_id":"cjp6k65g4008w31x7x5elt6xx","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ge009b31x7osgmkiec"},{"post_id":"cjp6k65g5008y31x7oc2l6orn","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65gf009d31x77xsg624s"},{"post_id":"cjp6k65gc009731x7x2ebd19q","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65gi009g31x7uhw5rd15"},{"post_id":"cjp6k65g6009031x7j67pqbt1","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65gl009i31x7t933j2hx"},{"post_id":"cjp6k65gd009931x77cm3pjcr","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65gq009k31x73i8u1l2q"},{"post_id":"cjp6k65ge009c31x7clxomgi6","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65gr009m31x7y9xx4bn8"},{"post_id":"cjp6k65g7009231x7uxxeh672","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65gt009o31x7ky9eezdf"},{"post_id":"cjp6k65gg009e31x7up5957ov","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65gu009q31x7hpxetfn9"},{"post_id":"cjp6k65gk009h31x7mdiqewtm","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65gy009s31x7m9e1tz54"},{"post_id":"cjp6k65gb009531x7a4jglppo","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65gz009u31x7umg34we9"},{"post_id":"cjp6k65gl009j31x79c6ixlab","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65h1009w31x7xgscct98"},{"post_id":"cjp6k65gq009l31x7w4n9mkbg","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65h2009y31x7pohscvxv"},{"post_id":"cjp6k65gs009n31x7lngw2omk","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65h500a031x7bmenecp0"},{"post_id":"cjp6k65gt009p31x779h1d5tk","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65h900a231x71q4odvvx"},{"post_id":"cjp6k65gu009r31x7yv04ar19","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ha00a431x7xw426yjf"},{"post_id":"cjp6k65gy009t31x76j53s2s8","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65he00a631x7k3im4cs6"},{"post_id":"cjp6k65h0009v31x7830jwr3n","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65hn00a831x7w29h2nw8"},{"post_id":"cjp6k65h1009x31x7z84op2x2","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ho00aa31x7lg2qfmzr"},{"post_id":"cjp6k65h3009z31x7v8qtbu53","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65hq00ac31x7btltm6r2"},{"post_id":"cjp6k65h700a131x7lm2ymr88","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65hr00ae31x7ln0437kd"},{"post_id":"cjp6k65ha00a331x7zj0s6vdn","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65hs00ag31x7yfg7ohhw"},{"post_id":"cjp6k65hb00a531x7wrew4ti9","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65hu00ai31x737gjyi1y"},{"post_id":"cjp6k65hj00a731x7tkduxn31","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65hz00ak31x7xqoig1xw"},{"post_id":"cjp6k65ho00a931x7k2ycx6ye","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65i100am31x7u875agae"},{"post_id":"cjp6k65hp00ab31x7v64b682y","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65i400ao31x7sx13yzeu"},{"post_id":"cjp6k65hq00ad31x7fpj8bzhy","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65i700aq31x78exd01j6"},{"post_id":"cjp6k65hr00af31x7l2mbfpt3","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65i900as31x7juqy07x0"},{"post_id":"cjp6k65hs00ah31x7mwy3ts2w","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65ib00au31x7s5rrut5e"},{"post_id":"cjp6k65hu00aj31x7u4xy3y02","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65ic00aw31x78bxortyq"},{"post_id":"cjp6k65i000al31x7lozdh0qf","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65id00ay31x7ebll5y53"},{"post_id":"cjp6k65i200an31x7lw1pdfx2","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ig00b131x7xetgwfg5"},{"post_id":"cjp6k65i400ap31x7w6farfnx","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65ij00b331x773xs2svt"},{"post_id":"cjp6k65i700ar31x7hvd4obkc","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65il00b631x732rn31v5"},{"post_id":"cjp6k65i900at31x76g1ogdww","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65im00b831x7m74s6km3"},{"post_id":"cjp6k65ic00ax31x7w37ewlfk","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65in00ba31x73l7y0405"},{"post_id":"cjp6k65ii00b231x782k2ehxn","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65ir00bc31x7ljeb5qy0"},{"post_id":"cjp6k65ib00av31x7bbrrvrf4","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65iv00be31x72twi2jjx"},{"post_id":"cjp6k65ij00b431x7oy6levqd","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65iw00bg31x7rtk074iv"},{"post_id":"cjp6k65il00b731x75927mqpi","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65iy00bi31x7ojvk6qs1"},{"post_id":"cjp6k65if00b031x7gi995ugk","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65j200bk31x7oofxp6pc"},{"post_id":"cjp6k65im00b931x7oex5epx4","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65j600bm31x7t7mys9ec"},{"post_id":"cjp6k65ip00bb31x77wwqsqje","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65j800bo31x7zktk9z5p"},{"post_id":"cjp6k65it00bd31x7awn4nbpp","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65j900bq31x7kywjv2cs"},{"post_id":"cjp6k65iv00bf31x7wsabqdoo","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65jd00bs31x7rxyb8ofh"},{"post_id":"cjp6k65ix00bh31x7g93166bv","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65je00bu31x7wylicq52"},{"post_id":"cjp6k65iy00bj31x7w5tlaibr","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65jf00bw31x7qhbwjzh0"},{"post_id":"cjp6k65j500bl31x7a4zg9dsz","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65jg00by31x7xdg2rvi9"},{"post_id":"cjp6k65j700bn31x7gj3gutox","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65jh00c031x7ctyyboos"},{"post_id":"cjp6k65j800bp31x7t5dso5fc","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65jj00c231x7lherdt7r"},{"post_id":"cjp6k65j900br31x7kw3qc042","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65jl00c431x7l5zo40bg"},{"post_id":"cjp6k65jd00bt31x7x6x3wvgo","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65jm00c631x7ocz6pqo9"},{"post_id":"cjp6k65je00bv31x7xjc3d0cb","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65jn00c831x7dwek0mku"},{"post_id":"cjp6k65jf00bx31x7oz9p0pmx","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65jq00ca31x7xbshjs34"},{"post_id":"cjp6k65jg00bz31x7jexhzuhx","category_id":"cjp6k65id00az31x75gi7r6hb","_id":"cjp6k65js00cc31x7ltejn9fw"},{"post_id":"cjp6k65ji00c131x7qt71ngpa","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65ju00ce31x7w0rvtje1"},{"post_id":"cjp6k65jj00c331x7nbzqrdow","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65jv00cg31x7keqpocdw"},{"post_id":"cjp6k65jl00c531x70kw3egh5","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65jw00ci31x71y90jxs4"},{"post_id":"cjp6k65jm00c731x7ftelhp8e","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65jx00ck31x7bi62u5nc"},{"post_id":"cjp6k65jo00c931x71e7oafhy","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65jz00cm31x7s9ne5isb"},{"post_id":"cjp6k65jq00cb31x790feptkb","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65k000co31x75oj4k89l"},{"post_id":"cjp6k65jt00cd31x7einrbgbb","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65k400cq31x7wkhqov3h"},{"post_id":"cjp6k65ju00cf31x7ay724zt1","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65k600cs31x7ugnznxaq"},{"post_id":"cjp6k65jv00ch31x7xkdwhx3l","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65kc00cv31x7924pnkhe"},{"post_id":"cjp6k65jw00cj31x70xzgkvkf","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ke00cx31x7qpqmhooe"},{"post_id":"cjp6k65jy00cl31x7fwmlrtrc","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65ki00d031x7q1kfdl3d"},{"post_id":"cjp6k65jz00cn31x7ud6if12f","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65kk00d231x7tkp663xd"},{"post_id":"cjp6k65kd00cw31x75fcaa9l5","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65km00d531x756uei20g"},{"post_id":"cjp6k65k100cp31x75pgz76dv","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65kr00d731x78vm9jw7m"},{"post_id":"cjp6k65kg00cy31x75l8tmucf","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ks00d931x727xcjhdr"},{"post_id":"cjp6k65kj00d131x7qjsbiv6i","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65kt00db31x7719b8ym1"},{"post_id":"cjp6k65k400cr31x7b7s71k3p","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65ku00dd31x71lmh1pv3"},{"post_id":"cjp6k65kl00d331x7xlwkm7ge","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65kx00df31x7wax8htqt"},{"post_id":"cjp6k65kn00d631x7sir8r2f1","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65ky00dh31x7tzot47y0"},{"post_id":"cjp6k65kc00cu31x78h6gle1b","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65kz00dj31x7jryjslpr"},{"post_id":"cjp6k65kr00d831x7jb076la5","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65l000dl31x7108jdjwz"},{"post_id":"cjp6k65ks00da31x7ni9ca85e","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65l200dn31x7jggcvb59"},{"post_id":"cjp6k65ku00dc31x78wncjr6o","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65l400dp31x705drgl6i"},{"post_id":"cjp6k65kv00de31x781wt5idr","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65l500dr31x7xhnwekqb"},{"post_id":"cjp6k65kx00dg31x7p5ys0jmt","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65l700dt31x7ect54cty"},{"post_id":"cjp6k65ky00di31x77ud1t1uu","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65l900dv31x7f5c4x50d"},{"post_id":"cjp6k65kz00dk31x7ywyftrjr","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65ld00dx31x7kpsxwt01"},{"post_id":"cjp6k65l100dm31x7t82wwkfa","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65le00dz31x7vll6bc7k"},{"post_id":"cjp6k65l300do31x7og4a4uko","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65lf00e131x7mnvr6bov"},{"post_id":"cjp6k65l400dq31x7bo0pvfis","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65lh00e331x7garv85mu"},{"post_id":"cjp6k65l500ds31x7bqpuoh91","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65lj00e531x7wm3305qn"},{"post_id":"cjp6k65l800du31x704lhgt45","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65lk00e731x7mehs2wab"},{"post_id":"cjp6k65la00dw31x74jwjxqon","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65ll00e931x77i19pd66"},{"post_id":"cjp6k65ld00dy31x7ihrn07b9","category_id":"cjp6k65k700ct31x7my3n2xul","_id":"cjp6k65lo00eb31x7pk7qh1gv"},{"post_id":"cjp6k65lf00e031x7rh3n0jfj","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65lp00ed31x7diilii1k"},{"post_id":"cjp6k65lg00e231x7nqvzw44s","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65lr00ef31x7ok35a382"},{"post_id":"cjp6k65li00e431x7l6o3ha39","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65lu00eh31x786kj761m"},{"post_id":"cjp6k65lj00e631x7y2k1toyc","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65lv00ej31x7ahnbxwhw"},{"post_id":"cjp6k65ll00e831x7k274i0yy","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65lz00el31x7yirufzxu"},{"post_id":"cjp6k65ln00ea31x7x80oi4nq","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65m200en31x7hiby5w0e"},{"post_id":"cjp6k65lo00ec31x72jwyx3hg","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65m400ep31x7yn5mgamq"},{"post_id":"cjp6k65lq00ee31x7mymdj6ut","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65m500er31x7iw712n2g"},{"post_id":"cjp6k65lt00eg31x7le7j9353","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65m700et31x7h6xf2shb"},{"post_id":"cjp6k65lv00ei31x74xrualm7","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65m900ev31x7wxg9eji1"},{"post_id":"cjp6k65ly00ek31x72400u6ci","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65mc00ex31x70rr0txix"},{"post_id":"cjp6k65m100em31x7594mle46","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65mf00ez31x72a9tlghp"},{"post_id":"cjp6k65m300eo31x7aycrjg6o","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65mj00f131x7jucjw3ba"},{"post_id":"cjp6k65m400eq31x7iblfqxy6","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65mk00f331x7ttn1zxma"},{"post_id":"cjp6k65m600es31x7c682qjrt","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65ml00f531x76e1xl3z7"},{"post_id":"cjp6k65m700eu31x7h4qmuk0s","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65mm00f731x7snhu3o8h"},{"post_id":"cjp6k65ma00ew31x7pn2ty733","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65mp00f931x7emrmkgq1"},{"post_id":"cjp6k65md00ey31x7mqg0w5ad","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65mr00fb31x7qna9couc"},{"post_id":"cjp6k65mh00f031x7fmpt0htf","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65ms00fd31x7rpwpkrlm"},{"post_id":"cjp6k65mj00f231x784j6l00e","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65mt00ff31x73ticqib6"},{"post_id":"cjp6k65mk00f431x7khbealpv","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65mv00fh31x7te61xrd1"},{"post_id":"cjp6k65ml00f631x7wsw1nk67","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65n500fj31x7nonb7hxy"},{"post_id":"cjp6k65mm00f831x7xv414615","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65nf00fl31x73e3zx2jz"},{"post_id":"cjp6k65mq00fa31x7dsv3dq5l","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65ng00fn31x7admmbxwm"},{"post_id":"cjp6k65mr00fc31x7kf3scoij","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65no00fp31x78y6sqrbm"},{"post_id":"cjp6k65mt00fe31x7dx5132sh","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65np00fr31x7drsylpsq"},{"post_id":"cjp6k65mu00fg31x745u0733a","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65nv00ft31x7p0jza2pc"},{"post_id":"cjp6k65n400fi31x7z5gosygn","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65o100fv31x7mxws38hp"},{"post_id":"cjp6k65n600fk31x7nigv6m39","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65o200fx31x7tsxumm9q"},{"post_id":"cjp6k65nf00fm31x7ji7j4ht6","category_id":"cjp6k65du008931x7qgwm3so7","_id":"cjp6k65o600fz31x7gov4tw0c"},{"post_id":"cjp6k65nm00fo31x7gxttlkgx","category_id":"cjp6k65du008931x7qgwm3so7","_id":"cjp6k65o700g131x772b61h56"},{"post_id":"cjp6k65no00fq31x7612y4s8e","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65oa00g331x7c1lfk2lc"},{"post_id":"cjp6k65nq00fs31x77jwmtbce","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ob00g531x77acjvukn"},{"post_id":"cjp6k65nv00fu31x7wal0laum","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65oe00g731x7rs1d416n"},{"post_id":"cjp6k65o100fw31x7oaqed6km","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65og00g931x7mfanwfcd"},{"post_id":"cjp6k65o300fy31x7tuk0r8fy","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65oi00gb31x72dsuxx6p"},{"post_id":"cjp6k65o600g031x7rzeomqeq","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65oj00gd31x7kin2tgov"},{"post_id":"cjp6k65o900g231x7da875lvo","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65oo00gf31x72aj4k67x"},{"post_id":"cjp6k65oa00g431x75ws8edlf","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65op00gh31x7juztyb9f"},{"post_id":"cjp6k65oc00g631x7st9jtso5","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65or00gj31x7f9846e32"},{"post_id":"cjp6k65oe00g831x7a45bq3rx","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65os00gl31x7urstanei"},{"post_id":"cjp6k65oh00ga31x7yqo1w3hy","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ot00gn31x7iig2ltq3"},{"post_id":"cjp6k65oj00gc31x7a9bfb2ao","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ow00gp31x7ii5co13w"},{"post_id":"cjp6k65ok00ge31x7x66v88p5","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65oy00gr31x71mloc0wo"},{"post_id":"cjp6k65op00gg31x72tc4fke5","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65oz00gt31x7ikphzqo8"},{"post_id":"cjp6k65oq00gi31x7re59bw9g","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65p200gv31x758jtox1l"},{"post_id":"cjp6k65or00gk31x7kae02x2s","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65p500gx31x70804et88"},{"post_id":"cjp6k65os00gm31x7pwt441ln","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65p700gz31x7ec3lgq0j"},{"post_id":"cjp6k65ot00go31x7ak4g44le","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65pf00h131x7bo7gx1y3"},{"post_id":"cjp6k65ox00gq31x7o5wey5yu","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65pg00h331x7yhph0m2t"},{"post_id":"cjp6k65oy00gs31x7gs3fpkld","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65pm00h631x7u0a0won0"},{"post_id":"cjp6k65oz00gu31x7ekc28ah0","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65pn00h831x72p277imx"},{"post_id":"cjp6k65p400gw31x7r4bu5glm","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65ps00hb31x77gv3ku6i"},{"post_id":"cjp6k65p600gy31x7jwd53as0","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65pv00hd31x71r3slqfq"},{"post_id":"cjp6k65pl00h531x79n9hftmz","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65px00hf31x78oywxh6k"},{"post_id":"cjp6k65pn00h731x7ym7i3isq","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k65q000hh31x75jypgv3q"},{"post_id":"cjp6k65p700h031x77w1a7n13","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k65q500hj31x7v81atahq"},{"post_id":"cjp6k65pq00h931x7jmqqmgpz","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65qm00hl31x78kzgitfe"},{"post_id":"cjp6k65pu00hc31x7gbvdndql","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k65qo00hn31x74lof5vim"},{"post_id":"cjp6k65pf00h231x7pxrxt8il","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k65qw00hp31x789wt49o7"},{"post_id":"cjp6k65pw00he31x7dhx7x5vu","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k65qz00hr31x74qcoxhou"},{"post_id":"cjp6k65px00hg31x717ffui40","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65r500ht31x7nffvuxlz"},{"post_id":"cjp6k65q100hi31x7dgklv0xj","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65r800hv31x746vfzpiv"},{"post_id":"cjp6k65q600hk31x774btnk6v","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65rd00hx31x77jkjly1r"},{"post_id":"cjp6k65qm00hm31x79qc2kkr1","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k65rs00hz31x7pbdpjhdk"},{"post_id":"cjp6k65qo00ho31x7sgb7itkz","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65s500i131x7bxcl090q"},{"post_id":"cjp6k65qz00hq31x7fmfluqnm","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65s600i331x7c4u8byf7"},{"post_id":"cjp6k65r400hs31x70ytq59f6","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65s700i531x7q9z5teu2"},{"post_id":"cjp6k65r500hu31x7wpxioo5z","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sa00i731x7uxkqlvbe"},{"post_id":"cjp6k65r900hw31x74lfcd2dv","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sc00ia31x7zj5y7j6o"},{"post_id":"cjp6k65re00hy31x7vxrxdysn","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sd00ic31x74bs7xrp8"},{"post_id":"cjp6k65s400i031x7sb1e7f6u","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sf00if31x7c4916m6n"},{"post_id":"cjp6k65s500i231x7il5emm0p","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sh00ih31x7xfysx25r"},{"post_id":"cjp6k65sa00i931x7ydasfsam","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65si00ij31x7en0fr0qk"},{"post_id":"cjp6k65sc00ib31x7ewkx60ln","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sj00il31x7wkd7wymq"},{"post_id":"cjp6k65s600i431x78usps8hx","category_id":"cjp6k65sa00i831x74cpr2g6e","_id":"cjp6k65sk00in31x7l47qsfqi"},{"post_id":"cjp6k65sd00id31x7q22vlffq","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sl00ip31x7ajkmtrns"},{"post_id":"cjp6k65sg00ig31x7jq57d44u","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sm00ir31x7z76lknkl"},{"post_id":"cjp6k65s900i631x7ncfp0vb3","category_id":"cjp6k65sa00i831x74cpr2g6e","_id":"cjp6k65sn00it31x7fese97fd"},{"post_id":"cjp6k65si00ii31x7d2krl23v","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65so00iw31x7te366ka3"},{"post_id":"cjp6k65sj00ik31x73ypc621u","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65sq00iy31x7ae3z3h2o"},{"post_id":"cjp6k65sk00im31x715dq0jsl","category_id":"cjp6k654a001431x7kcthu9bl","_id":"cjp6k65ss00j131x7es2u2ysk"},{"post_id":"cjp6k65sl00io31x7jctrls3v","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65st00j331x78h0pd8cw"},{"post_id":"cjp6k65sm00iq31x7my5dtxxl","category_id":"cjp6k65so00iu31x73ea7x6ke","_id":"cjp6k65su00j531x79cslev8c"},{"post_id":"cjp6k65sn00is31x79glhklao","category_id":"cjp6k65ss00j031x70dredotm","_id":"cjp6k65sx00ja31x7gtsz1ekl"},{"post_id":"cjp6k65su00j431x7xodmhzwl","category_id":"cjp6k65ss00j031x70dredotm","_id":"cjp6k65sz00jc31x76gtlq4jx"},{"post_id":"cjp6k65so00iv31x7i01ej03d","category_id":"cjp6k65ss00j031x70dredotm","_id":"cjp6k65t100jf31x7sc2em7q8"},{"post_id":"cjp6k65sw00j831x70k35mkyi","category_id":"cjp6k65b2006931x7gohzzegd","_id":"cjp6k65t300jh31x70utcr0sb"},{"post_id":"cjp6k65sy00jb31x7ot396pfy","category_id":"cjp6k65ss00j031x70dredotm","_id":"cjp6k65t500jk31x7q60hmchq"},{"post_id":"cjp6k65sp00ix31x7ajdjnfcw","category_id":"cjp6k65ss00j031x70dredotm","_id":"cjp6k65t700jm31x7jbaoij0b"},{"post_id":"cjp6k65sz00jd31x7boxj66qq","category_id":"cjp6k65ss00j031x70dredotm","_id":"cjp6k65t900jo31x7vzd47sn5"},{"post_id":"cjp6k65t200jg31x7kkzljegt","category_id":"cjp6k65ss00j031x70dredotm","_id":"cjp6k65ta00jr31x7isxg1ww6"},{"post_id":"cjp6k65sr00iz31x7hftprq2m","category_id":"cjp6k65ss00j031x70dredotm","_id":"cjp6k65tc00jt31x7uxzgyjue"},{"post_id":"cjp6k65t400ji31x7rmq5vuwj","category_id":"cjp6k65so00iu31x73ea7x6ke","_id":"cjp6k65td00jv31x7lye16vzl"},{"post_id":"cjp6k65t600jl31x70wlw5qlr","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k65tj00jx31x7zct6yp8h"},{"post_id":"cjp6k65st00j231x74gmvushq","category_id":"cjp6k65t500jj31x7p85y1oql","_id":"cjp6k65tk00jz31x780vstxef"},{"post_id":"cjp6k65t800jn31x7kbo7gio4","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65tl00k031x7tn3ywgla"},{"post_id":"cjp6k65t900jq31x7ilvz92do","category_id":"cjp6k652l000431x7j2aw0t7h","_id":"cjp6k65v700k131x7u3jsnoaz"},{"post_id":"cjp6k65sv00j731x7gdxtxg3l","category_id":"cjp6k65t900jp31x7bwy4zo2q","_id":"cjp6k65v800k231x7n9com7xf"},{"post_id":"cjp6k65tb00js31x78l313kqh","category_id":"cjp6k65so00iu31x73ea7x6ke","_id":"cjp6k65v800k331x7s2mrakzu"},{"post_id":"cjp6k65tc00ju31x740j23pp6","category_id":"cjp6k65b2006931x7gohzzegd","_id":"cjp6k65va00k431x7a340zos6"},{"post_id":"cjp6k65td00jw31x7nwkv6eq3","category_id":"cjp6k65t500jj31x7p85y1oql","_id":"cjp6k65va00k531x7xazf8gui"},{"post_id":"cjp6k65tj00jy31x74gzyk3cl","category_id":"cjp6k65ga009431x7cy50cy25","_id":"cjp6k65vb00k631x7m7d137gg"},{"post_id":"cjp6k664l00k731x7hgafg8ct","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k665500kb31x7np2ev9zz"},{"post_id":"cjp6k664t00k831x7jezncggj","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k665q00kd31x7flzj5ob9"},{"post_id":"cjp6k665200k931x7qy8jahkx","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k665r00ke31x7idcc9ni9"},{"post_id":"cjp6k665300ka31x7dh4mh90l","category_id":"cjp6k65pk00h431x7k00gbe03","_id":"cjp6k665s00kf31x7szr5eo5d"},{"post_id":"cjp6k665500kc31x72crnia3l","category_id":"cjp6k65c2007b31x7b6175ijk","_id":"cjp6k665t00kg31x7i15g1i2q"}],"PostTag":[],"Tag":[]}}